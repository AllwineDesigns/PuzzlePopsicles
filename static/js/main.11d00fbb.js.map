{"version":3,"sources":["webpack:///static/js/main.11d00fbb.js","webpack:///webpack/bootstrap edac639845ea42490da8","webpack:///./~/fbjs/lib/invariant.js","webpack:///./~/fbjs/lib/warning.js","webpack:///./~/react-dom/lib/reactProdInvariant.js","webpack:///./~/object-assign/index.js","webpack:///./~/react-dom/lib/ReactDOMComponentTree.js","webpack:///./~/fbjs/lib/ExecutionEnvironment.js","webpack:///(webpack)/buildin/amd-define.js","webpack:///./~/fbjs/lib/emptyFunction.js","webpack:///./~/react-dom/lib/ReactInstrumentation.js","webpack:///./~/react-dom/lib/ReactUpdates.js","webpack:///./~/react-dom/lib/SyntheticEvent.js","webpack:///./~/react/lib/ReactCurrentOwner.js","webpack:///./~/react-dom/lib/DOMLazyTree.js","webpack:///./~/react-dom/lib/DOMProperty.js","webpack:///./~/react-dom/lib/ReactReconciler.js","webpack:///./~/react/lib/React.js","webpack:///./~/react/lib/ReactElement.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///(webpack)/buildin/module.js","webpack:///./~/fbjs/lib/emptyObject.js","webpack:///./~/react-dom/lib/EventPluginHub.js","webpack:///./~/react-dom/lib/EventPropagators.js","webpack:///./~/react-dom/lib/ReactInstanceMap.js","webpack:///./~/react-dom/lib/SyntheticUIEvent.js","webpack:///./~/react-dom/lib/ReactBrowserEventEmitter.js","webpack:///./~/react-dom/lib/SyntheticMouseEvent.js","webpack:///./~/react-dom/lib/Transaction.js","webpack:///./~/react-dom/lib/escapeTextContentForBrowser.js","webpack:///./~/react-dom/lib/setInnerHTML.js","webpack:///./~/fbjs/lib/shallowEqual.js","webpack:///./~/react-dom/lib/DOMChildrenOperations.js","webpack:///./~/react-dom/lib/DOMNamespaces.js","webpack:///./~/react-dom/lib/EventPluginRegistry.js","webpack:///./~/react-dom/lib/EventPluginUtils.js","webpack:///./~/react-dom/lib/KeyEscapeUtils.js","webpack:///./~/react-dom/lib/LinkedValueUtils.js","webpack:///./~/react-dom/lib/ReactComponentEnvironment.js","webpack:///./~/react-dom/lib/ReactErrorUtils.js","webpack:///./~/react-dom/lib/ReactUpdateQueue.js","webpack:///./~/react-dom/lib/createMicrosoftUnsafeLocalFunction.js","webpack:///./~/react-dom/lib/getEventCharCode.js","webpack:///./~/react-dom/lib/getEventModifierState.js","webpack:///./~/react-dom/lib/getEventTarget.js","webpack:///./~/react-dom/lib/isEventSupported.js","webpack:///./~/react-dom/lib/shouldUpdateReactComponent.js","webpack:///./~/react-dom/lib/validateDOMNesting.js","webpack:///./~/react/lib/ReactComponent.js","webpack:///./~/react/lib/ReactNoopUpdateQueue.js","webpack:///./~/react/react.js","webpack:///./~/bezier-js/lib/bezier.js","webpack:///./~/bezier-js/lib/utils.js","webpack:///./~/buffer/index.js","webpack:///./~/fbjs/lib/EventListener.js","webpack:///./~/fbjs/lib/focusNode.js","webpack:///./~/fbjs/lib/getActiveElement.js","webpack:///./~/openjscad-csg/src/csg.js","webpack:///./~/process/browser.js","webpack:///./~/promise/lib/core.js","webpack:///./~/prop-types/factory.js","webpack:///./~/react-dom/lib/CSSProperty.js","webpack:///./~/react-dom/lib/CallbackQueue.js","webpack:///./~/react-dom/lib/DOMPropertyOperations.js","webpack:///./~/react-dom/lib/ReactDOMComponentFlags.js","webpack:///./~/react-dom/lib/ReactDOMSelect.js","webpack:///./~/react-dom/lib/ReactEmptyComponent.js","webpack:///./~/react-dom/lib/ReactFeatureFlags.js","webpack:///./~/react-dom/lib/ReactHostComponent.js","webpack:///./~/react-dom/lib/ReactInputSelection.js","webpack:///./~/react-dom/lib/ReactMount.js","webpack:///./~/react-dom/lib/ReactNodeTypes.js","webpack:///./~/react-dom/lib/ViewportMetrics.js","webpack:///./~/react-dom/lib/accumulateInto.js","webpack:///./~/react-dom/lib/forEachAccumulated.js","webpack:///./~/react-dom/lib/getHostComponentFromComposite.js","webpack:///./~/react-dom/lib/getTextContentAccessor.js","webpack:///./~/react-dom/lib/instantiateReactComponent.js","webpack:///./~/react-dom/lib/isTextInputElement.js","webpack:///./~/react-dom/lib/setTextContent.js","webpack:///./~/react-dom/lib/traverseAllChildren.js","webpack:///./~/react/lib/ReactComponentTreeHook.js","webpack:///./~/react/lib/ReactElementSymbol.js","webpack:///./~/react/lib/canDefineProperty.js","webpack:///./~/asap/browser-raw.js","webpack:///./src/AppBasic.js","webpack:///./src/PuzzleSVGBasic.js","webpack:///./src/index.js","webpack:///./~/base64-js/index.js","webpack:///./~/bezier-js/index.js","webpack:///./~/bezier-js/lib/poly-bezier.js","webpack:///./~/clone/clone.js","webpack:///./~/fbjs/lib/camelize.js","webpack:///./~/fbjs/lib/camelizeStyleName.js","webpack:///./~/fbjs/lib/containsNode.js","webpack:///./~/fbjs/lib/createArrayFromMixed.js","webpack:///./~/fbjs/lib/createNodesFromMarkup.js","webpack:///./~/fbjs/lib/getMarkupWrap.js","webpack:///./~/fbjs/lib/getUnboundedScrollPosition.js","webpack:///./~/fbjs/lib/hyphenate.js","webpack:///./~/fbjs/lib/hyphenateStyleName.js","webpack:///./~/fbjs/lib/isNode.js","webpack:///./~/fbjs/lib/isTextNode.js","webpack:///./~/fbjs/lib/memoizeStringOnly.js","webpack:///./src/Logo3x3.svg","webpack:///./~/ieee754/index.js","webpack:///./~/isarray/index.js","webpack:///./~/makerjs/index.js","webpack:///./~/makerjs/~/clone/clone.js","webpack:///./~/openjscad-csg/index.js","webpack:///./~/openjscad-csg/src/formats.js","webpack:///./~/promise/lib/es6-extensions.js","webpack:///./~/promise/lib/rejection-tracking.js","webpack:///./~/prop-types/checkPropTypes.js","webpack:///./~/prop-types/factoryWithTypeCheckers.js","webpack:///./~/prop-types/lib/ReactPropTypesSecret.js","webpack:///./~/react-dom/index.js","webpack:///./~/react-dom/lib/ARIADOMPropertyConfig.js","webpack:///./~/react-dom/lib/AutoFocusUtils.js","webpack:///./~/react-dom/lib/BeforeInputEventPlugin.js","webpack:///./~/react-dom/lib/CSSPropertyOperations.js","webpack:///./~/react-dom/lib/ChangeEventPlugin.js","webpack:///./~/react-dom/lib/Danger.js","webpack:///./~/react-dom/lib/DefaultEventPluginOrder.js","webpack:///./~/react-dom/lib/EnterLeaveEventPlugin.js","webpack:///./~/react-dom/lib/FallbackCompositionState.js","webpack:///./~/react-dom/lib/HTMLDOMPropertyConfig.js","webpack:///./~/react-dom/lib/ReactChildReconciler.js","webpack:///./~/react-dom/lib/ReactComponentBrowserEnvironment.js","webpack:///./~/react-dom/lib/ReactCompositeComponent.js","webpack:///./~/react-dom/lib/ReactDOM.js","webpack:///./~/react-dom/lib/ReactDOMComponent.js","webpack:///./~/react-dom/lib/ReactDOMContainerInfo.js","webpack:///./~/react-dom/lib/ReactDOMEmptyComponent.js","webpack:///./~/react-dom/lib/ReactDOMFeatureFlags.js","webpack:///./~/react-dom/lib/ReactDOMIDOperations.js","webpack:///./~/react-dom/lib/ReactDOMInput.js","webpack:///./~/react-dom/lib/ReactDOMOption.js","webpack:///./~/react-dom/lib/ReactDOMSelection.js","webpack:///./~/react-dom/lib/ReactDOMTextComponent.js","webpack:///./~/react-dom/lib/ReactDOMTextarea.js","webpack:///./~/react-dom/lib/ReactDOMTreeTraversal.js","webpack:///./~/react-dom/lib/ReactDefaultBatchingStrategy.js","webpack:///./~/react-dom/lib/ReactDefaultInjection.js","webpack:///./~/react-dom/lib/ReactEventEmitterMixin.js","webpack:///./~/react-dom/lib/ReactEventListener.js","webpack:///./~/react-dom/lib/ReactInjection.js","webpack:///./~/react-dom/lib/ReactMarkupChecksum.js","webpack:///./~/react-dom/lib/ReactMultiChild.js","webpack:///./~/react-dom/lib/ReactOwner.js","webpack:///./~/react-dom/lib/ReactPropTypesSecret.js","webpack:///./~/react-dom/lib/ReactReconcileTransaction.js","webpack:///./~/react-dom/lib/ReactRef.js","webpack:///./~/react-dom/lib/ReactServerRenderingTransaction.js","webpack:///./~/react-dom/lib/ReactServerUpdateQueue.js","webpack:///./~/react-dom/lib/ReactVersion.js","webpack:///./~/react-dom/lib/SVGDOMPropertyConfig.js","webpack:///./~/react-dom/lib/SelectEventPlugin.js","webpack:///./~/react-dom/lib/SimpleEventPlugin.js","webpack:///./~/react-dom/lib/SyntheticAnimationEvent.js","webpack:///./~/react-dom/lib/SyntheticClipboardEvent.js","webpack:///./~/react-dom/lib/SyntheticCompositionEvent.js","webpack:///./~/react-dom/lib/SyntheticDragEvent.js","webpack:///./~/react-dom/lib/SyntheticFocusEvent.js","webpack:///./~/react-dom/lib/SyntheticInputEvent.js","webpack:///./~/react-dom/lib/SyntheticKeyboardEvent.js","webpack:///./~/react-dom/lib/SyntheticTouchEvent.js","webpack:///./~/react-dom/lib/SyntheticTransitionEvent.js","webpack:///./~/react-dom/lib/SyntheticWheelEvent.js","webpack:///./~/react-dom/lib/adler32.js","webpack:///./~/react-dom/lib/dangerousStyleValue.js","webpack:///./~/react-dom/lib/findDOMNode.js","webpack:///./~/react-dom/lib/flattenChildren.js","webpack:///./~/react-dom/lib/getEventKey.js","webpack:///./~/react-dom/lib/getIteratorFn.js","webpack:///./~/react-dom/lib/getNodeForCharacterOffset.js","webpack:///./~/react-dom/lib/getVendorPrefixedEventName.js","webpack:///./~/react-dom/lib/quoteAttributeValueForBrowser.js","webpack:///./~/react-dom/lib/renderSubtreeIntoContainer.js","webpack:///./~/react-scripts/config/polyfills.js","webpack:///./~/react-scripts/~/whatwg-fetch/fetch.js","webpack:///./~/react/lib/ReactChildren.js","webpack:///./~/react/lib/ReactClass.js","webpack:///./~/react/lib/ReactDOMFactories.js","webpack:///./~/react/lib/ReactPropTypeLocationNames.js","webpack:///./~/react/lib/ReactPropTypes.js","webpack:///./~/react/lib/ReactPureComponent.js","webpack:///./~/react/lib/getNextDebugID.js","webpack:///./~/react/lib/onlyChild.js","webpack:///./~/react/lib/traverseAllChildren.js","webpack:///./~/seedrandom/index.js","webpack:///./~/seedrandom/lib/alea.js","webpack:///./~/seedrandom/lib/tychei.js","webpack:///./~/seedrandom/lib/xor128.js","webpack:///./~/seedrandom/lib/xor4096.js","webpack:///./~/seedrandom/lib/xorshift7.js","webpack:///./~/seedrandom/lib/xorwow.js","webpack:///./~/seedrandom/seedrandom.js","webpack:///./~/react/lib/PooledClass.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","i","Object","prototype","hasOwnProperty","_m","args","slice","fn","a","b","apply","this","concat","invariant","condition","format","d","e","f","validateFormat","error","undefined","Error","argIndex","replace","name","framesToPop","emptyFunction","warning","reactProdInvariant","code","argCount","arguments","length","message","argIdx","encodeURIComponent","toObject","val","TypeError","shouldUseNative","assign","test1","String","getOwnPropertyNames","test2","fromCharCode","order2","map","n","join","test3","split","forEach","letter","keys","err","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","target","source","from","symbols","to","s","key","shouldPrecacheNode","node","nodeID","nodeType","getAttribute","ATTR_NAME","nodeValue","getRenderedHostOrTextFromComponent","component","rendered","_renderedComponent","precacheNode","inst","hostInst","_hostNode","internalInstanceKey","uncacheNode","precacheChildNodes","_flags","Flags","hasCachedChildNodes","children","_renderedChildren","childNode","firstChild","outer","childInst","childID","_domID","nextSibling","_prodInvariant","getClosestInstanceFromNode","parents","push","parentNode","closest","pop","getInstanceFromNode","getNodeFromInstance","_hostParent","DOMProperty","ReactDOMComponentFlags","ID_ATTRIBUTE_NAME","Math","random","toString","ReactDOMComponentTree","canUseDOM","window","document","createElement","ExecutionEnvironment","canUseWorkers","Worker","canUseEventListeners","addEventListener","attachEvent","canUseViewport","screen","isInWorker","makeEmptyFunction","arg","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","thatReturnsArgument","debugTool","ensureInjected","ReactUpdates","ReactReconcileTransaction","batchingStrategy","ReactUpdatesFlushTransaction","reinitializeTransaction","dirtyComponentsLength","callbackQueue","CallbackQueue","getPooled","reconcileTransaction","batchedUpdates","callback","mountOrderComparator","c1","c2","_mountOrder","runBatchedUpdates","transaction","len","dirtyComponents","sort","updateBatchNumber","callbacks","_pendingCallbacks","markerName","ReactFeatureFlags","logTopLevelRenders","namedComponent","_currentElement","type","isReactTopLevelWrapper","getName","console","time","ReactReconciler","performUpdateIfNecessary","timeEnd","j","enqueue","getPublicInstance","enqueueUpdate","isBatchingUpdates","_updateBatchNumber","asap","context","asapCallbackQueue","asapEnqueued","_assign","PooledClass","Transaction","NESTED_UPDATES","initialize","close","splice","flushBatchedUpdates","UPDATE_QUEUEING","reset","notifyAll","TRANSACTION_WRAPPERS","getTransactionWrappers","destructor","release","perform","method","scope","addPoolingTo","queue","ReactUpdatesInjection","injectReconcileTransaction","ReconcileTransaction","injectBatchingStrategy","_batchingStrategy","injection","SyntheticEvent","dispatchConfig","targetInst","nativeEvent","nativeEventTarget","_targetInst","Interface","constructor","propName","normalize","defaultPrevented","returnValue","isDefaultPrevented","isPropagationStopped","shouldBeReleasedProperties","Proxy","EventInterface","currentTarget","eventPhase","bubbles","cancelable","timeStamp","event","Date","now","isTrusted","preventDefault","stopPropagation","cancelBubble","persist","isPersistent","augmentClass","Class","Super","E","fourArgumentPooler","ReactCurrentOwner","current","insertTreeChildren","tree","enableLazy","insertTreeBefore","html","setInnerHTML","text","setTextContent","replaceChildWithTree","oldNode","newTree","replaceChild","queueChild","parentTree","childTree","appendChild","queueHTML","queueText","nodeName","DOMLazyTree","DOMNamespaces","createMicrosoftUnsafeLocalFunction","ELEMENT_NODE_TYPE","DOCUMENT_FRAGMENT_NODE_TYPE","documentMode","navigator","userAgent","test","referenceNode","toLowerCase","namespaceURI","insertBefore","checkMask","value","bitmask","DOMPropertyInjection","MUST_USE_PROPERTY","HAS_BOOLEAN_VALUE","HAS_NUMERIC_VALUE","HAS_POSITIVE_NUMERIC_VALUE","HAS_OVERLOADED_BOOLEAN_VALUE","injectDOMPropertyConfig","domPropertyConfig","Injection","Properties","DOMAttributeNamespaces","DOMAttributeNames","DOMPropertyNames","DOMMutationMethods","isCustomAttribute","_isCustomAttributeFunctions","properties","lowerCased","propConfig","propertyInfo","attributeName","attributeNamespace","propertyName","mutationMethod","mustUseProperty","hasBooleanValue","hasNumericValue","hasPositiveNumericValue","hasOverloadedBooleanValue","ATTRIBUTE_NAME_START_CHAR","ROOT_ATTRIBUTE_NAME","ATTRIBUTE_NAME_CHAR","getPossibleStandardName","isCustomAttributeFn","attachRefs","ReactRef","mountComponent","internalInstance","hostParent","hostContainerInfo","parentDebugID","markup","ref","getReactMountReady","getHostNode","unmountComponent","safely","detachRefs","receiveComponent","nextElement","prevElement","_context","refsChanged","shouldUpdateRefs","ReactChildren","ReactComponent","ReactPureComponent","ReactClass","ReactDOMFactories","ReactElement","ReactPropTypes","ReactVersion","onlyChild","createFactory","cloneElement","__spread","React","Children","count","toArray","only","Component","PureComponent","isValidElement","PropTypes","createClass","createMixin","mixin","DOM","version","hasValidRef","config","hasValidKey","REACT_ELEMENT_TYPE","RESERVED_PROPS","__self","__source","self","owner","props","element","$$typeof","_owner","childrenLength","childArray","Array","defaultProps","factory","bind","cloneAndReplaceKey","oldElement","newKey","newElement","_self","_source","object","__webpack_amd_options__","webpackPolyfill","deprecate","paths","emptyObject","isInteractive","tag","shouldPreventMouseEvent","disabled","EventPluginRegistry","EventPluginUtils","ReactErrorUtils","accumulateInto","forEachAccumulated","listenerBank","eventQueue","executeDispatchesAndRelease","simulated","executeDispatchesInOrder","executeDispatchesAndReleaseSimulated","executeDispatchesAndReleaseTopLevel","getDictionaryKey","_rootNodeID","EventPluginHub","injectEventPluginOrder","injectEventPluginsByName","putListener","registrationName","listener","bankForRegistrationName","PluginModule","registrationNameModules","didPutListener","getListener","deleteListener","willDeleteListener","deleteAllListeners","extractEvents","topLevelType","events","plugins","possiblePlugin","extractedEvents","enqueueEvents","processEventQueue","processingEventQueue","rethrowCaughtError","__purge","__getListenerBank","listenerAtPhase","propagationPhase","phasedRegistrationNames","accumulateDirectionalDispatches","phase","_dispatchListeners","_dispatchInstances","accumulateTwoPhaseDispatchesSingle","traverseTwoPhase","accumulateTwoPhaseDispatchesSingleSkipTarget","parentInst","getParentInstance","accumulateDispatches","ignoredDirection","accumulateDirectDispatchesSingle","accumulateTwoPhaseDispatches","accumulateTwoPhaseDispatchesSkipTarget","accumulateEnterLeaveDispatches","leave","enter","traverseEnterLeave","accumulateDirectDispatches","EventPropagators","ReactInstanceMap","remove","_reactInternalInstance","get","has","set","SyntheticUIEvent","dispatchMarker","getEventTarget","UIEventInterface","view","doc","ownerDocument","defaultView","parentWindow","detail","getListeningForDocument","mountAt","topListenersIDKey","reactTopListenersCounter","alreadyListeningTo","hasEventPageXY","ReactEventEmitterMixin","ViewportMetrics","getVendorPrefixedEventName","isEventSupported","isMonitoringScrollValue","topEventMapping","topAbort","topAnimationEnd","topAnimationIteration","topAnimationStart","topBlur","topCanPlay","topCanPlayThrough","topChange","topClick","topCompositionEnd","topCompositionStart","topCompositionUpdate","topContextMenu","topCopy","topCut","topDoubleClick","topDrag","topDragEnd","topDragEnter","topDragExit","topDragLeave","topDragOver","topDragStart","topDrop","topDurationChange","topEmptied","topEncrypted","topEnded","topError","topFocus","topInput","topKeyDown","topKeyPress","topKeyUp","topLoadedData","topLoadedMetadata","topLoadStart","topMouseDown","topMouseMove","topMouseOut","topMouseOver","topMouseUp","topPaste","topPause","topPlay","topPlaying","topProgress","topRateChange","topScroll","topSeeked","topSeeking","topSelectionChange","topStalled","topSuspend","topTextInput","topTimeUpdate","topTouchCancel","topTouchEnd","topTouchMove","topTouchStart","topTransitionEnd","topVolumeChange","topWaiting","topWheel","ReactBrowserEventEmitter","ReactEventListener","injectReactEventListener","setHandleTopLevel","handleTopLevel","setEnabled","enabled","isEnabled","listenTo","contentDocumentHandle","isListening","dependencies","registrationNameDependencies","dependency","trapBubbledEvent","trapCapturedEvent","WINDOW_HANDLE","handlerBaseName","handle","supportsEventPageXY","createEvent","ev","ensureScrollValueMonitoring","refresh","refreshScrollValues","monitorScrollValue","SyntheticMouseEvent","getEventModifierState","MouseEventInterface","screenX","screenY","clientX","clientY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","button","buttons","relatedTarget","fromElement","srcElement","toElement","pageX","currentScrollLeft","pageY","currentScrollTop","OBSERVED_ERROR","TransactionImpl","transactionWrappers","wrapperInitData","_isInTransaction","isInTransaction","errorThrown","ret","initializeAll","closeAll","startIndex","wrapper","initData","escapeHtml","string","str","match","matchHtmlRegExp","exec","escape","index","lastIndex","charCodeAt","substring","escapeTextContentForBrowser","reusableSVGContainer","WHITESPACE_TEST","NONVISIBLE_TEST","svg","innerHTML","svgNode","testElement","textNode","data","removeChild","deleteData","is","x","y","shallowEqual","objA","objB","keysA","keysB","getNodeAfter","isArray","insertLazyTreeChildAt","moveChild","moveDelimitedText","insertChildAt","closingComment","removeDelimitedText","openingComment","nextNode","startNode","replaceDelimitedText","stringText","nodeAfterComment","createTextNode","Danger","dangerouslyReplaceNodeWithMarkup","DOMChildrenOperations","processUpdates","updates","k","update","content","afterNode","fromNode","mathml","recomputePluginOrdering","eventPluginOrder","pluginName","namesToPlugins","pluginModule","pluginIndex","indexOf","publishedEvents","eventTypes","eventName","publishEventForPlugin","eventNameDispatchConfigs","phaseName","phasedRegistrationName","publishRegistrationName","possibleRegistrationNames","injectedEventPluginOrder","injectedNamesToPlugins","isOrderingDirty","getPluginModuleForEvent","_resetEventPlugins","isEndish","isMoveish","isStartish","executeDispatch","invokeGuardedCallbackWithCatch","invokeGuardedCallback","dispatchListeners","dispatchInstances","executeDispatchesInOrderStopAtTrueImpl","executeDispatchesInOrderStopAtTrue","executeDirectDispatch","dispatchListener","dispatchInstance","res","hasDispatches","ComponentTree","TreeTraversal","injectComponentTree","Injected","injectTreeTraversal","isAncestor","getLowestCommonAncestor","argFrom","argTo","escapeRegex","escaperLookup","=",":","escapedString","unescape","unescapeRegex","unescaperLookup","=0","=2","keySubstring","KeyEscapeUtils","_assertSingleLink","inputProps","checkedLink","valueLink","_assertValueLink","onChange","_assertCheckedLink","checked","getDeclarationErrorAddendum","ReactPropTypesSecret","propTypesFactory","hasReadOnlyValue","checkbox","image","hidden","radio","submit","propTypes","componentName","readOnly","func","loggedTypeFailures","LinkedValueUtils","checkPropTypes","tagName","getValue","getChecked","executeOnChange","requestChange","injected","ReactComponentEnvironment","replaceNodeWithMarkup","processChildrenUpdates","injectEnvironment","environment","caughtError","formatUnexpectedArgument","displayName","getInternalInstanceReadyForUpdate","publicInstance","callerName","ReactUpdateQueue","isMounted","enqueueCallback","validateCallback","enqueueCallbackInternal","enqueueForceUpdate","_pendingForceUpdate","enqueueReplaceState","completeState","_pendingStateQueue","_pendingReplaceState","enqueueSetState","partialState","enqueueElementInternal","nextContext","_pendingElement","MSApp","execUnsafeLocalFunction","arg0","arg1","arg2","arg3","getEventCharCode","charCode","keyCode","modifierStateGetter","keyArg","syntheticEvent","keyProp","modifierKeyToProp","Alt","Control","Meta","Shift","correspondingUseElement","eventNameSuffix","capture","isSupported","setAttribute","useHasFeature","implementation","hasFeature","shouldUpdateReactComponent","prevEmpty","nextEmpty","prevType","nextType","validateDOMNesting","updater","refs","ReactNoopUpdateQueue","isReactComponent","setState","forceUpdate","warnNoop","getABC","S","B","t","u","utils","projectionratio","um","C","abcratio","A","abs","min","max","acos","sqrt","pi","PI","ZERO","z","PolyBezier","Bezier","coords","coordlen","newargs","point","higher","_3d","points","idx","step","order","dims","dimlen","curve","align","p1","p2","_linear","_t1","_t2","fromSVG","svgString","list","parseFloat","relative","v","quadraticFromPoints","p3","abc","cubicFromPoints","d1","dist","d2","selen","lx","ly","bx1","by1","bx2","by2","e1","e2","v1","v2","nc1","nc2","getUtils","valueOf","pointsToString","toSVG","last","dpoints","dpt","computedirection","angle","clockwise","derivative","_lut","getLUT","steps","compute","on","lut","hits","project","LUT","l","mdist","mpos","pt","ft","t1","t2","mt","mt2","dCpts","JSON","parse","stringify","raise","pim","np","inflections","normal","__normal3","__normal2","q","r1","r2","q1","q2","R","hull","_p","lerp","left","right","result","span","subsplit","extrema","mfn","roots","dim","droots","filter","values","bbox","getminmax","overlaps","lbbox","tbbox","bboxoverlap","offset","nv","reduced","reduce","scale","simple","a1","a2","n1","n2","segment","pass1","pass2","distanceFn","o","lli4","copy","ov","rc","outline","d3","d4","linearDistanceFunction","tlen","alen","slen","f1","f2","fcurves","bcurves","graduated","reverse","fs","fe","bs","be","ls","makeline","le","segments","outlineshapes","curveIntersectionThreshold","curves","shapes","shape","makeshape","startcap","virtual","endcap","intersects","lineIntersects","curveintersects","selfintersects","line","mx","my","MX","MY","between","results","pairs","r","intersections","pair","pairiteration","arcs","errorThreshold","circles","_iterate","_error","pc","np1","safety","np2","np3","arc","prev_arc","done","curr_good","prev_good","prev_e","getccenter","interval","start","end","cos","sin","atan2","pow","crt","tau","quart","epsilon","nMax","Number","MAX_SAFE_INTEGER","nMin","MIN_SAFE_INTEGER","Tvalues","Cvalues","arcfn","derivativeFn","M","approximately","precision","sum","ds","de","ts","te","pointToString","obj","dx1","dy1","dx2","dy2","cross","dot","round","pos","dx","dy","bottom","top","lli8","x1","y1","x2","y2","x3","y3","x4","y4","nx","ny","p4","lli","findbbox","sections","mid","size","shapeintersections","s1","bbox1","s2","bbox2","forward","back","l1","l2","iss","bpl","fpl","tx","ty","m1","m2","u1","pa","pb","pd","discriminant","mp3","mp33","cosphi","phi","crtr","sd","v3","trm","sq","b1","b2","expandbox","_bbox","c1b","c2b","threshold","cc1","cc2","_","dx1p","dy1p","dx2p","dy2p","mx1","my1","mx2","my2","mx1n","my1n","mx2n","my2n","global","typedArraySupport","arr","Uint8Array","__proto__","foo","subarray","byteLength","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","encodingOrOffset","allocUnsafe","ArrayBuffer","fromArrayBuffer","fromString","fromObject","assertSize","alloc","fill","encoding","isEncoding","actual","write","fromArrayLike","array","byteOffset","isBuffer","buffer","isnan","SlowBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","lastIndexOf","read","buf","indexSize","readUInt16BE","arrLength","valLength","foundIndex","found","hexWrite","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","base64","fromByteArray","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","stringtrim","INVALID_BASE64_RE","trim","units","Infinity","leadSurrogate","byteArray","hi","lo","toByteArray","src","dst","INSPECT_MAX_BYTES","poolSize","_augment","Symbol","species","defineProperty","configurable","allocUnsafeSlow","_isBuffer","compare","swap16","swap32","swap64","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","EventListener","listen","eventType","removeEventListener","detachEvent","registerDefault","focusNode","focus","getActiveElement","activeElement","body","fnNumberSort","insertSorted","comparefunc","leftbound","rightbound","testindex","testelement","compareresult","fnSortByIndex","_CSGDEBUG","CSG","polygons","isCanonicalized","isRetesselated","defaultResolution2D","defaultResolution3D","fromPolygons","csg","fromSlices","options","Polygon","createFromPoints","solidFromSlices","canonicalized","fromCompactBinary","bin","w","plane","planes","planeData","numplanes","arrayindex","planeindex","Vector3D","Create","Plane","vertex","vertices","vertexData","numvertices","vertexindex","Vertex","numpolygonvertices","polygonvertices","shared","polygon","shareds","Shared","numpolygons","numPolygons","numVerticesPerPolygon","polygonVertices","polygonPlaneIndexes","polygonSharedIndexes","polygonindex","toPolygons","union","csgs","unionSub","reTesselated","retesselate","canonicalize","mayOverlap","Tree","clipTo","invert","newpolygons","allPolygons","_merge","unionForNonIntersecting","subtract","islast","subtractSub","addPolygons","intersect","intersectSub","flippedpolygons","flipped","transform1","matrix4x4","transform","_transform","ismirror","isMirroring","transformedvertices","transformedplanes","newplane","planetag","getTag","newvertices","newvertex","vertextag","expand","radius","resolution","expandedShell","contract","expandedshell","stretchAtPlane","fromNormalAndPoint","onb","OrthoNormalBasis","crosssect","sectionCut","midpiece","extrudeInOrthonormalBasis","piece1","cutByPlane","piece2","translate","times","unionWithThis","extrudevector","unit","translatedpolygon","extrudedface","extrude","vertexpairs","prevvertex","prevvertextag","vertextagpair","planenormals","vertexpair","startpoint","endpoint","zbase","minus","xbase","ybase","angles","iMax","planenormal","si","co","prevp1","prevp2","numangles","startfacevertices","endfacevertices","plus","skip","distanceTo","cylinder","vertexmap","normals","vertexobj","xaxis","bestzaxis","bestzaxisorthogonality","crosslength","randomNonParallelVector","yaxis","zaxis","sphere","center","axes","fuzzyCSGFactory","getCSG","polygonsPerPlane","fuzzyfactory","getPlane","getPolygonShared","destpolygons","sourcepolygons","retesselayedpolygons","reTesselateCoplanarPolygons","getBounds","cachedBoundingBox","minpoint","maxpoint","bounds","boundingBox","mybounds","otherbounds","planecenter","maxdistance","distance","distanceToSquared","orthobasis","to3D","Vector2D","cube","connectTo","myConnector","otherConnector","mirror","normalrotation","matrix","getTransformationTo","setShared","setColor","newshared","fromColor","toCompactBinary","planemap","sharedmap","numshared","sharedtag","Uint32Array","Float64Array","polygonVerticesIndex","sharedindex","verticesArrayIndex","_x","_y","_z","planesArrayIndex","class","toPointCloud","cuberadius","getTransformationAndInverseTransformationToFlatLying","Matrix4x4","besttransformation","bestinversetransformation","xvector","yvector","zvector","z0connectorx","Connector","z0connectory","isfirst","minheight","maxdotz","transformation","inversetransformation","pointonplane","xorthogonality","yorthogonality","planeconnector","transformedcsg","dotz","zheight","isbetter","translation","multiply","negated","getTransformationToFlatLying","lieFlat","projectToOrthoNormalBasis","EPS","cags","lengthSquared","cag","sides","CAG","plane1","plane2","cut3d","fixTJunctions","addSide","vertex0","vertex1","starttag","endtag","newsidetag","reversesidetag","sidemap","deleteSide","newsideobj","vertextag2sidestart","vertextag2sideend","sidetag","sideobjs","sideobj","nextvertexindex","nextvertex","nextvertextag","ar","sidestocheck","sidemapisempty","donesomething","sidetagtocheck","donewithside","directionindex","startvertex","endvertex","startvertextag","endvertextag","matchingsides","matchingsideindex","matchingsidetag","matchingside","matchingsidestartvertex","matchingsideendvertex","matchingsidestartvertextag","matchingsideendvertextag","startpos","endpos","checkpos","direction","closestpoint","distancesquared","insertionvertextag","insertionvertextagindex","newpolygon","newsidetag1","newsidetag2","newcsg","OpenJsCad","log","toTriangles","poly","firstVertex","getFeatures","features","triPoly","getTetraFeatures","pv","feat","parseOption","optionname","defaultvalue","parseOptionAs3DVector","parseOptionAs3DVectorList","parseOptionAs2DVector","parseOptionAsFloat","parseOptionAsInt","parseOptionAsBool","corner1","corner2","info","facecenters","prevcylinderpoint","qresolution","slice1","cylinderpoint","prevcospitch","prevsinpitch","slice2","pitch","cospitch","sinpitch","facepoint","stack","alpha","axisX","axisY","ray","rEnd","rStart","slices","axisZ","t0","cylCenter","fptVec","rotate","fptVec90","facepointH","facepointH90","roundedCylinder","defaultnormal","roundedCube","minRR","roundradius","innerradius","polyhedron","faces","face","IsFloat","solve2Linear","det","invdet","ok","create","clone","dividedBy","multiply4x4","leftMultiply1x3Vector","toFixed","interpolate","other","newpos","EPSILON","fromVector3Ds","anyPlaneFromVector3Ds","fromPoints","point1","point2","point3","splitPolygon","front","thisw","hasfront","hasback","vertexIsBack","MINEPS","isback","frontvertices","backvertices","nextisback","nextpoint","intersectionpoint","splitLineBetweenPoints","intersectionvertex","EPS_SQUARED","labda","intersectWithLine","line3d","intersectWithPlane","Line3D","fromPlanes","signedDistanceToPoint","mirrorPoint","point3d","mirrored","defaultShared","checkIfConvex","verticesConvex","getSignedVolume","signedVolume","getArea","polygonArea","feature","offsetvector","polygon1","polygon2","sidefacepoints","nexti","sidefacepolygon","boundingSphere","cachedBoundingSphere","box","middle","radius3","points2d","to2D","fromPointsNoCheck","area","fnCallback","prev","numSlices","bLoop","Boolean","numslices","square","_addWalls","bSameTopBottom","every","unshift","walls","bFlipped","bottomPoints","topPoints","color","iTopLen","iBotLen","iExtra","bMoreTops","bMoreBottoms","aMin","secondPoint","nBotFacet","nTopFacet","getTriangle","pointA","pointB","pointC","bpoint","tpoint","iB","iT","shift","prevprevpos","prevpos","isConvexPoint","vec","prevpoint","crossproduct","crossdotnormal","isStrictlyConvexPoint","getHash","PolygonTreeNode","parent","removed","isRootNode","_this","addChild","parentschildren","recursivelyInvalidatePolygon","isRemoved","invertSub","getPolygon","getPolygons","splitByPlane","coplanarfrontnodes","coplanarbacknodes","frontnodes","backnodes","nodes","_splitByPlane","bound","sphereradius","spherecenter","splitresult","frontnode","backnode","newchild","polygonTree","rootnode","Node","alsoRemovecoplanarFront","polygontreenodes","addPolygonTreeNodes","temp","clipPolygons","numpolygontreenodes","node1","numbacknodes","bestplane","getParentPlaneNormals","maxdepth","elements","this0","this1","this2","this3","this4","this5","this6","this7","this8","this9","this10","this11","this12","this13","this14","this15","m0","m3","m4","m5","m6","m7","m8","m9","m10","m11","m12","m13","m14","m15","rightMultiply1x3Vector","v0","invw","rightMultiply1x2Vector","leftMultiply1x2Vector","mirrorvalue","unity","rotationX","degrees","radians","els","rotationY","rotationZ","rotation","rotationCenter","rotationAxis","rotationPlane","getProjectionMatrix","getInverseProjectionMatrix","mirroring","nz","scaling","fromAngle","fromAngleRadians","fromAngleDegrees","toVector3D","angleRadians","angleDegrees","Line2D","origin","xAtY","absDistanceToPoint","point_projected","line2d","pointOnPlane","neworigin","neworiginPlusNormal","newnormal","newpointOnPlane","neww","mabsx","mabsy","mabsz","newpoint","pointPlusDirection","newPointPlusDirection","newdirection","closestPointOnLine","distanceToPoint","distancevector","rightvector","planeorigin","GetCartesian","xaxisid","yaxisid","axisid","Z0Plane","vec3","vec2","line3Dto2D","a2d","b2d","line2Dto3D","a3d","b3d","rightpoint_transformed","origin_transformed","newrighthandvector","newbasis","interpolateBetween2DPointsForY","polygonvertices2d","polygontopvertexindexes","topy2polygonindexes","ycoordinatetopolygonindexes","ycoordinatebins","ycoordinateBinningFactor","poly3d","vertices2d","minindex","miny","maxy","maxindex","newy","pos2d","ycoordinatebin","ycoordinates","ycoordinate","activepolygons","prevoutpolygonrow","yindex","newoutpolygonrow","ycoordinate_as_string","polygonindexeswithcorner","activepolygonindex","activepolygon","newleftvertexindex","leftvertexindex","newrightvertexindex","rightvertexindex","nextleftvertexindex","nextrightvertexindex","topleft","topright","bottomleft","bottomright","nextycoordinate","middleycoordinate","startingpolygonindexes","polygonindex_key","topvertexindex","topleftvertexindex","toprightvertexindex","newactivepolygon","el1","el2","activepolygon_key","outpolygon","leftline","rightline","prevoutpolygon","prevcontinuedindexes","matchedindexes","thispolygon","ii","prevpolygon","leftlinecontinues","rightlinecontinues","leftlineisconvex","rightlineisconvex","rightpoints","leftpoints","vertices3d","point2d","vertex3d","fuzzyFactory","numdimensions","tolerance","lookuptable","multiplier","lookupOrCreate","creatorCallback","hash","el","valueQuantized","hashparts","q0","numelements","numhashes","hashmask","hashmask_shifted","hashpart","vertexfactory","planefactory","polygonsharedfactory","sourceshared","getVertex","sourcevertex","sourceplane","sourcepolygon","newvertices_dedup","sourcecsg","staticTag","transformObj","otherproperties","cloneObj","addFrom","propertyname","propertyvalue","transformed","cloned","axisvector","normalvector","normalized","us","axesplane","axesbasis","angle1","angle2","usAxesAligned","normalsplane","normalsbasis","axisLine","extend","ConnectorList","connectors","connectors_","defaultNormal","fromPath2D","path2D","_fromPath2DTangents","_fromPath2DExplicit","axis","pathLen","appendConnector","closed","angleIsh","getAngle","rotateZ","setClosed","bool","conn","followWith","cagish","getCag","connector","verify","currCag","prevConnector","prevCag","notFirst","_toWallPolygons","toConnector1","toConnector2","_toPlanePolygons","toConnector","connI","connI1","Path2D","newpoints","startangle","endangle","maketangent","absangledif","numsteps","edgestepsize","numsteps_mod","otherpath","appendPoint","appendPoints","rectangularExtrude","width","height","expandToCAG","pathradius","numpoints","startindex","pointindex","side","Side","shellcag","fromSides","expanded","innerToCAG","appendBezier","controlpoints","factorials","controlpoints_parsed","lastBezierControlPoint","bezier_order","fact","binomials","binomial","getPointForT","t_k","one_minus_t_n_minus_k","inv_1_minus_t","bernstein_coefficient","newpoints_t","subdivide_base","maxangle","maxsinangle","dir1","dir2","sinangle","t0_new","t1_new","point0_new","point1_new","appendArc","xradius","yradius","xaxisrotation","largearc","sweep_flag","sinphi","minushalfdistance","start_translated","biglambda","sqrtbiglambda","multiplier1","center_translated","vec1","theta1","theta2","deltatheta","ceil","theta","costheta","sintheta","addTransformationMethodsToPrototype","prot","mirroredX","mirroredY","mirroredZ","rotateX","deg","rotateY","rotateEulerAngles","beta","gamma","position","Rz1","Rx","Rz2","T","addCenteringToPrototype","cAxes","isSelfIntersecting","fromFakeCSG","_fromFakePolygon","linesIntersect","p0start","p0end","p1start","p1end","d0","alphas","circle","rectangle","rswap","roundedRectangle","maxroundradius","rect","numsides","sideVertexIndices","sideindex","vertexindex0","vertexindex1","_toCSGWall","z0","z1","toPolygon3D","_toVector3DPairs","p0","defaultAxis","thisConnector","axisVector","normalVector","csgshell","csgplane","polys","toCag","vps1","vps2","vp1","newsides","debug","side0","side1","pointmap","dl","shellpoints","newcag","pcenter","end1","end2","fullcircle","orthonormalbasis","depth","extruded","extrudeInPlane","axis1","axis2","offsetVector","twistangle","twiststeps","rotateExtrude","axisV","normalV","connS","connE","connT2","connT1","check","errors","pointcount","mappoint","ertxt","fuzzyCAGFactory","getCAG","sidevertexindicesindex","getOutlinePaths","sideTagToSideMap","startVertexTagToSideTagMap","startsidetag","aVertexTag","sidesForThisVertex","connectedVertexPoints","thisside","nextpossiblesidetags","nextsideindex","bestangle","thisangle","nextpossiblesidetag","possibleside","angledif","nextsidetag","path","overCutInsideCorners","cutterradius","cutouts","pointtag","pointobj","fromcoord","pointcoord","tocoord","isInnerCorner","midvector","circlesegmentangle","radiuscorrected","circlecenter","deltaangle","vert1Indices","pts2d","newp1","newp2","getSide","sourceside","sourcecag","Polygon2D","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","timeout","run","Item","noop","process","nextTick","title","browser","env","argv","versions","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","umask","getThen","then","ex","LAST_ERROR","IS_ERROR","tryCallOne","tryCallTwo","Promise","_45","_81","_65","_54","doResolve","safeThen","onFulfilled","onRejected","resolve","reject","Handler","deferred","_10","handleResolved","cb","promise","newValue","finale","_97","reason","_61","throwOnDirectAccess","prefixKey","prefix","charAt","toUpperCase","isUnitlessNumber","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridColumn","fontWeight","lineClamp","lineHeight","opacity","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","prefixes","prop","shorthandPropertyExpansions","background","backgroundAttachment","backgroundColor","backgroundImage","backgroundPositionX","backgroundPositionY","backgroundRepeat","backgroundPosition","border","borderWidth","borderStyle","borderColor","borderBottom","borderBottomWidth","borderBottomStyle","borderBottomColor","borderLeft","borderLeftWidth","borderLeftStyle","borderLeftColor","borderRight","borderRightWidth","borderRightStyle","borderRightColor","borderTop","borderTopWidth","borderTopStyle","borderTopColor","font","fontStyle","fontVariant","fontSize","fontFamily","outlineWidth","outlineStyle","outlineColor","CSSProperty","_classCallCheck","instance","Constructor","_callbacks","_contexts","_arg","contexts","checkpoint","rollback","isAttributeNameSafe","validatedAttributeNameCache","illegalAttributeNameCache","VALID_ATTRIBUTE_NAME_REGEX","shouldIgnoreValue","quoteAttributeValueForBrowser","RegExp","DOMPropertyOperations","createMarkupForID","setAttributeForID","createMarkupForRoot","setAttributeForRoot","createMarkupForProperty","createMarkupForCustomAttribute","setValueForProperty","deleteValueForProperty","namespace","setAttributeNS","setValueForAttribute","removeAttribute","deleteValueForAttribute","updateOptionsIfPendingUpdateAndMounted","_wrapperState","pendingUpdate","updateOptions","multiple","propValue","selectedValue","selected","_handleChange","didWarnValueDefaultValue","ReactDOMSelect","getHostProps","mountWrapper","initialValue","defaultValue","listeners","wasMultiple","getSelectValueContext","postUpdateWrapper","emptyComponentFactory","ReactEmptyComponentInjection","injectEmptyComponentFactory","ReactEmptyComponent","instantiate","createInternalComponent","genericComponentClass","createInstanceForText","textComponentClass","isTextComponent","ReactHostComponentInjection","injectGenericComponentClass","componentClass","injectTextComponentClass","ReactHostComponent","isInDocument","containsNode","documentElement","ReactDOMSelection","ReactInputSelection","hasSelectionCapabilities","elem","contentEditable","getSelectionInformation","focusedElem","selectionRange","getSelection","restoreSelection","priorSelectionInformation","curFocusedElem","priorFocusedElem","priorSelectionRange","setSelection","input","selection","selectionStart","selectionEnd","range","createRange","parentElement","moveStart","moveEnd","getOffsets","offsets","createTextRange","collapse","select","setOffsets","firstDifferenceIndex","string1","string2","minLen","getReactRootElementInContainer","container","DOC_NODE_TYPE","internalGetID","mountComponentIntoNode","wrapperInstance","shouldReuseMarkup","wrappedElement","child","ReactDOMContainerInfo","_topLevelWrapper","ReactMount","_mountImageIntoNode","batchedMountComponentIntoNode","componentInstance","ReactDOMFeatureFlags","useCreateElement","unmountComponentFromNode","lastChild","hasNonRootReactChild","rootEl","isValidContainer","getHostRootInstanceInContainer","prevHostInstance","getTopLevelWrapperInContainer","root","_hostContainerInfo","ReactMarkupChecksum","instantiateReactComponent","ROOT_ATTR_NAME","instancesByReactRootID","topLevelRootCounter","TopLevelWrapper","rootID","render","_instancesByReactRootID","scrollMonitor","renderCallback","_updateRootComponent","prevComponent","_renderNewRootComponent","wrapperID","_instance","renderSubtreeIntoContainer","parentComponent","_renderSubtreeIntoContainer","nextWrappedElement","_processChildContext","prevWrappedElement","publicInst","updatedCallback","unmountComponentAtNode","reactRootElement","containerHasReactMarkup","containerHasNonRootReactChild","hasAttribute","rootElement","canReuseMarkup","checksum","CHECKSUM_ATTR_NAME","rootMarkup","outerHTML","normalizedMarkup","diffIndex","difference","ReactNodeTypes","HOST","COMPOSITE","EMPTY","getType","scrollPosition","next","getHostComponentFromComposite","_renderedNodeType","getTextContentAccessor","contentKey","isInternalComponentType","shouldHaveDebugID","getNativeNode","ReactCompositeComponentWrapper","_mountIndex","_mountImage","ReactCompositeComponent","construct","_instantiateReactComponent","isTextInputElement","supportedInputTypes","date","datetime","datetime-local","email","month","number","password","search","tel","url","week","textContent","getComponentKey","traverseAllChildrenImpl","nameSoFar","traverseContext","SEPARATOR","nextName","subtreeCount","nextNamePrefix","SUBSEPARATOR","iteratorFn","getIteratorFn","iterator","entries","entry","addendum","childrenString","traverseAllChildren","isNative","funcToString","Function","reIsNative","purgeDeep","item","getItem","childIDs","removeItem","describeComponentFrame","ownerName","fileName","lineNumber","getDisplayName","describeID","ReactComponentTreeHook","getElement","ownerID","getOwnerID","setItem","getItemIDs","addRoot","removeRoot","getRootIDs","canUseCollections","Map","Set","itemMap","rootIDSet","add","itemByKey","rootByKey","getKeyFromID","getIDFromKey","unmountedIDs","onSetChildren","nextChildIDs","nextChildID","nextChild","parentID","onBeforeMountComponent","updateCount","onBeforeUpdateComponent","onMountComponent","isRoot","onUpdateComponent","onUnmountComponent","purgeUnmountedComponents","_preventPurging","getCurrentStackAddendum","topElement","currentOwner","_debugID","getStackAddendumByID","getParentID","getChildIDs","getSource","getText","getUpdateCount","getRegisteredIDs","canDefineProperty","rawAsap","task","requestFlush","flushing","flush","currentIndex","capacity","scan","newLength","makeRequestCallFromMutationObserver","toggle","observer","BrowserMutationObserver","observe","characterData","makeRequestCallFromTimer","handleTimer","timeoutHandle","clearInterval","intervalHandle","setInterval","MutationObserver","WebKitMutationObserver","_interopRequireDefault","__esModule","default","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","enumerable","writable","setPrototypeOf","_createClass","defineProperties","descriptor","protoProps","staticProps","_react","_react2","_PuzzleSVGBasic","_PuzzleSVGBasic2","App","_Component","getPrototypeOf","handleRowDown","prevState","rows","handleRowUp","handleColDown","cols","handleColUp","state","_state","onClick","seed","piece_width","piece_height","dpi","margin","kerf","_slicedToArray","sliceIterator","_n","_d","_e","_s","_i","_seedrandom","_seedrandom2","_makerjs","_makerjs2","_clone","_clone2","_Logo3x","_Logo3x2","pt2str","_ref","_ref2","pt1","pt2","appendEdge","pts","edge","PuzzleSVGBasic","_props","rng","crng","h","pointOffsetXMax","pointOffsetYMax","controlPointOffsetXMax","controlPointOffsetYMax","controlT1H","controlT2H","controlT3H","controlT4H","controlT1V","controlT2V","controlT3V","controlT4V","row","horizontal_edges","up","vertical_edges","puzzle_width","puzzle_height","pieces","edge1","edge2","edge3","edge4","outline_model","importer","fromSVGPathData","bezierAccuracy","stick_height","stick_width","attachment_width","attachment_height","attachment_spacing","stick_model","models","stick","Oval","attachment_model","attachment_left","Rectangle","attachment_right","model","corner","outline_output","exporter","toSVGPathData","combineUnion","output","stroke","viewBox","xmlns","patternUnits","xlinkHref","_reactDom","_reactDom2","_AppBasic","_AppBasic2","getElementById","placeHoldersCount","b64","tmp","placeHolders","Arr","L","revLookup","tripletToBase64","num","lookup","encodeChunk","uint8","extraBytes","parts","maxChunkLength","len2","addCurve","_instanceof","circular","includeNonEnumerable","proto","nativeMap","nativeSet","nativePromise","__isArray","__isRegExp","__getRegExpFlags","__isDate","getTime","useBuffer","allParents","allChildren","keyChild","valueChild","entryChild","attrs","getOwnPropertyDescriptor","symbol","allPropertyNames","__objToStr","re","flags","ignoreCase","multiline","clonePrototype","camelize","_hyphenPattern","character","camelizeStyleName","msPattern","outerNode","innerNode","isTextNode","contains","compareDocumentPosition","callee","hasArrayNature","createArrayFromMixed","getNodeName","nodeNameMatch","nodeNamePattern","createNodesFromMarkup","handleScript","dummyNode","wrap","getMarkupWrap","wrapDepth","scripts","getElementsByTagName","childNodes","markupWrap","shouldWrap","selectWrap","tableWrap","trWrap","svgWrap","*","col","legend","param","tr","optgroup","option","caption","colgroup","tbody","tfoot","thead","td","th","svgElements","getUnboundedScrollPosition","scrollable","Window","pageXOffset","scrollLeft","pageYOffset","scrollTop","hyphenate","_uppercasePattern","hyphenateStyleName","isNode","memoizeStringOnly","cache","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","MakerJs","tryEval","eval","detectEnvironment","environmentTypes","WebWorker","BrowserUI","NodeJs","Unknown","accuracy","places","createRouteKey","route","converted","travel","modelContext","routeKeyOrRoute","cloneObject","objectToClone","extendObject","isFunction","isNumber","isObject","reflectName","hasNamedProperty","isPoint","isPath","isPathLine","pathType","Line","isPathCircle","Circle","isPathArc","Arc","startAngle","endAngle","isPathArcInBezierCurve","bezierData","isModel","isChain","links","pathLength","unitType","Centimeter","Foot","Inch","Meter","Millimeter","BezierSeed","noRevolutions","angleInDegrees","revolutions","toRadians","toDegrees","angleInRadians","ofArcEnd","ofArcMiddle","ratio","ofArcSpan","ofLineInDegrees","ofPointInRadians","ofPointInDegrees","pointToFindAngle","mirrorX","mirrorY","newPoint","average","avg","pointToClone","zero","referencePoint","pointOptions","smallest","measure","pointDistance","fromPolar","fromAngleOnCircle","fromArc","fromPathEnds","pathContext","pathOffset","pathEndsMap","verticalIntersectionPoint","verticalLine","nonVerticalSlope","slope","yIntercept","fromSlopeIntersection","lineA","lineB","slopeA","lineSlope","slopeB","isSlopeEqual","out_AreOverlapped","isLineOverlapping","excludeTangents","pointOfIntersection","hasSlope","midCircle","midAngle","midPoint","middleMap","pointToMirror","rounded","pointContext","pointToRotate","rotationOrigin","pointAngleInRadians","rotatedPoint","pointToScale","scaleValue","distort","pointToDistort","scaleX","scaleY","ration","BezierCurve","computePoint","copyLayer","pathA","pathB","layer","pathToClone","pathToMirror","newPath","mirrorMap","move","pathToMove","moveMap","moveRelative","delta","moveRelativeMap","moveTemporary","pathsToMove","deltas","pathToOffset","pathToRotate","rotateMap","pathToScale","scaleMap","pathToDistort","distortMap","converge","useOriginA","useOriginB","setPoint","useOrigin","setP","lines","alterLength","pathToAlter","alterMap","toPoints","numberOfPoints","base","toKeyPoints","maxArcFacet","numberOfKeyPointsMap","numberOfKeyPoints","pathToCenter","pathExtents","high","low","pathToZero","xor","controls","EllipticArc","ellipse","Ellipse","maxPointDistance","minPoints","path_1","breakAtPoint","pathToBreak","pointOfBreak","breakPathFunctionMap","getAngleStrictlyBetweenArcAngles","tries","isBetween","angleAtBreakPoint","isAngleEqual","angleAtBreakPointBetween","savedEndAngle","isBetweenPoints","savedEndPoint","getSpan","largeArc","smallestRadius","origins","intersection","spans","intersectionPoints","isBetweenArcAngles","perpendiculars","midpoint","Chord","arcPoints","Parallel","toLine","nearPoint","getNewOrigin","offsetAngle","angleOfLine","nearness","newOrigins","newOrigin","countChildModels","getSimilarModelId","modelId","newModelId","getSimilarPathId","pathId","newPathId","originate","modelToOriginate","innerOriginate","typeName","modelToCenter","centerX","centerY","modelExtents","modelToMirror","newModel","pathMirrored","childModelToMirror","childModelMirrored","modelToMove","prefixPathIds","modelToPrefix","walkedPaths","walk","onPath","walkedPath","modelToRotate","offsetOrigin","modelToScale","scaleOrigin","convertUnits","modeltoConvert","destUnitType","validUnitType","conversionScale","walkPaths","walkRecursive","routeKey","newOffset","childModel","walkedModel","parentModel","childId","beforeChildWalk","afterChildWalk","modelToZero","zeroX","zeroY","getNonZeroSegments","pathToSegment","breakPoint","segment1","segment2","breakAlongForeignPath","crossedPath","overlappedSegments","foreignWalkedPath","foreignPath","isPathEqual","overlapped","duplicate","foreignPathEndPoints","pointsToCheck","path1Offset","path2Offset","foreignIntersection","subSegments","broken","newSegment","uniqueForeignIntersectionPoints","addUniquePoints","pointArray","pointsToAdd","addUniquePoint","pointToAdd","isPointEqual","added","checkInsideForeignModel","segmentOffset","modelToIntersect","modelToIntersectAtlas","farPoint","lineToFarPoint","measureFarPoint","walkOptions","isMeasurementOverlapping","pathMap","farInt","isInside","innerWalkedModel","innerModelMeasurement","modelMap","isPathInsideModel","measureAtlas","breakPathsAtIntersections","modelToBreak","modelToBreakAtlas","Atlas","measureModels","breakAllPathsAtIntersections","checkIsInside","crossedPaths","walkModelToBreakOptions","outerWalkedPath","thisPath","walkModelToIntersectOptions","innerWalkedPath","checkForEqualOverlaps","crossedPathsA","crossedPathsB","pointMatchingDistance","compareSegments","compareAll","addOrDeleteSegments","includeInside","includeOutside","keepDuplicates","atlas","trackDeleted","addSegment","pathIdBase","newRouteKey","measurement","modelsMeasured","savedMeasurement","checkAddSegment","combine","modelA","modelB","includeAInsideB","includeAOutsideB","includeBInsideA","includeBOutsideA","which","deletedPath","opts","out_deleted","counts","trimDeadEnds","measureA","measureB","pathsA","pathsB","shouldKeep","removeDeadEnds","0","1","wp","combineIntersection","combineSubtraction","Collector","comparer","collections","addItemToCollection","findCollection","collection","items","action","removeCollection","removeItemFromCollection","getCollectionsOfMultiple","checkForOverlaps","refPaths","isOverlapping","overlapUnion","currIndex","arcRef","simplify","modelToSimplify","compareCircles","circleA","circleB","scalarMatchingDistance","similarArcs","similarCircles","similarLines","circleRef","lineRef","arcRefs","isArcOverlapping","arcA","arcB","aEndsInB","bEndsInA","ordered","circleRefs","pathToExpand","expansion","isolateCaps","straighten","bevel","arcSpan","joints","jointAngleInRadians","circumscribedRadius","ends","ConnectTheDots","OvalArc","Ring","Slot","expandPaths","modelToExpand","combineOptions","expansions","caps","first","expandedPathModel","newId","roundCaps","straightCaps","straightened","getEndlessChains","endlessChains","findChains","chains","loose","chain","endless","getClosedGeometries","toNewModel","modelToOutline","inside","childCount","init","addBaseConversion","addConversion","srcUnitType","table","angleA","angleB","withinPointDistance","pathAOffset","pathBOffset","getResult","pathAreEqualMap","withinDistance","isPointOnSlope","increase","baseMeasure","addMeasure","getExtreme","basePoint","isArcConcaveTowardsPoint","towardsPoint","midPointToNearPoint","intersectionPoint","checkAngles","checkAngle","valueInQuestion","limitA","limitB","exclusive","angleInQuestion","pointInQuestion","oneDimension","origin_value","end_value","isBezierSeedLinear","checkPoints","checkPoint","getExtremePoint","pathToMeasure","addOffset","pathExtentsMap","pathLengthMap","modelPathLength","modelToMeasure","total","cloneMeasure","measureToclone","increaseParentModel","childRoute","childMeasurement","parentRoute","parentRouteKey","augment","measureToAugment","loopIndex","yAtX","pointOnSlopeAtX","isCircular","getAngledBounds","rotateModel","rotatePaths","hexSolution","tip","tipX","altRight","altLeft","altitudeViaSide","radiusViaSide","solvers","equilateralSide","peakPoints","peakRadii","peakNum","radiusViaPeak","altitudeViaPeak","equilateralAltitude","peakX","leftGap","peakGap","minHalfGap","boundingHexagon","origin1","notes","originalMeasure","scratch","boundRotations","perimeters","solution","boundCopy","extremeAngle","xyAngle","extremePoint","pct","computeLength","tryGetModelUnits","itemToExport","Exporter","fixPoint","fixPath","beginModel","endModel","exportPath","pathToExport","exportModel","modelToExport","currPath","currModel","exportItem","itemId","parseNumericList","matches","exporter_1","toDXF","append","dxf","defaultLayer","section","sectionFn","header","dxfUnit","entities","exporterOptions","sideLength","equilateral","altitude","solveTriangleSSS","lengthA","lengthB","lengthC","solveTriangleASA","oppositeAngleInDegrees","lengthOfSideBetweenAngles","otherAngleInDegrees","angleOppositeSide","circleTangentAngles","inner","connect","tangentAngles","diff","int","path1Angles","connectAngle","moveTemp","pathsToOffset","swapOffsets","swapAngles","path2Angles","path1","path2","findCorrespondingAngleIndex","circleAngles","arcAngle","pointsFromAnglesOnCircle","anglesInDegrees","getAnglesWithinArc","anglesWithinArc","lineToCircle","unRotate","resultAngle","unrotated","lineAngle","intersectionBetweenEndpoints","angleOfX","clonedLine","anglesOfIntersection","lineAngleNormal","lineY","lineYabs","intersectRadians","asin","intersectDegrees","intersectX","circleToCircle","circle1","circle2","c2Angle","bothAngles","oneAngle","c1IntersectionAngle","c2IntersectionAngle","arc1","arc2","arc1Angles","arc2Angles","i1","i2","arcAngles","line1","line2","getPointProperties","pathToInspect","pointProperty","propertyNames","propertyNamesMap","getMatchingPointProperties","makeMatch","pointProperties","isStart","oppositePoint","iA","pathAProperties","pathBProperties","populateShardPointsFromReferenceCircle","filletRadius","referenceCircle","circleIntersection","shardPoint","cloneAndBreakPath","pathToShard","shardStart","shardEnd","getGuidePath","guidePathMap","getFilletResult","filletCenter","filletResultMap","testFilletResult","getDogboneResult","filletAngle","clipPath","originalValue","getLineRatio","totalLength","lengths","dogbone","commonProperty","midRatioPoint","bisectionAngle","filletArc","fillet","guidePaths","otherPathShardPoint","guidePath","filletSpan","guideRadius","guideArcShard","guideLine","guideLineAngle","chainToFillet","kit","ctor","F","getParameterValues","parameters","metaParams","metaParameters","getOpposedLink","linkedPaths","followLinks","connections","chainFound","chainNotFound","followLink","currLink","firstLink","reversed","nextPoint","endPoints","nextLink","link","findSingleChain","singleChain","byLayers","comparePoint","connectionMap","chainsByLayer","ignored","shallow","cycle","chainContext","amount","startAt","detachFromOldModel","removeDuplicateEnds","distanceOrDistances","maxPoints","distanceArray","di","keyPoints","offsetPathPoints","getFirstPathFromModel","collectLoop","loop","loops","detach","detachLoop","follow","loopModel","insideCount","nextConnection","findLoops","spin","getModelByDepth","safePath","removeFromOriginal","linkedPath","firstLoop","firstPath","secondLoop","depthModel","loopToDetach","pathDirectionalWithOriginalContext","primeModel","keep","deadEndFinder","DeadEndFinder","pathRef","pointMap","pass","removeDeadEnd","removePathRef","removePath","pathRefs","baseCount","XmlTag","innerText","escapeString","&","<",">","\"","getOpeningTag","selfClose","outputAttr","attrName","attrValue","getInnerText","innerTextEscaped","getClosingTag","facetSizeToResolution","arcOrCircle","facetSize","pathsToOpenJsCad","reverseTail","tail","head","exit","beginMap","dirPath","circleOptions","arcOptions","appendMap","endPoint","large","toOpenJsCad","all","extrusion","functionName","exportFromOptionsMap","subModel","operator","extrudeOptions","optionsMap","fName","toSTL","script","toStlString","toPDF","exportUnits","scaledModel","single","pathData","pathToSVGPathData","chainToSVGPathData","fixedPath","svgCoords","offsetPoint","firstPoint","chainLinkToPathDataMap","startSvgPathData","offset2","svgPathDataMap","getBezierModelsWithPaths","checkIsBezierWithPaths","beziers","rootModel","getPathDataByLayer","pathDataByLayer","tempKey","bezierSeeds","getBezierSeeds","newPaths","pathDataArrayByLayer","pathDataStringByLayer","forcePush","layers","tagname","pointToFix","pointMirroredY","pathToFix","drawText","textPoint","drawPath","annotate","circleInPaths","svgCircleData","modelGroup","useSvgPathOnly","itemToExportIsModel","unitSystem","useSvgUnit","svgUnit","scaleConversion","svgAttrs","svgUnitType","svgTag","svgGroup","stroke-width","stroke-linecap","fill-rule","font-size","cx","cy","svgArcData","svgBezierData","exp","layerGroup","halfCircle","sign","final","decreasing","addPath","pathCount","addModel","getPoint","cmd","absolute","lineTo","rx","ry","elliptic","xAxis","scaleUp","control1","control2","prevControl2","command","control","prevControl","prevCommand","commandMatches","currPoint","regexpCommands","dataString","currCmd","layout","getChildPlacement","baseline","measureParent","parentTop","cpa","xMap","childMeasure","xRatio","cp","firstX","lastX","moveAndRotate","childrenOnPath","contain","chosenPath","onPathLength","onPathMap","miterAngles","childrenOnChain","onChain","rotated","chainLength","relatives","absolutes","ab","endLink","cloneTo","dimension","itemToClone","measureFn","moveFn","cloneToColumn","cloneToRow","cloneToGrid","xCount","yCount","margins","getMargins","cloneToAlternatingRows","spacingFn","spacing","xMargin","cloneToBrick","yMargin","cloneToHoneycomb","hex","ensureBezierLib","hasLib","getScratch","bezierJsPoints","bp","BezierToSeed","parentRange","seedToBezier","getArcs","startT","endT","isLeaf","isArrayArg0","childSeeds","seeds","chainEnds","chainReversed","intact","chainEnd","chainEndPoint","trueEndpoint","computedPoint","controlYForCircularCubic","arcSpanInRadians","tan","controlPointsForCircularCubic","bezierSeedFromArc","maxBezierArcspan","isPointArgs0","realArgs","numArgs","distortX","distortY","subSpan","subArc","getPoints","isClosed","skipZeroDistance","numberOfSides","firstCornerAngleInDegrees","circumscribed","Holes","holeRadius","ids","BoltCircle","boltRadius","boltCount","firstBoltAngleInDegrees","BoltRectangle","Dogbone","style","bottomless","maxRadius","maxSide","SQRT2","ax","ay","apexes","Dome","w2","wt","hr","RoundRectangle","wr","sweepRadius","slotRadius","selfIntersect","capRoot","Caps","addCap","tiltAngle","offsetStartAngle","offsetEndAngle","capModel","addSweep","offsetRadius","hasInner","outerRadius","innerRadius","radii","Ring_outer","Ring_inner","Belt","leftRadius","rightRadius","SCurve","findRadius","arcOrigin","h2","capPath","Square","Star","skipPoints","InnerRadiusRatio","outerPoints","innerPoints","allPoints","Text","centerCharacterOrigin","opentypeOptions","prevDeleted","prevChar","charIndex","glyph","_fontSize","charModel","getPath","commands","deleted","char","forEachGlyph","csgjs","toX3D","materialPolygonLists","vertexCoords","vertexTagToCoordIndexMap","red","green","blue","polygonVertexIndices","polygonString","colorString","docType","createDocumentType","exportDoc","createDocument","createProcessingInstruction","doctype","exportRoot","exportScene","coordsMeshDefined","polygonList","appearance","material","ifs","coordinate","x3dstring","XMLSerializer","serializeToString","Blob","toStlBinary","int32buffer","Int32Array","int8buffer","Int8Array","numtriangles","thisnumtriangles","headerarray","ar1","allTrianglesBuffer","allTrianglesBufferAsInt8","triangleBuffer","triangleBufferAsInt8","triangleFloat32array","Float32Array","triangleUint16array","Uint16Array","byteoffset","arindex","vv","vertexpos","firstVertexStl","PathsToDxf","numpoints_closed","pointindexwrapped","toDxf","toAMFString","g","colorSet","valuePromise","TRUE","FALSE","NULL","UNDEFINED","EMPTYSTRING","race","disable","enable","onUnhandled","allRejections","matchWhitelist","rejections","whitelist","DEFAULT_WHITELIST","displayId","logged","logError","onHandled","warn","_72","errStr","some","cls","typeSpecs","location","getStack","maybeIterable","ITERATOR_SYMBOL","FAUX_ITERATOR_SYMBOL","PropTypeError","createChainableTypeChecker","validate","checkType","isRequired","propFullName","secret","ANONYMOUS","chainedCheckType","createPrimitiveTypeChecker","expectedType","propType","getPropType","preciseType","getPreciseType","createAnyTypeChecker","createArrayOfTypeChecker","typeChecker","createElementTypeChecker","createInstanceTypeChecker","expectedClass","expectedClassName","actualClassName","getClassName","createEnumTypeChecker","expectedValues","valuesString","createObjectOfTypeChecker","createUnionTypeChecker","arrayOfTypeCheckers","checker","createNodeChecker","createShapeTypeChecker","shapeTypes","isSymbol","any","arrayOf","instanceOf","objectOf","oneOf","oneOfType","ARIADOMPropertyConfig","aria-current","aria-details","aria-disabled","aria-hidden","aria-invalid","aria-keyshortcuts","aria-label","aria-roledescription","aria-autocomplete","aria-checked","aria-expanded","aria-haspopup","aria-level","aria-modal","aria-multiline","aria-multiselectable","aria-orientation","aria-placeholder","aria-pressed","aria-readonly","aria-required","aria-selected","aria-sort","aria-valuemax","aria-valuemin","aria-valuenow","aria-valuetext","aria-atomic","aria-busy","aria-live","aria-relevant","aria-dropeffect","aria-grabbed","aria-activedescendant","aria-colcount","aria-colindex","aria-colspan","aria-controls","aria-describedby","aria-errormessage","aria-flowto","aria-labelledby","aria-owns","aria-posinset","aria-rowcount","aria-rowindex","aria-rowspan","aria-setsize","AutoFocusUtils","focusDOMComponent","isPresto","opera","isKeypressCommand","getCompositionEventType","compositionStart","compositionEnd","compositionUpdate","isFallbackCompositionStart","START_KEYCODE","isFallbackCompositionEnd","END_KEYCODES","getDataFromCustomEvent","extractCompositionEvent","fallbackData","canUseCompositionEvent","currentComposition","useFallbackCompositionData","getData","FallbackCompositionState","SyntheticCompositionEvent","customData","getNativeBeforeInputChars","SPACEBAR_CODE","hasSpaceKeypress","SPACEBAR_CHAR","chars","getFallbackBeforeInputChars","extractBeforeInputEvent","canUseTextInputEvent","SyntheticInputEvent","beforeInput","bubbled","captured","BeforeInputEventPlugin","dangerousStyleValue","processStyleName","styleName","hasShorthandPropertyBug","styleFloatAccessor","tempStyle","cssFloat","CSSPropertyOperations","createMarkupForStyles","styles","serialized","styleValue","setValueForStyles","individualStyleName","shouldUseChangeEvent","manualDispatchChangeEvent","change","activeElementInst","runEventInBatch","startWatchingForChangeEventIE8","stopWatchingForChangeEventIE8","getTargetInstForChangeEvent","handleEventsForChangeEventIE8","startWatchingForValueChange","activeElementValue","activeElementValueProp","newValueProp","handlePropertyChange","stopWatchingForValueChange","getTargetInstForInputEvent","handleEventsForInputEventIE","getTargetInstForInputEventIE","shouldUseClickEvent","getTargetInstForClickEvent","handleControlledInputBlur","controlled","doesChangeEventBubble","isInputEventSupported","ChangeEventPlugin","getTargetInstFunc","handleEventFunc","targetNode","oldChild","newChild","DefaultEventPluginOrder","mouseEnter","mouseLeave","EnterLeaveEventPlugin","win","related","toNode","_root","_startText","_fallbackText","startValue","startLength","endValue","endLength","minEnd","sliceTail","HTMLDOMPropertyConfig","accept","acceptCharset","accessKey","allowFullScreen","allowTransparency","alt","as","async","autoComplete","autoPlay","cellPadding","cellSpacing","charSet","challenge","cite","classID","className","colSpan","contextMenu","crossOrigin","dateTime","defer","download","draggable","encType","form","formAction","formEncType","formMethod","formNoValidate","formTarget","frameBorder","headers","href","hrefLang","htmlFor","httpEquiv","icon","inputMode","integrity","keyParams","keyType","kind","label","lang","manifest","marginHeight","marginWidth","maxLength","media","mediaGroup","minLength","muted","nonce","noValidate","open","optimum","pattern","placeholder","playsInline","poster","preload","profile","radioGroup","referrerPolicy","rel","required","role","rowSpan","sandbox","scoped","scrolling","seamless","sizes","spellCheck","srcDoc","srcLang","srcSet","summary","tabIndex","useMap","wmode","about","datatype","inlist","property","resource","typeof","vocab","autoCapitalize","autoCorrect","autoSave","itemProp","itemScope","itemType","itemID","itemRef","security","unselectable","validity","badInput","instantiateChild","childInstances","selfDebugID","keyUnique","ReactChildReconciler","instantiateChildren","nestedChildNodes","updateChildren","prevChildren","nextChildren","mountImages","removedNodes","prevChild","nextChildInstance","nextChildMountImage","unmountChildren","renderedChildren","renderedChild","ReactDOMIDOperations","ReactComponentBrowserEnvironment","dangerouslyProcessChildrenUpdates","StatelessComponent","warnIfInvalidElement","shouldConstruct","isPureComponent","isPureReactComponent","CompositeTypes","ImpureClass","PureClass","StatelessFunctional","nextMountID","_compositeType","_calledComponentWillUnmount","renderedElement","publicProps","publicContext","_processContext","updateQueue","getUpdateQueue","doConstruct","_constructComponent","initialState","unstable_handleError","performInitialMountWithErrorHandling","performInitialMount","componentDidMount","_constructComponentWithoutOwner","_processPendingState","debugID","componentWillMount","_renderValidatedComponent","componentWillUnmount","_maskContext","contextTypes","maskedContext","contextName","currentContext","childContext","getChildContext","childContextTypes","_checkContextTypes","prevContext","updateComponent","prevParentElement","nextParentElement","prevUnmaskedContext","nextUnmaskedContext","willReceive","prevProps","nextProps","componentWillReceiveProps","nextState","shouldUpdate","shouldComponentUpdate","_performComponentUpdate","partial","unmaskedContext","hasComponentDidUpdate","componentDidUpdate","componentWillUpdate","_updateRenderedComponent","prevComponentInstance","prevRenderedElement","nextRenderedElement","oldHostNode","nextMarkup","_replaceNodeWithMarkup","prevInstance","_renderValidatedComponentWithoutOwnerOrContext","attachRef","publicComponentInstance","detachRef","ReactDefaultInjection","findDOMNode","inject","ReactDOM","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","__REACT_DEVTOOLS_GLOBAL_HOOK__","Mount","Reconciler","assertValidProps","voidElementTags","_tag","dangerouslySetInnerHTML","HTML","enqueuePutListener","ReactServerRenderingTransaction","containerInfo","isDocumentFragment","_node","DOC_FRAGMENT_TYPE","_ownerDocument","listenerToPut","inputPostMount","ReactDOMInput","postMountWrapper","textareaPostMount","ReactDOMTextarea","optionPostMount","ReactDOMOption","trapBubbledEventsLocal","getNode","mediaEvents","postUpdateSelectWrapper","validateDangerousTag","validatedTagCache","VALID_TAG_REGEX","isCustomComponent","ReactDOMComponent","_namespaceURI","_previousStyle","_previousStyleCopy","ReactMultiChild","CONTENT_TYPES","STYLE","suppressContentEditableWarning","omittedCloseTags","br","embed","img","keygen","meta","track","wbr","newlineEatingTags","listing","pre","textarea","menuitem","globalIdCounter","Mixin","_idCounter","parentTag","mountImage","div","createElementNS","_updateDOMProperties","lazyTree","_createInitialChildren","tagOpen","_createOpenTagMarkupAndPutListeners","tagContent","_createContentMarkup","autoFocus","propKey","renderToStaticMarkup","__html","contentToUse","childrenToUse","mountChildren","lastProps","_updateDOMChildren","updateWrapper","styleUpdates","lastStyle","nextProp","lastProp","lastContent","nextContent","lastHtml","nextHtml","lastChildren","lastHasContentOrHtml","nextHasContentOrHtml","updateTextContent","updateMarkup","topLevelWrapper","ReactDOMEmptyComponent","domID","createComment","useFiber","forceUpdateIfMounted","isControlled","usesChecked","rootNode","queryRoot","group","querySelectorAll","otherNode","otherInstance","hostProps","defaultChecked","initialChecked","valueAsNumber","flattenChildren","didWarnInvalidOptionChildren","selectValue","selectParent","isCollapsed","anchorNode","anchorOffset","focusOffset","getIEOffsets","selectedRange","selectedLength","fromStart","moveToElementText","setEndPoint","startOffset","endOffset","getModernOffsets","rangeCount","currentRange","getRangeAt","startContainer","endContainer","isSelectionCollapsed","rangeLength","tempRange","cloneRange","selectNodeContents","setEnd","isTempRangeCollapsed","detectionRange","setStart","isBackward","collapsed","setIEOffsets","setModernOffsets","startMarker","getNodeForCharacterOffset","endMarker","removeAllRanges","addRange","useIEOffsets","ReactDOMTextComponent","_stringText","_closingComment","_commentNodes","openingValue","closingValue","createDocumentFragment","escapedText","nextText","nextStringText","commentNodes","hostNode","instA","instB","depthA","tempA","depthB","tempB","common","pathFrom","pathTo","ReactDefaultBatchingStrategyTransaction","RESET_BATCHED_UPDATES","ReactDefaultBatchingStrategy","FLUSH_BATCHED_UPDATES","alreadyBatchingUpdates","alreadyInjected","ReactInjection","EventEmitter","ReactDOMTreeTraversal","SimpleEventPlugin","SelectEventPlugin","HostComponent","SVGDOMPropertyConfig","EmptyComponent","Updates","runEventQueueInBatch","findParent","TopLevelCallbackBookKeeping","ancestors","handleTopLevelImpl","bookKeeping","ancestor","_handleTopLevel","scrollValueMonitor","twoArgumentPooler","_enabled","dispatchEvent","adler32","TAG_END","COMMENT_START","addChecksumToMarkup","existingChecksum","markupChecksum","makeInsertMarkup","toIndex","fromIndex","makeMove","makeRemove","makeSetMarkup","makeTextContent","processQueue","_reconcilerInstantiateChildren","nestedChildren","_reconcilerUpdateChildren","nextNestedChildrenElements","_updateChildren","nextIndex","nextMountIndex","lastPlacedNode","_mountChildAtIndex","_unmountChild","createChild","isValidOwner","ReactOwner","addComponentAsRefTo","removeComponentAsRefFrom","ownerPublicInstance","reactMountReady","SELECTION_RESTORATION","EVENT_SUPPRESSION","currentlyEnabled","previouslyEnabled","ON_DOM_READY_QUEUEING","prevRef","prevOwner","nextRef","nextOwner","ReactServerUpdateQueue","noopCallbackQueue","NS","xlink","xml","ATTRS","accentHeight","accumulate","additive","alignmentBaseline","allowReorder","alphabetic","amplitude","arabicForm","ascent","attributeType","autoReverse","azimuth","baseFrequency","baseProfile","baselineShift","begin","bias","by","calcMode","capHeight","clip","clipRule","clipPathUnits","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","contentScriptType","contentStyleType","cursor","decelerate","descent","diffuseConstant","display","divisor","dominantBaseline","dur","edgeMode","elevation","enableBackground","exponent","externalResourcesRequired","fillRule","filterRes","filterUnits","floodColor","focusable","fontSizeAdjust","fontStretch","fx","fy","g1","g2","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","glyphRef","gradientTransform","gradientUnits","hanging","horizAdvX","horizOriginX","ideographic","imageRendering","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","kerning","keySplines","keyTimes","lengthAdjust","letterSpacing","lightingColor","limitingConeAngle","local","markerEnd","markerMid","markerStart","markerHeight","markerUnits","markerWidth","mask","maskContentUnits","maskUnits","mathematical","mode","numOctaves","orient","orientation","overflow","overlinePosition","overlineThickness","paintOrder","panose1","patternContentUnits","patternTransform","pointerEvents","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","refX","refY","renderingIntent","repeatCount","repeatDur","requiredExtensions","requiredFeatures","restart","shapeRendering","specularConstant","specularExponent","speed","spreadMethod","stdDeviation","stemh","stemv","stitchTiles","stopColor","strikethroughPosition","strikethroughThickness","strokeLinecap","strokeLinejoin","surfaceScale","systemLanguage","tableValues","targetX","targetY","textAnchor","textDecoration","textRendering","textLength","u2","underlinePosition","underlineThickness","unicode","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","viewTarget","visibility","widths","wordSpacing","writingMode","xHeight","xChannelSelector","xlinkActuate","xlinkArcrole","xlinkRole","xlinkShow","xlinkTitle","xlinkType","xmlBase","xmlnsXlink","xmlLang","xmlSpace","yChannelSelector","zoomAndPan","boundingTop","boundingLeft","constructSelectEvent","mouseDown","currentSelection","lastSelection","skipSelectionChangeEvent","hasListener","SyntheticAnimationEvent","SyntheticClipboardEvent","SyntheticFocusEvent","SyntheticKeyboardEvent","SyntheticDragEvent","SyntheticTouchEvent","SyntheticTransitionEvent","SyntheticWheelEvent","topLevelEventsToDispatchConfig","capitalizedEvent","onEvent","topEvent","onClickListeners","EventConstructor","AnimationEventInterface","animationName","elapsedTime","pseudoElement","ClipboardEventInterface","clipboardData","CompositionEventInterface","DragEventInterface","dataTransfer","FocusEventInterface","InputEventInterface","getEventKey","KeyboardEventInterface","repeat","locale","TouchEventInterface","touches","targetTouches","changedTouches","TransitionEventInterface","WheelEventInterface","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","MOD","isEmpty","isNonNumeric","componentOrElement","flattenSingleChildIntoContext","normalizeKey","translateToKey","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","getLeafNode","getSiblingNode","nodeStart","nodeEnd","makePrefixMap","styleProp","prefixedEventNames","vendorPrefixes","prefixMap","animationend","animationiteration","animationstart","transitionend","animation","transition","normalizeName","normalizeValue","iteratorFor","support","iterable","Headers","consumed","bodyUsed","fileReaderReady","reader","onload","onerror","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","bufferClone","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","arrayBuffer","isDataView","_bodyArrayBuffer","isArrayBufferView","rejected","decode","json","normalizeMethod","upcased","methods","Request","credentials","referrer","decodeURIComponent","parseHeaders","rawHeaders","Response","bodyInit","status","statusText","fetch","viewClasses","DataView","oldValue","thisArg","response","redirectStatuses","redirect","request","xhr","XMLHttpRequest","getAllResponseHeaders","responseURL","responseText","ontimeout","withCredentials","responseType","setRequestHeader","send","polyfill","escapeUserProvidedKey","userProvidedKeyEscapeRegex","ForEachBookKeeping","forEachFunction","forEachContext","forEachSingleChild","forEachChildren","forEachFunc","MapBookKeeping","mapResult","keyPrefix","mapFunction","mapContext","mapSingleChildIntoContext","childKey","mappedChild","mapIntoWithKeyPrefixInternal","escapedPrefix","mapChildren","forEachSingleChildDummy","countChildren","identity","validateMethodOverride","isAlreadyDefined","specPolicy","ReactClassInterface","ReactClassMixin","mixSpecIntoComponent","spec","autoBindPairs","__reactAutoBindPairs","MIXINS_KEY","RESERVED_SPEC_KEYS","mixins","isReactClassMethod","shouldAutoBind","autobind","createMergedResultFunction","createChainedFunction","mixStaticSpecIntoComponent","statics","isReserved","isInherited","mergeIntoWithNoDuplicateKeys","one","two","bindAutoBindMethod","boundMethod","bindAutoBindMethods","autoBindKey","injectedMixins","getDefaultProps","getInitialState","replaceState","newState","ReactClassComponent","methodName","injectMixin","createDOMFactory","abbr","address","article","aside","audio","bdi","bdo","big","blockquote","canvas","datalist","dd","del","details","dfn","dialog","dt","em","fieldset","figcaption","figure","footer","h1","h3","h4","h5","h6","hgroup","iframe","ins","kbd","li","main","mark","menu","meter","nav","noscript","ol","picture","progress","rp","ruby","samp","small","strong","sup","ul","var","video","defs","linearGradient","polyline","radialGradient","stop","tspan","ReactPropTypeLocationNames","_require","ComponentDummy","getNextDebugID","nextDebugID","alea","xor128","xorwow","xorshift7","xor4096","tychei","sr","__WEBPACK_AMD_DEFINE_RESULT__","define","Alea","me","mash","Mash","s0","impl","xg","prng","int32","double","quick","XorGen","strseed","bot","X","pool","math","seedrandom","entropy","shortseed","mixkey","flatten","tostring","autoseed","arc4","ARC4","chunks","startdenom","significance","is_math_call","rngname","keylen","typ","smear","stringseed","nodecrypto","randomBytes","crypto","msCrypto","getRandomValues","digits","__webpack_module_template_argument_0__","oneArgumentPooler","copyFieldsFrom","Klass","instancePool","threeArgumentPooler","a3","a4","standardReleaser","DEFAULT_POOL_SIZE","DEFAULT_POOLER","CopyConstructor","pooler","NewKlass"],"mappings":"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qBACAC,aAAA,eACAC,WAAA,EACAC,UAAA,EACAC,WAAA,cACAC,OAAA,EACAx1I,cAAA,gBACAy1I,cAAA,gBACAC,YAAA,cACAC,QAAA,EACAC,cAAA,gBACAC,YAAA,cACAC,cAAA,iBACArtH,KAAA,EACAstH,MAAA,EACAC,KAAA,EACAC,GAAA,EACAC,SAAA,WACAC,UAAA,aACAC,KAAA,EACAhmC,SAAA,YACAimC,SAAA,YACAC,cAAA,gBACAC,mBAAA,sBACAC,0BAAA,8BACAC,aAAA,gBACAC,eAAA,kBACAC,kBAAA,oBACAC,iBAAA,mBACAC,OAAA,EACAz6B,GAAA,EACAC,GAAA,EACApuH,EAAA,EACA6oJ,WAAA,EACAC,QAAA,EACAC,gBAAA,kBACAlkG,UAAA,EACAmkG,QAAA,EACAC,QAAA,EACAC,iBAAA,oBACAC,IAAA,EACA7mH,GAAA,EACAC,GAAA,EACA6mH,SAAA,WACAC,UAAA,EACAC,iBAAA,oBACAppH,IAAA,EACAqpH,SAAA,EACAC,0BAAA,4BACAnhH,KAAA,EACAysC,YAAA,eACA20E,SAAA,YACAnvH,OAAA,EACAovH,UAAA,YACAC,YAAA,cACAC,WAAA,cACA70E,aAAA,gBACA80E,UAAA,EACApyE,WAAA,cACAD,SAAA,YACAsyE,eAAA,mBACAC,YAAA,eACAzyE,UAAA,aACAC,YAAA,eACAlD,WAAA,cACAt0E,OAAA,EACA+C,KAAA,EACAknJ,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,UAAA,aACAC,2BAAA,+BACAC,yBAAA,6BACAC,SAAA,WACAC,kBAAA,oBACAC,cAAA,gBACAC,QAAA,EACAC,UAAA,cACAC,aAAA,iBACAC,YAAA,EACAC,eAAA,kBACAC,GAAA,EACAC,IAAA,EACAC,UAAA,EACAxiI,EAAA,EACAyiI,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,aAAA,eACAC,iBAAA,mBACAC,QAAA,EACA1lC,UAAA,YACA2lC,WAAA,aACAC,SAAA,WACAC,aAAA,eACAC,cAAA,iBACAC,cAAA,iBACAC,kBAAA,oBACAC,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","file":"static/js/main.11d00fbb.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/PuzzlePopsicles/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ((function(modules) {\n\t// Check all modules for deduplicated modules\n\tfor(var i in modules) {\n\t\tif(Object.prototype.hasOwnProperty.call(modules, i)) {\n\t\t\tswitch(typeof modules[i]) {\n\t\t\tcase \"function\": break;\n\t\t\tcase \"object\":\n\t\t\t\t// Module can be created from a template\n\t\t\t\tmodules[i] = (function(_m) {\n\t\t\t\t\tvar args = _m.slice(1), fn = modules[_m[0]];\n\t\t\t\t\treturn function (a,b,c) {\n\t\t\t\t\t\tfn.apply(this, [a,b,c].concat(args));\n\t\t\t\t\t};\n\t\t\t\t}(modules[i]));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t// Module is a copy of another module\n\t\t\t\tmodules[i] = modules[modules[i]];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn modules;\n}([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(182);\n\tmodule.exports = __webpack_require__(88);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Use invariant() to assert state which your program assumes to be true.\n\t *\n\t * Provide sprintf-style format (only %s is supported) and arguments\n\t * to provide information about what broke and what you were\n\t * expecting.\n\t *\n\t * The invariant message will be stripped in production, but the invariant\n\t * will remain to ensure logic does not differ in production.\n\t */\n\t\n\tvar validateFormat = function validateFormat(format) {};\n\t\n\tif (false) {\n\t  validateFormat = function validateFormat(format) {\n\t    if (format === undefined) {\n\t      throw new Error('invariant requires an error message argument');\n\t    }\n\t  };\n\t}\n\t\n\tfunction invariant(condition, format, a, b, c, d, e, f) {\n\t  validateFormat(format);\n\t\n\t  if (!condition) {\n\t    var error;\n\t    if (format === undefined) {\n\t      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n\t    } else {\n\t      var args = [a, b, c, d, e, f];\n\t      var argIndex = 0;\n\t      error = new Error(format.replace(/%s/g, function () {\n\t        return args[argIndex++];\n\t      }));\n\t      error.name = 'Invariant Violation';\n\t    }\n\t\n\t    error.framesToPop = 1; // we don't care about invariant's own frame\n\t    throw error;\n\t  }\n\t}\n\t\n\tmodule.exports = invariant;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2014-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar emptyFunction = __webpack_require__(8);\n\t\n\t/**\n\t * Similar to invariant but only logs a warning if the condition is not met.\n\t * This can be used to log issues in development environments in critical\n\t * paths. Removing the logging code for production environments will keep the\n\t * same logic and follow the same code paths.\n\t */\n\t\n\tvar warning = emptyFunction;\n\t\n\tif (false) {\n\t  (function () {\n\t    var printWarning = function printWarning(format) {\n\t      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t        args[_key - 1] = arguments[_key];\n\t      }\n\t\n\t      var argIndex = 0;\n\t      var message = 'Warning: ' + format.replace(/%s/g, function () {\n\t        return args[argIndex++];\n\t      });\n\t      if (typeof console !== 'undefined') {\n\t        console.error(message);\n\t      }\n\t      try {\n\t        // --- Welcome to debugging React ---\n\t        // This error was thrown as a convenience so that you can use this stack\n\t        // to find the callsite that caused this warning to fire.\n\t        throw new Error(message);\n\t      } catch (x) {}\n\t    };\n\t\n\t    warning = function warning(condition, format) {\n\t      if (format === undefined) {\n\t        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n\t      }\n\t\n\t      if (format.indexOf('Failed Composite propType: ') === 0) {\n\t        return; // Ignore CompositeComponent proptype check.\n\t      }\n\t\n\t      if (!condition) {\n\t        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n\t          args[_key2 - 2] = arguments[_key2];\n\t        }\n\t\n\t        printWarning.apply(undefined, [format].concat(args));\n\t      }\n\t    };\n\t  })();\n\t}\n\t\n\tmodule.exports = warning;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t'use strict';\n\t\n\t/**\n\t * WARNING: DO NOT manually require this module.\n\t * This is a replacement for `invariant(...)` used by the error code system\n\t * and will _only_ be required by the corresponding babel pass.\n\t * It always throws.\n\t */\n\t\n\tfunction reactProdInvariant(code) {\n\t  var argCount = arguments.length - 1;\n\t\n\t  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;\n\t\n\t  for (var argIdx = 0; argIdx < argCount; argIdx++) {\n\t    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);\n\t  }\n\t\n\t  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';\n\t\n\t  var error = new Error(message);\n\t  error.name = 'Invariant Violation';\n\t  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame\n\t\n\t  throw error;\n\t}\n\t\n\tmodule.exports = reactProdInvariant;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t/*\n\tobject-assign\n\t(c) Sindre Sorhus\n\t@license MIT\n\t*/\n\t\n\t'use strict';\n\t/* eslint-disable no-unused-vars */\n\tvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\tvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\t\n\tfunction toObject(val) {\n\t\tif (val === null || val === undefined) {\n\t\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t\t}\n\t\n\t\treturn Object(val);\n\t}\n\t\n\tfunction shouldUseNative() {\n\t\ttry {\n\t\t\tif (!Object.assign) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// Detect buggy property enumeration order in older V8 versions.\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\t\ttest1[5] = 'de';\n\t\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test2 = {};\n\t\t\tfor (var i = 0; i < 10; i++) {\n\t\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t\t}\n\t\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\t\treturn test2[n];\n\t\t\t});\n\t\t\tif (order2.join('') !== '0123456789') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test3 = {};\n\t\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\t\ttest3[letter] = letter;\n\t\t\t});\n\t\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t} catch (err) {\n\t\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\t\tvar from;\n\t\tvar to = toObject(target);\n\t\tvar symbols;\n\t\n\t\tfor (var s = 1; s < arguments.length; s++) {\n\t\t\tfrom = Object(arguments[s]);\n\t\n\t\t\tfor (var key in from) {\n\t\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\t\tto[key] = from[key];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (getOwnPropertySymbols) {\n\t\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn to;\n\t};\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(3);\n\t\n\tvar DOMProperty = __webpack_require__(15);\n\tvar ReactDOMComponentFlags = __webpack_require__(65);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\tvar ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;\n\tvar Flags = ReactDOMComponentFlags;\n\t\n\tvar internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);\n\t\n\t/**\n\t * Check if a given node should be cached.\n\t */\n\tfunction shouldPrecacheNode(node, nodeID) {\n\t  return node.nodeType === 1 && node.getAttribute(ATTR_NAME) === String(nodeID) || node.nodeType === 8 && node.nodeValue === ' react-text: ' + nodeID + ' ' || node.nodeType === 8 && node.nodeValue === ' react-empty: ' + nodeID + ' ';\n\t}\n\t\n\t/**\n\t * Drill down (through composites and empty components) until we get a host or\n\t * host text component.\n\t *\n\t * This is pretty polymorphic but unavoidable with the current structure we have\n\t * for `_renderedChildren`.\n\t */\n\tfunction getRenderedHostOrTextFromComponent(component) {\n\t  var rendered;\n\t  while (rendered = component._renderedComponent) {\n\t    component = rendered;\n\t  }\n\t  return component;\n\t}\n\t\n\t/**\n\t * Populate `_hostNode` on the rendered host/text component with the given\n\t * DOM node. The passed `inst` can be a composite.\n\t */\n\tfunction precacheNode(inst, node) {\n\t  var hostInst = getRenderedHostOrTextFromComponent(inst);\n\t  hostInst._hostNode = node;\n\t  node[internalInstanceKey] = hostInst;\n\t}\n\t\n\tfunction uncacheNode(inst) {\n\t  var node = inst._hostNode;\n\t  if (node) {\n\t    delete node[internalInstanceKey];\n\t    inst._hostNode = null;\n\t  }\n\t}\n\t\n\t/**\n\t * Populate `_hostNode` on each child of `inst`, assuming that the children\n\t * match up with the DOM (element) children of `node`.\n\t *\n\t * We cache entire levels at once to avoid an n^2 problem where we access the\n\t * children of a node sequentially and have to walk from the start to our target\n\t * node every time.\n\t *\n\t * Since we update `_renderedChildren` and the actual DOM at (slightly)\n\t * different times, we could race here and see a newer `_renderedChildren` than\n\t * the DOM nodes we see. To avoid this, ReactMultiChild calls\n\t * `prepareToManageChildren` before we change `_renderedChildren`, at which\n\t * time the container's child nodes are always cached (until it unmounts).\n\t */\n\tfunction precacheChildNodes(inst, node) {\n\t  if (inst._flags & Flags.hasCachedChildNodes) {\n\t    return;\n\t  }\n\t  var children = inst._renderedChildren;\n\t  var childNode = node.firstChild;\n\t  outer: for (var name in children) {\n\t    if (!children.hasOwnProperty(name)) {\n\t      continue;\n\t    }\n\t    var childInst = children[name];\n\t    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;\n\t    if (childID === 0) {\n\t      // We're currently unmounting this child in ReactMultiChild; skip it.\n\t      continue;\n\t    }\n\t    // We assume the child nodes are in the same order as the child instances.\n\t    for (; childNode !== null; childNode = childNode.nextSibling) {\n\t      if (shouldPrecacheNode(childNode, childID)) {\n\t        precacheNode(childInst, childNode);\n\t        continue outer;\n\t      }\n\t    }\n\t    // We reached the end of the DOM children without finding an ID match.\n\t     true ?  false ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;\n\t  }\n\t  inst._flags |= Flags.hasCachedChildNodes;\n\t}\n\t\n\t/**\n\t * Given a DOM node, return the closest ReactDOMComponent or\n\t * ReactDOMTextComponent instance ancestor.\n\t */\n\tfunction getClosestInstanceFromNode(node) {\n\t  if (node[internalInstanceKey]) {\n\t    return node[internalInstanceKey];\n\t  }\n\t\n\t  // Walk up the tree until we find an ancestor whose instance we have cached.\n\t  var parents = [];\n\t  while (!node[internalInstanceKey]) {\n\t    parents.push(node);\n\t    if (node.parentNode) {\n\t      node = node.parentNode;\n\t    } else {\n\t      // Top of the tree. This node must not be part of a React tree (or is\n\t      // unmounted, potentially).\n\t      return null;\n\t    }\n\t  }\n\t\n\t  var closest;\n\t  var inst;\n\t  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {\n\t    closest = inst;\n\t    if (parents.length) {\n\t      precacheChildNodes(inst, node);\n\t    }\n\t  }\n\t\n\t  return closest;\n\t}\n\t\n\t/**\n\t * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent\n\t * instance, or null if the node was not rendered by this React.\n\t */\n\tfunction getInstanceFromNode(node) {\n\t  var inst = getClosestInstanceFromNode(node);\n\t  if (inst != null && inst._hostNode === node) {\n\t    return inst;\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding\n\t * DOM node.\n\t */\n\tfunction getNodeFromInstance(inst) {\n\t  // Without this first invariant, passing a non-DOM-component triggers the next\n\t  // invariant for a missing parent, which is super confusing.\n\t  !(inst._hostNode !== undefined) ?  false ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;\n\t\n\t  if (inst._hostNode) {\n\t    return inst._hostNode;\n\t  }\n\t\n\t  // Walk up the tree until we find an ancestor whose DOM node we have cached.\n\t  var parents = [];\n\t  while (!inst._hostNode) {\n\t    parents.push(inst);\n\t    !inst._hostParent ?  false ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;\n\t    inst = inst._hostParent;\n\t  }\n\t\n\t  // Now parents contains each ancestor that does *not* have a cached native\n\t  // node, and `inst` is the deepest ancestor that does.\n\t  for (; parents.length; inst = parents.pop()) {\n\t    precacheChildNodes(inst, inst._hostNode);\n\t  }\n\t\n\t  return inst._hostNode;\n\t}\n\t\n\tvar ReactDOMComponentTree = {\n\t  getClosestInstanceFromNode: getClosestInstanceFromNode,\n\t  getInstanceFromNode: getInstanceFromNode,\n\t  getNodeFromInstance: getNodeFromInstance,\n\t  precacheChildNodes: precacheChildNodes,\n\t  precacheNode: precacheNode,\n\t  uncacheNode: uncacheNode\n\t};\n\t\n\tmodule.exports = ReactDOMComponentTree;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\t\n\t/**\n\t * Simple, lightweight module assisting with the detection and context of\n\t * Worker. Helps avoid circular dependencies and allows code to reason about\n\t * whether or not they are in a Worker, even if they never include the main\n\t * `ReactWorker` dependency.\n\t */\n\tvar ExecutionEnvironment = {\n\t\n\t  canUseDOM: canUseDOM,\n\t\n\t  canUseWorkers: typeof Worker !== 'undefined',\n\t\n\t  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n\t\n\t  canUseViewport: canUseDOM && !!window.screen,\n\t\n\t  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\t\n\t};\n\t\n\tmodule.exports = ExecutionEnvironment;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function() { throw new Error(\"define cannot be used indirect\"); };\r\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\tfunction makeEmptyFunction(arg) {\n\t  return function () {\n\t    return arg;\n\t  };\n\t}\n\t\n\t/**\n\t * This function accepts and discards inputs; it has no side effects. This is\n\t * primarily useful idiomatically for overridable function endpoints which\n\t * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n\t */\n\tvar emptyFunction = function emptyFunction() {};\n\t\n\temptyFunction.thatReturns = makeEmptyFunction;\n\temptyFunction.thatReturnsFalse = makeEmptyFunction(false);\n\temptyFunction.thatReturnsTrue = makeEmptyFunction(true);\n\temptyFunction.thatReturnsNull = makeEmptyFunction(null);\n\temptyFunction.thatReturnsThis = function () {\n\t  return this;\n\t};\n\temptyFunction.thatReturnsArgument = function (arg) {\n\t  return arg;\n\t};\n\t\n\tmodule.exports = emptyFunction;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2016-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\t// Trust the developer to only use ReactInstrumentation with a __DEV__ check\n\t\n\tvar debugTool = null;\n\t\n\tif (false) {\n\t  var ReactDebugTool = require('./ReactDebugTool');\n\t  debugTool = ReactDebugTool;\n\t}\n\t\n\tmodule.exports = { debugTool: debugTool };\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(3),\n\t    _assign = __webpack_require__(4);\n\t\n\tvar CallbackQueue = __webpack_require__(63);\n\tvar PooledClass = __webpack_require__(13);\n\tvar ReactFeatureFlags = __webpack_require__(68);\n\tvar ReactReconciler = __webpack_require__(16);\n\tvar Transaction = __webpack_require__(29);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\tvar dirtyComponents = [];\n\tvar updateBatchNumber = 0;\n\tvar asapCallbackQueue = CallbackQueue.getPooled();\n\tvar asapEnqueued = false;\n\t\n\tvar batchingStrategy = null;\n\t\n\tfunction ensureInjected() {\n\t  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ?  false ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;\n\t}\n\t\n\tvar NESTED_UPDATES = {\n\t  initialize: function () {\n\t    this.dirtyComponentsLength = dirtyComponents.length;\n\t  },\n\t  close: function () {\n\t    if (this.dirtyComponentsLength !== dirtyComponents.length) {\n\t      // Additional updates were enqueued by componentDidUpdate handlers or\n\t      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run\n\t      // these new updates so that if A's componentDidUpdate calls setState on\n\t      // B, B will update before the callback A's updater provided when calling\n\t      // setState.\n\t      dirtyComponents.splice(0, this.dirtyComponentsLength);\n\t      flushBatchedUpdates();\n\t    } else {\n\t      dirtyComponents.length = 0;\n\t    }\n\t  }\n\t};\n\t\n\tvar UPDATE_QUEUEING = {\n\t  initialize: function () {\n\t    this.callbackQueue.reset();\n\t  },\n\t  close: function () {\n\t    this.callbackQueue.notifyAll();\n\t  }\n\t};\n\t\n\tvar TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];\n\t\n\tfunction ReactUpdatesFlushTransaction() {\n\t  this.reinitializeTransaction();\n\t  this.dirtyComponentsLength = null;\n\t  this.callbackQueue = CallbackQueue.getPooled();\n\t  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(\n\t  /* useCreateElement */true);\n\t}\n\t\n\t_assign(ReactUpdatesFlushTransaction.prototype, Transaction, {\n\t  getTransactionWrappers: function () {\n\t    return TRANSACTION_WRAPPERS;\n\t  },\n\t\n\t  destructor: function () {\n\t    this.dirtyComponentsLength = null;\n\t    CallbackQueue.release(this.callbackQueue);\n\t    this.callbackQueue = null;\n\t    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);\n\t    this.reconcileTransaction = null;\n\t  },\n\t\n\t  perform: function (method, scope, a) {\n\t    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`\n\t    // with this transaction's wrappers around it.\n\t    return Transaction.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);\n\t  }\n\t});\n\t\n\tPooledClass.addPoolingTo(ReactUpdatesFlushTransaction);\n\t\n\tfunction batchedUpdates(callback, a, b, c, d, e) {\n\t  ensureInjected();\n\t  return batchingStrategy.batchedUpdates(callback, a, b, c, d, e);\n\t}\n\t\n\t/**\n\t * Array comparator for ReactComponents by mount ordering.\n\t *\n\t * @param {ReactComponent} c1 first component you're comparing\n\t * @param {ReactComponent} c2 second component you're comparing\n\t * @return {number} Return value usable by Array.prototype.sort().\n\t */\n\tfunction mountOrderComparator(c1, c2) {\n\t  return c1._mountOrder - c2._mountOrder;\n\t}\n\t\n\tfunction runBatchedUpdates(transaction) {\n\t  var len = transaction.dirtyComponentsLength;\n\t  !(len === dirtyComponents.length) ?  false ? invariant(false, 'Expected flush transaction\\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;\n\t\n\t  // Since reconciling a component higher in the owner hierarchy usually (not\n\t  // always -- see shouldComponentUpdate()) will reconcile children, reconcile\n\t  // them before their children by sorting the array.\n\t  dirtyComponents.sort(mountOrderComparator);\n\t\n\t  // Any updates enqueued while reconciling must be performed after this entire\n\t  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and\n\t  // C, B could update twice in a single batch if C's render enqueues an update\n\t  // to B (since B would have already updated, we should skip it, and the only\n\t  // way we can know to do so is by checking the batch counter).\n\t  updateBatchNumber++;\n\t\n\t  for (var i = 0; i < len; i++) {\n\t    // If a component is unmounted before pending changes apply, it will still\n\t    // be here, but we assume that it has cleared its _pendingCallbacks and\n\t    // that performUpdateIfNecessary is a noop.\n\t    var component = dirtyComponents[i];\n\t\n\t    // If performUpdateIfNecessary happens to enqueue any new updates, we\n\t    // shouldn't execute the callbacks until the next render happens, so\n\t    // stash the callbacks first\n\t    var callbacks = component._pendingCallbacks;\n\t    component._pendingCallbacks = null;\n\t\n\t    var markerName;\n\t    if (ReactFeatureFlags.logTopLevelRenders) {\n\t      var namedComponent = component;\n\t      // Duck type TopLevelWrapper. This is probably always true.\n\t      if (component._currentElement.type.isReactTopLevelWrapper) {\n\t        namedComponent = component._renderedComponent;\n\t      }\n\t      markerName = 'React update: ' + namedComponent.getName();\n\t      console.time(markerName);\n\t    }\n\t\n\t    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);\n\t\n\t    if (markerName) {\n\t      console.timeEnd(markerName);\n\t    }\n\t\n\t    if (callbacks) {\n\t      for (var j = 0; j < callbacks.length; j++) {\n\t        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tvar flushBatchedUpdates = function () {\n\t  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents\n\t  // array and perform any updates enqueued by mount-ready handlers (i.e.,\n\t  // componentDidUpdate) but we need to check here too in order to catch\n\t  // updates enqueued by setState callbacks and asap calls.\n\t  while (dirtyComponents.length || asapEnqueued) {\n\t    if (dirtyComponents.length) {\n\t      var transaction = ReactUpdatesFlushTransaction.getPooled();\n\t      transaction.perform(runBatchedUpdates, null, transaction);\n\t      ReactUpdatesFlushTransaction.release(transaction);\n\t    }\n\t\n\t    if (asapEnqueued) {\n\t      asapEnqueued = false;\n\t      var queue = asapCallbackQueue;\n\t      asapCallbackQueue = CallbackQueue.getPooled();\n\t      queue.notifyAll();\n\t      CallbackQueue.release(queue);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Mark a component as needing a rerender, adding an optional callback to a\n\t * list of functions which will be executed once the rerender occurs.\n\t */\n\tfunction enqueueUpdate(component) {\n\t  ensureInjected();\n\t\n\t  // Various parts of our code (such as ReactCompositeComponent's\n\t  // _renderValidatedComponent) assume that calls to render aren't nested;\n\t  // verify that that's the case. (This is called by each top-level update\n\t  // function, like setState, forceUpdate, etc.; creation and\n\t  // destruction of top-level components is guarded in ReactMount.)\n\t\n\t  if (!batchingStrategy.isBatchingUpdates) {\n\t    batchingStrategy.batchedUpdates(enqueueUpdate, component);\n\t    return;\n\t  }\n\t\n\t  dirtyComponents.push(component);\n\t  if (component._updateBatchNumber == null) {\n\t    component._updateBatchNumber = updateBatchNumber + 1;\n\t  }\n\t}\n\t\n\t/**\n\t * Enqueue a callback to be run at the end of the current batching cycle. Throws\n\t * if no updates are currently being performed.\n\t */\n\tfunction asap(callback, context) {\n\t  !batchingStrategy.isBatchingUpdates ?  false ? invariant(false, 'ReactUpdates.asap: Can\\'t enqueue an asap callback in a context whereupdates are not being batched.') : _prodInvariant('125') : void 0;\n\t  asapCallbackQueue.enqueue(callback, context);\n\t  asapEnqueued = true;\n\t}\n\t\n\tvar ReactUpdatesInjection = {\n\t  injectReconcileTransaction: function (ReconcileTransaction) {\n\t    !ReconcileTransaction ?  false ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;\n\t    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;\n\t  },\n\t\n\t  injectBatchingStrategy: function (_batchingStrategy) {\n\t    !_batchingStrategy ?  false ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;\n\t    !(typeof _batchingStrategy.batchedUpdates === 'function') ?  false ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;\n\t    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ?  false ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;\n\t    batchingStrategy = _batchingStrategy;\n\t  }\n\t};\n\t\n\tvar ReactUpdates = {\n\t  /**\n\t   * React references `ReactReconcileTransaction` using this property in order\n\t   * to allow dependency injection.\n\t   *\n\t   * @internal\n\t   */\n\t  ReactReconcileTransaction: null,\n\t\n\t  batchedUpdates: batchedUpdates,\n\t  enqueueUpdate: enqueueUpdate,\n\t  flushBatchedUpdates: flushBatchedUpdates,\n\t  injection: ReactUpdatesInjection,\n\t  asap: asap\n\t};\n\t\n\tmodule.exports = ReactUpdates;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(4);\n\t\n\tvar PooledClass = __webpack_require__(13);\n\t\n\tvar emptyFunction = __webpack_require__(8);\n\tvar warning = __webpack_require__(2);\n\t\n\tvar didWarnForAddedNewProperty = false;\n\tvar isProxySupported = typeof Proxy === 'function';\n\t\n\tvar shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];\n\t\n\t/**\n\t * @interface Event\n\t * @see http://www.w3.org/TR/DOM-Level-3-Events/\n\t */\n\tvar EventInterface = {\n\t  type: null,\n\t  target: null,\n\t  // currentTarget is set when dispatching; no use in copying it here\n\t  currentTarget: emptyFunction.thatReturnsNull,\n\t  eventPhase: null,\n\t  bubbles: null,\n\t  cancelable: null,\n\t  timeStamp: function (event) {\n\t    return event.timeStamp || Date.now();\n\t  },\n\t  defaultPrevented: null,\n\t  isTrusted: null\n\t};\n\t\n\t/**\n\t * Synthetic events are dispatched by event plugins, typically in response to a\n\t * top-level event delegation handler.\n\t *\n\t * These systems should generally use pooling to reduce the frequency of garbage\n\t * collection. The system should check `isPersistent` to determine whether the\n\t * event should be released into the pool after being dispatched. Users that\n\t * need a persisted event should invoke `persist`.\n\t *\n\t * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\n\t * normalizing browser quirks. Subclasses do not necessarily have to implement a\n\t * DOM interface; custom application-specific events can also subclass this.\n\t *\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {*} targetInst Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @param {DOMEventTarget} nativeEventTarget Target node.\n\t */\n\tfunction SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {\n\t  if (false) {\n\t    // these have a getter/setter for warnings\n\t    delete this.nativeEvent;\n\t    delete this.preventDefault;\n\t    delete this.stopPropagation;\n\t  }\n\t\n\t  this.dispatchConfig = dispatchConfig;\n\t  this._targetInst = targetInst;\n\t  this.nativeEvent = nativeEvent;\n\t\n\t  var Interface = this.constructor.Interface;\n\t  for (var propName in Interface) {\n\t    if (!Interface.hasOwnProperty(propName)) {\n\t      continue;\n\t    }\n\t    if (false) {\n\t      delete this[propName]; // this has a getter/setter for warnings\n\t    }\n\t    var normalize = Interface[propName];\n\t    if (normalize) {\n\t      this[propName] = normalize(nativeEvent);\n\t    } else {\n\t      if (propName === 'target') {\n\t        this.target = nativeEventTarget;\n\t      } else {\n\t        this[propName] = nativeEvent[propName];\n\t      }\n\t    }\n\t  }\n\t\n\t  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;\n\t  if (defaultPrevented) {\n\t    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n\t  } else {\n\t    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;\n\t  }\n\t  this.isPropagationStopped = emptyFunction.thatReturnsFalse;\n\t  return this;\n\t}\n\t\n\t_assign(SyntheticEvent.prototype, {\n\t\n\t  preventDefault: function () {\n\t    this.defaultPrevented = true;\n\t    var event = this.nativeEvent;\n\t    if (!event) {\n\t      return;\n\t    }\n\t\n\t    if (event.preventDefault) {\n\t      event.preventDefault();\n\t    } else if (typeof event.returnValue !== 'unknown') {\n\t      // eslint-disable-line valid-typeof\n\t      event.returnValue = false;\n\t    }\n\t    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n\t  },\n\t\n\t  stopPropagation: function () {\n\t    var event = this.nativeEvent;\n\t    if (!event) {\n\t      return;\n\t    }\n\t\n\t    if (event.stopPropagation) {\n\t      event.stopPropagation();\n\t    } else if (typeof event.cancelBubble !== 'unknown') {\n\t      // eslint-disable-line valid-typeof\n\t      // The ChangeEventPlugin registers a \"propertychange\" event for\n\t      // IE. This event does not support bubbling or cancelling, and\n\t      // any references to cancelBubble throw \"Member not found\".  A\n\t      // typeof check of \"unknown\" circumvents this issue (and is also\n\t      // IE specific).\n\t      event.cancelBubble = true;\n\t    }\n\t\n\t    this.isPropagationStopped = emptyFunction.thatReturnsTrue;\n\t  },\n\t\n\t  /**\n\t   * We release all dispatched `SyntheticEvent`s after each event loop, adding\n\t   * them back into the pool. This allows a way to hold onto a reference that\n\t   * won't be added back into the pool.\n\t   */\n\t  persist: function () {\n\t    this.isPersistent = emptyFunction.thatReturnsTrue;\n\t  },\n\t\n\t  /**\n\t   * Checks if this event should be released back into the pool.\n\t   *\n\t   * @return {boolean} True if this should not be released, false otherwise.\n\t   */\n\t  isPersistent: emptyFunction.thatReturnsFalse,\n\t\n\t  /**\n\t   * `PooledClass` looks for `destructor` on each instance it releases.\n\t   */\n\t  destructor: function () {\n\t    var Interface = this.constructor.Interface;\n\t    for (var propName in Interface) {\n\t      if (false) {\n\t        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));\n\t      } else {\n\t        this[propName] = null;\n\t      }\n\t    }\n\t    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {\n\t      this[shouldBeReleasedProperties[i]] = null;\n\t    }\n\t    if (false) {\n\t      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));\n\t      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));\n\t      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));\n\t    }\n\t  }\n\t\n\t});\n\t\n\tSyntheticEvent.Interface = EventInterface;\n\t\n\tif (false) {\n\t  if (isProxySupported) {\n\t    /*eslint-disable no-func-assign */\n\t    SyntheticEvent = new Proxy(SyntheticEvent, {\n\t      construct: function (target, args) {\n\t        return this.apply(target, Object.create(target.prototype), args);\n\t      },\n\t      apply: function (constructor, that, args) {\n\t        return new Proxy(constructor.apply(that, args), {\n\t          set: function (target, prop, value) {\n\t            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {\n\t              process.env.NODE_ENV !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), 'This synthetic event is reused for performance reasons. If you\\'re ' + 'seeing this, you\\'re adding a new property in the synthetic event object. ' + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;\n\t              didWarnForAddedNewProperty = true;\n\t            }\n\t            target[prop] = value;\n\t            return true;\n\t          }\n\t        });\n\t      }\n\t    });\n\t    /*eslint-enable no-func-assign */\n\t  }\n\t}\n\t/**\n\t * Helper to reduce boilerplate when creating subclasses.\n\t *\n\t * @param {function} Class\n\t * @param {?object} Interface\n\t */\n\tSyntheticEvent.augmentClass = function (Class, Interface) {\n\t  var Super = this;\n\t\n\t  var E = function () {};\n\t  E.prototype = Super.prototype;\n\t  var prototype = new E();\n\t\n\t  _assign(prototype, Class.prototype);\n\t  Class.prototype = prototype;\n\t  Class.prototype.constructor = Class;\n\t\n\t  Class.Interface = _assign({}, Super.Interface, Interface);\n\t  Class.augmentClass = Super.augmentClass;\n\t\n\t  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);\n\t};\n\t\n\tPooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);\n\t\n\tmodule.exports = SyntheticEvent;\n\t\n\t/**\n\t  * Helper to nullify syntheticEvent instance properties when destructing\n\t  *\n\t  * @param {object} SyntheticEvent\n\t  * @param {String} propName\n\t  * @return {object} defineProperty object\n\t  */\n\tfunction getPooledWarningPropertyDefinition(propName, getVal) {\n\t  var isFunction = typeof getVal === 'function';\n\t  return {\n\t    configurable: true,\n\t    set: set,\n\t    get: get\n\t  };\n\t\n\t  function set(val) {\n\t    var action = isFunction ? 'setting the method' : 'setting the property';\n\t    warn(action, 'This is effectively a no-op');\n\t    return val;\n\t  }\n\t\n\t  function get() {\n\t    var action = isFunction ? 'accessing the method' : 'accessing the property';\n\t    var result = isFunction ? 'This is a no-op function' : 'This is set to null';\n\t    warn(action, result);\n\t    return getVal;\n\t  }\n\t\n\t  function warn(action, result) {\n\t    var warningCondition = false;\n\t     false ? warning(warningCondition, 'This synthetic event is reused for performance reasons. If you\\'re seeing this, ' + 'you\\'re %s `%s` on a released/nullified synthetic event. %s. ' + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;\n\t  }\n\t}\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Keeps track of the current owner.\n\t *\n\t * The current owner is the component who should own any components that are\n\t * currently being constructed.\n\t */\n\tvar ReactCurrentOwner = {\n\t\n\t  /**\n\t   * @internal\n\t   * @type {ReactComponent}\n\t   */\n\t  current: null\n\t\n\t};\n\t\n\tmodule.exports = ReactCurrentOwner;\n\n/***/ },\n/* 13 */\n[206, 3],\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2015-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar DOMNamespaces = __webpack_require__(34);\n\tvar setInnerHTML = __webpack_require__(31);\n\t\n\tvar createMicrosoftUnsafeLocalFunction = __webpack_require__(42);\n\tvar setTextContent = __webpack_require__(80);\n\t\n\tvar ELEMENT_NODE_TYPE = 1;\n\tvar DOCUMENT_FRAGMENT_NODE_TYPE = 11;\n\t\n\t/**\n\t * In IE (8-11) and Edge, appending nodes with no children is dramatically\n\t * faster than appending a full subtree, so we essentially queue up the\n\t * .appendChild calls here and apply them so each node is added to its parent\n\t * before any children are added.\n\t *\n\t * In other browsers, doing so is slower or neutral compared to the other order\n\t * (in Firefox, twice as slow) so we only do this inversion in IE.\n\t *\n\t * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.\n\t */\n\tvar enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\\bEdge\\/\\d/.test(navigator.userAgent);\n\t\n\tfunction insertTreeChildren(tree) {\n\t  if (!enableLazy) {\n\t    return;\n\t  }\n\t  var node = tree.node;\n\t  var children = tree.children;\n\t  if (children.length) {\n\t    for (var i = 0; i < children.length; i++) {\n\t      insertTreeBefore(node, children[i], null);\n\t    }\n\t  } else if (tree.html != null) {\n\t    setInnerHTML(node, tree.html);\n\t  } else if (tree.text != null) {\n\t    setTextContent(node, tree.text);\n\t  }\n\t}\n\t\n\tvar insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {\n\t  // DocumentFragments aren't actually part of the DOM after insertion so\n\t  // appending children won't update the DOM. We need to ensure the fragment\n\t  // is properly populated first, breaking out of our lazy approach for just\n\t  // this level. Also, some <object> plugins (like Flash Player) will read\n\t  // <param> nodes immediately upon insertion into the DOM, so <object>\n\t  // must also be populated prior to insertion into the DOM.\n\t  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {\n\t    insertTreeChildren(tree);\n\t    parentNode.insertBefore(tree.node, referenceNode);\n\t  } else {\n\t    parentNode.insertBefore(tree.node, referenceNode);\n\t    insertTreeChildren(tree);\n\t  }\n\t});\n\t\n\tfunction replaceChildWithTree(oldNode, newTree) {\n\t  oldNode.parentNode.replaceChild(newTree.node, oldNode);\n\t  insertTreeChildren(newTree);\n\t}\n\t\n\tfunction queueChild(parentTree, childTree) {\n\t  if (enableLazy) {\n\t    parentTree.children.push(childTree);\n\t  } else {\n\t    parentTree.node.appendChild(childTree.node);\n\t  }\n\t}\n\t\n\tfunction queueHTML(tree, html) {\n\t  if (enableLazy) {\n\t    tree.html = html;\n\t  } else {\n\t    setInnerHTML(tree.node, html);\n\t  }\n\t}\n\t\n\tfunction queueText(tree, text) {\n\t  if (enableLazy) {\n\t    tree.text = text;\n\t  } else {\n\t    setTextContent(tree.node, text);\n\t  }\n\t}\n\t\n\tfunction toString() {\n\t  return this.node.nodeName;\n\t}\n\t\n\tfunction DOMLazyTree(node) {\n\t  return {\n\t    node: node,\n\t    children: [],\n\t    html: null,\n\t    text: null,\n\t    toString: toString\n\t  };\n\t}\n\t\n\tDOMLazyTree.insertTreeBefore = insertTreeBefore;\n\tDOMLazyTree.replaceChildWithTree = replaceChildWithTree;\n\tDOMLazyTree.queueChild = queueChild;\n\tDOMLazyTree.queueHTML = queueHTML;\n\tDOMLazyTree.queueText = queueText;\n\t\n\tmodule.exports = DOMLazyTree;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(3);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\tfunction checkMask(value, bitmask) {\n\t  return (value & bitmask) === bitmask;\n\t}\n\t\n\tvar DOMPropertyInjection = {\n\t  /**\n\t   * Mapping from normalized, camelcased property names to a configuration that\n\t   * specifies how the associated DOM property should be accessed or rendered.\n\t   */\n\t  MUST_USE_PROPERTY: 0x1,\n\t  HAS_BOOLEAN_VALUE: 0x4,\n\t  HAS_NUMERIC_VALUE: 0x8,\n\t  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,\n\t  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,\n\t\n\t  /**\n\t   * Inject some specialized knowledge about the DOM. This takes a config object\n\t   * with the following properties:\n\t   *\n\t   * isCustomAttribute: function that given an attribute name will return true\n\t   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*\n\t   * attributes where it's impossible to enumerate all of the possible\n\t   * attribute names,\n\t   *\n\t   * Properties: object mapping DOM property name to one of the\n\t   * DOMPropertyInjection constants or null. If your attribute isn't in here,\n\t   * it won't get written to the DOM.\n\t   *\n\t   * DOMAttributeNames: object mapping React attribute name to the DOM\n\t   * attribute name. Attribute names not specified use the **lowercase**\n\t   * normalized name.\n\t   *\n\t   * DOMAttributeNamespaces: object mapping React attribute name to the DOM\n\t   * attribute namespace URL. (Attribute names not specified use no namespace.)\n\t   *\n\t   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.\n\t   * Property names not specified use the normalized name.\n\t   *\n\t   * DOMMutationMethods: Properties that require special mutation methods. If\n\t   * `value` is undefined, the mutation method should unset the property.\n\t   *\n\t   * @param {object} domPropertyConfig the config as described above.\n\t   */\n\t  injectDOMPropertyConfig: function (domPropertyConfig) {\n\t    var Injection = DOMPropertyInjection;\n\t    var Properties = domPropertyConfig.Properties || {};\n\t    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};\n\t    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};\n\t    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};\n\t    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};\n\t\n\t    if (domPropertyConfig.isCustomAttribute) {\n\t      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);\n\t    }\n\t\n\t    for (var propName in Properties) {\n\t      !!DOMProperty.properties.hasOwnProperty(propName) ?  false ? invariant(false, 'injectDOMPropertyConfig(...): You\\'re trying to inject DOM property \\'%s\\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;\n\t\n\t      var lowerCased = propName.toLowerCase();\n\t      var propConfig = Properties[propName];\n\t\n\t      var propertyInfo = {\n\t        attributeName: lowerCased,\n\t        attributeNamespace: null,\n\t        propertyName: propName,\n\t        mutationMethod: null,\n\t\n\t        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),\n\t        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),\n\t        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),\n\t        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),\n\t        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)\n\t      };\n\t      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ?  false ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;\n\t\n\t      if (false) {\n\t        DOMProperty.getPossibleStandardName[lowerCased] = propName;\n\t      }\n\t\n\t      if (DOMAttributeNames.hasOwnProperty(propName)) {\n\t        var attributeName = DOMAttributeNames[propName];\n\t        propertyInfo.attributeName = attributeName;\n\t        if (false) {\n\t          DOMProperty.getPossibleStandardName[attributeName] = propName;\n\t        }\n\t      }\n\t\n\t      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {\n\t        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];\n\t      }\n\t\n\t      if (DOMPropertyNames.hasOwnProperty(propName)) {\n\t        propertyInfo.propertyName = DOMPropertyNames[propName];\n\t      }\n\t\n\t      if (DOMMutationMethods.hasOwnProperty(propName)) {\n\t        propertyInfo.mutationMethod = DOMMutationMethods[propName];\n\t      }\n\t\n\t      DOMProperty.properties[propName] = propertyInfo;\n\t    }\n\t  }\n\t};\n\t\n\t/* eslint-disable max-len */\n\tvar ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\n\t/* eslint-enable max-len */\n\t\n\t/**\n\t * DOMProperty exports lookup objects that can be used like functions:\n\t *\n\t *   > DOMProperty.isValid['id']\n\t *   true\n\t *   > DOMProperty.isValid['foobar']\n\t *   undefined\n\t *\n\t * Although this may be confusing, it performs better in general.\n\t *\n\t * @see http://jsperf.com/key-exists\n\t * @see http://jsperf.com/key-missing\n\t */\n\tvar DOMProperty = {\n\t\n\t  ID_ATTRIBUTE_NAME: 'data-reactid',\n\t  ROOT_ATTRIBUTE_NAME: 'data-reactroot',\n\t\n\t  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,\n\t  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040',\n\t\n\t  /**\n\t   * Map from property \"standard name\" to an object with info about how to set\n\t   * the property in the DOM. Each object contains:\n\t   *\n\t   * attributeName:\n\t   *   Used when rendering markup or with `*Attribute()`.\n\t   * attributeNamespace\n\t   * propertyName:\n\t   *   Used on DOM node instances. (This includes properties that mutate due to\n\t   *   external factors.)\n\t   * mutationMethod:\n\t   *   If non-null, used instead of the property or `setAttribute()` after\n\t   *   initial render.\n\t   * mustUseProperty:\n\t   *   Whether the property must be accessed and mutated as an object property.\n\t   * hasBooleanValue:\n\t   *   Whether the property should be removed when set to a falsey value.\n\t   * hasNumericValue:\n\t   *   Whether the property must be numeric or parse as a numeric and should be\n\t   *   removed when set to a falsey value.\n\t   * hasPositiveNumericValue:\n\t   *   Whether the property must be positive numeric or parse as a positive\n\t   *   numeric and should be removed when set to a falsey value.\n\t   * hasOverloadedBooleanValue:\n\t   *   Whether the property can be used as a flag as well as with a value.\n\t   *   Removed when strictly equal to false; present without a value when\n\t   *   strictly equal to true; present with a value otherwise.\n\t   */\n\t  properties: {},\n\t\n\t  /**\n\t   * Mapping from lowercase property names to the properly cased version, used\n\t   * to warn in the case of missing properties. Available only in __DEV__.\n\t   *\n\t   * autofocus is predefined, because adding it to the property whitelist\n\t   * causes unintended side effects.\n\t   *\n\t   * @type {Object}\n\t   */\n\t  getPossibleStandardName:  false ? { autofocus: 'autoFocus' } : null,\n\t\n\t  /**\n\t   * All of the isCustomAttribute() functions that have been injected.\n\t   */\n\t  _isCustomAttributeFunctions: [],\n\t\n\t  /**\n\t   * Checks whether a property name is a custom attribute.\n\t   * @method\n\t   */\n\t  isCustomAttribute: function (attributeName) {\n\t    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {\n\t      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];\n\t      if (isCustomAttributeFn(attributeName)) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  },\n\t\n\t  injection: DOMPropertyInjection\n\t};\n\t\n\tmodule.exports = DOMProperty;\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactRef = __webpack_require__(155);\n\tvar ReactInstrumentation = __webpack_require__(9);\n\t\n\tvar warning = __webpack_require__(2);\n\t\n\t/**\n\t * Helper to call ReactRef.attachRefs with this composite component, split out\n\t * to avoid allocations in the transaction mount-ready queue.\n\t */\n\tfunction attachRefs() {\n\t  ReactRef.attachRefs(this, this._currentElement);\n\t}\n\t\n\tvar ReactReconciler = {\n\t\n\t  /**\n\t   * Initializes the component, renders markup, and registers event listeners.\n\t   *\n\t   * @param {ReactComponent} internalInstance\n\t   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n\t   * @param {?object} the containing host component instance\n\t   * @param {?object} info about the host container\n\t   * @return {?string} Rendered markup to be inserted into the DOM.\n\t   * @final\n\t   * @internal\n\t   */\n\t  mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID // 0 in production and for roots\n\t  ) {\n\t    if (false) {\n\t      if (internalInstance._debugID !== 0) {\n\t        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);\n\t      }\n\t    }\n\t    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);\n\t    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {\n\t      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\n\t    }\n\t    if (false) {\n\t      if (internalInstance._debugID !== 0) {\n\t        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);\n\t      }\n\t    }\n\t    return markup;\n\t  },\n\t\n\t  /**\n\t   * Returns a value that can be passed to\n\t   * ReactComponentEnvironment.replaceNodeWithMarkup.\n\t   */\n\t  getHostNode: function (internalInstance) {\n\t    return internalInstance.getHostNode();\n\t  },\n\t\n\t  /**\n\t   * Releases any resources allocated by `mountComponent`.\n\t   *\n\t   * @final\n\t   * @internal\n\t   */\n\t  unmountComponent: function (internalInstance, safely) {\n\t    if (false) {\n\t      if (internalInstance._debugID !== 0) {\n\t        ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);\n\t      }\n\t    }\n\t    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);\n\t    internalInstance.unmountComponent(safely);\n\t    if (false) {\n\t      if (internalInstance._debugID !== 0) {\n\t        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Update a component using a new element.\n\t   *\n\t   * @param {ReactComponent} internalInstance\n\t   * @param {ReactElement} nextElement\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @param {object} context\n\t   * @internal\n\t   */\n\t  receiveComponent: function (internalInstance, nextElement, transaction, context) {\n\t    var prevElement = internalInstance._currentElement;\n\t\n\t    if (nextElement === prevElement && context === internalInstance._context) {\n\t      // Since elements are immutable after the owner is rendered,\n\t      // we can do a cheap identity compare here to determine if this is a\n\t      // superfluous reconcile. It's possible for state to be mutable but such\n\t      // change should trigger an update of the owner which would recreate\n\t      // the element. We explicitly check for the existence of an owner since\n\t      // it's possible for an element created outside a composite to be\n\t      // deeply mutated and reused.\n\t\n\t      // TODO: Bailing out early is just a perf optimization right?\n\t      // TODO: Removing the return statement should affect correctness?\n\t      return;\n\t    }\n\t\n\t    if (false) {\n\t      if (internalInstance._debugID !== 0) {\n\t        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);\n\t      }\n\t    }\n\t\n\t    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);\n\t\n\t    if (refsChanged) {\n\t      ReactRef.detachRefs(internalInstance, prevElement);\n\t    }\n\t\n\t    internalInstance.receiveComponent(nextElement, transaction, context);\n\t\n\t    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {\n\t      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\n\t    }\n\t\n\t    if (false) {\n\t      if (internalInstance._debugID !== 0) {\n\t        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Flush any dirty changes in a component.\n\t   *\n\t   * @param {ReactComponent} internalInstance\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @internal\n\t   */\n\t  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {\n\t    if (internalInstance._updateBatchNumber !== updateBatchNumber) {\n\t      // The component's enqueued batch number should always be the current\n\t      // batch or the following one.\n\t       false ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;\n\t      return;\n\t    }\n\t    if (false) {\n\t      if (internalInstance._debugID !== 0) {\n\t        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);\n\t      }\n\t    }\n\t    internalInstance.performUpdateIfNecessary(transaction);\n\t    if (false) {\n\t      if (internalInstance._debugID !== 0) {\n\t        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);\n\t      }\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactReconciler;\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(4);\n\t\n\tvar ReactChildren = __webpack_require__(186);\n\tvar ReactComponent = __webpack_require__(49);\n\tvar ReactPureComponent = __webpack_require__(191);\n\tvar ReactClass = __webpack_require__(187);\n\tvar ReactDOMFactories = __webpack_require__(188);\n\tvar ReactElement = __webpack_require__(18);\n\tvar ReactPropTypes = __webpack_require__(190);\n\tvar ReactVersion = __webpack_require__(192);\n\t\n\tvar onlyChild = __webpack_require__(195);\n\tvar warning = __webpack_require__(2);\n\t\n\tvar createElement = ReactElement.createElement;\n\tvar createFactory = ReactElement.createFactory;\n\tvar cloneElement = ReactElement.cloneElement;\n\t\n\tif (false) {\n\t  var canDefineProperty = require('./canDefineProperty');\n\t  var ReactElementValidator = require('./ReactElementValidator');\n\t  var didWarnPropTypesDeprecated = false;\n\t  createElement = ReactElementValidator.createElement;\n\t  createFactory = ReactElementValidator.createFactory;\n\t  cloneElement = ReactElementValidator.cloneElement;\n\t}\n\t\n\tvar __spread = _assign;\n\t\n\tif (false) {\n\t  var warned = false;\n\t  __spread = function () {\n\t    process.env.NODE_ENV !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;\n\t    warned = true;\n\t    return _assign.apply(null, arguments);\n\t  };\n\t}\n\t\n\tvar React = {\n\t\n\t  // Modern\n\t\n\t  Children: {\n\t    map: ReactChildren.map,\n\t    forEach: ReactChildren.forEach,\n\t    count: ReactChildren.count,\n\t    toArray: ReactChildren.toArray,\n\t    only: onlyChild\n\t  },\n\t\n\t  Component: ReactComponent,\n\t  PureComponent: ReactPureComponent,\n\t\n\t  createElement: createElement,\n\t  cloneElement: cloneElement,\n\t  isValidElement: ReactElement.isValidElement,\n\t\n\t  // Classic\n\t\n\t  PropTypes: ReactPropTypes,\n\t  createClass: ReactClass.createClass,\n\t  createFactory: createFactory,\n\t  createMixin: function (mixin) {\n\t    // Currently a noop. Will be used to validate and trace mixins.\n\t    return mixin;\n\t  },\n\t\n\t  // This looks DOM specific but these are actually isomorphic helpers\n\t  // since they are just generating DOM strings.\n\t  DOM: ReactDOMFactories,\n\t\n\t  version: ReactVersion,\n\t\n\t  // Deprecated hook for JSX spread, don't use this for anything.\n\t  __spread: __spread\n\t};\n\t\n\t// TODO: Fix tests so that this deprecation warning doesn't cause failures.\n\tif (false) {\n\t  if (canDefineProperty) {\n\t    Object.defineProperty(React, 'PropTypes', {\n\t      get: function () {\n\t        process.env.NODE_ENV !== 'production' ? warning(didWarnPropTypesDeprecated, 'Accessing PropTypes via the main React package is deprecated. Use ' + 'the prop-types package from npm instead.') : void 0;\n\t        didWarnPropTypesDeprecated = true;\n\t        return ReactPropTypes;\n\t      }\n\t    });\n\t  }\n\t}\n\t\n\tmodule.exports = React;\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2014-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(4);\n\t\n\tvar ReactCurrentOwner = __webpack_require__(12);\n\t\n\tvar warning = __webpack_require__(2);\n\tvar canDefineProperty = __webpack_require__(84);\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t\n\tvar REACT_ELEMENT_TYPE = __webpack_require__(83);\n\t\n\tvar RESERVED_PROPS = {\n\t  key: true,\n\t  ref: true,\n\t  __self: true,\n\t  __source: true\n\t};\n\t\n\tvar specialPropKeyWarningShown, specialPropRefWarningShown;\n\t\n\tfunction hasValidRef(config) {\n\t  if (false) {\n\t    if (hasOwnProperty.call(config, 'ref')) {\n\t      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\t      if (getter && getter.isReactWarning) {\n\t        return false;\n\t      }\n\t    }\n\t  }\n\t  return config.ref !== undefined;\n\t}\n\t\n\tfunction hasValidKey(config) {\n\t  if (false) {\n\t    if (hasOwnProperty.call(config, 'key')) {\n\t      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\t      if (getter && getter.isReactWarning) {\n\t        return false;\n\t      }\n\t    }\n\t  }\n\t  return config.key !== undefined;\n\t}\n\t\n\tfunction defineKeyPropWarningGetter(props, displayName) {\n\t  var warnAboutAccessingKey = function () {\n\t    if (!specialPropKeyWarningShown) {\n\t      specialPropKeyWarningShown = true;\n\t       false ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;\n\t    }\n\t  };\n\t  warnAboutAccessingKey.isReactWarning = true;\n\t  Object.defineProperty(props, 'key', {\n\t    get: warnAboutAccessingKey,\n\t    configurable: true\n\t  });\n\t}\n\t\n\tfunction defineRefPropWarningGetter(props, displayName) {\n\t  var warnAboutAccessingRef = function () {\n\t    if (!specialPropRefWarningShown) {\n\t      specialPropRefWarningShown = true;\n\t       false ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;\n\t    }\n\t  };\n\t  warnAboutAccessingRef.isReactWarning = true;\n\t  Object.defineProperty(props, 'ref', {\n\t    get: warnAboutAccessingRef,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Factory method to create a new React element. This no longer adheres to\n\t * the class pattern, so do not use new to call it. Also, no instanceof check\n\t * will work. Instead test $$typeof field against Symbol.for('react.element') to check\n\t * if something is a React Element.\n\t *\n\t * @param {*} type\n\t * @param {*} key\n\t * @param {string|object} ref\n\t * @param {*} self A *temporary* helper to detect places where `this` is\n\t * different from the `owner` when React.createElement is called, so that we\n\t * can warn. We want to get rid of owner and replace string `ref`s with arrow\n\t * functions, and as long as `this` and owner are the same, there will be no\n\t * change in behavior.\n\t * @param {*} source An annotation object (added by a transpiler or otherwise)\n\t * indicating filename, line number, and/or other information.\n\t * @param {*} owner\n\t * @param {*} props\n\t * @internal\n\t */\n\tvar ReactElement = function (type, key, ref, self, source, owner, props) {\n\t  var element = {\n\t    // This tag allow us to uniquely identify this as a React Element\n\t    $$typeof: REACT_ELEMENT_TYPE,\n\t\n\t    // Built-in properties that belong on the element\n\t    type: type,\n\t    key: key,\n\t    ref: ref,\n\t    props: props,\n\t\n\t    // Record the component responsible for creating this element.\n\t    _owner: owner\n\t  };\n\t\n\t  if (false) {\n\t    // The validation flag is currently mutative. We put it on\n\t    // an external backing store so that we can freeze the whole object.\n\t    // This can be replaced with a WeakMap once they are implemented in\n\t    // commonly used development environments.\n\t    element._store = {};\n\t\n\t    // To make comparing ReactElements easier for testing purposes, we make\n\t    // the validation flag non-enumerable (where possible, which should\n\t    // include every environment we run tests in), so the test framework\n\t    // ignores it.\n\t    if (canDefineProperty) {\n\t      Object.defineProperty(element._store, 'validated', {\n\t        configurable: false,\n\t        enumerable: false,\n\t        writable: true,\n\t        value: false\n\t      });\n\t      // self and source are DEV only properties.\n\t      Object.defineProperty(element, '_self', {\n\t        configurable: false,\n\t        enumerable: false,\n\t        writable: false,\n\t        value: self\n\t      });\n\t      // Two elements created in two different places should be considered\n\t      // equal for testing purposes and therefore we hide it from enumeration.\n\t      Object.defineProperty(element, '_source', {\n\t        configurable: false,\n\t        enumerable: false,\n\t        writable: false,\n\t        value: source\n\t      });\n\t    } else {\n\t      element._store.validated = false;\n\t      element._self = self;\n\t      element._source = source;\n\t    }\n\t    if (Object.freeze) {\n\t      Object.freeze(element.props);\n\t      Object.freeze(element);\n\t    }\n\t  }\n\t\n\t  return element;\n\t};\n\t\n\t/**\n\t * Create and return a new ReactElement of the given type.\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement\n\t */\n\tReactElement.createElement = function (type, config, children) {\n\t  var propName;\n\t\n\t  // Reserved names are extracted\n\t  var props = {};\n\t\n\t  var key = null;\n\t  var ref = null;\n\t  var self = null;\n\t  var source = null;\n\t\n\t  if (config != null) {\n\t    if (hasValidRef(config)) {\n\t      ref = config.ref;\n\t    }\n\t    if (hasValidKey(config)) {\n\t      key = '' + config.key;\n\t    }\n\t\n\t    self = config.__self === undefined ? null : config.__self;\n\t    source = config.__source === undefined ? null : config.__source;\n\t    // Remaining properties are added to a new props object\n\t    for (propName in config) {\n\t      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n\t        props[propName] = config[propName];\n\t      }\n\t    }\n\t  }\n\t\n\t  // Children can be more than one argument, and those are transferred onto\n\t  // the newly allocated props object.\n\t  var childrenLength = arguments.length - 2;\n\t  if (childrenLength === 1) {\n\t    props.children = children;\n\t  } else if (childrenLength > 1) {\n\t    var childArray = Array(childrenLength);\n\t    for (var i = 0; i < childrenLength; i++) {\n\t      childArray[i] = arguments[i + 2];\n\t    }\n\t    if (false) {\n\t      if (Object.freeze) {\n\t        Object.freeze(childArray);\n\t      }\n\t    }\n\t    props.children = childArray;\n\t  }\n\t\n\t  // Resolve default props\n\t  if (type && type.defaultProps) {\n\t    var defaultProps = type.defaultProps;\n\t    for (propName in defaultProps) {\n\t      if (props[propName] === undefined) {\n\t        props[propName] = defaultProps[propName];\n\t      }\n\t    }\n\t  }\n\t  if (false) {\n\t    if (key || ref) {\n\t      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {\n\t        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\t        if (key) {\n\t          defineKeyPropWarningGetter(props, displayName);\n\t        }\n\t        if (ref) {\n\t          defineRefPropWarningGetter(props, displayName);\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n\t};\n\t\n\t/**\n\t * Return a function that produces ReactElements of a given type.\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory\n\t */\n\tReactElement.createFactory = function (type) {\n\t  var factory = ReactElement.createElement.bind(null, type);\n\t  // Expose the type on the factory and the prototype so that it can be\n\t  // easily accessed on elements. E.g. `<Foo />.type === Foo`.\n\t  // This should not be named `constructor` since this may not be the function\n\t  // that created the element, and it may not even be a constructor.\n\t  // Legacy hook TODO: Warn if this is accessed\n\t  factory.type = type;\n\t  return factory;\n\t};\n\t\n\tReactElement.cloneAndReplaceKey = function (oldElement, newKey) {\n\t  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n\t\n\t  return newElement;\n\t};\n\t\n\t/**\n\t * Clone and return a new ReactElement using element as the starting point.\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement\n\t */\n\tReactElement.cloneElement = function (element, config, children) {\n\t  var propName;\n\t\n\t  // Original props are copied\n\t  var props = _assign({}, element.props);\n\t\n\t  // Reserved names are extracted\n\t  var key = element.key;\n\t  var ref = element.ref;\n\t  // Self is preserved since the owner is preserved.\n\t  var self = element._self;\n\t  // Source is preserved since cloneElement is unlikely to be targeted by a\n\t  // transpiler, and the original source is probably a better indicator of the\n\t  // true owner.\n\t  var source = element._source;\n\t\n\t  // Owner will be preserved, unless ref is overridden\n\t  var owner = element._owner;\n\t\n\t  if (config != null) {\n\t    if (hasValidRef(config)) {\n\t      // Silently steal the ref from the parent.\n\t      ref = config.ref;\n\t      owner = ReactCurrentOwner.current;\n\t    }\n\t    if (hasValidKey(config)) {\n\t      key = '' + config.key;\n\t    }\n\t\n\t    // Remaining properties override existing props\n\t    var defaultProps;\n\t    if (element.type && element.type.defaultProps) {\n\t      defaultProps = element.type.defaultProps;\n\t    }\n\t    for (propName in config) {\n\t      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n\t        if (config[propName] === undefined && defaultProps !== undefined) {\n\t          // Resolve default props\n\t          props[propName] = defaultProps[propName];\n\t        } else {\n\t          props[propName] = config[propName];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  // Children can be more than one argument, and those are transferred onto\n\t  // the newly allocated props object.\n\t  var childrenLength = arguments.length - 2;\n\t  if (childrenLength === 1) {\n\t    props.children = children;\n\t  } else if (childrenLength > 1) {\n\t    var childArray = Array(childrenLength);\n\t    for (var i = 0; i < childrenLength; i++) {\n\t      childArray[i] = arguments[i + 2];\n\t    }\n\t    props.children = childArray;\n\t  }\n\t\n\t  return ReactElement(element.type, key, ref, self, source, owner, props);\n\t};\n\t\n\t/**\n\t * Verifies the object is a ReactElement.\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement\n\t * @param {?object} object\n\t * @return {boolean} True if `object` is a valid component.\n\t * @final\n\t */\n\tReactElement.isValidElement = function (object) {\n\t  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n\t};\n\t\n\tmodule.exports = ReactElement;\n\n/***/ },\n/* 19 */\n3,\n/* 20 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {module.exports = __webpack_amd_options__;\r\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, {}))\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar emptyObject = {};\n\t\n\tif (false) {\n\t  Object.freeze(emptyObject);\n\t}\n\t\n\tmodule.exports = emptyObject;\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(3);\n\t\n\tvar EventPluginRegistry = __webpack_require__(35);\n\tvar EventPluginUtils = __webpack_require__(36);\n\tvar ReactErrorUtils = __webpack_require__(40);\n\t\n\tvar accumulateInto = __webpack_require__(74);\n\tvar forEachAccumulated = __webpack_require__(75);\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Internal store for event listeners\n\t */\n\tvar listenerBank = {};\n\t\n\t/**\n\t * Internal queue of events that have accumulated their dispatches and are\n\t * waiting to have their dispatches executed.\n\t */\n\tvar eventQueue = null;\n\t\n\t/**\n\t * Dispatches an event and releases it back into the pool, unless persistent.\n\t *\n\t * @param {?object} event Synthetic event to be dispatched.\n\t * @param {boolean} simulated If the event is simulated (changes exn behavior)\n\t * @private\n\t */\n\tvar executeDispatchesAndRelease = function (event, simulated) {\n\t  if (event) {\n\t    EventPluginUtils.executeDispatchesInOrder(event, simulated);\n\t\n\t    if (!event.isPersistent()) {\n\t      event.constructor.release(event);\n\t    }\n\t  }\n\t};\n\tvar executeDispatchesAndReleaseSimulated = function (e) {\n\t  return executeDispatchesAndRelease(e, true);\n\t};\n\tvar executeDispatchesAndReleaseTopLevel = function (e) {\n\t  return executeDispatchesAndRelease(e, false);\n\t};\n\t\n\tvar getDictionaryKey = function (inst) {\n\t  // Prevents V8 performance issue:\n\t  // https://github.com/facebook/react/pull/7232\n\t  return '.' + inst._rootNodeID;\n\t};\n\t\n\tfunction isInteractive(tag) {\n\t  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';\n\t}\n\t\n\tfunction shouldPreventMouseEvent(name, type, props) {\n\t  switch (name) {\n\t    case 'onClick':\n\t    case 'onClickCapture':\n\t    case 'onDoubleClick':\n\t    case 'onDoubleClickCapture':\n\t    case 'onMouseDown':\n\t    case 'onMouseDownCapture':\n\t    case 'onMouseMove':\n\t    case 'onMouseMoveCapture':\n\t    case 'onMouseUp':\n\t    case 'onMouseUpCapture':\n\t      return !!(props.disabled && isInteractive(type));\n\t    default:\n\t      return false;\n\t  }\n\t}\n\t\n\t/**\n\t * This is a unified interface for event plugins to be installed and configured.\n\t *\n\t * Event plugins can implement the following properties:\n\t *\n\t *   `extractEvents` {function(string, DOMEventTarget, string, object): *}\n\t *     Required. When a top-level event is fired, this method is expected to\n\t *     extract synthetic events that will in turn be queued and dispatched.\n\t *\n\t *   `eventTypes` {object}\n\t *     Optional, plugins that fire events must publish a mapping of registration\n\t *     names that are used to register listeners. Values of this mapping must\n\t *     be objects that contain `registrationName` or `phasedRegistrationNames`.\n\t *\n\t *   `executeDispatch` {function(object, function, string)}\n\t *     Optional, allows plugins to override how an event gets dispatched. By\n\t *     default, the listener is simply invoked.\n\t *\n\t * Each plugin that is injected into `EventsPluginHub` is immediately operable.\n\t *\n\t * @public\n\t */\n\tvar EventPluginHub = {\n\t\n\t  /**\n\t   * Methods for injecting dependencies.\n\t   */\n\t  injection: {\n\t\n\t    /**\n\t     * @param {array} InjectedEventPluginOrder\n\t     * @public\n\t     */\n\t    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,\n\t\n\t    /**\n\t     * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n\t     */\n\t    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName\n\t\n\t  },\n\t\n\t  /**\n\t   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.\n\t   *\n\t   * @param {object} inst The instance, which is the source of events.\n\t   * @param {string} registrationName Name of listener (e.g. `onClick`).\n\t   * @param {function} listener The callback to store.\n\t   */\n\t  putListener: function (inst, registrationName, listener) {\n\t    !(typeof listener === 'function') ?  false ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;\n\t\n\t    var key = getDictionaryKey(inst);\n\t    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});\n\t    bankForRegistrationName[key] = listener;\n\t\n\t    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n\t    if (PluginModule && PluginModule.didPutListener) {\n\t      PluginModule.didPutListener(inst, registrationName, listener);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @param {object} inst The instance, which is the source of events.\n\t   * @param {string} registrationName Name of listener (e.g. `onClick`).\n\t   * @return {?function} The stored callback.\n\t   */\n\t  getListener: function (inst, registrationName) {\n\t    // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not\n\t    // live here; needs to be moved to a better place soon\n\t    var bankForRegistrationName = listenerBank[registrationName];\n\t    if (shouldPreventMouseEvent(registrationName, inst._currentElement.type, inst._currentElement.props)) {\n\t      return null;\n\t    }\n\t    var key = getDictionaryKey(inst);\n\t    return bankForRegistrationName && bankForRegistrationName[key];\n\t  },\n\t\n\t  /**\n\t   * Deletes a listener from the registration bank.\n\t   *\n\t   * @param {object} inst The instance, which is the source of events.\n\t   * @param {string} registrationName Name of listener (e.g. `onClick`).\n\t   */\n\t  deleteListener: function (inst, registrationName) {\n\t    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n\t    if (PluginModule && PluginModule.willDeleteListener) {\n\t      PluginModule.willDeleteListener(inst, registrationName);\n\t    }\n\t\n\t    var bankForRegistrationName = listenerBank[registrationName];\n\t    // TODO: This should never be null -- when is it?\n\t    if (bankForRegistrationName) {\n\t      var key = getDictionaryKey(inst);\n\t      delete bankForRegistrationName[key];\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Deletes all listeners for the DOM element with the supplied ID.\n\t   *\n\t   * @param {object} inst The instance, which is the source of events.\n\t   */\n\t  deleteAllListeners: function (inst) {\n\t    var key = getDictionaryKey(inst);\n\t    for (var registrationName in listenerBank) {\n\t      if (!listenerBank.hasOwnProperty(registrationName)) {\n\t        continue;\n\t      }\n\t\n\t      if (!listenerBank[registrationName][key]) {\n\t        continue;\n\t      }\n\t\n\t      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n\t      if (PluginModule && PluginModule.willDeleteListener) {\n\t        PluginModule.willDeleteListener(inst, registrationName);\n\t      }\n\t\n\t      delete listenerBank[registrationName][key];\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Allows registered plugins an opportunity to extract events from top-level\n\t   * native browser events.\n\t   *\n\t   * @return {*} An accumulation of synthetic events.\n\t   * @internal\n\t   */\n\t  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n\t    var events;\n\t    var plugins = EventPluginRegistry.plugins;\n\t    for (var i = 0; i < plugins.length; i++) {\n\t      // Not every plugin in the ordering may be loaded at runtime.\n\t      var possiblePlugin = plugins[i];\n\t      if (possiblePlugin) {\n\t        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);\n\t        if (extractedEvents) {\n\t          events = accumulateInto(events, extractedEvents);\n\t        }\n\t      }\n\t    }\n\t    return events;\n\t  },\n\t\n\t  /**\n\t   * Enqueues a synthetic event that should be dispatched when\n\t   * `processEventQueue` is invoked.\n\t   *\n\t   * @param {*} events An accumulation of synthetic events.\n\t   * @internal\n\t   */\n\t  enqueueEvents: function (events) {\n\t    if (events) {\n\t      eventQueue = accumulateInto(eventQueue, events);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Dispatches all synthetic events on the event queue.\n\t   *\n\t   * @internal\n\t   */\n\t  processEventQueue: function (simulated) {\n\t    // Set `eventQueue` to null before processing it so that we can tell if more\n\t    // events get enqueued while processing.\n\t    var processingEventQueue = eventQueue;\n\t    eventQueue = null;\n\t    if (simulated) {\n\t      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);\n\t    } else {\n\t      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);\n\t    }\n\t    !!eventQueue ?  false ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;\n\t    // This would be a good time to rethrow if any of the event handlers threw.\n\t    ReactErrorUtils.rethrowCaughtError();\n\t  },\n\t\n\t  /**\n\t   * These are needed for tests only. Do not use!\n\t   */\n\t  __purge: function () {\n\t    listenerBank = {};\n\t  },\n\t\n\t  __getListenerBank: function () {\n\t    return listenerBank;\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = EventPluginHub;\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar EventPluginHub = __webpack_require__(23);\n\tvar EventPluginUtils = __webpack_require__(36);\n\t\n\tvar accumulateInto = __webpack_require__(74);\n\tvar forEachAccumulated = __webpack_require__(75);\n\tvar warning = __webpack_require__(2);\n\t\n\tvar getListener = EventPluginHub.getListener;\n\t\n\t/**\n\t * Some event types have a notion of different registration names for different\n\t * \"phases\" of propagation. This finds listeners by a given phase.\n\t */\n\tfunction listenerAtPhase(inst, event, propagationPhase) {\n\t  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];\n\t  return getListener(inst, registrationName);\n\t}\n\t\n\t/**\n\t * Tags a `SyntheticEvent` with dispatched listeners. Creating this function\n\t * here, allows us to not have to bind or create functions for each event.\n\t * Mutating the event's members allows us to not have to create a wrapping\n\t * \"dispatch\" object that pairs the event with the listener.\n\t */\n\tfunction accumulateDirectionalDispatches(inst, phase, event) {\n\t  if (false) {\n\t    process.env.NODE_ENV !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;\n\t  }\n\t  var listener = listenerAtPhase(inst, event, phase);\n\t  if (listener) {\n\t    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\n\t    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n\t  }\n\t}\n\t\n\t/**\n\t * Collect dispatches (must be entirely collected before dispatching - see unit\n\t * tests). Lazily allocate the array to conserve memory.  We must loop through\n\t * each event and perform the traversal for each one. We cannot perform a\n\t * single traversal for the entire collection of events because each event may\n\t * have a different target.\n\t */\n\tfunction accumulateTwoPhaseDispatchesSingle(event) {\n\t  if (event && event.dispatchConfig.phasedRegistrationNames) {\n\t    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);\n\t  }\n\t}\n\t\n\t/**\n\t * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.\n\t */\n\tfunction accumulateTwoPhaseDispatchesSingleSkipTarget(event) {\n\t  if (event && event.dispatchConfig.phasedRegistrationNames) {\n\t    var targetInst = event._targetInst;\n\t    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;\n\t    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);\n\t  }\n\t}\n\t\n\t/**\n\t * Accumulates without regard to direction, does not look for phased\n\t * registration names. Same as `accumulateDirectDispatchesSingle` but without\n\t * requiring that the `dispatchMarker` be the same as the dispatched ID.\n\t */\n\tfunction accumulateDispatches(inst, ignoredDirection, event) {\n\t  if (event && event.dispatchConfig.registrationName) {\n\t    var registrationName = event.dispatchConfig.registrationName;\n\t    var listener = getListener(inst, registrationName);\n\t    if (listener) {\n\t      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\n\t      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Accumulates dispatches on an `SyntheticEvent`, but only for the\n\t * `dispatchMarker`.\n\t * @param {SyntheticEvent} event\n\t */\n\tfunction accumulateDirectDispatchesSingle(event) {\n\t  if (event && event.dispatchConfig.registrationName) {\n\t    accumulateDispatches(event._targetInst, null, event);\n\t  }\n\t}\n\t\n\tfunction accumulateTwoPhaseDispatches(events) {\n\t  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);\n\t}\n\t\n\tfunction accumulateTwoPhaseDispatchesSkipTarget(events) {\n\t  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);\n\t}\n\t\n\tfunction accumulateEnterLeaveDispatches(leave, enter, from, to) {\n\t  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);\n\t}\n\t\n\tfunction accumulateDirectDispatches(events) {\n\t  forEachAccumulated(events, accumulateDirectDispatchesSingle);\n\t}\n\t\n\t/**\n\t * A small set of propagation patterns, each of which will accept a small amount\n\t * of information, and generate a set of \"dispatch ready event objects\" - which\n\t * are sets of events that have already been annotated with a set of dispatched\n\t * listener functions/ids. The API is designed this way to discourage these\n\t * propagation strategies from actually executing the dispatches, since we\n\t * always want to collect the entire set of dispatches before executing event a\n\t * single one.\n\t *\n\t * @constructor EventPropagators\n\t */\n\tvar EventPropagators = {\n\t  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,\n\t  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,\n\t  accumulateDirectDispatches: accumulateDirectDispatches,\n\t  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches\n\t};\n\t\n\tmodule.exports = EventPropagators;\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * `ReactInstanceMap` maintains a mapping from a public facing stateful\n\t * instance (key) and the internal representation (value). This allows public\n\t * methods to accept the user facing instance as an argument and map them back\n\t * to internal methods.\n\t */\n\t\n\t// TODO: Replace this with ES6: var ReactInstanceMap = new Map();\n\t\n\tvar ReactInstanceMap = {\n\t\n\t  /**\n\t   * This API should be called `delete` but we'd have to make sure to always\n\t   * transform these to strings for IE support. When this transform is fully\n\t   * supported we can rename it.\n\t   */\n\t  remove: function (key) {\n\t    key._reactInternalInstance = undefined;\n\t  },\n\t\n\t  get: function (key) {\n\t    return key._reactInternalInstance;\n\t  },\n\t\n\t  has: function (key) {\n\t    return key._reactInternalInstance !== undefined;\n\t  },\n\t\n\t  set: function (key, value) {\n\t    key._reactInternalInstance = value;\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactInstanceMap;\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticEvent = __webpack_require__(11);\n\t\n\tvar getEventTarget = __webpack_require__(45);\n\t\n\t/**\n\t * @interface UIEvent\n\t * @see http://www.w3.org/TR/DOM-Level-3-Events/\n\t */\n\tvar UIEventInterface = {\n\t  view: function (event) {\n\t    if (event.view) {\n\t      return event.view;\n\t    }\n\t\n\t    var target = getEventTarget(event);\n\t    if (target.window === target) {\n\t      // target is a window object\n\t      return target;\n\t    }\n\t\n\t    var doc = target.ownerDocument;\n\t    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n\t    if (doc) {\n\t      return doc.defaultView || doc.parentWindow;\n\t    } else {\n\t      return window;\n\t    }\n\t  },\n\t  detail: function (event) {\n\t    return event.detail || 0;\n\t  }\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticEvent}\n\t */\n\tfunction SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);\n\t\n\tmodule.exports = SyntheticUIEvent;\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(4);\n\t\n\tvar EventPluginRegistry = __webpack_require__(35);\n\tvar ReactEventEmitterMixin = __webpack_require__(147);\n\tvar ViewportMetrics = __webpack_require__(73);\n\t\n\tvar getVendorPrefixedEventName = __webpack_require__(179);\n\tvar isEventSupported = __webpack_require__(46);\n\t\n\t/**\n\t * Summary of `ReactBrowserEventEmitter` event handling:\n\t *\n\t *  - Top-level delegation is used to trap most native browser events. This\n\t *    may only occur in the main thread and is the responsibility of\n\t *    ReactEventListener, which is injected and can therefore support pluggable\n\t *    event sources. This is the only work that occurs in the main thread.\n\t *\n\t *  - We normalize and de-duplicate events to account for browser quirks. This\n\t *    may be done in the worker thread.\n\t *\n\t *  - Forward these native events (with the associated top-level type used to\n\t *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want\n\t *    to extract any synthetic events.\n\t *\n\t *  - The `EventPluginHub` will then process each event by annotating them with\n\t *    \"dispatches\", a sequence of listeners and IDs that care about that event.\n\t *\n\t *  - The `EventPluginHub` then dispatches the events.\n\t *\n\t * Overview of React and the event system:\n\t *\n\t * +------------+    .\n\t * |    DOM     |    .\n\t * +------------+    .\n\t *       |           .\n\t *       v           .\n\t * +------------+    .\n\t * | ReactEvent |    .\n\t * |  Listener  |    .\n\t * +------------+    .                         +-----------+\n\t *       |           .               +--------+|SimpleEvent|\n\t *       |           .               |         |Plugin     |\n\t * +-----|------+    .               v         +-----------+\n\t * |     |      |    .    +--------------+                    +------------+\n\t * |     +-----------.--->|EventPluginHub|                    |    Event   |\n\t * |            |    .    |              |     +-----------+  | Propagators|\n\t * | ReactEvent |    .    |              |     |TapEvent   |  |------------|\n\t * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|\n\t * |            |    .    |              |     +-----------+  |  utilities |\n\t * |     +-----------.--->|              |                    +------------+\n\t * |     |      |    .    +--------------+\n\t * +-----|------+    .                ^        +-----------+\n\t *       |           .                |        |Enter/Leave|\n\t *       +           .                +-------+|Plugin     |\n\t * +-------------+   .                         +-----------+\n\t * | application |   .\n\t * |-------------|   .\n\t * |             |   .\n\t * |             |   .\n\t * +-------------+   .\n\t *                   .\n\t *    React Core     .  General Purpose Event Plugin System\n\t */\n\t\n\tvar hasEventPageXY;\n\tvar alreadyListeningTo = {};\n\tvar isMonitoringScrollValue = false;\n\tvar reactTopListenersCounter = 0;\n\t\n\t// For events like 'submit' which don't consistently bubble (which we trap at a\n\t// lower node than `document`), binding at `document` would cause duplicate\n\t// events so we don't include them here\n\tvar topEventMapping = {\n\t  topAbort: 'abort',\n\t  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',\n\t  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',\n\t  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',\n\t  topBlur: 'blur',\n\t  topCanPlay: 'canplay',\n\t  topCanPlayThrough: 'canplaythrough',\n\t  topChange: 'change',\n\t  topClick: 'click',\n\t  topCompositionEnd: 'compositionend',\n\t  topCompositionStart: 'compositionstart',\n\t  topCompositionUpdate: 'compositionupdate',\n\t  topContextMenu: 'contextmenu',\n\t  topCopy: 'copy',\n\t  topCut: 'cut',\n\t  topDoubleClick: 'dblclick',\n\t  topDrag: 'drag',\n\t  topDragEnd: 'dragend',\n\t  topDragEnter: 'dragenter',\n\t  topDragExit: 'dragexit',\n\t  topDragLeave: 'dragleave',\n\t  topDragOver: 'dragover',\n\t  topDragStart: 'dragstart',\n\t  topDrop: 'drop',\n\t  topDurationChange: 'durationchange',\n\t  topEmptied: 'emptied',\n\t  topEncrypted: 'encrypted',\n\t  topEnded: 'ended',\n\t  topError: 'error',\n\t  topFocus: 'focus',\n\t  topInput: 'input',\n\t  topKeyDown: 'keydown',\n\t  topKeyPress: 'keypress',\n\t  topKeyUp: 'keyup',\n\t  topLoadedData: 'loadeddata',\n\t  topLoadedMetadata: 'loadedmetadata',\n\t  topLoadStart: 'loadstart',\n\t  topMouseDown: 'mousedown',\n\t  topMouseMove: 'mousemove',\n\t  topMouseOut: 'mouseout',\n\t  topMouseOver: 'mouseover',\n\t  topMouseUp: 'mouseup',\n\t  topPaste: 'paste',\n\t  topPause: 'pause',\n\t  topPlay: 'play',\n\t  topPlaying: 'playing',\n\t  topProgress: 'progress',\n\t  topRateChange: 'ratechange',\n\t  topScroll: 'scroll',\n\t  topSeeked: 'seeked',\n\t  topSeeking: 'seeking',\n\t  topSelectionChange: 'selectionchange',\n\t  topStalled: 'stalled',\n\t  topSuspend: 'suspend',\n\t  topTextInput: 'textInput',\n\t  topTimeUpdate: 'timeupdate',\n\t  topTouchCancel: 'touchcancel',\n\t  topTouchEnd: 'touchend',\n\t  topTouchMove: 'touchmove',\n\t  topTouchStart: 'touchstart',\n\t  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',\n\t  topVolumeChange: 'volumechange',\n\t  topWaiting: 'waiting',\n\t  topWheel: 'wheel'\n\t};\n\t\n\t/**\n\t * To ensure no conflicts with other potential React instances on the page\n\t */\n\tvar topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);\n\t\n\tfunction getListeningForDocument(mountAt) {\n\t  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`\n\t  // directly.\n\t  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {\n\t    mountAt[topListenersIDKey] = reactTopListenersCounter++;\n\t    alreadyListeningTo[mountAt[topListenersIDKey]] = {};\n\t  }\n\t  return alreadyListeningTo[mountAt[topListenersIDKey]];\n\t}\n\t\n\t/**\n\t * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For\n\t * example:\n\t *\n\t *   EventPluginHub.putListener('myID', 'onClick', myFunction);\n\t *\n\t * This would allocate a \"registration\" of `('onClick', myFunction)` on 'myID'.\n\t *\n\t * @internal\n\t */\n\tvar ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {\n\t\n\t  /**\n\t   * Injectable event backend\n\t   */\n\t  ReactEventListener: null,\n\t\n\t  injection: {\n\t    /**\n\t     * @param {object} ReactEventListener\n\t     */\n\t    injectReactEventListener: function (ReactEventListener) {\n\t      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);\n\t      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Sets whether or not any created callbacks should be enabled.\n\t   *\n\t   * @param {boolean} enabled True if callbacks should be enabled.\n\t   */\n\t  setEnabled: function (enabled) {\n\t    if (ReactBrowserEventEmitter.ReactEventListener) {\n\t      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @return {boolean} True if callbacks are enabled.\n\t   */\n\t  isEnabled: function () {\n\t    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());\n\t  },\n\t\n\t  /**\n\t   * We listen for bubbled touch events on the document object.\n\t   *\n\t   * Firefox v8.01 (and possibly others) exhibited strange behavior when\n\t   * mounting `onmousemove` events at some node that was not the document\n\t   * element. The symptoms were that if your mouse is not moving over something\n\t   * contained within that mount point (for example on the background) the\n\t   * top-level listeners for `onmousemove` won't be called. However, if you\n\t   * register the `mousemove` on the document object, then it will of course\n\t   * catch all `mousemove`s. This along with iOS quirks, justifies restricting\n\t   * top-level listeners to the document object only, at least for these\n\t   * movement types of events and possibly all events.\n\t   *\n\t   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n\t   *\n\t   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but\n\t   * they bubble to document.\n\t   *\n\t   * @param {string} registrationName Name of listener (e.g. `onClick`).\n\t   * @param {object} contentDocumentHandle Document which owns the container\n\t   */\n\t  listenTo: function (registrationName, contentDocumentHandle) {\n\t    var mountAt = contentDocumentHandle;\n\t    var isListening = getListeningForDocument(mountAt);\n\t    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];\n\t\n\t    for (var i = 0; i < dependencies.length; i++) {\n\t      var dependency = dependencies[i];\n\t      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {\n\t        if (dependency === 'topWheel') {\n\t          if (isEventSupported('wheel')) {\n\t            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'wheel', mountAt);\n\t          } else if (isEventSupported('mousewheel')) {\n\t            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'mousewheel', mountAt);\n\t          } else {\n\t            // Firefox needs to capture a different mouse scroll event.\n\t            // @see http://www.quirksmode.org/dom/events/tests/scroll.html\n\t            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'DOMMouseScroll', mountAt);\n\t          }\n\t        } else if (dependency === 'topScroll') {\n\t\n\t          if (isEventSupported('scroll', true)) {\n\t            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topScroll', 'scroll', mountAt);\n\t          } else {\n\t            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topScroll', 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);\n\t          }\n\t        } else if (dependency === 'topFocus' || dependency === 'topBlur') {\n\t\n\t          if (isEventSupported('focus', true)) {\n\t            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topFocus', 'focus', mountAt);\n\t            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topBlur', 'blur', mountAt);\n\t          } else if (isEventSupported('focusin')) {\n\t            // IE has `focusin` and `focusout` events which bubble.\n\t            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html\n\t            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topFocus', 'focusin', mountAt);\n\t            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topBlur', 'focusout', mountAt);\n\t          }\n\t\n\t          // to make sure blur and focus event listeners are only attached once\n\t          isListening.topBlur = true;\n\t          isListening.topFocus = true;\n\t        } else if (topEventMapping.hasOwnProperty(dependency)) {\n\t          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);\n\t        }\n\t\n\t        isListening[dependency] = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {\n\t    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);\n\t  },\n\t\n\t  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {\n\t    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);\n\t  },\n\t\n\t  /**\n\t   * Protect against document.createEvent() returning null\n\t   * Some popup blocker extensions appear to do this:\n\t   * https://github.com/facebook/react/issues/6887\n\t   */\n\t  supportsEventPageXY: function () {\n\t    if (!document.createEvent) {\n\t      return false;\n\t    }\n\t    var ev = document.createEvent('MouseEvent');\n\t    return ev != null && 'pageX' in ev;\n\t  },\n\t\n\t  /**\n\t   * Listens to window scroll and resize events. We cache scroll values so that\n\t   * application code can access them without triggering reflows.\n\t   *\n\t   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when\n\t   * pageX/pageY isn't supported (legacy browsers).\n\t   *\n\t   * NOTE: Scroll events do not bubble.\n\t   *\n\t   * @see http://www.quirksmode.org/dom/events/scroll.html\n\t   */\n\t  ensureScrollValueMonitoring: function () {\n\t    if (hasEventPageXY === undefined) {\n\t      hasEventPageXY = ReactBrowserEventEmitter.supportsEventPageXY();\n\t    }\n\t    if (!hasEventPageXY && !isMonitoringScrollValue) {\n\t      var refresh = ViewportMetrics.refreshScrollValues;\n\t      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);\n\t      isMonitoringScrollValue = true;\n\t    }\n\t  }\n\t\n\t});\n\t\n\tmodule.exports = ReactBrowserEventEmitter;\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticUIEvent = __webpack_require__(26);\n\tvar ViewportMetrics = __webpack_require__(73);\n\t\n\tvar getEventModifierState = __webpack_require__(44);\n\t\n\t/**\n\t * @interface MouseEvent\n\t * @see http://www.w3.org/TR/DOM-Level-3-Events/\n\t */\n\tvar MouseEventInterface = {\n\t  screenX: null,\n\t  screenY: null,\n\t  clientX: null,\n\t  clientY: null,\n\t  ctrlKey: null,\n\t  shiftKey: null,\n\t  altKey: null,\n\t  metaKey: null,\n\t  getModifierState: getEventModifierState,\n\t  button: function (event) {\n\t    // Webkit, Firefox, IE9+\n\t    // which:  1 2 3\n\t    // button: 0 1 2 (standard)\n\t    var button = event.button;\n\t    if ('which' in event) {\n\t      return button;\n\t    }\n\t    // IE<9\n\t    // which:  undefined\n\t    // button: 0 0 0\n\t    // button: 1 4 2 (onmouseup)\n\t    return button === 2 ? 2 : button === 4 ? 1 : 0;\n\t  },\n\t  buttons: null,\n\t  relatedTarget: function (event) {\n\t    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);\n\t  },\n\t  // \"Proprietary\" Interface.\n\t  pageX: function (event) {\n\t    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;\n\t  },\n\t  pageY: function (event) {\n\t    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;\n\t  }\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticUIEvent}\n\t */\n\tfunction SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);\n\t\n\tmodule.exports = SyntheticMouseEvent;\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(3);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\tvar OBSERVED_ERROR = {};\n\t\n\t/**\n\t * `Transaction` creates a black box that is able to wrap any method such that\n\t * certain invariants are maintained before and after the method is invoked\n\t * (Even if an exception is thrown while invoking the wrapped method). Whoever\n\t * instantiates a transaction can provide enforcers of the invariants at\n\t * creation time. The `Transaction` class itself will supply one additional\n\t * automatic invariant for you - the invariant that any transaction instance\n\t * should not be run while it is already being run. You would typically create a\n\t * single instance of a `Transaction` for reuse multiple times, that potentially\n\t * is used to wrap several different methods. Wrappers are extremely simple -\n\t * they only require implementing two methods.\n\t *\n\t * <pre>\n\t *                       wrappers (injected at creation time)\n\t *                                      +        +\n\t *                                      |        |\n\t *                    +-----------------|--------|--------------+\n\t *                    |                 v        |              |\n\t *                    |      +---------------+   |              |\n\t *                    |   +--|    wrapper1   |---|----+         |\n\t *                    |   |  +---------------+   v    |         |\n\t *                    |   |          +-------------+  |         |\n\t *                    |   |     +----|   wrapper2  |--------+   |\n\t *                    |   |     |    +-------------+  |     |   |\n\t *                    |   |     |                     |     |   |\n\t *                    |   v     v                     v     v   | wrapper\n\t *                    | +---+ +---+   +---------+   +---+ +---+ | invariants\n\t * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained\n\t * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->\n\t *                    | |   | |   |   |         |   |   | |   | |\n\t *                    | |   | |   |   |         |   |   | |   | |\n\t *                    | |   | |   |   |         |   |   | |   | |\n\t *                    | +---+ +---+   +---------+   +---+ +---+ |\n\t *                    |  initialize                    close    |\n\t *                    +-----------------------------------------+\n\t * </pre>\n\t *\n\t * Use cases:\n\t * - Preserving the input selection ranges before/after reconciliation.\n\t *   Restoring selection even in the event of an unexpected error.\n\t * - Deactivating events while rearranging the DOM, preventing blurs/focuses,\n\t *   while guaranteeing that afterwards, the event system is reactivated.\n\t * - Flushing a queue of collected DOM mutations to the main UI thread after a\n\t *   reconciliation takes place in a worker thread.\n\t * - Invoking any collected `componentDidUpdate` callbacks after rendering new\n\t *   content.\n\t * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue\n\t *   to preserve the `scrollTop` (an automatic scroll aware DOM).\n\t * - (Future use case): Layout calculations before and after DOM updates.\n\t *\n\t * Transactional plugin API:\n\t * - A module that has an `initialize` method that returns any precomputation.\n\t * - and a `close` method that accepts the precomputation. `close` is invoked\n\t *   when the wrapped process is completed, or has failed.\n\t *\n\t * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules\n\t * that implement `initialize` and `close`.\n\t * @return {Transaction} Single transaction for reuse in thread.\n\t *\n\t * @class Transaction\n\t */\n\tvar TransactionImpl = {\n\t  /**\n\t   * Sets up this instance so that it is prepared for collecting metrics. Does\n\t   * so such that this setup method may be used on an instance that is already\n\t   * initialized, in a way that does not consume additional memory upon reuse.\n\t   * That can be useful if you decide to make your subclass of this mixin a\n\t   * \"PooledClass\".\n\t   */\n\t  reinitializeTransaction: function () {\n\t    this.transactionWrappers = this.getTransactionWrappers();\n\t    if (this.wrapperInitData) {\n\t      this.wrapperInitData.length = 0;\n\t    } else {\n\t      this.wrapperInitData = [];\n\t    }\n\t    this._isInTransaction = false;\n\t  },\n\t\n\t  _isInTransaction: false,\n\t\n\t  /**\n\t   * @abstract\n\t   * @return {Array<TransactionWrapper>} Array of transaction wrappers.\n\t   */\n\t  getTransactionWrappers: null,\n\t\n\t  isInTransaction: function () {\n\t    return !!this._isInTransaction;\n\t  },\n\t\n\t  /**\n\t   * Executes the function within a safety window. Use this for the top level\n\t   * methods that result in large amounts of computation/mutations that would\n\t   * need to be safety checked. The optional arguments helps prevent the need\n\t   * to bind in many cases.\n\t   *\n\t   * @param {function} method Member of scope to call.\n\t   * @param {Object} scope Scope to invoke from.\n\t   * @param {Object?=} a Argument to pass to the method.\n\t   * @param {Object?=} b Argument to pass to the method.\n\t   * @param {Object?=} c Argument to pass to the method.\n\t   * @param {Object?=} d Argument to pass to the method.\n\t   * @param {Object?=} e Argument to pass to the method.\n\t   * @param {Object?=} f Argument to pass to the method.\n\t   *\n\t   * @return {*} Return value from `method`.\n\t   */\n\t  perform: function (method, scope, a, b, c, d, e, f) {\n\t    !!this.isInTransaction() ?  false ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;\n\t    var errorThrown;\n\t    var ret;\n\t    try {\n\t      this._isInTransaction = true;\n\t      // Catching errors makes debugging more difficult, so we start with\n\t      // errorThrown set to true before setting it to false after calling\n\t      // close -- if it's still set to true in the finally block, it means\n\t      // one of these calls threw.\n\t      errorThrown = true;\n\t      this.initializeAll(0);\n\t      ret = method.call(scope, a, b, c, d, e, f);\n\t      errorThrown = false;\n\t    } finally {\n\t      try {\n\t        if (errorThrown) {\n\t          // If `method` throws, prefer to show that stack trace over any thrown\n\t          // by invoking `closeAll`.\n\t          try {\n\t            this.closeAll(0);\n\t          } catch (err) {}\n\t        } else {\n\t          // Since `method` didn't throw, we don't want to silence the exception\n\t          // here.\n\t          this.closeAll(0);\n\t        }\n\t      } finally {\n\t        this._isInTransaction = false;\n\t      }\n\t    }\n\t    return ret;\n\t  },\n\t\n\t  initializeAll: function (startIndex) {\n\t    var transactionWrappers = this.transactionWrappers;\n\t    for (var i = startIndex; i < transactionWrappers.length; i++) {\n\t      var wrapper = transactionWrappers[i];\n\t      try {\n\t        // Catching errors makes debugging more difficult, so we start with the\n\t        // OBSERVED_ERROR state before overwriting it with the real return value\n\t        // of initialize -- if it's still set to OBSERVED_ERROR in the finally\n\t        // block, it means wrapper.initialize threw.\n\t        this.wrapperInitData[i] = OBSERVED_ERROR;\n\t        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;\n\t      } finally {\n\t        if (this.wrapperInitData[i] === OBSERVED_ERROR) {\n\t          // The initializer for wrapper i threw an error; initialize the\n\t          // remaining wrappers but silence any exceptions from them to ensure\n\t          // that the first error is the one to bubble up.\n\t          try {\n\t            this.initializeAll(i + 1);\n\t          } catch (err) {}\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into\n\t   * them the respective return values of `this.transactionWrappers.init[i]`\n\t   * (`close`rs that correspond to initializers that failed will not be\n\t   * invoked).\n\t   */\n\t  closeAll: function (startIndex) {\n\t    !this.isInTransaction() ?  false ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;\n\t    var transactionWrappers = this.transactionWrappers;\n\t    for (var i = startIndex; i < transactionWrappers.length; i++) {\n\t      var wrapper = transactionWrappers[i];\n\t      var initData = this.wrapperInitData[i];\n\t      var errorThrown;\n\t      try {\n\t        // Catching errors makes debugging more difficult, so we start with\n\t        // errorThrown set to true before setting it to false after calling\n\t        // close -- if it's still set to true in the finally block, it means\n\t        // wrapper.close threw.\n\t        errorThrown = true;\n\t        if (initData !== OBSERVED_ERROR && wrapper.close) {\n\t          wrapper.close.call(this, initData);\n\t        }\n\t        errorThrown = false;\n\t      } finally {\n\t        if (errorThrown) {\n\t          // The closer for wrapper i threw an error; close the remaining\n\t          // wrappers but silence any exceptions from them to ensure that the\n\t          // first error is the one to bubble up.\n\t          try {\n\t            this.closeAll(i + 1);\n\t          } catch (e) {}\n\t        }\n\t      }\n\t    }\n\t    this.wrapperInitData.length = 0;\n\t  }\n\t};\n\t\n\tmodule.exports = TransactionImpl;\n\n/***/ },\n/* 30 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2016-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * Based on the escape-html library, which is used under the MIT License below:\n\t *\n\t * Copyright (c) 2012-2013 TJ Holowaychuk\n\t * Copyright (c) 2015 Andreas Lubbe\n\t * Copyright (c) 2015 Tiancheng \"Timothy\" Gu\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining\n\t * a copy of this software and associated documentation files (the\n\t * 'Software'), to deal in the Software without restriction, including\n\t * without limitation the rights to use, copy, modify, merge, publish,\n\t * distribute, sublicense, and/or sell copies of the Software, and to\n\t * permit persons to whom the Software is furnished to do so, subject to\n\t * the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be\n\t * included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n\t * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n\t * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n\t * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n\t * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n\t * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\t// code copied and modified from escape-html\n\t/**\n\t * Module variables.\n\t * @private\n\t */\n\t\n\tvar matchHtmlRegExp = /[\"'&<>]/;\n\t\n\t/**\n\t * Escape special characters in the given string of html.\n\t *\n\t * @param  {string} string The string to escape for inserting into HTML\n\t * @return {string}\n\t * @public\n\t */\n\t\n\tfunction escapeHtml(string) {\n\t  var str = '' + string;\n\t  var match = matchHtmlRegExp.exec(str);\n\t\n\t  if (!match) {\n\t    return str;\n\t  }\n\t\n\t  var escape;\n\t  var html = '';\n\t  var index = 0;\n\t  var lastIndex = 0;\n\t\n\t  for (index = match.index; index < str.length; index++) {\n\t    switch (str.charCodeAt(index)) {\n\t      case 34:\n\t        // \"\n\t        escape = '&quot;';\n\t        break;\n\t      case 38:\n\t        // &\n\t        escape = '&amp;';\n\t        break;\n\t      case 39:\n\t        // '\n\t        escape = '&#x27;'; // modified from escape-html; used to be '&#39'\n\t        break;\n\t      case 60:\n\t        // <\n\t        escape = '&lt;';\n\t        break;\n\t      case 62:\n\t        // >\n\t        escape = '&gt;';\n\t        break;\n\t      default:\n\t        continue;\n\t    }\n\t\n\t    if (lastIndex !== index) {\n\t      html += str.substring(lastIndex, index);\n\t    }\n\t\n\t    lastIndex = index + 1;\n\t    html += escape;\n\t  }\n\t\n\t  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\n\t}\n\t// end code copied and modified from escape-html\n\t\n\t\n\t/**\n\t * Escapes text to prevent scripting attacks.\n\t *\n\t * @param {*} text Text value to escape.\n\t * @return {string} An escaped string.\n\t */\n\tfunction escapeTextContentForBrowser(text) {\n\t  if (typeof text === 'boolean' || typeof text === 'number') {\n\t    // this shortcircuit helps perf for types that we know will never have\n\t    // special characters, especially given that this function is used often\n\t    // for numeric dom ids.\n\t    return '' + text;\n\t  }\n\t  return escapeHtml(text);\n\t}\n\t\n\tmodule.exports = escapeTextContentForBrowser;\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\tvar DOMNamespaces = __webpack_require__(34);\n\t\n\tvar WHITESPACE_TEST = /^[ \\r\\n\\t\\f]/;\n\tvar NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \\r\\n\\t\\f\\/>]/;\n\t\n\tvar createMicrosoftUnsafeLocalFunction = __webpack_require__(42);\n\t\n\t// SVG temp container for IE lacking innerHTML\n\tvar reusableSVGContainer;\n\t\n\t/**\n\t * Set the innerHTML property of a node, ensuring that whitespace is preserved\n\t * even in IE8.\n\t *\n\t * @param {DOMElement} node\n\t * @param {string} html\n\t * @internal\n\t */\n\tvar setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {\n\t  // IE does not have innerHTML for SVG nodes, so instead we inject the\n\t  // new markup in a temp node and then move the child nodes across into\n\t  // the target node\n\t  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {\n\t    reusableSVGContainer = reusableSVGContainer || document.createElement('div');\n\t    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';\n\t    var svgNode = reusableSVGContainer.firstChild;\n\t    while (svgNode.firstChild) {\n\t      node.appendChild(svgNode.firstChild);\n\t    }\n\t  } else {\n\t    node.innerHTML = html;\n\t  }\n\t});\n\t\n\tif (ExecutionEnvironment.canUseDOM) {\n\t  // IE8: When updating a just created node with innerHTML only leading\n\t  // whitespace is removed. When updating an existing node with innerHTML\n\t  // whitespace in root TextNodes is also collapsed.\n\t  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html\n\t\n\t  // Feature detection; only IE8 is known to behave improperly like this.\n\t  var testElement = document.createElement('div');\n\t  testElement.innerHTML = ' ';\n\t  if (testElement.innerHTML === '') {\n\t    setInnerHTML = function (node, html) {\n\t      // Magic theory: IE8 supposedly differentiates between added and updated\n\t      // nodes when processing innerHTML, innerHTML on updated nodes suffers\n\t      // from worse whitespace behavior. Re-adding a node like this triggers\n\t      // the initial and more favorable whitespace behavior.\n\t      // TODO: What to do on a detached node?\n\t      if (node.parentNode) {\n\t        node.parentNode.replaceChild(node, node);\n\t      }\n\t\n\t      // We also implement a workaround for non-visible tags disappearing into\n\t      // thin air on IE8, this only happens if there is no visible text\n\t      // in-front of the non-visible tags. Piggyback on the whitespace fix\n\t      // and simply check if any non-visible tags appear in the source.\n\t      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {\n\t        // Recover leading whitespace by temporarily prepending any character.\n\t        // \\uFEFF has the potential advantage of being zero-width/invisible.\n\t        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode\n\t        // in hopes that this is preserved even if \"\\uFEFF\" is transformed to\n\t        // the actual Unicode character (by Babel, for example).\n\t        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216\n\t        node.innerHTML = String.fromCharCode(0xFEFF) + html;\n\t\n\t        // deleteData leaves an empty `TextNode` which offsets the index of all\n\t        // children. Definitely want to avoid this.\n\t        var textNode = node.firstChild;\n\t        if (textNode.data.length === 1) {\n\t          node.removeChild(textNode);\n\t        } else {\n\t          textNode.deleteData(0, 1);\n\t        }\n\t      } else {\n\t        node.innerHTML = html;\n\t      }\n\t    };\n\t  }\n\t  testElement = null;\n\t}\n\t\n\tmodule.exports = setInnerHTML;\n\n/***/ },\n/* 32 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks\n\t * \n\t */\n\t\n\t/*eslint-disable no-self-compare */\n\t\n\t'use strict';\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t\n\t/**\n\t * inlined Object.is polyfill to avoid requiring consumers ship their own\n\t * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n\t */\n\tfunction is(x, y) {\n\t  // SameValue algorithm\n\t  if (x === y) {\n\t    // Steps 1-5, 7-10\n\t    // Steps 6.b-6.e: +0 != -0\n\t    // Added the nonzero y check to make Flow happy, but it is redundant\n\t    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n\t  } else {\n\t    // Step 6.a: NaN == NaN\n\t    return x !== x && y !== y;\n\t  }\n\t}\n\t\n\t/**\n\t * Performs equality by iterating through keys on an object and returning false\n\t * when any key has values which are not strictly equal between the arguments.\n\t * Returns true when the values of all keys are strictly equal.\n\t */\n\tfunction shallowEqual(objA, objB) {\n\t  if (is(objA, objB)) {\n\t    return true;\n\t  }\n\t\n\t  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n\t    return false;\n\t  }\n\t\n\t  var keysA = Object.keys(objA);\n\t  var keysB = Object.keys(objB);\n\t\n\t  if (keysA.length !== keysB.length) {\n\t    return false;\n\t  }\n\t\n\t  // Test for A's keys different from B.\n\t  for (var i = 0; i < keysA.length; i++) {\n\t    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n\t      return false;\n\t    }\n\t  }\n\t\n\t  return true;\n\t}\n\t\n\tmodule.exports = shallowEqual;\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar DOMLazyTree = __webpack_require__(14);\n\tvar Danger = __webpack_require__(124);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar ReactInstrumentation = __webpack_require__(9);\n\t\n\tvar createMicrosoftUnsafeLocalFunction = __webpack_require__(42);\n\tvar setInnerHTML = __webpack_require__(31);\n\tvar setTextContent = __webpack_require__(80);\n\t\n\tfunction getNodeAfter(parentNode, node) {\n\t  // Special case for text components, which return [open, close] comments\n\t  // from getHostNode.\n\t  if (Array.isArray(node)) {\n\t    node = node[1];\n\t  }\n\t  return node ? node.nextSibling : parentNode.firstChild;\n\t}\n\t\n\t/**\n\t * Inserts `childNode` as a child of `parentNode` at the `index`.\n\t *\n\t * @param {DOMElement} parentNode Parent node in which to insert.\n\t * @param {DOMElement} childNode Child node to insert.\n\t * @param {number} index Index at which to insert the child.\n\t * @internal\n\t */\n\tvar insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {\n\t  // We rely exclusively on `insertBefore(node, null)` instead of also using\n\t  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so\n\t  // we are careful to use `null`.)\n\t  parentNode.insertBefore(childNode, referenceNode);\n\t});\n\t\n\tfunction insertLazyTreeChildAt(parentNode, childTree, referenceNode) {\n\t  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);\n\t}\n\t\n\tfunction moveChild(parentNode, childNode, referenceNode) {\n\t  if (Array.isArray(childNode)) {\n\t    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);\n\t  } else {\n\t    insertChildAt(parentNode, childNode, referenceNode);\n\t  }\n\t}\n\t\n\tfunction removeChild(parentNode, childNode) {\n\t  if (Array.isArray(childNode)) {\n\t    var closingComment = childNode[1];\n\t    childNode = childNode[0];\n\t    removeDelimitedText(parentNode, childNode, closingComment);\n\t    parentNode.removeChild(closingComment);\n\t  }\n\t  parentNode.removeChild(childNode);\n\t}\n\t\n\tfunction moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {\n\t  var node = openingComment;\n\t  while (true) {\n\t    var nextNode = node.nextSibling;\n\t    insertChildAt(parentNode, node, referenceNode);\n\t    if (node === closingComment) {\n\t      break;\n\t    }\n\t    node = nextNode;\n\t  }\n\t}\n\t\n\tfunction removeDelimitedText(parentNode, startNode, closingComment) {\n\t  while (true) {\n\t    var node = startNode.nextSibling;\n\t    if (node === closingComment) {\n\t      // The closing comment is removed by ReactMultiChild.\n\t      break;\n\t    } else {\n\t      parentNode.removeChild(node);\n\t    }\n\t  }\n\t}\n\t\n\tfunction replaceDelimitedText(openingComment, closingComment, stringText) {\n\t  var parentNode = openingComment.parentNode;\n\t  var nodeAfterComment = openingComment.nextSibling;\n\t  if (nodeAfterComment === closingComment) {\n\t    // There are no text nodes between the opening and closing comments; insert\n\t    // a new one if stringText isn't empty.\n\t    if (stringText) {\n\t      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);\n\t    }\n\t  } else {\n\t    if (stringText) {\n\t      // Set the text content of the first node after the opening comment, and\n\t      // remove all following nodes up until the closing comment.\n\t      setTextContent(nodeAfterComment, stringText);\n\t      removeDelimitedText(parentNode, nodeAfterComment, closingComment);\n\t    } else {\n\t      removeDelimitedText(parentNode, openingComment, closingComment);\n\t    }\n\t  }\n\t\n\t  if (false) {\n\t    ReactInstrumentation.debugTool.onHostOperation({\n\t      instanceID: ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID,\n\t      type: 'replace text',\n\t      payload: stringText\n\t    });\n\t  }\n\t}\n\t\n\tvar dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;\n\tif (false) {\n\t  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {\n\t    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);\n\t    if (prevInstance._debugID !== 0) {\n\t      ReactInstrumentation.debugTool.onHostOperation({\n\t        instanceID: prevInstance._debugID,\n\t        type: 'replace with',\n\t        payload: markup.toString()\n\t      });\n\t    } else {\n\t      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);\n\t      if (nextInstance._debugID !== 0) {\n\t        ReactInstrumentation.debugTool.onHostOperation({\n\t          instanceID: nextInstance._debugID,\n\t          type: 'mount',\n\t          payload: markup.toString()\n\t        });\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Operations for updating with DOM children.\n\t */\n\tvar DOMChildrenOperations = {\n\t\n\t  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,\n\t\n\t  replaceDelimitedText: replaceDelimitedText,\n\t\n\t  /**\n\t   * Updates a component's children by processing a series of updates. The\n\t   * update configurations are each expected to have a `parentNode` property.\n\t   *\n\t   * @param {array<object>} updates List of update configurations.\n\t   * @internal\n\t   */\n\t  processUpdates: function (parentNode, updates) {\n\t    if (false) {\n\t      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;\n\t    }\n\t\n\t    for (var k = 0; k < updates.length; k++) {\n\t      var update = updates[k];\n\t      switch (update.type) {\n\t        case 'INSERT_MARKUP':\n\t          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));\n\t          if (false) {\n\t            ReactInstrumentation.debugTool.onHostOperation({\n\t              instanceID: parentNodeDebugID,\n\t              type: 'insert child',\n\t              payload: { toIndex: update.toIndex, content: update.content.toString() }\n\t            });\n\t          }\n\t          break;\n\t        case 'MOVE_EXISTING':\n\t          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));\n\t          if (false) {\n\t            ReactInstrumentation.debugTool.onHostOperation({\n\t              instanceID: parentNodeDebugID,\n\t              type: 'move child',\n\t              payload: { fromIndex: update.fromIndex, toIndex: update.toIndex }\n\t            });\n\t          }\n\t          break;\n\t        case 'SET_MARKUP':\n\t          setInnerHTML(parentNode, update.content);\n\t          if (false) {\n\t            ReactInstrumentation.debugTool.onHostOperation({\n\t              instanceID: parentNodeDebugID,\n\t              type: 'replace children',\n\t              payload: update.content.toString()\n\t            });\n\t          }\n\t          break;\n\t        case 'TEXT_CONTENT':\n\t          setTextContent(parentNode, update.content);\n\t          if (false) {\n\t            ReactInstrumentation.debugTool.onHostOperation({\n\t              instanceID: parentNodeDebugID,\n\t              type: 'replace text',\n\t              payload: update.content.toString()\n\t            });\n\t          }\n\t          break;\n\t        case 'REMOVE_NODE':\n\t          removeChild(parentNode, update.fromNode);\n\t          if (false) {\n\t            ReactInstrumentation.debugTool.onHostOperation({\n\t              instanceID: parentNodeDebugID,\n\t              type: 'remove child',\n\t              payload: { fromIndex: update.fromIndex }\n\t            });\n\t          }\n\t          break;\n\t      }\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = DOMChildrenOperations;\n\n/***/ },\n/* 34 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar DOMNamespaces = {\n\t  html: 'http://www.w3.org/1999/xhtml',\n\t  mathml: 'http://www.w3.org/1998/Math/MathML',\n\t  svg: 'http://www.w3.org/2000/svg'\n\t};\n\t\n\tmodule.exports = DOMNamespaces;\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(3);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Injectable ordering of event plugins.\n\t */\n\tvar eventPluginOrder = null;\n\t\n\t/**\n\t * Injectable mapping from names to event plugin modules.\n\t */\n\tvar namesToPlugins = {};\n\t\n\t/**\n\t * Recomputes the plugin list using the injected plugins and plugin ordering.\n\t *\n\t * @private\n\t */\n\tfunction recomputePluginOrdering() {\n\t  if (!eventPluginOrder) {\n\t    // Wait until an `eventPluginOrder` is injected.\n\t    return;\n\t  }\n\t  for (var pluginName in namesToPlugins) {\n\t    var pluginModule = namesToPlugins[pluginName];\n\t    var pluginIndex = eventPluginOrder.indexOf(pluginName);\n\t    !(pluginIndex > -1) ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;\n\t    if (EventPluginRegistry.plugins[pluginIndex]) {\n\t      continue;\n\t    }\n\t    !pluginModule.extractEvents ?  false ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;\n\t    EventPluginRegistry.plugins[pluginIndex] = pluginModule;\n\t    var publishedEvents = pluginModule.eventTypes;\n\t    for (var eventName in publishedEvents) {\n\t      !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ?  false ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Publishes an event so that it can be dispatched by the supplied plugin.\n\t *\n\t * @param {object} dispatchConfig Dispatch configuration for the event.\n\t * @param {object} PluginModule Plugin publishing the event.\n\t * @return {boolean} True if the event was successfully published.\n\t * @private\n\t */\n\tfunction publishEventForPlugin(dispatchConfig, pluginModule, eventName) {\n\t  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ?  false ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;\n\t  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;\n\t\n\t  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;\n\t  if (phasedRegistrationNames) {\n\t    for (var phaseName in phasedRegistrationNames) {\n\t      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {\n\t        var phasedRegistrationName = phasedRegistrationNames[phaseName];\n\t        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);\n\t      }\n\t    }\n\t    return true;\n\t  } else if (dispatchConfig.registrationName) {\n\t    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);\n\t    return true;\n\t  }\n\t  return false;\n\t}\n\t\n\t/**\n\t * Publishes a registration name that is used to identify dispatched events and\n\t * can be used with `EventPluginHub.putListener` to register listeners.\n\t *\n\t * @param {string} registrationName Registration name to add.\n\t * @param {object} PluginModule Plugin publishing the event.\n\t * @private\n\t */\n\tfunction publishRegistrationName(registrationName, pluginModule, eventName) {\n\t  !!EventPluginRegistry.registrationNameModules[registrationName] ?  false ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;\n\t  EventPluginRegistry.registrationNameModules[registrationName] = pluginModule;\n\t  EventPluginRegistry.registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;\n\t\n\t  if (false) {\n\t    var lowerCasedName = registrationName.toLowerCase();\n\t    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;\n\t\n\t    if (registrationName === 'onDoubleClick') {\n\t      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Registers plugins so that they can extract and dispatch events.\n\t *\n\t * @see {EventPluginHub}\n\t */\n\tvar EventPluginRegistry = {\n\t\n\t  /**\n\t   * Ordered list of injected plugins.\n\t   */\n\t  plugins: [],\n\t\n\t  /**\n\t   * Mapping from event name to dispatch config\n\t   */\n\t  eventNameDispatchConfigs: {},\n\t\n\t  /**\n\t   * Mapping from registration name to plugin module\n\t   */\n\t  registrationNameModules: {},\n\t\n\t  /**\n\t   * Mapping from registration name to event name\n\t   */\n\t  registrationNameDependencies: {},\n\t\n\t  /**\n\t   * Mapping from lowercase registration names to the properly cased version,\n\t   * used to warn in the case of missing event handlers. Available\n\t   * only in __DEV__.\n\t   * @type {Object}\n\t   */\n\t  possibleRegistrationNames:  false ? {} : null,\n\t  // Trust the developer to only use possibleRegistrationNames in __DEV__\n\t\n\t  /**\n\t   * Injects an ordering of plugins (by plugin name). This allows the ordering\n\t   * to be decoupled from injection of the actual plugins so that ordering is\n\t   * always deterministic regardless of packaging, on-the-fly injection, etc.\n\t   *\n\t   * @param {array} InjectedEventPluginOrder\n\t   * @internal\n\t   * @see {EventPluginHub.injection.injectEventPluginOrder}\n\t   */\n\t  injectEventPluginOrder: function (injectedEventPluginOrder) {\n\t    !!eventPluginOrder ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;\n\t    // Clone the ordering so it cannot be dynamically mutated.\n\t    eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);\n\t    recomputePluginOrdering();\n\t  },\n\t\n\t  /**\n\t   * Injects plugins to be used by `EventPluginHub`. The plugin names must be\n\t   * in the ordering injected by `injectEventPluginOrder`.\n\t   *\n\t   * Plugins can be injected as part of page initialization or on-the-fly.\n\t   *\n\t   * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n\t   * @internal\n\t   * @see {EventPluginHub.injection.injectEventPluginsByName}\n\t   */\n\t  injectEventPluginsByName: function (injectedNamesToPlugins) {\n\t    var isOrderingDirty = false;\n\t    for (var pluginName in injectedNamesToPlugins) {\n\t      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {\n\t        continue;\n\t      }\n\t      var pluginModule = injectedNamesToPlugins[pluginName];\n\t      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {\n\t        !!namesToPlugins[pluginName] ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;\n\t        namesToPlugins[pluginName] = pluginModule;\n\t        isOrderingDirty = true;\n\t      }\n\t    }\n\t    if (isOrderingDirty) {\n\t      recomputePluginOrdering();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Looks up the plugin for the supplied event.\n\t   *\n\t   * @param {object} event A synthetic event.\n\t   * @return {?object} The plugin that created the supplied event.\n\t   * @internal\n\t   */\n\t  getPluginModuleForEvent: function (event) {\n\t    var dispatchConfig = event.dispatchConfig;\n\t    if (dispatchConfig.registrationName) {\n\t      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;\n\t    }\n\t    if (dispatchConfig.phasedRegistrationNames !== undefined) {\n\t      // pulling phasedRegistrationNames out of dispatchConfig helps Flow see\n\t      // that it is not undefined.\n\t      var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;\n\t\n\t      for (var phase in phasedRegistrationNames) {\n\t        if (!phasedRegistrationNames.hasOwnProperty(phase)) {\n\t          continue;\n\t        }\n\t        var pluginModule = EventPluginRegistry.registrationNameModules[phasedRegistrationNames[phase]];\n\t        if (pluginModule) {\n\t          return pluginModule;\n\t        }\n\t      }\n\t    }\n\t    return null;\n\t  },\n\t\n\t  /**\n\t   * Exposed for unit testing.\n\t   * @private\n\t   */\n\t  _resetEventPlugins: function () {\n\t    eventPluginOrder = null;\n\t    for (var pluginName in namesToPlugins) {\n\t      if (namesToPlugins.hasOwnProperty(pluginName)) {\n\t        delete namesToPlugins[pluginName];\n\t      }\n\t    }\n\t    EventPluginRegistry.plugins.length = 0;\n\t\n\t    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;\n\t    for (var eventName in eventNameDispatchConfigs) {\n\t      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {\n\t        delete eventNameDispatchConfigs[eventName];\n\t      }\n\t    }\n\t\n\t    var registrationNameModules = EventPluginRegistry.registrationNameModules;\n\t    for (var registrationName in registrationNameModules) {\n\t      if (registrationNameModules.hasOwnProperty(registrationName)) {\n\t        delete registrationNameModules[registrationName];\n\t      }\n\t    }\n\t\n\t    if (false) {\n\t      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;\n\t      for (var lowerCasedName in possibleRegistrationNames) {\n\t        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {\n\t          delete possibleRegistrationNames[lowerCasedName];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = EventPluginRegistry;\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(3);\n\t\n\tvar ReactErrorUtils = __webpack_require__(40);\n\t\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(2);\n\t\n\t/**\n\t * Injected dependencies:\n\t */\n\t\n\t/**\n\t * - `ComponentTree`: [required] Module that can convert between React instances\n\t *   and actual node references.\n\t */\n\tvar ComponentTree;\n\tvar TreeTraversal;\n\tvar injection = {\n\t  injectComponentTree: function (Injected) {\n\t    ComponentTree = Injected;\n\t    if (false) {\n\t      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;\n\t    }\n\t  },\n\t  injectTreeTraversal: function (Injected) {\n\t    TreeTraversal = Injected;\n\t    if (false) {\n\t      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;\n\t    }\n\t  }\n\t};\n\t\n\tfunction isEndish(topLevelType) {\n\t  return topLevelType === 'topMouseUp' || topLevelType === 'topTouchEnd' || topLevelType === 'topTouchCancel';\n\t}\n\t\n\tfunction isMoveish(topLevelType) {\n\t  return topLevelType === 'topMouseMove' || topLevelType === 'topTouchMove';\n\t}\n\tfunction isStartish(topLevelType) {\n\t  return topLevelType === 'topMouseDown' || topLevelType === 'topTouchStart';\n\t}\n\t\n\tvar validateEventDispatches;\n\tif (false) {\n\t  validateEventDispatches = function (event) {\n\t    var dispatchListeners = event._dispatchListeners;\n\t    var dispatchInstances = event._dispatchInstances;\n\t\n\t    var listenersIsArr = Array.isArray(dispatchListeners);\n\t    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;\n\t\n\t    var instancesIsArr = Array.isArray(dispatchInstances);\n\t    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;\n\t\n\t    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;\n\t  };\n\t}\n\t\n\t/**\n\t * Dispatch the event to the listener.\n\t * @param {SyntheticEvent} event SyntheticEvent to handle\n\t * @param {boolean} simulated If the event is simulated (changes exn behavior)\n\t * @param {function} listener Application-level callback\n\t * @param {*} inst Internal component instance\n\t */\n\tfunction executeDispatch(event, simulated, listener, inst) {\n\t  var type = event.type || 'unknown-event';\n\t  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);\n\t  if (simulated) {\n\t    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);\n\t  } else {\n\t    ReactErrorUtils.invokeGuardedCallback(type, listener, event);\n\t  }\n\t  event.currentTarget = null;\n\t}\n\t\n\t/**\n\t * Standard/simple iteration through an event's collected dispatches.\n\t */\n\tfunction executeDispatchesInOrder(event, simulated) {\n\t  var dispatchListeners = event._dispatchListeners;\n\t  var dispatchInstances = event._dispatchInstances;\n\t  if (false) {\n\t    validateEventDispatches(event);\n\t  }\n\t  if (Array.isArray(dispatchListeners)) {\n\t    for (var i = 0; i < dispatchListeners.length; i++) {\n\t      if (event.isPropagationStopped()) {\n\t        break;\n\t      }\n\t      // Listeners and Instances are two parallel arrays that are always in sync.\n\t      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);\n\t    }\n\t  } else if (dispatchListeners) {\n\t    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);\n\t  }\n\t  event._dispatchListeners = null;\n\t  event._dispatchInstances = null;\n\t}\n\t\n\t/**\n\t * Standard/simple iteration through an event's collected dispatches, but stops\n\t * at the first dispatch execution returning true, and returns that id.\n\t *\n\t * @return {?string} id of the first dispatch execution who's listener returns\n\t * true, or null if no listener returned true.\n\t */\n\tfunction executeDispatchesInOrderStopAtTrueImpl(event) {\n\t  var dispatchListeners = event._dispatchListeners;\n\t  var dispatchInstances = event._dispatchInstances;\n\t  if (false) {\n\t    validateEventDispatches(event);\n\t  }\n\t  if (Array.isArray(dispatchListeners)) {\n\t    for (var i = 0; i < dispatchListeners.length; i++) {\n\t      if (event.isPropagationStopped()) {\n\t        break;\n\t      }\n\t      // Listeners and Instances are two parallel arrays that are always in sync.\n\t      if (dispatchListeners[i](event, dispatchInstances[i])) {\n\t        return dispatchInstances[i];\n\t      }\n\t    }\n\t  } else if (dispatchListeners) {\n\t    if (dispatchListeners(event, dispatchInstances)) {\n\t      return dispatchInstances;\n\t    }\n\t  }\n\t  return null;\n\t}\n\t\n\t/**\n\t * @see executeDispatchesInOrderStopAtTrueImpl\n\t */\n\tfunction executeDispatchesInOrderStopAtTrue(event) {\n\t  var ret = executeDispatchesInOrderStopAtTrueImpl(event);\n\t  event._dispatchInstances = null;\n\t  event._dispatchListeners = null;\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Execution of a \"direct\" dispatch - there must be at most one dispatch\n\t * accumulated on the event or it is considered an error. It doesn't really make\n\t * sense for an event with multiple dispatches (bubbled) to keep track of the\n\t * return values at each dispatch execution, but it does tend to make sense when\n\t * dealing with \"direct\" dispatches.\n\t *\n\t * @return {*} The return value of executing the single dispatch.\n\t */\n\tfunction executeDirectDispatch(event) {\n\t  if (false) {\n\t    validateEventDispatches(event);\n\t  }\n\t  var dispatchListener = event._dispatchListeners;\n\t  var dispatchInstance = event._dispatchInstances;\n\t  !!Array.isArray(dispatchListener) ?  false ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;\n\t  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;\n\t  var res = dispatchListener ? dispatchListener(event) : null;\n\t  event.currentTarget = null;\n\t  event._dispatchListeners = null;\n\t  event._dispatchInstances = null;\n\t  return res;\n\t}\n\t\n\t/**\n\t * @param {SyntheticEvent} event\n\t * @return {boolean} True iff number of dispatches accumulated is greater than 0.\n\t */\n\tfunction hasDispatches(event) {\n\t  return !!event._dispatchListeners;\n\t}\n\t\n\t/**\n\t * General utilities that are useful in creating custom Event Plugins.\n\t */\n\tvar EventPluginUtils = {\n\t  isEndish: isEndish,\n\t  isMoveish: isMoveish,\n\t  isStartish: isStartish,\n\t\n\t  executeDirectDispatch: executeDirectDispatch,\n\t  executeDispatchesInOrder: executeDispatchesInOrder,\n\t  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,\n\t  hasDispatches: hasDispatches,\n\t\n\t  getInstanceFromNode: function (node) {\n\t    return ComponentTree.getInstanceFromNode(node);\n\t  },\n\t  getNodeFromInstance: function (node) {\n\t    return ComponentTree.getNodeFromInstance(node);\n\t  },\n\t  isAncestor: function (a, b) {\n\t    return TreeTraversal.isAncestor(a, b);\n\t  },\n\t  getLowestCommonAncestor: function (a, b) {\n\t    return TreeTraversal.getLowestCommonAncestor(a, b);\n\t  },\n\t  getParentInstance: function (inst) {\n\t    return TreeTraversal.getParentInstance(inst);\n\t  },\n\t  traverseTwoPhase: function (target, fn, arg) {\n\t    return TreeTraversal.traverseTwoPhase(target, fn, arg);\n\t  },\n\t  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {\n\t    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);\n\t  },\n\t\n\t  injection: injection\n\t};\n\t\n\tmodule.exports = EventPluginUtils;\n\n/***/ },\n/* 37 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Escape and wrap key so it is safe to use as a reactid\n\t *\n\t * @param {string} key to be escaped.\n\t * @return {string} the escaped key.\n\t */\n\t\n\tfunction escape(key) {\n\t  var escapeRegex = /[=:]/g;\n\t  var escaperLookup = {\n\t    '=': '=0',\n\t    ':': '=2'\n\t  };\n\t  var escapedString = ('' + key).replace(escapeRegex, function (match) {\n\t    return escaperLookup[match];\n\t  });\n\t\n\t  return '$' + escapedString;\n\t}\n\t\n\t/**\n\t * Unescape and unwrap key for human-readable display\n\t *\n\t * @param {string} key to unescape.\n\t * @return {string} the unescaped key.\n\t */\n\tfunction unescape(key) {\n\t  var unescapeRegex = /(=0|=2)/g;\n\t  var unescaperLookup = {\n\t    '=0': '=',\n\t    '=2': ':'\n\t  };\n\t  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);\n\t\n\t  return ('' + keySubstring).replace(unescapeRegex, function (match) {\n\t    return unescaperLookup[match];\n\t  });\n\t}\n\t\n\tvar KeyEscapeUtils = {\n\t  escape: escape,\n\t  unescape: unescape\n\t};\n\t\n\tmodule.exports = KeyEscapeUtils;\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(3);\n\t\n\tvar ReactPropTypesSecret = __webpack_require__(153);\n\tvar propTypesFactory = __webpack_require__(61);\n\t\n\tvar React = __webpack_require__(17);\n\tvar PropTypes = propTypesFactory(React.isValidElement);\n\t\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(2);\n\t\n\tvar hasReadOnlyValue = {\n\t  'button': true,\n\t  'checkbox': true,\n\t  'image': true,\n\t  'hidden': true,\n\t  'radio': true,\n\t  'reset': true,\n\t  'submit': true\n\t};\n\t\n\tfunction _assertSingleLink(inputProps) {\n\t  !(inputProps.checkedLink == null || inputProps.valueLink == null) ?  false ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;\n\t}\n\tfunction _assertValueLink(inputProps) {\n\t  _assertSingleLink(inputProps);\n\t  !(inputProps.value == null && inputProps.onChange == null) ?  false ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\\'t want to use valueLink.') : _prodInvariant('88') : void 0;\n\t}\n\t\n\tfunction _assertCheckedLink(inputProps) {\n\t  _assertSingleLink(inputProps);\n\t  !(inputProps.checked == null && inputProps.onChange == null) ?  false ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\\'t want to use checkedLink') : _prodInvariant('89') : void 0;\n\t}\n\t\n\tvar propTypes = {\n\t  value: function (props, propName, componentName) {\n\t    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {\n\t      return null;\n\t    }\n\t    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n\t  },\n\t  checked: function (props, propName, componentName) {\n\t    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {\n\t      return null;\n\t    }\n\t    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n\t  },\n\t  onChange: PropTypes.func\n\t};\n\t\n\tvar loggedTypeFailures = {};\n\tfunction getDeclarationErrorAddendum(owner) {\n\t  if (owner) {\n\t    var name = owner.getName();\n\t    if (name) {\n\t      return ' Check the render method of `' + name + '`.';\n\t    }\n\t  }\n\t  return '';\n\t}\n\t\n\t/**\n\t * Provide a linked `value` attribute for controlled forms. You should not use\n\t * this outside of the ReactDOM controlled form components.\n\t */\n\tvar LinkedValueUtils = {\n\t  checkPropTypes: function (tagName, props, owner) {\n\t    for (var propName in propTypes) {\n\t      if (propTypes.hasOwnProperty(propName)) {\n\t        var error = propTypes[propName](props, propName, tagName, 'prop', null, ReactPropTypesSecret);\n\t      }\n\t      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n\t        // Only monitor this failure once because there tends to be a lot of the\n\t        // same error.\n\t        loggedTypeFailures[error.message] = true;\n\t\n\t        var addendum = getDeclarationErrorAddendum(owner);\n\t         false ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @param {object} inputProps Props for form component\n\t   * @return {*} current value of the input either from value prop or link.\n\t   */\n\t  getValue: function (inputProps) {\n\t    if (inputProps.valueLink) {\n\t      _assertValueLink(inputProps);\n\t      return inputProps.valueLink.value;\n\t    }\n\t    return inputProps.value;\n\t  },\n\t\n\t  /**\n\t   * @param {object} inputProps Props for form component\n\t   * @return {*} current checked status of the input either from checked prop\n\t   *             or link.\n\t   */\n\t  getChecked: function (inputProps) {\n\t    if (inputProps.checkedLink) {\n\t      _assertCheckedLink(inputProps);\n\t      return inputProps.checkedLink.value;\n\t    }\n\t    return inputProps.checked;\n\t  },\n\t\n\t  /**\n\t   * @param {object} inputProps Props for form component\n\t   * @param {SyntheticEvent} event change event to handle\n\t   */\n\t  executeOnChange: function (inputProps, event) {\n\t    if (inputProps.valueLink) {\n\t      _assertValueLink(inputProps);\n\t      return inputProps.valueLink.requestChange(event.target.value);\n\t    } else if (inputProps.checkedLink) {\n\t      _assertCheckedLink(inputProps);\n\t      return inputProps.checkedLink.requestChange(event.target.checked);\n\t    } else if (inputProps.onChange) {\n\t      return inputProps.onChange.call(undefined, event);\n\t    }\n\t  }\n\t};\n\t\n\tmodule.exports = LinkedValueUtils;\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2014-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(3);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\tvar injected = false;\n\t\n\tvar ReactComponentEnvironment = {\n\t\n\t  /**\n\t   * Optionally injectable hook for swapping out mount images in the middle of\n\t   * the tree.\n\t   */\n\t  replaceNodeWithMarkup: null,\n\t\n\t  /**\n\t   * Optionally injectable hook for processing a queue of child updates. Will\n\t   * later move into MultiChildComponents.\n\t   */\n\t  processChildrenUpdates: null,\n\t\n\t  injection: {\n\t    injectEnvironment: function (environment) {\n\t      !!injected ?  false ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;\n\t      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;\n\t      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;\n\t      injected = true;\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactComponentEnvironment;\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar caughtError = null;\n\t\n\t/**\n\t * Call a function while guarding against errors that happens within it.\n\t *\n\t * @param {String} name of the guard to use for logging or debugging\n\t * @param {Function} func The function to invoke\n\t * @param {*} a First argument\n\t * @param {*} b Second argument\n\t */\n\tfunction invokeGuardedCallback(name, func, a) {\n\t  try {\n\t    func(a);\n\t  } catch (x) {\n\t    if (caughtError === null) {\n\t      caughtError = x;\n\t    }\n\t  }\n\t}\n\t\n\tvar ReactErrorUtils = {\n\t  invokeGuardedCallback: invokeGuardedCallback,\n\t\n\t  /**\n\t   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event\n\t   * handler are sure to be rethrown by rethrowCaughtError.\n\t   */\n\t  invokeGuardedCallbackWithCatch: invokeGuardedCallback,\n\t\n\t  /**\n\t   * During execution of guarded functions we will capture the first error which\n\t   * we will rethrow to be handled by the top level error handler.\n\t   */\n\t  rethrowCaughtError: function () {\n\t    if (caughtError) {\n\t      var error = caughtError;\n\t      caughtError = null;\n\t      throw error;\n\t    }\n\t  }\n\t};\n\t\n\tif (false) {\n\t  /**\n\t   * To help development we can get better devtools integration by simulating a\n\t   * real browser event.\n\t   */\n\t  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {\n\t    var fakeNode = document.createElement('react');\n\t    ReactErrorUtils.invokeGuardedCallback = function (name, func, a) {\n\t      var boundFunc = func.bind(null, a);\n\t      var evtType = 'react-' + name;\n\t      fakeNode.addEventListener(evtType, boundFunc, false);\n\t      var evt = document.createEvent('Event');\n\t      evt.initEvent(evtType, false, false);\n\t      fakeNode.dispatchEvent(evt);\n\t      fakeNode.removeEventListener(evtType, boundFunc, false);\n\t    };\n\t  }\n\t}\n\t\n\tmodule.exports = ReactErrorUtils;\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2015-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(3);\n\t\n\tvar ReactCurrentOwner = __webpack_require__(12);\n\tvar ReactInstanceMap = __webpack_require__(25);\n\tvar ReactInstrumentation = __webpack_require__(9);\n\tvar ReactUpdates = __webpack_require__(10);\n\t\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(2);\n\t\n\tfunction enqueueUpdate(internalInstance) {\n\t  ReactUpdates.enqueueUpdate(internalInstance);\n\t}\n\t\n\tfunction formatUnexpectedArgument(arg) {\n\t  var type = typeof arg;\n\t  if (type !== 'object') {\n\t    return type;\n\t  }\n\t  var displayName = arg.constructor && arg.constructor.name || type;\n\t  var keys = Object.keys(arg);\n\t  if (keys.length > 0 && keys.length < 20) {\n\t    return displayName + ' (keys: ' + keys.join(', ') + ')';\n\t  }\n\t  return displayName;\n\t}\n\t\n\tfunction getInternalInstanceReadyForUpdate(publicInstance, callerName) {\n\t  var internalInstance = ReactInstanceMap.get(publicInstance);\n\t  if (!internalInstance) {\n\t    if (false) {\n\t      var ctor = publicInstance.constructor;\n\t      // Only warn when we have a callerName. Otherwise we should be silent.\n\t      // We're probably calling from enqueueCallback. We don't want to warn\n\t      // there because we already warned for the corresponding lifecycle method.\n\t      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;\n\t    }\n\t    return null;\n\t  }\n\t\n\t  if (false) {\n\t    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + 'within `render` or another component\\'s constructor). Render methods ' + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;\n\t  }\n\t\n\t  return internalInstance;\n\t}\n\t\n\t/**\n\t * ReactUpdateQueue allows for state updates to be scheduled into a later\n\t * reconciliation step.\n\t */\n\tvar ReactUpdateQueue = {\n\t\n\t  /**\n\t   * Checks whether or not this composite component is mounted.\n\t   * @param {ReactClass} publicInstance The instance we want to test.\n\t   * @return {boolean} True if mounted, false otherwise.\n\t   * @protected\n\t   * @final\n\t   */\n\t  isMounted: function (publicInstance) {\n\t    if (false) {\n\t      var owner = ReactCurrentOwner.current;\n\t      if (owner !== null) {\n\t        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;\n\t        owner._warnedAboutRefsInRender = true;\n\t      }\n\t    }\n\t    var internalInstance = ReactInstanceMap.get(publicInstance);\n\t    if (internalInstance) {\n\t      // During componentWillMount and render this will still be null but after\n\t      // that will always render to something. At least for now. So we can use\n\t      // this hack.\n\t      return !!internalInstance._renderedComponent;\n\t    } else {\n\t      return false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Enqueue a callback that will be executed after all the pending updates\n\t   * have processed.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance to use as `this` context.\n\t   * @param {?function} callback Called after state is updated.\n\t   * @param {string} callerName Name of the calling function in the public API.\n\t   * @internal\n\t   */\n\t  enqueueCallback: function (publicInstance, callback, callerName) {\n\t    ReactUpdateQueue.validateCallback(callback, callerName);\n\t    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);\n\t\n\t    // Previously we would throw an error if we didn't have an internal\n\t    // instance. Since we want to make it a no-op instead, we mirror the same\n\t    // behavior we have in other enqueue* methods.\n\t    // We also need to ignore callbacks in componentWillMount. See\n\t    // enqueueUpdates.\n\t    if (!internalInstance) {\n\t      return null;\n\t    }\n\t\n\t    if (internalInstance._pendingCallbacks) {\n\t      internalInstance._pendingCallbacks.push(callback);\n\t    } else {\n\t      internalInstance._pendingCallbacks = [callback];\n\t    }\n\t    // TODO: The callback here is ignored when setState is called from\n\t    // componentWillMount. Either fix it or disallow doing so completely in\n\t    // favor of getInitialState. Alternatively, we can disallow\n\t    // componentWillMount during server-side rendering.\n\t    enqueueUpdate(internalInstance);\n\t  },\n\t\n\t  enqueueCallbackInternal: function (internalInstance, callback) {\n\t    if (internalInstance._pendingCallbacks) {\n\t      internalInstance._pendingCallbacks.push(callback);\n\t    } else {\n\t      internalInstance._pendingCallbacks = [callback];\n\t    }\n\t    enqueueUpdate(internalInstance);\n\t  },\n\t\n\t  /**\n\t   * Forces an update. This should only be invoked when it is known with\n\t   * certainty that we are **not** in a DOM transaction.\n\t   *\n\t   * You may want to call this when you know that some deeper aspect of the\n\t   * component's state has changed but `setState` was not called.\n\t   *\n\t   * This will not invoke `shouldComponentUpdate`, but it will invoke\n\t   * `componentWillUpdate` and `componentDidUpdate`.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @internal\n\t   */\n\t  enqueueForceUpdate: function (publicInstance) {\n\t    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');\n\t\n\t    if (!internalInstance) {\n\t      return;\n\t    }\n\t\n\t    internalInstance._pendingForceUpdate = true;\n\t\n\t    enqueueUpdate(internalInstance);\n\t  },\n\t\n\t  /**\n\t   * Replaces all of the state. Always use this or `setState` to mutate state.\n\t   * You should treat `this.state` as immutable.\n\t   *\n\t   * There is no guarantee that `this.state` will be immediately updated, so\n\t   * accessing `this.state` after calling this method may return the old value.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @param {object} completeState Next state.\n\t   * @internal\n\t   */\n\t  enqueueReplaceState: function (publicInstance, completeState, callback) {\n\t    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');\n\t\n\t    if (!internalInstance) {\n\t      return;\n\t    }\n\t\n\t    internalInstance._pendingStateQueue = [completeState];\n\t    internalInstance._pendingReplaceState = true;\n\t\n\t    // Future-proof 15.5\n\t    if (callback !== undefined && callback !== null) {\n\t      ReactUpdateQueue.validateCallback(callback, 'replaceState');\n\t      if (internalInstance._pendingCallbacks) {\n\t        internalInstance._pendingCallbacks.push(callback);\n\t      } else {\n\t        internalInstance._pendingCallbacks = [callback];\n\t      }\n\t    }\n\t\n\t    enqueueUpdate(internalInstance);\n\t  },\n\t\n\t  /**\n\t   * Sets a subset of the state. This only exists because _pendingState is\n\t   * internal. This provides a merging strategy that is not available to deep\n\t   * properties which is confusing. TODO: Expose pendingState or don't use it\n\t   * during the merge.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @param {object} partialState Next partial state to be merged with state.\n\t   * @internal\n\t   */\n\t  enqueueSetState: function (publicInstance, partialState) {\n\t    if (false) {\n\t      ReactInstrumentation.debugTool.onSetState();\n\t      process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;\n\t    }\n\t\n\t    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');\n\t\n\t    if (!internalInstance) {\n\t      return;\n\t    }\n\t\n\t    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);\n\t    queue.push(partialState);\n\t\n\t    enqueueUpdate(internalInstance);\n\t  },\n\t\n\t  enqueueElementInternal: function (internalInstance, nextElement, nextContext) {\n\t    internalInstance._pendingElement = nextElement;\n\t    // TODO: introduce _pendingContext instead of setting it directly.\n\t    internalInstance._context = nextContext;\n\t    enqueueUpdate(internalInstance);\n\t  },\n\t\n\t  validateCallback: function (callback, callerName) {\n\t    !(!callback || typeof callback === 'function') ?  false ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactUpdateQueue;\n\n/***/ },\n/* 42 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t/* globals MSApp */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Create a function which has 'unsafe' privileges (required by windows8 apps)\n\t */\n\t\n\tvar createMicrosoftUnsafeLocalFunction = function (func) {\n\t  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {\n\t    return function (arg0, arg1, arg2, arg3) {\n\t      MSApp.execUnsafeLocalFunction(function () {\n\t        return func(arg0, arg1, arg2, arg3);\n\t      });\n\t    };\n\t  } else {\n\t    return func;\n\t  }\n\t};\n\t\n\tmodule.exports = createMicrosoftUnsafeLocalFunction;\n\n/***/ },\n/* 43 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * `charCode` represents the actual \"character code\" and is safe to use with\n\t * `String.fromCharCode`. As such, only keys that correspond to printable\n\t * characters produce a valid `charCode`, the only exception to this is Enter.\n\t * The Tab-key is considered non-printable and does not have a `charCode`,\n\t * presumably because it does not produce a tab-character in browsers.\n\t *\n\t * @param {object} nativeEvent Native browser event.\n\t * @return {number} Normalized `charCode` property.\n\t */\n\t\n\tfunction getEventCharCode(nativeEvent) {\n\t  var charCode;\n\t  var keyCode = nativeEvent.keyCode;\n\t\n\t  if ('charCode' in nativeEvent) {\n\t    charCode = nativeEvent.charCode;\n\t\n\t    // FF does not set `charCode` for the Enter-key, check against `keyCode`.\n\t    if (charCode === 0 && keyCode === 13) {\n\t      charCode = 13;\n\t    }\n\t  } else {\n\t    // IE8 does not implement `charCode`, but `keyCode` has the correct value.\n\t    charCode = keyCode;\n\t  }\n\t\n\t  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.\n\t  // Must not discard the (non-)printable Enter-key.\n\t  if (charCode >= 32 || charCode === 13) {\n\t    return charCode;\n\t  }\n\t\n\t  return 0;\n\t}\n\t\n\tmodule.exports = getEventCharCode;\n\n/***/ },\n/* 44 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Translation from modifier key to the associated property in the event.\n\t * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers\n\t */\n\t\n\tvar modifierKeyToProp = {\n\t  'Alt': 'altKey',\n\t  'Control': 'ctrlKey',\n\t  'Meta': 'metaKey',\n\t  'Shift': 'shiftKey'\n\t};\n\t\n\t// IE8 does not implement getModifierState so we simply map it to the only\n\t// modifier keys exposed by the event itself, does not support Lock-keys.\n\t// Currently, all major browsers except Chrome seems to support Lock-keys.\n\tfunction modifierStateGetter(keyArg) {\n\t  var syntheticEvent = this;\n\t  var nativeEvent = syntheticEvent.nativeEvent;\n\t  if (nativeEvent.getModifierState) {\n\t    return nativeEvent.getModifierState(keyArg);\n\t  }\n\t  var keyProp = modifierKeyToProp[keyArg];\n\t  return keyProp ? !!nativeEvent[keyProp] : false;\n\t}\n\t\n\tfunction getEventModifierState(nativeEvent) {\n\t  return modifierStateGetter;\n\t}\n\t\n\tmodule.exports = getEventModifierState;\n\n/***/ },\n/* 45 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Gets the target node from a native browser event by accounting for\n\t * inconsistencies in browser DOM APIs.\n\t *\n\t * @param {object} nativeEvent Native browser event.\n\t * @return {DOMEventTarget} Target node.\n\t */\n\t\n\tfunction getEventTarget(nativeEvent) {\n\t  var target = nativeEvent.target || nativeEvent.srcElement || window;\n\t\n\t  // Normalize SVG <use> element events #4963\n\t  if (target.correspondingUseElement) {\n\t    target = target.correspondingUseElement;\n\t  }\n\t\n\t  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).\n\t  // @see http://www.quirksmode.org/js/events_properties.html\n\t  return target.nodeType === 3 ? target.parentNode : target;\n\t}\n\t\n\tmodule.exports = getEventTarget;\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\t\n\tvar useHasFeature;\n\tif (ExecutionEnvironment.canUseDOM) {\n\t  useHasFeature = document.implementation && document.implementation.hasFeature &&\n\t  // always returns true in newer browsers as per the standard.\n\t  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n\t  document.implementation.hasFeature('', '') !== true;\n\t}\n\t\n\t/**\n\t * Checks if an event is supported in the current execution environment.\n\t *\n\t * NOTE: This will not work correctly for non-generic events such as `change`,\n\t * `reset`, `load`, `error`, and `select`.\n\t *\n\t * Borrows from Modernizr.\n\t *\n\t * @param {string} eventNameSuffix Event name, e.g. \"click\".\n\t * @param {?boolean} capture Check if the capture phase is supported.\n\t * @return {boolean} True if the event is supported.\n\t * @internal\n\t * @license Modernizr 3.0.0pre (Custom Build) | MIT\n\t */\n\tfunction isEventSupported(eventNameSuffix, capture) {\n\t  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {\n\t    return false;\n\t  }\n\t\n\t  var eventName = 'on' + eventNameSuffix;\n\t  var isSupported = eventName in document;\n\t\n\t  if (!isSupported) {\n\t    var element = document.createElement('div');\n\t    element.setAttribute(eventName, 'return;');\n\t    isSupported = typeof element[eventName] === 'function';\n\t  }\n\t\n\t  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {\n\t    // This is the only way to test support for the `wheel` event in IE9+.\n\t    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n\t  }\n\t\n\t  return isSupported;\n\t}\n\t\n\tmodule.exports = isEventSupported;\n\n/***/ },\n/* 47 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Given a `prevElement` and `nextElement`, determines if the existing\n\t * instance should be updated as opposed to being destroyed or replaced by a new\n\t * instance. Both arguments are elements. This ensures that this logic can\n\t * operate on stateless trees without any backing instance.\n\t *\n\t * @param {?object} prevElement\n\t * @param {?object} nextElement\n\t * @return {boolean} True if the existing instance should be updated.\n\t * @protected\n\t */\n\t\n\tfunction shouldUpdateReactComponent(prevElement, nextElement) {\n\t  var prevEmpty = prevElement === null || prevElement === false;\n\t  var nextEmpty = nextElement === null || nextElement === false;\n\t  if (prevEmpty || nextEmpty) {\n\t    return prevEmpty === nextEmpty;\n\t  }\n\t\n\t  var prevType = typeof prevElement;\n\t  var nextType = typeof nextElement;\n\t  if (prevType === 'string' || prevType === 'number') {\n\t    return nextType === 'string' || nextType === 'number';\n\t  } else {\n\t    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;\n\t  }\n\t}\n\t\n\tmodule.exports = shouldUpdateReactComponent;\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2015-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(4);\n\t\n\tvar emptyFunction = __webpack_require__(8);\n\tvar warning = __webpack_require__(2);\n\t\n\tvar validateDOMNesting = emptyFunction;\n\t\n\tif (false) {\n\t  // This validation code was written based on the HTML5 parsing spec:\n\t  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\n\t  //\n\t  // Note: this does not catch all invalid nesting, nor does it try to (as it's\n\t  // not clear what practical benefit doing so provides); instead, we warn only\n\t  // for cases where the parser will give a parse tree differing from what React\n\t  // intended. For example, <b><div></div></b> is invalid but we don't warn\n\t  // because it still parses correctly; we do warn for other cases like nested\n\t  // <p> tags where the beginning of the second element implicitly closes the\n\t  // first, causing a confusing mess.\n\t\n\t  // https://html.spec.whatwg.org/multipage/syntax.html#special\n\t  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];\n\t\n\t  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\n\t  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',\n\t\n\t  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point\n\t  // TODO: Distinguish by namespace here -- for <title>, including it here\n\t  // errs on the side of fewer warnings\n\t  'foreignObject', 'desc', 'title'];\n\t\n\t  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope\n\t  var buttonScopeTags = inScopeTags.concat(['button']);\n\t\n\t  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags\n\t  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];\n\t\n\t  var emptyAncestorInfo = {\n\t    current: null,\n\t\n\t    formTag: null,\n\t    aTagInScope: null,\n\t    buttonTagInScope: null,\n\t    nobrTagInScope: null,\n\t    pTagInButtonScope: null,\n\t\n\t    listItemTagAutoclosing: null,\n\t    dlItemTagAutoclosing: null\n\t  };\n\t\n\t  var updatedAncestorInfo = function (oldInfo, tag, instance) {\n\t    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);\n\t    var info = { tag: tag, instance: instance };\n\t\n\t    if (inScopeTags.indexOf(tag) !== -1) {\n\t      ancestorInfo.aTagInScope = null;\n\t      ancestorInfo.buttonTagInScope = null;\n\t      ancestorInfo.nobrTagInScope = null;\n\t    }\n\t    if (buttonScopeTags.indexOf(tag) !== -1) {\n\t      ancestorInfo.pTagInButtonScope = null;\n\t    }\n\t\n\t    // See rules for 'li', 'dd', 'dt' start tags in\n\t    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n\t    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {\n\t      ancestorInfo.listItemTagAutoclosing = null;\n\t      ancestorInfo.dlItemTagAutoclosing = null;\n\t    }\n\t\n\t    ancestorInfo.current = info;\n\t\n\t    if (tag === 'form') {\n\t      ancestorInfo.formTag = info;\n\t    }\n\t    if (tag === 'a') {\n\t      ancestorInfo.aTagInScope = info;\n\t    }\n\t    if (tag === 'button') {\n\t      ancestorInfo.buttonTagInScope = info;\n\t    }\n\t    if (tag === 'nobr') {\n\t      ancestorInfo.nobrTagInScope = info;\n\t    }\n\t    if (tag === 'p') {\n\t      ancestorInfo.pTagInButtonScope = info;\n\t    }\n\t    if (tag === 'li') {\n\t      ancestorInfo.listItemTagAutoclosing = info;\n\t    }\n\t    if (tag === 'dd' || tag === 'dt') {\n\t      ancestorInfo.dlItemTagAutoclosing = info;\n\t    }\n\t\n\t    return ancestorInfo;\n\t  };\n\t\n\t  /**\n\t   * Returns whether\n\t   */\n\t  var isTagValidWithParent = function (tag, parentTag) {\n\t    // First, let's check if we're in an unusual parsing mode...\n\t    switch (parentTag) {\n\t      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect\n\t      case 'select':\n\t        return tag === 'option' || tag === 'optgroup' || tag === '#text';\n\t      case 'optgroup':\n\t        return tag === 'option' || tag === '#text';\n\t      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>\n\t      // but\n\t      case 'option':\n\t        return tag === '#text';\n\t\n\t      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd\n\t      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption\n\t      // No special behavior since these rules fall back to \"in body\" mode for\n\t      // all except special table nodes which cause bad parsing behavior anyway.\n\t\n\t      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr\n\t      case 'tr':\n\t        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';\n\t\n\t      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody\n\t      case 'tbody':\n\t      case 'thead':\n\t      case 'tfoot':\n\t        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';\n\t\n\t      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup\n\t      case 'colgroup':\n\t        return tag === 'col' || tag === 'template';\n\t\n\t      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable\n\t      case 'table':\n\t        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';\n\t\n\t      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead\n\t      case 'head':\n\t        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';\n\t\n\t      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element\n\t      case 'html':\n\t        return tag === 'head' || tag === 'body';\n\t      case '#document':\n\t        return tag === 'html';\n\t    }\n\t\n\t    // Probably in the \"in body\" parsing mode, so we outlaw only tag combos\n\t    // where the parsing rules cause implicit opens or closes to be added.\n\t    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n\t    switch (tag) {\n\t      case 'h1':\n\t      case 'h2':\n\t      case 'h3':\n\t      case 'h4':\n\t      case 'h5':\n\t      case 'h6':\n\t        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';\n\t\n\t      case 'rp':\n\t      case 'rt':\n\t        return impliedEndTags.indexOf(parentTag) === -1;\n\t\n\t      case 'body':\n\t      case 'caption':\n\t      case 'col':\n\t      case 'colgroup':\n\t      case 'frame':\n\t      case 'head':\n\t      case 'html':\n\t      case 'tbody':\n\t      case 'td':\n\t      case 'tfoot':\n\t      case 'th':\n\t      case 'thead':\n\t      case 'tr':\n\t        // These tags are only valid with a few parents that have special child\n\t        // parsing rules -- if we're down here, then none of those matched and\n\t        // so we allow it only if we don't know what the parent is, as all other\n\t        // cases are invalid.\n\t        return parentTag == null;\n\t    }\n\t\n\t    return true;\n\t  };\n\t\n\t  /**\n\t   * Returns whether\n\t   */\n\t  var findInvalidAncestorForTag = function (tag, ancestorInfo) {\n\t    switch (tag) {\n\t      case 'address':\n\t      case 'article':\n\t      case 'aside':\n\t      case 'blockquote':\n\t      case 'center':\n\t      case 'details':\n\t      case 'dialog':\n\t      case 'dir':\n\t      case 'div':\n\t      case 'dl':\n\t      case 'fieldset':\n\t      case 'figcaption':\n\t      case 'figure':\n\t      case 'footer':\n\t      case 'header':\n\t      case 'hgroup':\n\t      case 'main':\n\t      case 'menu':\n\t      case 'nav':\n\t      case 'ol':\n\t      case 'p':\n\t      case 'section':\n\t      case 'summary':\n\t      case 'ul':\n\t      case 'pre':\n\t      case 'listing':\n\t      case 'table':\n\t      case 'hr':\n\t      case 'xmp':\n\t      case 'h1':\n\t      case 'h2':\n\t      case 'h3':\n\t      case 'h4':\n\t      case 'h5':\n\t      case 'h6':\n\t        return ancestorInfo.pTagInButtonScope;\n\t\n\t      case 'form':\n\t        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;\n\t\n\t      case 'li':\n\t        return ancestorInfo.listItemTagAutoclosing;\n\t\n\t      case 'dd':\n\t      case 'dt':\n\t        return ancestorInfo.dlItemTagAutoclosing;\n\t\n\t      case 'button':\n\t        return ancestorInfo.buttonTagInScope;\n\t\n\t      case 'a':\n\t        // Spec says something about storing a list of markers, but it sounds\n\t        // equivalent to this check.\n\t        return ancestorInfo.aTagInScope;\n\t\n\t      case 'nobr':\n\t        return ancestorInfo.nobrTagInScope;\n\t    }\n\t\n\t    return null;\n\t  };\n\t\n\t  /**\n\t   * Given a ReactCompositeComponent instance, return a list of its recursive\n\t   * owners, starting at the root and ending with the instance itself.\n\t   */\n\t  var findOwnerStack = function (instance) {\n\t    if (!instance) {\n\t      return [];\n\t    }\n\t\n\t    var stack = [];\n\t    do {\n\t      stack.push(instance);\n\t    } while (instance = instance._currentElement._owner);\n\t    stack.reverse();\n\t    return stack;\n\t  };\n\t\n\t  var didWarn = {};\n\t\n\t  validateDOMNesting = function (childTag, childText, childInstance, ancestorInfo) {\n\t    ancestorInfo = ancestorInfo || emptyAncestorInfo;\n\t    var parentInfo = ancestorInfo.current;\n\t    var parentTag = parentInfo && parentInfo.tag;\n\t\n\t    if (childText != null) {\n\t      process.env.NODE_ENV !== 'production' ? warning(childTag == null, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;\n\t      childTag = '#text';\n\t    }\n\t\n\t    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;\n\t    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);\n\t    var problematic = invalidParent || invalidAncestor;\n\t\n\t    if (problematic) {\n\t      var ancestorTag = problematic.tag;\n\t      var ancestorInstance = problematic.instance;\n\t\n\t      var childOwner = childInstance && childInstance._currentElement._owner;\n\t      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;\n\t\n\t      var childOwners = findOwnerStack(childOwner);\n\t      var ancestorOwners = findOwnerStack(ancestorOwner);\n\t\n\t      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);\n\t      var i;\n\t\n\t      var deepestCommon = -1;\n\t      for (i = 0; i < minStackLen; i++) {\n\t        if (childOwners[i] === ancestorOwners[i]) {\n\t          deepestCommon = i;\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\t\n\t      var UNKNOWN = '(unknown)';\n\t      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {\n\t        return inst.getName() || UNKNOWN;\n\t      });\n\t      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {\n\t        return inst.getName() || UNKNOWN;\n\t      });\n\t      var ownerInfo = [].concat(\n\t      // If the parent and child instances have a common owner ancestor, start\n\t      // with that -- otherwise we just start with the parent's owners.\n\t      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,\n\t      // If we're warning about an invalid (non-parent) ancestry, add '...'\n\t      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');\n\t\n\t      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;\n\t      if (didWarn[warnKey]) {\n\t        return;\n\t      }\n\t      didWarn[warnKey] = true;\n\t\n\t      var tagDisplayName = childTag;\n\t      var whitespaceInfo = '';\n\t      if (childTag === '#text') {\n\t        if (/\\S/.test(childText)) {\n\t          tagDisplayName = 'Text nodes';\n\t        } else {\n\t          tagDisplayName = 'Whitespace text nodes';\n\t          whitespaceInfo = ' Make sure you don\\'t have any extra whitespace between tags on ' + 'each line of your source code.';\n\t        }\n\t      } else {\n\t        tagDisplayName = '<' + childTag + '>';\n\t      }\n\t\n\t      if (invalidParent) {\n\t        var info = '';\n\t        if (ancestorTag === 'table' && childTag === 'tr') {\n\t          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';\n\t        }\n\t        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s ' + 'See %s.%s', tagDisplayName, ancestorTag, whitespaceInfo, ownerInfo, info) : void 0;\n\t      } else {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;\n\t      }\n\t    }\n\t  };\n\t\n\t  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;\n\t\n\t  // For testing\n\t  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {\n\t    ancestorInfo = ancestorInfo || emptyAncestorInfo;\n\t    var parentInfo = ancestorInfo.current;\n\t    var parentTag = parentInfo && parentInfo.tag;\n\t    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);\n\t  };\n\t}\n\t\n\tmodule.exports = validateDOMNesting;\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(19);\n\t\n\tvar ReactNoopUpdateQueue = __webpack_require__(50);\n\t\n\tvar canDefineProperty = __webpack_require__(84);\n\tvar emptyObject = __webpack_require__(22);\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(2);\n\t\n\t/**\n\t * Base class helpers for the updating state of a component.\n\t */\n\tfunction ReactComponent(props, context, updater) {\n\t  this.props = props;\n\t  this.context = context;\n\t  this.refs = emptyObject;\n\t  // We initialize the default updater but the real one gets injected by the\n\t  // renderer.\n\t  this.updater = updater || ReactNoopUpdateQueue;\n\t}\n\t\n\tReactComponent.prototype.isReactComponent = {};\n\t\n\t/**\n\t * Sets a subset of the state. Always use this to mutate\n\t * state. You should treat `this.state` as immutable.\n\t *\n\t * There is no guarantee that `this.state` will be immediately updated, so\n\t * accessing `this.state` after calling this method may return the old value.\n\t *\n\t * There is no guarantee that calls to `setState` will run synchronously,\n\t * as they may eventually be batched together.  You can provide an optional\n\t * callback that will be executed when the call to setState is actually\n\t * completed.\n\t *\n\t * When a function is provided to setState, it will be called at some point in\n\t * the future (not synchronously). It will be called with the up to date\n\t * component arguments (state, props, context). These values can be different\n\t * from this.* because your function may be called after receiveProps but before\n\t * shouldComponentUpdate, and this new state, props, and context will not yet be\n\t * assigned to this.\n\t *\n\t * @param {object|function} partialState Next partial state or function to\n\t *        produce next partial state to be merged with current state.\n\t * @param {?function} callback Called after state is updated.\n\t * @final\n\t * @protected\n\t */\n\tReactComponent.prototype.setState = function (partialState, callback) {\n\t  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ?  false ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;\n\t  this.updater.enqueueSetState(this, partialState);\n\t  if (callback) {\n\t    this.updater.enqueueCallback(this, callback, 'setState');\n\t  }\n\t};\n\t\n\t/**\n\t * Forces an update. This should only be invoked when it is known with\n\t * certainty that we are **not** in a DOM transaction.\n\t *\n\t * You may want to call this when you know that some deeper aspect of the\n\t * component's state has changed but `setState` was not called.\n\t *\n\t * This will not invoke `shouldComponentUpdate`, but it will invoke\n\t * `componentWillUpdate` and `componentDidUpdate`.\n\t *\n\t * @param {?function} callback Called after update is complete.\n\t * @final\n\t * @protected\n\t */\n\tReactComponent.prototype.forceUpdate = function (callback) {\n\t  this.updater.enqueueForceUpdate(this);\n\t  if (callback) {\n\t    this.updater.enqueueCallback(this, callback, 'forceUpdate');\n\t  }\n\t};\n\t\n\t/**\n\t * Deprecated APIs. These APIs used to exist on classic React classes but since\n\t * we would like to deprecate them, we're not going to move them over to this\n\t * modern base class. Instead, we define a getter that warns if it's accessed.\n\t */\n\tif (false) {\n\t  var deprecatedAPIs = {\n\t    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n\t    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n\t  };\n\t  var defineDeprecationWarning = function (methodName, info) {\n\t    if (canDefineProperty) {\n\t      Object.defineProperty(ReactComponent.prototype, methodName, {\n\t        get: function () {\n\t          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;\n\t          return undefined;\n\t        }\n\t      });\n\t    }\n\t  };\n\t  for (var fnName in deprecatedAPIs) {\n\t    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n\t      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n\t    }\n\t  }\n\t}\n\t\n\tmodule.exports = ReactComponent;\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2015-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar warning = __webpack_require__(2);\n\t\n\tfunction warnNoop(publicInstance, callerName) {\n\t  if (false) {\n\t    var constructor = publicInstance.constructor;\n\t    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;\n\t  }\n\t}\n\t\n\t/**\n\t * This is the abstract API for an update queue.\n\t */\n\tvar ReactNoopUpdateQueue = {\n\t\n\t  /**\n\t   * Checks whether or not this composite component is mounted.\n\t   * @param {ReactClass} publicInstance The instance we want to test.\n\t   * @return {boolean} True if mounted, false otherwise.\n\t   * @protected\n\t   * @final\n\t   */\n\t  isMounted: function (publicInstance) {\n\t    return false;\n\t  },\n\t\n\t  /**\n\t   * Enqueue a callback that will be executed after all the pending updates\n\t   * have processed.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance to use as `this` context.\n\t   * @param {?function} callback Called after state is updated.\n\t   * @internal\n\t   */\n\t  enqueueCallback: function (publicInstance, callback) {},\n\t\n\t  /**\n\t   * Forces an update. This should only be invoked when it is known with\n\t   * certainty that we are **not** in a DOM transaction.\n\t   *\n\t   * You may want to call this when you know that some deeper aspect of the\n\t   * component's state has changed but `setState` was not called.\n\t   *\n\t   * This will not invoke `shouldComponentUpdate`, but it will invoke\n\t   * `componentWillUpdate` and `componentDidUpdate`.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @internal\n\t   */\n\t  enqueueForceUpdate: function (publicInstance) {\n\t    warnNoop(publicInstance, 'forceUpdate');\n\t  },\n\t\n\t  /**\n\t   * Replaces all of the state. Always use this or `setState` to mutate state.\n\t   * You should treat `this.state` as immutable.\n\t   *\n\t   * There is no guarantee that `this.state` will be immediately updated, so\n\t   * accessing `this.state` after calling this method may return the old value.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @param {object} completeState Next state.\n\t   * @internal\n\t   */\n\t  enqueueReplaceState: function (publicInstance, completeState) {\n\t    warnNoop(publicInstance, 'replaceState');\n\t  },\n\t\n\t  /**\n\t   * Sets a subset of the state. This only exists because _pendingState is\n\t   * internal. This provides a merging strategy that is not available to deep\n\t   * properties which is confusing. TODO: Expose pendingState or don't use it\n\t   * during the merge.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @param {object} partialState Next partial state to be merged with state.\n\t   * @internal\n\t   */\n\t  enqueueSetState: function (publicInstance, partialState) {\n\t    warnNoop(publicInstance, 'setState');\n\t  }\n\t};\n\t\n\tmodule.exports = ReactNoopUpdateQueue;\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = __webpack_require__(17);\n\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t  A javascript Bezier curve library by Pomax.\n\t\n\t  Based on http://pomax.github.io/bezierinfo\n\t\n\t  This code is MIT licensed.\n\t**/\n\t(function() {\n\t  \"use strict\";\n\t\n\t  // math-inlining.\n\t  var abs = Math.abs,\n\t      min = Math.min,\n\t      max = Math.max,\n\t      acos = Math.acos,\n\t      sqrt = Math.sqrt,\n\t      pi = Math.PI,\n\t      // a zero coordinate, which is surprisingly useful\n\t      ZERO = {x:0,y:0,z:0};\n\t\n\t  // quite needed\n\t  var utils = __webpack_require__(53);\n\t\n\t  // not quite needed, but eventually this'll be useful...\n\t  var PolyBezier = __webpack_require__(91);\n\t\n\t  /**\n\t   * Bezier curve constructor. The constructor argument can be one of three things:\n\t   *\n\t   * 1. array/4 of {x:..., y:..., z:...}, z optional\n\t   * 2. numerical array/8 ordered x1,y1,x2,y2,x3,y3,x4,y4\n\t   * 3. numerical array/12 ordered x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4\n\t   *\n\t   */\n\t  var Bezier = function(coords) {\n\t    var args = (coords && coords.forEach) ? coords : [].slice.call(arguments);\n\t    var coordlen = false;\n\t    if(typeof args[0] === \"object\") {\n\t      coordlen = args.length;\n\t      var newargs = [];\n\t      args.forEach(function(point) {\n\t        ['x','y','z'].forEach(function(d) {\n\t          if(typeof point[d] !== \"undefined\") {\n\t            newargs.push(point[d]);\n\t          }\n\t        });\n\t      });\n\t      args = newargs;\n\t    }\n\t    var higher = false;\n\t    var len = args.length;\n\t    if (coordlen) {\n\t      if(coordlen>4) {\n\t        if (arguments.length !== 1) {\n\t          throw new Error(\"Only new Bezier(point[]) is accepted for 4th and higher order curves\");\n\t        }\n\t        higher = true;\n\t      }\n\t    } else {\n\t      if(len!==6 && len!==8 && len!==9 && len!==12) {\n\t        if (arguments.length !== 1) {\n\t          throw new Error(\"Only new Bezier(point[]) is accepted for 4th and higher order curves\");\n\t        }\n\t      }\n\t    }\n\t    var _3d = (!higher && (len === 9 || len === 12)) || (coords && coords[0] && typeof coords[0].z !== \"undefined\");\n\t    this._3d = _3d;\n\t    var points = [];\n\t    for(var idx=0, step=(_3d ? 3 : 2); idx<len; idx+=step) {\n\t      var point = {\n\t        x: args[idx],\n\t        y: args[idx+1]\n\t      };\n\t      if(_3d) { point.z = args[idx+2] };\n\t      points.push(point);\n\t    }\n\t    this.order = points.length - 1;\n\t    this.points = points;\n\t    var dims = ['x','y'];\n\t    if(_3d) dims.push('z');\n\t    this.dims = dims;\n\t    this.dimlen = dims.length;\n\t\n\t    (function(curve) {\n\t      var order = curve.order;\n\t      var points = curve.points;\n\t      var a = utils.align(points, {p1:points[0], p2:points[order]});\n\t      for(var i=0; i<a.length; i++) {\n\t        if(abs(a[i].y) > 0.0001) {\n\t          curve._linear = false;\n\t          return;\n\t        }\n\t      }\n\t      curve._linear = true;\n\t    }(this));\n\t\n\t    this._t1 = 0;\n\t    this._t2 = 1;\n\t    this.update();\n\t  };\n\t\n\t  Bezier.fromSVG = function(svgString) {\n\t    var list = svgString.match(/[-+]?\\d*\\.?\\d+(?:[eE][-+]?\\d+)?/g).map(parseFloat);\n\t    var relative = /[cq]/.test(svgString);\n\t    if(!relative) return new Bezier(list);\n\t    list = list.map(function(v,i) {\n\t      return i < 2 ? v : v + list[i % 2];\n\t    });\n\t    return new Bezier(list);\n\t  };\n\t\n\t  function getABC(n,S,B,E,t) {\n\t    if(typeof t === \"undefined\") { t = 0.5; }\n\t    var u = utils.projectionratio(t,n),\n\t        um = 1-u,\n\t        C = {\n\t          x: u*S.x + um*E.x,\n\t          y: u*S.y + um*E.y\n\t        },\n\t        s = utils.abcratio(t,n),\n\t        A = {\n\t          x: B.x + (B.x-C.x)/s,\n\t          y: B.y + (B.y-C.y)/s\n\t        };\n\t    return { A:A, B:B, C:C };\n\t  }\n\t\n\t  Bezier.quadraticFromPoints = function(p1,p2,p3, t) {\n\t    if(typeof t === \"undefined\") { t = 0.5; }\n\t    // shortcuts, although they're really dumb\n\t    if(t===0) { return new Bezier(p2,p2,p3); }\n\t    if(t===1) { return new Bezier(p1,p2,p2); }\n\t    // real fitting.\n\t    var abc = getABC(2,p1,p2,p3,t);\n\t    return new Bezier(p1, abc.A, p3);\n\t  };\n\t\n\t  Bezier.cubicFromPoints = function(S,B,E, t,d1) {\n\t    if(typeof t === \"undefined\") { t = 0.5; }\n\t    var abc = getABC(3,S,B,E,t);\n\t    if(typeof d1 === \"undefined\") { d1 = utils.dist(B,abc.C); }\n\t    var d2 = d1 * (1-t)/t;\n\t\n\t    var selen = utils.dist(S,E),\n\t        lx = (E.x-S.x)/selen,\n\t        ly = (E.y-S.y)/selen,\n\t        bx1 = d1 * lx,\n\t        by1 = d1 * ly,\n\t        bx2 = d2 * lx,\n\t        by2 = d2 * ly;\n\t    // derivation of new hull coordinates\n\t    var e1  = { x: B.x - bx1, y: B.y - by1 },\n\t        e2  = { x: B.x + bx2, y: B.y + by2 },\n\t        A = abc.A,\n\t        v1  = { x: A.x + (e1.x-A.x)/(1-t), y: A.y + (e1.y-A.y)/(1-t) },\n\t        v2  = { x: A.x + (e2.x-A.x)/(t), y: A.y + (e2.y-A.y)/(t) },\n\t        nc1 = { x: S.x + (v1.x-S.x)/(t), y: S.y + (v1.y-S.y)/(t) },\n\t        nc2 = { x: E.x + (v2.x-E.x)/(1-t), y: E.y + (v2.y-E.y)/(1-t) };\n\t    // ...done\n\t    return new Bezier(S,nc1,nc2,E);\n\t  };\n\t\n\t  var getUtils = function() {\n\t    return utils;\n\t  };\n\t\n\t  Bezier.getUtils = getUtils;\n\t\n\t  Bezier.prototype = {\n\t    getUtils: getUtils,\n\t    valueOf: function() {\n\t      return this.toString();\n\t    },\n\t    toString: function() {\n\t      return utils.pointsToString(this.points);\n\t    },\n\t    toSVG: function(relative) {\n\t      if(this._3d) return false;\n\t      var p = this.points,\n\t          x = p[0].x,\n\t          y = p[0].y,\n\t          s = [\"M\", x, y, (this.order===2 ? \"Q\":\"C\")];\n\t      for(var i=1, last=p.length; i<last; i++) {\n\t        s.push(p[i].x);\n\t        s.push(p[i].y);\n\t      }\n\t      return s.join(\" \");\n\t    },\n\t    update: function() {\n\t      // one-time compute derivative coordinates\n\t      this.dpoints = [];\n\t      for(var p=this.points, d=p.length, c=d-1; d>1; d--, c--) {\n\t        var list = [];\n\t        for(var j=0, dpt; j<c; j++) {\n\t          dpt = {\n\t            x: c * (p[j+1].x - p[j].x),\n\t            y: c * (p[j+1].y - p[j].y)\n\t          };\n\t          if(this._3d) {\n\t            dpt.z = c * (p[j+1].z - p[j].z);\n\t          }\n\t          list.push(dpt);\n\t        }\n\t        this.dpoints.push(list);\n\t        p = list;\n\t      };\n\t      this.computedirection();\n\t    },\n\t    computedirection: function() {\n\t      var points = this.points;\n\t      var angle = utils.angle(points[0], points[this.order], points[1]);\n\t      this.clockwise = angle > 0;\n\t    },\n\t    length: function() {\n\t      return utils.length(this.derivative.bind(this));\n\t    },\n\t    _lut: [],\n\t    getLUT: function(steps) {\n\t      steps = steps || 100;\n\t      if (this._lut.length === steps) { return this._lut; }\n\t      this._lut = [];\n\t      for(var t=0; t<=steps; t++) {\n\t        this._lut.push(this.compute(t/steps));\n\t      }\n\t      return this._lut;\n\t    },\n\t    on: function(point, error) {\n\t      error = error || 5;\n\t      var lut = this.getLUT(), hits = [], c, t=0;\n\t      for(var i=0; i<lut.length; i++) {\n\t        c = lut[i];\n\t        if (utils.dist(c,point) < error) {\n\t          hits.push(c)\n\t          t += i / lut.length;\n\t        }\n\t      }\n\t      if(!hits.length) return false;\n\t      return t /= hits.length;\n\t    },\n\t    project: function(point) {\n\t      // step 1: coarse check\n\t      var LUT = this.getLUT(), l = LUT.length-1,\n\t          closest = utils.closest(LUT, point),\n\t          mdist = closest.mdist,\n\t          mpos = closest.mpos;\n\t      if (mpos===0 || mpos===l) {\n\t        var t = mpos/l, pt = this.compute(t);\n\t        pt.t = t;\n\t        pt.d = mdist;\n\t        return pt;\n\t      }\n\t\n\t      // step 2: fine check\n\t      var ft, t, p, d,\n\t          t1 = (mpos-1)/l,\n\t          t2 = (mpos+1)/l,\n\t          step = 0.1/l;\n\t      mdist += 1;\n\t      for(t=t1,ft=t; t<t2+step; t+=step) {\n\t        p = this.compute(t);\n\t        d = utils.dist(point, p);\n\t        if (d<mdist) {\n\t          mdist = d;\n\t          ft = t;\n\t        }\n\t      }\n\t      p = this.compute(ft);\n\t      p.t = ft;\n\t      p.d = mdist;\n\t      return p;\n\t    },\n\t    get: function(t) {\n\t      return this.compute(t);\n\t    },\n\t    point: function(idx) {\n\t      return this.points[idx];\n\t    },\n\t    compute: function(t) {\n\t      // shortcuts\n\t      if(t===0) { return this.points[0]; }\n\t      if(t===1) { return this.points[this.order]; }\n\t\n\t      var p = this.points;\n\t      var mt = 1-t;\n\t\n\t      // linear?\n\t      if(this.order===1) {\n\t        ret = {\n\t          x: mt*p[0].x + t*p[1].x,\n\t          y: mt*p[0].y + t*p[1].y\n\t        };\n\t        if (this._3d) { ret.z = mt*p[0].z + t*p[1].z; }\n\t        return ret;\n\t      }\n\t\n\t      // quadratic/cubic curve?\n\t      if(this.order<4) {\n\t        var mt2 = mt*mt,\n\t            t2 = t*t,\n\t            a,b,c,d = 0;\n\t        if(this.order===2) {\n\t          p = [p[0], p[1], p[2], ZERO];\n\t          a = mt2;\n\t          b = mt*t*2;\n\t          c = t2;\n\t        }\n\t        else if(this.order===3) {\n\t          a = mt2*mt;\n\t          b = mt2*t*3;\n\t          c = mt*t2*3;\n\t          d = t*t2;\n\t        }\n\t        var ret = {\n\t          x: a*p[0].x + b*p[1].x + c*p[2].x + d*p[3].x,\n\t          y: a*p[0].y + b*p[1].y + c*p[2].y + d*p[3].y\n\t        };\n\t        if(this._3d) {\n\t          ret.z = a*p[0].z + b*p[1].z + c*p[2].z + d*p[3].z;\n\t        }\n\t        return ret;\n\t      }\n\t\n\t      // higher order curves: use de Casteljau's computation\n\t      var dCpts = JSON.parse(JSON.stringify(this.points));\n\t      while(dCpts.length > 1) {\n\t        for (var i=0; i<dCpts.length-1; i++) {\n\t          dCpts[i] = {\n\t            x: dCpts[i].x + (dCpts[i+1].x - dCpts[i].x) * t,\n\t            y: dCpts[i].y + (dCpts[i+1].y - dCpts[i].y) * t\n\t          };\n\t          if (typeof dCpts[i].z !== \"undefined\") {\n\t            dCpts[i] = dCpts[i].z + (dCpts[i+1].z - dCpts[i].z) * t\n\t          }\n\t        }\n\t        dCpts.splice(dCpts.length-1, 1);\n\t      }\n\t      return dCpts[0];\n\t    },\n\t    raise: function() {\n\t      var p = this.points, np = [p[0]], i, k=p.length, pi, pim;\n\t      for (var i=1; i<k; i++) {\n\t        pi = p[i];\n\t        pim = p[i-1];\n\t        np[i] = {\n\t          x: (k-i)/k * pi.x + i/k * pim.x,\n\t          y: (k-i)/k * pi.y + i/k * pim.y\n\t        };\n\t      }\n\t      np[k] = p[k-1];\n\t      return new Bezier(np);\n\t    },\n\t    derivative: function(t) {\n\t      var mt = 1-t,\n\t          a,b,c=0,\n\t          p = this.dpoints[0];\n\t      if(this.order===2) { p = [p[0], p[1], ZERO]; a = mt; b = t; }\n\t      if(this.order===3) { a = mt*mt; b = mt*t*2; c = t*t; }\n\t      var ret = {\n\t        x: a*p[0].x + b*p[1].x + c*p[2].x,\n\t        y: a*p[0].y + b*p[1].y + c*p[2].y\n\t      };\n\t      if(this._3d) {\n\t        ret.z = a*p[0].z + b*p[1].z + c*p[2].z;\n\t      }\n\t      return ret;\n\t    },\n\t    inflections: function() {\n\t      return utils.inflections(this.points);\n\t    },\n\t    normal: function(t) {\n\t      return this._3d ? this.__normal3(t) : this.__normal2(t);\n\t    },\n\t    __normal2: function(t) {\n\t      var d = this.derivative(t);\n\t      var q = sqrt(d.x*d.x + d.y*d.y)\n\t      return { x: -d.y/q, y: d.x/q };\n\t    },\n\t    __normal3: function(t) {\n\t      // see http://stackoverflow.com/questions/25453159\n\t      var r1 = this.derivative(t),\n\t          r2 = this.derivative(t+0.01),\n\t          q1 = sqrt(r1.x*r1.x + r1.y*r1.y + r1.z*r1.z),\n\t          q2 = sqrt(r2.x*r2.x + r2.y*r2.y + r2.z*r2.z);\n\t      r1.x /= q1; r1.y /= q1; r1.z /= q1;\n\t      r2.x /= q2; r2.y /= q2; r2.z /= q2;\n\t      // cross product\n\t      var c = {\n\t        x: r2.y*r1.z - r2.z*r1.y,\n\t        y: r2.z*r1.x - r2.x*r1.z,\n\t        z: r2.x*r1.y - r2.y*r1.x\n\t      };\n\t      var m = sqrt(c.x*c.x + c.y*c.y + c.z*c.z);\n\t      c.x /= m; c.y /= m; c.z /= m;\n\t      // rotation matrix\n\t      var R = [   c.x*c.x,   c.x*c.y-c.z, c.x*c.z+c.y,\n\t                c.x*c.y+c.z,   c.y*c.y,   c.y*c.z-c.x,\n\t                c.x*c.z-c.y, c.y*c.z+c.x,   c.z*c.z    ];\n\t      // normal vector:\n\t      var n = {\n\t        x: R[0] * r1.x + R[1] * r1.y + R[2] * r1.z,\n\t        y: R[3] * r1.x + R[4] * r1.y + R[5] * r1.z,\n\t        z: R[6] * r1.x + R[7] * r1.y + R[8] * r1.z\n\t      };\n\t      return n;\n\t    },\n\t    hull: function(t) {\n\t      var p = this.points,\n\t          _p = [],\n\t          pt,\n\t          q = [],\n\t          idx = 0,\n\t          i=0,\n\t          l=0;\n\t      q[idx++] = p[0];\n\t      q[idx++] = p[1];\n\t      q[idx++] = p[2];\n\t      if(this.order === 3) { q[idx++] = p[3]; }\n\t      // we lerp between all points at each iteration, until we have 1 point left.\n\t      while(p.length>1) {\n\t        _p = [];\n\t        for(i=0, l=p.length-1; i<l; i++) {\n\t          pt = utils.lerp(t,p[i],p[i+1]);\n\t          q[idx++] = pt;\n\t          _p.push(pt);\n\t        }\n\t        p = _p;\n\t      }\n\t      return q;\n\t    },\n\t    split: function(t1, t2) {\n\t      // shortcuts\n\t      if(t1===0 && !!t2) { return this.split(t2).left; }\n\t      if(t2===1) { return this.split(t1).right; }\n\t\n\t      // no shortcut: use \"de Casteljau\" iteration.\n\t      var q = this.hull(t1);\n\t      var result = {\n\t        left: this.order === 2 ? new Bezier([q[0],q[3],q[5]]) : new Bezier([q[0],q[4],q[7],q[9]]),\n\t        right: this.order === 2 ? new Bezier([q[5],q[4],q[2]]) : new Bezier([q[9],q[8],q[6],q[3]]),\n\t        span: q\n\t      };\n\t\n\t      // make sure we bind _t1/_t2 information!\n\t      result.left._t1  = utils.map(0,  0,1, this._t1,this._t2);\n\t      result.left._t2  = utils.map(t1, 0,1, this._t1,this._t2);\n\t      result.right._t1 = utils.map(t1, 0,1, this._t1,this._t2);\n\t      result.right._t2 = utils.map(1,  0,1, this._t1,this._t2);\n\t\n\t      // if we have no t2, we're done\n\t      if(!t2) { return result; }\n\t\n\t      // if we have a t2, split again:\n\t      t2 = utils.map(t2,t1,1,0,1);\n\t      var subsplit = result.right.split(t2);\n\t      return subsplit.left;\n\t    },\n\t    extrema: function() {\n\t      var dims = this.dims,\n\t          result={},\n\t          roots=[],\n\t          p, mfn;\n\t      dims.forEach(function(dim) {\n\t        mfn = function(v) { return v[dim]; };\n\t        p = this.dpoints[0].map(mfn);\n\t        result[dim] = utils.droots(p);\n\t        if(this.order === 3) {\n\t          p = this.dpoints[1].map(mfn);\n\t          result[dim] = result[dim].concat(utils.droots(p));\n\t        }\n\t        result[dim] = result[dim].filter(function(t) { return (t>=0 && t<=1); });\n\t        roots = roots.concat(result[dim].sort());\n\t      }.bind(this));\n\t      roots = roots.sort().filter(function(v,idx) { return (roots.indexOf(v) === idx); });\n\t      result.values = roots;\n\t      return result;\n\t    },\n\t    bbox: function() {\n\t      var extrema = this.extrema(), result = {};\n\t      this.dims.forEach(function(d) {\n\t        result[d] = utils.getminmax(this, d, extrema[d]);\n\t      }.bind(this));\n\t      return result;\n\t    },\n\t    overlaps: function(curve) {\n\t      var lbbox = this.bbox(),\n\t          tbbox = curve.bbox();\n\t      return utils.bboxoverlap(lbbox,tbbox);\n\t    },\n\t    offset: function(t, d) {\n\t      if(typeof d !== \"undefined\") {\n\t        var c = this.get(t);\n\t        var n = this.normal(t);\n\t        var ret = {\n\t          c: c,\n\t          n: n,\n\t          x: c.x + n.x * d,\n\t          y: c.y + n.y * d\n\t        };\n\t        if(this._3d) {\n\t          ret.z = c.z + n.z * d;\n\t        };\n\t        return ret;\n\t      }\n\t      if(this._linear) {\n\t        var nv = this.normal(0);\n\t        var coords = this.points.map(function(p) {\n\t          var ret = {\n\t            x: p.x + t * nv.x,\n\t            y: p.y + t * nv.y\n\t          };\n\t          if(p.z && n.z) { ret.z = p.z + t * nv.z; }\n\t          return ret;\n\t        });\n\t        return [new Bezier(coords)];\n\t      }\n\t      var reduced = this.reduce();\n\t      return reduced.map(function(s) {\n\t        return s.scale(t);\n\t      });\n\t    },\n\t    simple: function() {\n\t      if(this.order===3) {\n\t        var a1 = utils.angle(this.points[0], this.points[3], this.points[1]);\n\t        var a2 = utils.angle(this.points[0], this.points[3], this.points[2]);\n\t        if(a1>0 && a2<0 || a1<0 && a2>0) return false;\n\t      }\n\t      var n1 = this.normal(0);\n\t      var n2 = this.normal(1);\n\t      var s = n1.x*n2.x + n1.y*n2.y;\n\t      if(this._3d) { s += n1.z*n2.z; }\n\t      var angle = abs(acos(s));\n\t      return angle < pi/3;\n\t    },\n\t    reduce: function() {\n\t      var i, t1=0, t2=0, step=0.01, segment, pass1=[], pass2=[];\n\t      // first pass: split on extrema\n\t      var extrema = this.extrema().values;\n\t      if(extrema.indexOf(0)===-1) { extrema = [0].concat(extrema); }\n\t      if(extrema.indexOf(1)===-1) { extrema.push(1); }\n\t\n\t      for(t1=extrema[0], i=1; i<extrema.length; i++) {\n\t        t2 = extrema[i];\n\t        segment = this.split(t1,t2);\n\t        segment._t1 = t1;\n\t        segment._t2 = t2;\n\t        pass1.push(segment);\n\t        t1 = t2;\n\t      }\n\t\n\t      // second pass: further reduce these segments to simple segments\n\t      pass1.forEach(function(p1) {\n\t        t1=0;\n\t        t2=0;\n\t        while(t2 <= 1) {\n\t          for(t2=t1+step; t2<=1+step; t2+=step) {\n\t            segment = p1.split(t1,t2);\n\t            if(!segment.simple()) {\n\t              t2 -= step;\n\t              if(abs(t1-t2)<step) {\n\t                // we can never form a reduction\n\t                return [];\n\t              }\n\t              segment = p1.split(t1,t2);\n\t              segment._t1 = utils.map(t1,0,1,p1._t1,p1._t2);\n\t              segment._t2 = utils.map(t2,0,1,p1._t1,p1._t2);\n\t              pass2.push(segment);\n\t              t1 = t2;\n\t              break;\n\t            }\n\t          }\n\t        }\n\t        if(t1<1) {\n\t          segment = p1.split(t1,1);\n\t          segment._t1 = utils.map(t1,0,1,p1._t1,p1._t2);\n\t          segment._t2 = p1._t2;\n\t          pass2.push(segment);\n\t        }\n\t      });\n\t      return pass2;\n\t    },\n\t    scale: function(d) {\n\t      var order = this.order;\n\t      var distanceFn = false\n\t      if(typeof d === \"function\") { distanceFn = d; }\n\t      if(distanceFn && order === 2) { return this.raise().scale(distanceFn); }\n\t\n\t      // TODO: add special handling for degenerate (=linear) curves.\n\t      var clockwise = this.clockwise;\n\t      var r1 = distanceFn ? distanceFn(0) : d;\n\t      var r2 = distanceFn ? distanceFn(1) : d;\n\t      var v = [ this.offset(0,10), this.offset(1,10) ];\n\t      var o = utils.lli4(v[0], v[0].c, v[1], v[1].c);\n\t      if(!o) { throw new Error(\"cannot scale this curve. Try reducing it first.\"); }\n\t      // move all points by distance 'd' wrt the origin 'o'\n\t      var points=this.points, np=[];\n\t\n\t      // move end points by fixed distance along normal.\n\t      [0,1].forEach(function(t) {\n\t        var p = np[t*order] = utils.copy(points[t*order]);\n\t        p.x += (t?r2:r1) * v[t].n.x;\n\t        p.y += (t?r2:r1) * v[t].n.y;\n\t      }.bind(this));\n\t\n\t      if (!distanceFn) {\n\t        // move control points to lie on the intersection of the offset\n\t        // derivative vector, and the origin-through-control vector\n\t        [0,1].forEach(function(t) {\n\t          if(this.order===2 && !!t) return;\n\t          var p = np[t*order];\n\t          var d = this.derivative(t);\n\t          var p2 = { x: p.x + d.x, y: p.y + d.y };\n\t          np[t+1] = utils.lli4(p, p2, o, points[t+1]);\n\t        }.bind(this));\n\t        return new Bezier(np);\n\t      }\n\t\n\t      // move control points by \"however much necessary to\n\t      // ensure the correct tangent to endpoint\".\n\t      [0,1].forEach(function(t) {\n\t        if(this.order===2 && !!t) return;\n\t        var p = points[t+1];\n\t        var ov = {\n\t          x: p.x - o.x,\n\t          y: p.y - o.y\n\t        };\n\t        var rc = distanceFn ? distanceFn((t+1)/order) : d;\n\t        if(distanceFn && !clockwise) rc = -rc;\n\t        var m = sqrt(ov.x*ov.x + ov.y*ov.y);\n\t        ov.x /= m;\n\t        ov.y /= m;\n\t        np[t+1] = {\n\t          x: p.x + rc*ov.x,\n\t          y: p.y + rc*ov.y\n\t        }\n\t      }.bind(this));\n\t      return new Bezier(np);\n\t    },\n\t    outline: function(d1, d2, d3, d4) {\n\t      d2 = (typeof d2 === \"undefined\") ? d1 : d2;\n\t      var reduced = this.reduce(),\n\t          len = reduced.length,\n\t          fcurves = [],\n\t          bcurves = [],\n\t          p,\n\t          alen = 0,\n\t          tlen = this.length();\n\t\n\t      var graduated = (typeof d3 !== \"undefined\" && typeof d4 !== \"undefined\");\n\t\n\t      function linearDistanceFunction(s,e, tlen,alen,slen) {\n\t        return function (v) {\n\t          var f1 = alen/tlen, f2 = (alen+slen)/tlen, d = e-s;\n\t          return utils.map(v, 0,1, s+f1*d, s+f2*d);\n\t        };\n\t      };\n\t\n\t      // form curve oulines\n\t      reduced.forEach(function(segment) {\n\t        slen = segment.length();\n\t        if (graduated) {\n\t          fcurves.push(segment.scale(  linearDistanceFunction( d1, d3, tlen,alen,slen)  ));\n\t          bcurves.push(segment.scale(  linearDistanceFunction(-d2,-d4, tlen,alen,slen)  ));\n\t        } else {\n\t          fcurves.push(segment.scale( d1));\n\t          bcurves.push(segment.scale(-d2));\n\t        }\n\t        alen += slen;\n\t      });\n\t\n\t      // reverse the \"return\" outline\n\t      bcurves = bcurves.map(function(s) {\n\t        p = s.points;\n\t        if(p[3]) { s.points = [p[3],p[2],p[1],p[0]]; }\n\t        else { s.points = [p[2],p[1],p[0]]; }\n\t        return s;\n\t      }).reverse();\n\t\n\t      // form the endcaps as lines\n\t      var fs = fcurves[0].points[0],\n\t          fe = fcurves[len-1].points[fcurves[len-1].points.length-1],\n\t          bs = bcurves[len-1].points[bcurves[len-1].points.length-1],\n\t          be = bcurves[0].points[0],\n\t          ls = utils.makeline(bs,fs),\n\t          le = utils.makeline(fe,be),\n\t          segments = [ls].concat(fcurves).concat([le]).concat(bcurves),\n\t          slen = segments.length;\n\t\n\t      return new PolyBezier(segments);\n\t    },\n\t    outlineshapes: function(d1, d2, curveIntersectionThreshold) {\n\t      d2 = d2 || d1;\n\t      var outline = this.outline(d1,d2).curves;\n\t      var shapes = [];\n\t      for(var i=1, len=outline.length; i < len/2; i++) {\n\t        var shape = utils.makeshape(outline[i], outline[len-i], curveIntersectionThreshold);\n\t        shape.startcap.virtual = (i > 1);\n\t        shape.endcap.virtual = (i < len/2-1);\n\t        shapes.push(shape);\n\t      }\n\t      return shapes;\n\t    },\n\t    intersects: function(curve, curveIntersectionThreshold) {\n\t      if(!curve) return this.selfintersects(curveIntersectionThreshold);\n\t      if(curve.p1 && curve.p2) {\n\t        return this.lineIntersects(curve);\n\t      }\n\t      if(curve instanceof Bezier) { curve = curve.reduce(); }\n\t      return this.curveintersects(this.reduce(), curve, curveIntersectionThreshold);\n\t    },\n\t    lineIntersects: function(line) {\n\t      var mx = min(line.p1.x, line.p2.x),\n\t          my = min(line.p1.y, line.p2.y),\n\t          MX = max(line.p1.x, line.p2.x),\n\t          MY = max(line.p1.y, line.p2.y),\n\t          self=this;\n\t      return utils.roots(this.points, line).filter(function(t) {\n\t        var p = self.get(t);\n\t        return utils.between(p.x, mx, MX) && utils.between(p.y, my, MY);\n\t      });\n\t    },\n\t    selfintersects: function(curveIntersectionThreshold) {\n\t      var reduced = this.reduce();\n\t      // \"simple\" curves cannot intersect with their direct\n\t      // neighbour, so for each segment X we check whether\n\t      // it intersects [0:x-2][x+2:last].\n\t      var i,len=reduced.length-2,results=[],result,left,right;\n\t      for(i=0; i<len; i++) {\n\t        left = reduced.slice(i,i+1);\n\t        right = reduced.slice(i+2);\n\t        result = this.curveintersects(left, right, curveIntersectionThreshold);\n\t        results = results.concat( result );\n\t      }\n\t      return results;\n\t    },\n\t    curveintersects: function(c1, c2, curveIntersectionThreshold) {\n\t      var pairs = [];\n\t      // step 1: pair off any overlapping segments\n\t      c1.forEach(function(l) {\n\t        c2.forEach(function(r) {\n\t          if(l.overlaps(r)) {\n\t            pairs.push({ left: l, right: r });\n\t          }\n\t        });\n\t      });\n\t      // step 2: for each pairing, run through the convergence algorithm.\n\t      var intersections = [];\n\t      pairs.forEach(function(pair) {\n\t        var result = utils.pairiteration(pair.left, pair.right, curveIntersectionThreshold);\n\t        if(result.length > 0) {\n\t          intersections = intersections.concat(result);\n\t        }\n\t      });\n\t      return intersections;\n\t    },\n\t    arcs: function(errorThreshold) {\n\t      errorThreshold = errorThreshold || 0.5;\n\t      var circles = [];\n\t      return this._iterate(errorThreshold, circles);\n\t    },\n\t    _error: function(pc, np1, s, e) {\n\t      var q = (e - s) / 4,\n\t          c1 = this.get(s + q),\n\t          c2 = this.get(e - q),\n\t          ref = utils.dist(pc, np1),\n\t          d1  = utils.dist(pc, c1),\n\t          d2  = utils.dist(pc, c2);\n\t      return abs(d1-ref) + abs(d2-ref);\n\t    },\n\t    _iterate: function(errorThreshold, circles) {\n\t      var s = 0, e = 1, safety;\n\t      // we do a binary search to find the \"good `t` closest to no-longer-good\"\n\t      do {\n\t        safety=0;\n\t\n\t        // step 1: start with the maximum possible arc\n\t        e = 1;\n\t\n\t        // points:\n\t        var np1 = this.get(s), np2, np3, arc, prev_arc;\n\t\n\t        // booleans:\n\t        var curr_good = false, prev_good = false, done;\n\t\n\t        // numbers:\n\t        var m = e, prev_e = 1, step = 0;\n\t\n\t        // step 2: find the best possible arc\n\t        do {\n\t          prev_good = curr_good;\n\t          prev_arc = arc;\n\t          m = (s + e)/2;\n\t          step++;\n\t\n\t          np2 = this.get(m);\n\t          np3 = this.get(e);\n\t\n\t          arc = utils.getccenter(np1, np2, np3);\n\t\n\t          //also save the t values\n\t          arc.interval = {\n\t            start: s,\n\t            end: e\n\t          };\n\t\n\t          var error = this._error(arc, np1, s, e);\n\t          curr_good = (error <= errorThreshold);\n\t\n\t          done = prev_good && !curr_good;\n\t          if(!done) prev_e = e;\n\t\n\t          // this arc is fine: we can move 'e' up to see if we can find a wider arc\n\t          if(curr_good) {\n\t\n\t            // if e is already at max, then we're done for this arc.\n\t            if (e >= 1) {\n\t              arc.interval.end = prev_e = 1;\n\t              prev_arc = arc;\n\t              break;\n\t            }\n\t            // if not, move it up by half the iteration distance\n\t            e = e + (e-s)/2;\n\t          }\n\t\n\t          // this is a bad arc: we need to move 'e' down to find a good arc\n\t          else {\n\t            e = m;\n\t          }\n\t        }\n\t        while(!done && safety++<100);\n\t\n\t        if(safety>=100) {\n\t          break;\n\t        }\n\t\n\t        // console.log(\"L835: [F] arc found\", s, prev_e, prev_arc.x, prev_arc.y, prev_arc.s, prev_arc.e);\n\t\n\t        prev_arc = (prev_arc ? prev_arc : arc);\n\t        circles.push(prev_arc);\n\t        s = prev_e;\n\t      }\n\t      while(e < 1);\n\t      return circles;\n\t    }\n\t  };\n\t\n\t  module.exports = Bezier;\n\t\n\t}());\n\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function() {\n\t  \"use strict\";\n\t\n\t  // math-inlining.\n\t  var abs = Math.abs,\n\t      cos = Math.cos,\n\t      sin = Math.sin,\n\t      acos = Math.acos,\n\t      atan2 = Math.atan2,\n\t      sqrt = Math.sqrt,\n\t      pow = Math.pow,\n\t      // cube root function yielding real roots\n\t      crt = function(v) { return (v<0) ? -pow(-v,1/3) : pow(v,1/3); },\n\t      // trig constants\n\t      pi = Math.PI,\n\t      tau = 2*pi,\n\t      quart = pi/2,\n\t      // float precision significant decimal\n\t      epsilon = 0.000001,\n\t      // extremas used in bbox calculation and similar algorithms\n\t      nMax = Number.MAX_SAFE_INTEGER,\n\t      nMin = Number.MIN_SAFE_INTEGER;\n\t\n\t  // Bezier utility functions\n\t  var utils = {\n\t    // Legendre-Gauss abscissae with n=24 (x_i values, defined at i=n as the roots of the nth order Legendre polynomial Pn(x))\n\t    Tvalues: [\n\t      -0.0640568928626056260850430826247450385909,\n\t       0.0640568928626056260850430826247450385909,\n\t      -0.1911188674736163091586398207570696318404,\n\t       0.1911188674736163091586398207570696318404,\n\t      -0.3150426796961633743867932913198102407864,\n\t       0.3150426796961633743867932913198102407864,\n\t      -0.4337935076260451384870842319133497124524,\n\t       0.4337935076260451384870842319133497124524,\n\t      -0.5454214713888395356583756172183723700107,\n\t       0.5454214713888395356583756172183723700107,\n\t      -0.6480936519369755692524957869107476266696,\n\t       0.6480936519369755692524957869107476266696,\n\t      -0.7401241915785543642438281030999784255232,\n\t       0.7401241915785543642438281030999784255232,\n\t      -0.8200019859739029219539498726697452080761,\n\t       0.8200019859739029219539498726697452080761,\n\t      -0.8864155270044010342131543419821967550873,\n\t       0.8864155270044010342131543419821967550873,\n\t      -0.9382745520027327585236490017087214496548,\n\t       0.9382745520027327585236490017087214496548,\n\t      -0.9747285559713094981983919930081690617411,\n\t       0.9747285559713094981983919930081690617411,\n\t      -0.9951872199970213601799974097007368118745,\n\t       0.9951872199970213601799974097007368118745\n\t    ],\n\t\n\t    // Legendre-Gauss weights with n=24 (w_i values, defined by a function linked to in the Bezier primer article)\n\t    Cvalues: [\n\t      0.1279381953467521569740561652246953718517,\n\t      0.1279381953467521569740561652246953718517,\n\t      0.1258374563468282961213753825111836887264,\n\t      0.1258374563468282961213753825111836887264,\n\t      0.1216704729278033912044631534762624256070,\n\t      0.1216704729278033912044631534762624256070,\n\t      0.1155056680537256013533444839067835598622,\n\t      0.1155056680537256013533444839067835598622,\n\t      0.1074442701159656347825773424466062227946,\n\t      0.1074442701159656347825773424466062227946,\n\t      0.0976186521041138882698806644642471544279,\n\t      0.0976186521041138882698806644642471544279,\n\t      0.0861901615319532759171852029837426671850,\n\t      0.0861901615319532759171852029837426671850,\n\t      0.0733464814110803057340336152531165181193,\n\t      0.0733464814110803057340336152531165181193,\n\t      0.0592985849154367807463677585001085845412,\n\t      0.0592985849154367807463677585001085845412,\n\t      0.0442774388174198061686027482113382288593,\n\t      0.0442774388174198061686027482113382288593,\n\t      0.0285313886289336631813078159518782864491,\n\t      0.0285313886289336631813078159518782864491,\n\t      0.0123412297999871995468056670700372915759,\n\t      0.0123412297999871995468056670700372915759\n\t    ],\n\t\n\t    arcfn: function(t, derivativeFn) {\n\t      var d = derivativeFn(t);\n\t      var l = d.x*d.x + d.y*d.y;\n\t      if(typeof d.z !== \"undefined\") {\n\t        l += d.z*d.z;\n\t      }\n\t      return sqrt(l);\n\t    },\n\t\n\t    between: function(v, m, M) {\n\t      return (m <= v && v <= M) || utils.approximately(v, m) || utils.approximately(v, M);\n\t    },\n\t\n\t    approximately: function(a,b,precision) {\n\t      return abs(a-b) <= (precision || epsilon);\n\t    },\n\t\n\t    length: function(derivativeFn) {\n\t      var z=0.5,sum=0,len=utils.Tvalues.length,i,t;\n\t      for(i=0; i<len; i++) {\n\t        t = z * utils.Tvalues[i] + z;\n\t        sum += utils.Cvalues[i] * utils.arcfn(t,derivativeFn);\n\t      }\n\t      return z * sum;\n\t    },\n\t\n\t    map: function(v, ds,de, ts,te) {\n\t      var d1 = de-ds, d2 = te-ts, v2 =  v-ds, r = v2/d1;\n\t      return ts + d2*r;\n\t    },\n\t\n\t    lerp: function(r, v1, v2) {\n\t      var ret = {\n\t        x: v1.x + r*(v2.x-v1.x),\n\t        y: v1.y + r*(v2.y-v1.y)\n\t      };\n\t      if(!!v1.z && !!v2.z) {\n\t        ret.z =  v1.z + r*(v2.z-v1.z);\n\t      }\n\t      return ret;\n\t    },\n\t\n\t    pointToString: function(p) {\n\t      var s = p.x+\"/\"+p.y;\n\t      if(typeof p.z !== \"undefined\") {\n\t        s += \"/\"+p.z;\n\t      }\n\t      return s;\n\t    },\n\t\n\t    pointsToString: function(points) {\n\t      return \"[\" + points.map(utils.pointToString).join(\", \") + \"]\";\n\t    },\n\t\n\t    copy: function(obj) {\n\t      return JSON.parse(JSON.stringify(obj));\n\t    },\n\t\n\t    angle: function(o,v1,v2) {\n\t      var dx1 = v1.x - o.x,\n\t          dy1 = v1.y - o.y,\n\t          dx2 = v2.x - o.x,\n\t          dy2 = v2.y - o.y,\n\t          cross = dx1*dy2 - dy1*dx2,\n\t          dot = dx1*dx2 + dy1*dy2;\n\t      return atan2(cross, dot);\n\t    },\n\t\n\t    // round as string, to avoid rounding errors\n\t    round: function(v, d) {\n\t      var s = '' + v;\n\t      var pos = s.indexOf(\".\");\n\t      return parseFloat(s.substring(0,pos+1+d));\n\t    },\n\t\n\t    dist: function(p1, p2) {\n\t      var dx = p1.x - p2.x,\n\t          dy = p1.y - p2.y;\n\t      return sqrt(dx*dx+dy*dy);\n\t    },\n\t\n\t    closest: function(LUT, point) {\n\t      var mdist = pow(2,63), mpos, d;\n\t      LUT.forEach(function(p, idx) {\n\t        d = utils.dist(point, p);\n\t        if (d<mdist) {\n\t          mdist = d;\n\t          mpos = idx;\n\t        }\n\t      });\n\t      return { mdist:mdist, mpos:mpos };\n\t    },\n\t\n\t    abcratio: function(t, n) {\n\t      // see ratio(t) note on http://pomax.github.io/bezierinfo/#abc\n\t      if (n!==2 && n!==3) {\n\t        return false;\n\t      }\n\t      if (typeof t === \"undefined\") {\n\t        t = 0.5;\n\t      } else if (t===0 || t===1) {\n\t        return t;\n\t      }\n\t      var bottom = pow(t,n) + pow(1-t,n), top = bottom - 1;\n\t      return abs(top/bottom);\n\t    },\n\t\n\t    projectionratio: function(t, n) {\n\t      // see u(t) note on http://pomax.github.io/bezierinfo/#abc\n\t      if (n!==2 && n!==3) {\n\t        return false;\n\t      }\n\t      if (typeof t === \"undefined\") {\n\t        t = 0.5;\n\t      } else if (t===0 || t===1) {\n\t        return t;\n\t      }\n\t      var top = pow(1-t, n), bottom = pow(t,n) + top;\n\t      return top/bottom;\n\t    },\n\t\n\t    lli8: function(x1,y1,x2,y2,x3,y3,x4,y4) {\n\t      var nx=(x1*y2-y1*x2)*(x3-x4)-(x1-x2)*(x3*y4-y3*x4),\n\t          ny=(x1*y2-y1*x2)*(y3-y4)-(y1-y2)*(x3*y4-y3*x4),\n\t          d=(x1-x2)*(y3-y4)-(y1-y2)*(x3-x4);\n\t      if(d==0) { return false; }\n\t      return { x: nx/d, y: ny/d };\n\t    },\n\t\n\t    lli4: function(p1,p2,p3,p4) {\n\t      var x1 = p1.x, y1 = p1.y,\n\t          x2 = p2.x, y2 = p2.y,\n\t          x3 = p3.x, y3 = p3.y,\n\t          x4 = p4.x, y4 = p4.y;\n\t      return utils.lli8(x1,y1,x2,y2,x3,y3,x4,y4);\n\t    },\n\t\n\t    lli: function(v1, v2) {\n\t      return utils.lli4(v1,v1.c,v2,v2.c);\n\t    },\n\t\n\t    makeline: function(p1,p2) {\n\t      var Bezier = __webpack_require__(52);\n\t      var x1 = p1.x, y1 = p1.y, x2 = p2.x, y2 = p2.y, dx = (x2-x1)/3, dy = (y2-y1)/3;\n\t      return new Bezier(x1, y1, x1+dx, y1+dy, x1+2*dx, y1+2*dy, x2, y2);\n\t    },\n\t\n\t    findbbox: function(sections) {\n\t      var mx=nMax,my=nMax,MX=nMin,MY=nMin;\n\t      sections.forEach(function(s) {\n\t        var bbox = s.bbox();\n\t        if(mx > bbox.x.min) mx = bbox.x.min;\n\t        if(my > bbox.y.min) my = bbox.y.min;\n\t        if(MX < bbox.x.max) MX = bbox.x.max;\n\t        if(MY < bbox.y.max) MY = bbox.y.max;\n\t      });\n\t      return {\n\t        x: { min: mx, mid:(mx+MX)/2, max: MX, size:MX-mx },\n\t        y: { min: my, mid:(my+MY)/2, max: MY, size:MY-my }\n\t      }\n\t    },\n\t\n\t    shapeintersections: function(s1, bbox1, s2, bbox2, curveIntersectionThreshold) {\n\t      if(!utils.bboxoverlap(bbox1, bbox2)) return [];\n\t      var intersections = [];\n\t      var a1 = [s1.startcap, s1.forward, s1.back, s1.endcap];\n\t      var a2 = [s2.startcap, s2.forward, s2.back, s2.endcap];\n\t      a1.forEach(function(l1) {\n\t        if(l1.virtual) return;\n\t        a2.forEach(function(l2) {\n\t          if(l2.virtual) return;\n\t          var iss = l1.intersects(l2, curveIntersectionThreshold);\n\t          if(iss.length>0) {\n\t            iss.c1 = l1;\n\t            iss.c2 = l2;\n\t            iss.s1 = s1;\n\t            iss.s2 = s2;\n\t            intersections.push(iss);\n\t          }\n\t        });\n\t      });\n\t      return intersections;\n\t    },\n\t\n\t    makeshape: function(forward, back, curveIntersectionThreshold) {\n\t      var bpl = back.points.length;\n\t      var fpl = forward.points.length;\n\t      var start  = utils.makeline(back.points[bpl-1], forward.points[0]);\n\t      var end    = utils.makeline(forward.points[fpl-1], back.points[0]);\n\t      var shape  = {\n\t        startcap: start,\n\t        forward: forward,\n\t        back: back,\n\t        endcap: end,\n\t        bbox: utils.findbbox([start, forward, back, end])\n\t      };\n\t      var self = utils;\n\t      shape.intersections = function(s2) {\n\t        return self.shapeintersections(shape,shape.bbox,s2,s2.bbox, curveIntersectionThreshold);\n\t      };\n\t      return shape;\n\t    },\n\t\n\t    getminmax: function(curve, d, list) {\n\t      if(!list) return { min:0, max:0 };\n\t      var min=nMax, max=nMin,t,c;\n\t      if(list.indexOf(0)===-1) { list = [0].concat(list); }\n\t      if(list.indexOf(1)===-1) { list.push(1); }\n\t      for(var i=0,len=list.length; i<len; i++) {\n\t        t = list[i];\n\t        c = curve.get(t);\n\t        if(c[d] < min) { min = c[d]; }\n\t        if(c[d] > max) { max = c[d]; }\n\t      }\n\t      return { min:min, mid:(min+max)/2, max:max, size:max-min };\n\t    },\n\t\n\t    align: function(points, line) {\n\t      var tx = line.p1.x,\n\t          ty = line.p1.y,\n\t          a = -atan2(line.p2.y-ty, line.p2.x-tx),\n\t          d = function(v) {\n\t            return {\n\t              x: (v.x-tx)*cos(a) - (v.y-ty)*sin(a),\n\t              y: (v.x-tx)*sin(a) + (v.y-ty)*cos(a)\n\t            };\n\t          };\n\t      return points.map(d);\n\t    },\n\t\n\t    roots: function(points, line) {\n\t      line = line || {p1:{x:0,y:0},p2:{x:1,y:0}};\n\t      var order = points.length - 1;\n\t      var p = utils.align(points, line);\n\t      var reduce = function(t) { return 0<=t && t <=1; };\n\t\n\t      if (order === 2) {\n\t        var a = p[0].y,\n\t            b = p[1].y,\n\t            c = p[2].y,\n\t            d = a - 2*b + c;\n\t        if(d!==0) {\n\t          var m1 = -sqrt(b*b-a*c),\n\t              m2 = -a+b,\n\t              v1 = -( m1+m2)/d,\n\t              v2 = -(-m1+m2)/d;\n\t          return [v1, v2].filter(reduce);\n\t        }\n\t        else if(b!==c && d===0) {\n\t          return [ (2*b-c)/2*(b-c) ].filter(reduce);\n\t        }\n\t        return [];\n\t      }\n\t\n\t      // see http://www.trans4mind.com/personal_development/mathematics/polynomials/cubicAlgebra.htm\n\t      var pa = p[0].y,\n\t          pb = p[1].y,\n\t          pc = p[2].y,\n\t          pd = p[3].y,\n\t          d = (-pa + 3*pb - 3*pc + pd),\n\t          a = (3*pa - 6*pb + 3*pc) / d,\n\t          b = (-3*pa + 3*pb) / d,\n\t          c = pa / d,\n\t          p = (3*b - a*a)/3,\n\t          p3 = p/3,\n\t          q = (2*a*a*a - 9*a*b + 27*c)/27,\n\t          q2 = q/2,\n\t          discriminant = q2*q2 + p3*p3*p3,\n\t          u1,v1,x1,x2,x3;\n\t       if (discriminant < 0) {\n\t        var mp3 = -p/3,\n\t            mp33 = mp3*mp3*mp3,\n\t            r = sqrt( mp33 ),\n\t            t = -q/(2*r),\n\t            cosphi = t<-1 ? -1 : t>1 ? 1 : t,\n\t            phi = acos(cosphi),\n\t            crtr = crt(r),\n\t            t1 = 2*crtr;\n\t        x1 = t1 * cos(phi/3) - a/3;\n\t        x2 = t1 * cos((phi+tau)/3) - a/3;\n\t        x3 = t1 * cos((phi+2*tau)/3) - a/3;\n\t        return [x1, x2, x3].filter(reduce);\n\t      } else if(discriminant === 0) {\n\t        u1 = q2 < 0 ? crt(-q2) : -crt(q2);\n\t        x1 = 2*u1-a/3;\n\t        x2 = -u1 - a/3;\n\t        return [x1,x2].filter(reduce);\n\t      } else {\n\t        var sd = sqrt(discriminant);\n\t        u1 = crt(-q2+sd);\n\t        v1 = crt(q2+sd);\n\t        return [u1-v1-a/3].filter(reduce);;\n\t      }\n\t    },\n\t\n\t    droots: function(p) {\n\t      // quadratic roots are easy\n\t      if(p.length === 3) {\n\t        var a = p[0],\n\t            b = p[1],\n\t            c = p[2],\n\t            d = a - 2*b + c;\n\t        if(d!==0) {\n\t          var m1 = -sqrt(b*b-a*c),\n\t              m2 = -a+b,\n\t              v1 = -( m1+m2)/d,\n\t              v2 = -(-m1+m2)/d;\n\t          return [v1, v2];\n\t        }\n\t        else if(b!==c && d===0) {\n\t          return [(2*b-c)/(2*(b-c))];\n\t        }\n\t        return [];\n\t      }\n\t\n\t      // linear roots are even easier\n\t      if(p.length === 2) {\n\t        var a = p[0], b = p[1];\n\t        if(a!==b) {\n\t          return [a/(a-b)];\n\t        }\n\t        return [];\n\t      }\n\t    },\n\t\n\t    inflections: function(points) {\n\t      if (points.length<4) return [];\n\t\n\t      // FIXME: TODO: add in inflection abstraction for quartic+ curves?\n\t\n\t      var p = utils.align(points, { p1: points[0], p2: points.slice(-1)[0] }),\n\t          a = p[2].x * p[1].y,\n\t          b = p[3].x * p[1].y,\n\t          c = p[1].x * p[2].y,\n\t          d = p[3].x * p[2].y,\n\t          v1 = 18 * (-3*a + 2*b + 3*c - d),\n\t          v2 = 18 * (3*a - b - 3*c),\n\t          v3 = 18 * (c - a);\n\t\n\t      if (utils.approximately(v1,0)){\n\t        if(!utils.approximately(v2,0)){\n\t          var t = -v3/v2;\n\t          if (0 <= t && t <= 1)\n\t             return [t];\n\t        }\n\t        return [];\n\t      }\n\t\n\t      var trm = v2*v2 - 4*v1*v3,\n\t          sq = Math.sqrt(trm),\n\t          d = 2 * v1;\n\t\n\t      if (utils.approximately(d,0)) return [];\n\t\n\t      return [(sq-v2)/d, -(v2+sq)/d].filter(function(r) {\n\t        return (0 <= r && r <= 1);\n\t      });\n\t    },\n\t\n\t    bboxoverlap: function(b1,b2) {\n\t      var dims=['x','y'],len=dims.length,i,dim,l,t,d\n\t      for(i=0; i<len; i++) {\n\t        dim = dims[i];\n\t        l = b1[dim].mid;\n\t        t = b2[dim].mid;\n\t        d = (b1[dim].size + b2[dim].size)/2;\n\t        if(abs(l-t) >= d) return false;\n\t      }\n\t      return true;\n\t    },\n\t\n\t    expandbox: function(bbox, _bbox) {\n\t      if(_bbox.x.min < bbox.x.min) { bbox.x.min = _bbox.x.min; }\n\t      if(_bbox.y.min < bbox.y.min) { bbox.y.min = _bbox.y.min; }\n\t      if(_bbox.z && _bbox.z.min < bbox.z.min) { bbox.z.min = _bbox.z.min; }\n\t      if(_bbox.x.max > bbox.x.max) { bbox.x.max = _bbox.x.max; }\n\t      if(_bbox.y.max > bbox.y.max) { bbox.y.max = _bbox.y.max; }\n\t      if(_bbox.z && _bbox.z.max > bbox.z.max) { bbox.z.max = _bbox.z.max; }\n\t      bbox.x.mid = (bbox.x.min + bbox.x.max)/2;\n\t      bbox.y.mid = (bbox.y.min + bbox.y.max)/2;\n\t      if(bbox.z) { bbox.z.mid = (bbox.z.min + bbox.z.max)/2; }\n\t      bbox.x.size = bbox.x.max - bbox.x.min;\n\t      bbox.y.size = bbox.y.max - bbox.y.min;\n\t      if(bbox.z) { bbox.z.size = bbox.z.max - bbox.z.min; }\n\t    },\n\t\n\t    pairiteration: function(c1, c2, curveIntersectionThreshold) {\n\t      var c1b = c1.bbox(),\n\t          c2b = c2.bbox(),\n\t          r = 100000,\n\t          threshold = curveIntersectionThreshold || 0.5;\n\t      if(c1b.x.size + c1b.y.size < threshold && c2b.x.size + c2b.y.size < threshold) {\n\t        return [ ((r * (c1._t1+c1._t2)/2)|0)/r + \"/\" + ((r * (c2._t1+c2._t2)/2)|0)/r ];\n\t      }\n\t      var cc1 = c1.split(0.5),\n\t          cc2 = c2.split(0.5),\n\t          pairs = [\n\t            {left: cc1.left, right: cc2.left },\n\t            {left: cc1.left, right: cc2.right },\n\t            {left: cc1.right, right: cc2.right },\n\t            {left: cc1.right, right: cc2.left }];\n\t      pairs = pairs.filter(function(pair) {\n\t        return utils.bboxoverlap(pair.left.bbox(),pair.right.bbox());\n\t      });\n\t      var results = [];\n\t      if(pairs.length === 0) return results;\n\t      pairs.forEach(function(pair) {\n\t        results = results.concat(\n\t          utils.pairiteration(pair.left, pair.right, threshold)\n\t        );\n\t      })\n\t      results = results.filter(function(v,i) {\n\t        return results.indexOf(v) === i;\n\t      });\n\t      return results;\n\t    },\n\t\n\t    getccenter: function(p1,p2,p3) {\n\t      var dx1 = (p2.x - p1.x),\n\t          dy1 = (p2.y - p1.y),\n\t          dx2 = (p3.x - p2.x),\n\t          dy2 = (p3.y - p2.y);\n\t      var dx1p = dx1 * cos(quart) - dy1 * sin(quart),\n\t          dy1p = dx1 * sin(quart) + dy1 * cos(quart),\n\t          dx2p = dx2 * cos(quart) - dy2 * sin(quart),\n\t          dy2p = dx2 * sin(quart) + dy2 * cos(quart);\n\t      // chord midpoints\n\t      var mx1 = (p1.x + p2.x)/2,\n\t          my1 = (p1.y + p2.y)/2,\n\t          mx2 = (p2.x + p3.x)/2,\n\t          my2 = (p2.y + p3.y)/2;\n\t      // midpoint offsets\n\t      var mx1n = mx1 + dx1p,\n\t          my1n = my1 + dy1p,\n\t          mx2n = mx2 + dx2p,\n\t          my2n = my2 + dy2p;\n\t      // intersection of these lines:\n\t      var arc = utils.lli8(mx1,my1,mx1n,my1n, mx2,my2,mx2n,my2n),\n\t          r = utils.dist(arc,p1),\n\t          // arc start/end values, over mid point:\n\t          s = atan2(p1.y - arc.y, p1.x - arc.x),\n\t          m = atan2(p2.y - arc.y, p2.x - arc.x),\n\t          e = atan2(p3.y - arc.y, p3.x - arc.x),\n\t          _;\n\t      // determine arc direction (cw/ccw correction)\n\t      if (s<e) {\n\t        // if s<m<e, arc(s, e)\n\t        // if m<s<e, arc(e, s + tau)\n\t        // if s<e<m, arc(e, s + tau)\n\t        if (s>m || m>e) { s += tau; }\n\t        if (s>e) { _=e; e=s; s=_; }\n\t      } else {\n\t        // if e<m<s, arc(e, s)\n\t        // if m<e<s, arc(s, e + tau)\n\t        // if e<s<m, arc(s, e + tau)\n\t        if (e<m && m<s) { _=e; e=s; s=_; } else { e += tau; }\n\t      }\n\t      // assign and done.\n\t      arc.s = s;\n\t      arc.e = e;\n\t      arc.r = r;\n\t      return arc;\n\t    }\n\t  };\n\t\n\t  module.exports = utils;\n\t}());\n\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*!\n\t * The buffer module from node.js, for the browser.\n\t *\n\t * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n\t * @license  MIT\n\t */\n\t/* eslint-disable no-proto */\n\t\n\t'use strict'\n\t\n\tvar base64 = __webpack_require__(89)\n\tvar ieee754 = __webpack_require__(107)\n\tvar isArray = __webpack_require__(108)\n\t\n\texports.Buffer = Buffer\n\texports.SlowBuffer = SlowBuffer\n\texports.INSPECT_MAX_BYTES = 50\n\t\n\t/**\n\t * If `Buffer.TYPED_ARRAY_SUPPORT`:\n\t *   === true    Use Uint8Array implementation (fastest)\n\t *   === false   Use Object implementation (most compatible, even IE6)\n\t *\n\t * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n\t * Opera 11.6+, iOS 4.2+.\n\t *\n\t * Due to various browser bugs, sometimes the Object implementation will be used even\n\t * when the browser supports typed arrays.\n\t *\n\t * Note:\n\t *\n\t *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n\t *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n\t *\n\t *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n\t *\n\t *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n\t *     incorrect length in some situations.\n\t\n\t * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n\t * get the Object implementation, which is slower but behaves correctly.\n\t */\n\tBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n\t  ? global.TYPED_ARRAY_SUPPORT\n\t  : typedArraySupport()\n\t\n\t/*\n\t * Export kMaxLength after typed array support is determined.\n\t */\n\texports.kMaxLength = kMaxLength()\n\t\n\tfunction typedArraySupport () {\n\t  try {\n\t    var arr = new Uint8Array(1)\n\t    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n\t    return arr.foo() === 42 && // typed array instances can be augmented\n\t        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n\t        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n\t  } catch (e) {\n\t    return false\n\t  }\n\t}\n\t\n\tfunction kMaxLength () {\n\t  return Buffer.TYPED_ARRAY_SUPPORT\n\t    ? 0x7fffffff\n\t    : 0x3fffffff\n\t}\n\t\n\tfunction createBuffer (that, length) {\n\t  if (kMaxLength() < length) {\n\t    throw new RangeError('Invalid typed array length')\n\t  }\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    that = new Uint8Array(length)\n\t    that.__proto__ = Buffer.prototype\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    if (that === null) {\n\t      that = new Buffer(length)\n\t    }\n\t    that.length = length\n\t  }\n\t\n\t  return that\n\t}\n\t\n\t/**\n\t * The Buffer constructor returns instances of `Uint8Array` that have their\n\t * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n\t * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n\t * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n\t * returns a single octet.\n\t *\n\t * The `Uint8Array` prototype remains unmodified.\n\t */\n\t\n\tfunction Buffer (arg, encodingOrOffset, length) {\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n\t    return new Buffer(arg, encodingOrOffset, length)\n\t  }\n\t\n\t  // Common case.\n\t  if (typeof arg === 'number') {\n\t    if (typeof encodingOrOffset === 'string') {\n\t      throw new Error(\n\t        'If encoding is specified then the first argument must be a string'\n\t      )\n\t    }\n\t    return allocUnsafe(this, arg)\n\t  }\n\t  return from(this, arg, encodingOrOffset, length)\n\t}\n\t\n\tBuffer.poolSize = 8192 // not used by this implementation\n\t\n\t// TODO: Legacy, not needed anymore. Remove in next major version.\n\tBuffer._augment = function (arr) {\n\t  arr.__proto__ = Buffer.prototype\n\t  return arr\n\t}\n\t\n\tfunction from (that, value, encodingOrOffset, length) {\n\t  if (typeof value === 'number') {\n\t    throw new TypeError('\"value\" argument must not be a number')\n\t  }\n\t\n\t  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n\t    return fromArrayBuffer(that, value, encodingOrOffset, length)\n\t  }\n\t\n\t  if (typeof value === 'string') {\n\t    return fromString(that, value, encodingOrOffset)\n\t  }\n\t\n\t  return fromObject(that, value)\n\t}\n\t\n\t/**\n\t * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n\t * if value is a number.\n\t * Buffer.from(str[, encoding])\n\t * Buffer.from(array)\n\t * Buffer.from(buffer)\n\t * Buffer.from(arrayBuffer[, byteOffset[, length]])\n\t **/\n\tBuffer.from = function (value, encodingOrOffset, length) {\n\t  return from(null, value, encodingOrOffset, length)\n\t}\n\t\n\tif (Buffer.TYPED_ARRAY_SUPPORT) {\n\t  Buffer.prototype.__proto__ = Uint8Array.prototype\n\t  Buffer.__proto__ = Uint8Array\n\t  if (typeof Symbol !== 'undefined' && Symbol.species &&\n\t      Buffer[Symbol.species] === Buffer) {\n\t    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n\t    Object.defineProperty(Buffer, Symbol.species, {\n\t      value: null,\n\t      configurable: true\n\t    })\n\t  }\n\t}\n\t\n\tfunction assertSize (size) {\n\t  if (typeof size !== 'number') {\n\t    throw new TypeError('\"size\" argument must be a number')\n\t  } else if (size < 0) {\n\t    throw new RangeError('\"size\" argument must not be negative')\n\t  }\n\t}\n\t\n\tfunction alloc (that, size, fill, encoding) {\n\t  assertSize(size)\n\t  if (size <= 0) {\n\t    return createBuffer(that, size)\n\t  }\n\t  if (fill !== undefined) {\n\t    // Only pay attention to encoding if it's a string. This\n\t    // prevents accidentally sending in a number that would\n\t    // be interpretted as a start offset.\n\t    return typeof encoding === 'string'\n\t      ? createBuffer(that, size).fill(fill, encoding)\n\t      : createBuffer(that, size).fill(fill)\n\t  }\n\t  return createBuffer(that, size)\n\t}\n\t\n\t/**\n\t * Creates a new filled Buffer instance.\n\t * alloc(size[, fill[, encoding]])\n\t **/\n\tBuffer.alloc = function (size, fill, encoding) {\n\t  return alloc(null, size, fill, encoding)\n\t}\n\t\n\tfunction allocUnsafe (that, size) {\n\t  assertSize(size)\n\t  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n\t    for (var i = 0; i < size; ++i) {\n\t      that[i] = 0\n\t    }\n\t  }\n\t  return that\n\t}\n\t\n\t/**\n\t * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n\t * */\n\tBuffer.allocUnsafe = function (size) {\n\t  return allocUnsafe(null, size)\n\t}\n\t/**\n\t * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n\t */\n\tBuffer.allocUnsafeSlow = function (size) {\n\t  return allocUnsafe(null, size)\n\t}\n\t\n\tfunction fromString (that, string, encoding) {\n\t  if (typeof encoding !== 'string' || encoding === '') {\n\t    encoding = 'utf8'\n\t  }\n\t\n\t  if (!Buffer.isEncoding(encoding)) {\n\t    throw new TypeError('\"encoding\" must be a valid string encoding')\n\t  }\n\t\n\t  var length = byteLength(string, encoding) | 0\n\t  that = createBuffer(that, length)\n\t\n\t  var actual = that.write(string, encoding)\n\t\n\t  if (actual !== length) {\n\t    // Writing a hex string, for example, that contains invalid characters will\n\t    // cause everything after the first invalid character to be ignored. (e.g.\n\t    // 'abxxcd' will be treated as 'ab')\n\t    that = that.slice(0, actual)\n\t  }\n\t\n\t  return that\n\t}\n\t\n\tfunction fromArrayLike (that, array) {\n\t  var length = array.length < 0 ? 0 : checked(array.length) | 0\n\t  that = createBuffer(that, length)\n\t  for (var i = 0; i < length; i += 1) {\n\t    that[i] = array[i] & 255\n\t  }\n\t  return that\n\t}\n\t\n\tfunction fromArrayBuffer (that, array, byteOffset, length) {\n\t  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\t\n\t  if (byteOffset < 0 || array.byteLength < byteOffset) {\n\t    throw new RangeError('\\'offset\\' is out of bounds')\n\t  }\n\t\n\t  if (array.byteLength < byteOffset + (length || 0)) {\n\t    throw new RangeError('\\'length\\' is out of bounds')\n\t  }\n\t\n\t  if (byteOffset === undefined && length === undefined) {\n\t    array = new Uint8Array(array)\n\t  } else if (length === undefined) {\n\t    array = new Uint8Array(array, byteOffset)\n\t  } else {\n\t    array = new Uint8Array(array, byteOffset, length)\n\t  }\n\t\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    that = array\n\t    that.__proto__ = Buffer.prototype\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    that = fromArrayLike(that, array)\n\t  }\n\t  return that\n\t}\n\t\n\tfunction fromObject (that, obj) {\n\t  if (Buffer.isBuffer(obj)) {\n\t    var len = checked(obj.length) | 0\n\t    that = createBuffer(that, len)\n\t\n\t    if (that.length === 0) {\n\t      return that\n\t    }\n\t\n\t    obj.copy(that, 0, 0, len)\n\t    return that\n\t  }\n\t\n\t  if (obj) {\n\t    if ((typeof ArrayBuffer !== 'undefined' &&\n\t        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n\t      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n\t        return createBuffer(that, 0)\n\t      }\n\t      return fromArrayLike(that, obj)\n\t    }\n\t\n\t    if (obj.type === 'Buffer' && isArray(obj.data)) {\n\t      return fromArrayLike(that, obj.data)\n\t    }\n\t  }\n\t\n\t  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n\t}\n\t\n\tfunction checked (length) {\n\t  // Note: cannot use `length < kMaxLength()` here because that fails when\n\t  // length is NaN (which is otherwise coerced to zero.)\n\t  if (length >= kMaxLength()) {\n\t    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n\t                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n\t  }\n\t  return length | 0\n\t}\n\t\n\tfunction SlowBuffer (length) {\n\t  if (+length != length) { // eslint-disable-line eqeqeq\n\t    length = 0\n\t  }\n\t  return Buffer.alloc(+length)\n\t}\n\t\n\tBuffer.isBuffer = function isBuffer (b) {\n\t  return !!(b != null && b._isBuffer)\n\t}\n\t\n\tBuffer.compare = function compare (a, b) {\n\t  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n\t    throw new TypeError('Arguments must be Buffers')\n\t  }\n\t\n\t  if (a === b) return 0\n\t\n\t  var x = a.length\n\t  var y = b.length\n\t\n\t  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n\t    if (a[i] !== b[i]) {\n\t      x = a[i]\n\t      y = b[i]\n\t      break\n\t    }\n\t  }\n\t\n\t  if (x < y) return -1\n\t  if (y < x) return 1\n\t  return 0\n\t}\n\t\n\tBuffer.isEncoding = function isEncoding (encoding) {\n\t  switch (String(encoding).toLowerCase()) {\n\t    case 'hex':\n\t    case 'utf8':\n\t    case 'utf-8':\n\t    case 'ascii':\n\t    case 'latin1':\n\t    case 'binary':\n\t    case 'base64':\n\t    case 'ucs2':\n\t    case 'ucs-2':\n\t    case 'utf16le':\n\t    case 'utf-16le':\n\t      return true\n\t    default:\n\t      return false\n\t  }\n\t}\n\t\n\tBuffer.concat = function concat (list, length) {\n\t  if (!isArray(list)) {\n\t    throw new TypeError('\"list\" argument must be an Array of Buffers')\n\t  }\n\t\n\t  if (list.length === 0) {\n\t    return Buffer.alloc(0)\n\t  }\n\t\n\t  var i\n\t  if (length === undefined) {\n\t    length = 0\n\t    for (i = 0; i < list.length; ++i) {\n\t      length += list[i].length\n\t    }\n\t  }\n\t\n\t  var buffer = Buffer.allocUnsafe(length)\n\t  var pos = 0\n\t  for (i = 0; i < list.length; ++i) {\n\t    var buf = list[i]\n\t    if (!Buffer.isBuffer(buf)) {\n\t      throw new TypeError('\"list\" argument must be an Array of Buffers')\n\t    }\n\t    buf.copy(buffer, pos)\n\t    pos += buf.length\n\t  }\n\t  return buffer\n\t}\n\t\n\tfunction byteLength (string, encoding) {\n\t  if (Buffer.isBuffer(string)) {\n\t    return string.length\n\t  }\n\t  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n\t      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n\t    return string.byteLength\n\t  }\n\t  if (typeof string !== 'string') {\n\t    string = '' + string\n\t  }\n\t\n\t  var len = string.length\n\t  if (len === 0) return 0\n\t\n\t  // Use a for loop to avoid recursion\n\t  var loweredCase = false\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'ascii':\n\t      case 'latin1':\n\t      case 'binary':\n\t        return len\n\t      case 'utf8':\n\t      case 'utf-8':\n\t      case undefined:\n\t        return utf8ToBytes(string).length\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return len * 2\n\t      case 'hex':\n\t        return len >>> 1\n\t      case 'base64':\n\t        return base64ToBytes(string).length\n\t      default:\n\t        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n\t        encoding = ('' + encoding).toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\tBuffer.byteLength = byteLength\n\t\n\tfunction slowToString (encoding, start, end) {\n\t  var loweredCase = false\n\t\n\t  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n\t  // property of a typed array.\n\t\n\t  // This behaves neither like String nor Uint8Array in that we set start/end\n\t  // to their upper/lower bounds if the value passed is out of range.\n\t  // undefined is handled specially as per ECMA-262 6th Edition,\n\t  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\t  if (start === undefined || start < 0) {\n\t    start = 0\n\t  }\n\t  // Return early if start > this.length. Done here to prevent potential uint32\n\t  // coercion fail below.\n\t  if (start > this.length) {\n\t    return ''\n\t  }\n\t\n\t  if (end === undefined || end > this.length) {\n\t    end = this.length\n\t  }\n\t\n\t  if (end <= 0) {\n\t    return ''\n\t  }\n\t\n\t  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n\t  end >>>= 0\n\t  start >>>= 0\n\t\n\t  if (end <= start) {\n\t    return ''\n\t  }\n\t\n\t  if (!encoding) encoding = 'utf8'\n\t\n\t  while (true) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexSlice(this, start, end)\n\t\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Slice(this, start, end)\n\t\n\t      case 'ascii':\n\t        return asciiSlice(this, start, end)\n\t\n\t      case 'latin1':\n\t      case 'binary':\n\t        return latin1Slice(this, start, end)\n\t\n\t      case 'base64':\n\t        return base64Slice(this, start, end)\n\t\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return utf16leSlice(this, start, end)\n\t\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n\t        encoding = (encoding + '').toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\t\n\t// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n\t// Buffer instances.\n\tBuffer.prototype._isBuffer = true\n\t\n\tfunction swap (b, n, m) {\n\t  var i = b[n]\n\t  b[n] = b[m]\n\t  b[m] = i\n\t}\n\t\n\tBuffer.prototype.swap16 = function swap16 () {\n\t  var len = this.length\n\t  if (len % 2 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 16-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 2) {\n\t    swap(this, i, i + 1)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.swap32 = function swap32 () {\n\t  var len = this.length\n\t  if (len % 4 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 32-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 4) {\n\t    swap(this, i, i + 3)\n\t    swap(this, i + 1, i + 2)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.swap64 = function swap64 () {\n\t  var len = this.length\n\t  if (len % 8 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 64-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 8) {\n\t    swap(this, i, i + 7)\n\t    swap(this, i + 1, i + 6)\n\t    swap(this, i + 2, i + 5)\n\t    swap(this, i + 3, i + 4)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.toString = function toString () {\n\t  var length = this.length | 0\n\t  if (length === 0) return ''\n\t  if (arguments.length === 0) return utf8Slice(this, 0, length)\n\t  return slowToString.apply(this, arguments)\n\t}\n\t\n\tBuffer.prototype.equals = function equals (b) {\n\t  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n\t  if (this === b) return true\n\t  return Buffer.compare(this, b) === 0\n\t}\n\t\n\tBuffer.prototype.inspect = function inspect () {\n\t  var str = ''\n\t  var max = exports.INSPECT_MAX_BYTES\n\t  if (this.length > 0) {\n\t    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n\t    if (this.length > max) str += ' ... '\n\t  }\n\t  return '<Buffer ' + str + '>'\n\t}\n\t\n\tBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n\t  if (!Buffer.isBuffer(target)) {\n\t    throw new TypeError('Argument must be a Buffer')\n\t  }\n\t\n\t  if (start === undefined) {\n\t    start = 0\n\t  }\n\t  if (end === undefined) {\n\t    end = target ? target.length : 0\n\t  }\n\t  if (thisStart === undefined) {\n\t    thisStart = 0\n\t  }\n\t  if (thisEnd === undefined) {\n\t    thisEnd = this.length\n\t  }\n\t\n\t  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n\t    throw new RangeError('out of range index')\n\t  }\n\t\n\t  if (thisStart >= thisEnd && start >= end) {\n\t    return 0\n\t  }\n\t  if (thisStart >= thisEnd) {\n\t    return -1\n\t  }\n\t  if (start >= end) {\n\t    return 1\n\t  }\n\t\n\t  start >>>= 0\n\t  end >>>= 0\n\t  thisStart >>>= 0\n\t  thisEnd >>>= 0\n\t\n\t  if (this === target) return 0\n\t\n\t  var x = thisEnd - thisStart\n\t  var y = end - start\n\t  var len = Math.min(x, y)\n\t\n\t  var thisCopy = this.slice(thisStart, thisEnd)\n\t  var targetCopy = target.slice(start, end)\n\t\n\t  for (var i = 0; i < len; ++i) {\n\t    if (thisCopy[i] !== targetCopy[i]) {\n\t      x = thisCopy[i]\n\t      y = targetCopy[i]\n\t      break\n\t    }\n\t  }\n\t\n\t  if (x < y) return -1\n\t  if (y < x) return 1\n\t  return 0\n\t}\n\t\n\t// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n\t// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n\t//\n\t// Arguments:\n\t// - buffer - a Buffer to search\n\t// - val - a string, Buffer, or number\n\t// - byteOffset - an index into `buffer`; will be clamped to an int32\n\t// - encoding - an optional encoding, relevant is val is a string\n\t// - dir - true for indexOf, false for lastIndexOf\n\tfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n\t  // Empty buffer means no match\n\t  if (buffer.length === 0) return -1\n\t\n\t  // Normalize byteOffset\n\t  if (typeof byteOffset === 'string') {\n\t    encoding = byteOffset\n\t    byteOffset = 0\n\t  } else if (byteOffset > 0x7fffffff) {\n\t    byteOffset = 0x7fffffff\n\t  } else if (byteOffset < -0x80000000) {\n\t    byteOffset = -0x80000000\n\t  }\n\t  byteOffset = +byteOffset  // Coerce to Number.\n\t  if (isNaN(byteOffset)) {\n\t    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n\t    byteOffset = dir ? 0 : (buffer.length - 1)\n\t  }\n\t\n\t  // Normalize byteOffset: negative offsets start from the end of the buffer\n\t  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n\t  if (byteOffset >= buffer.length) {\n\t    if (dir) return -1\n\t    else byteOffset = buffer.length - 1\n\t  } else if (byteOffset < 0) {\n\t    if (dir) byteOffset = 0\n\t    else return -1\n\t  }\n\t\n\t  // Normalize val\n\t  if (typeof val === 'string') {\n\t    val = Buffer.from(val, encoding)\n\t  }\n\t\n\t  // Finally, search either indexOf (if dir is true) or lastIndexOf\n\t  if (Buffer.isBuffer(val)) {\n\t    // Special case: looking for empty string/buffer always fails\n\t    if (val.length === 0) {\n\t      return -1\n\t    }\n\t    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n\t  } else if (typeof val === 'number') {\n\t    val = val & 0xFF // Search for a byte value [0-255]\n\t    if (Buffer.TYPED_ARRAY_SUPPORT &&\n\t        typeof Uint8Array.prototype.indexOf === 'function') {\n\t      if (dir) {\n\t        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n\t      } else {\n\t        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n\t      }\n\t    }\n\t    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n\t  }\n\t\n\t  throw new TypeError('val must be string, number or Buffer')\n\t}\n\t\n\tfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n\t  var indexSize = 1\n\t  var arrLength = arr.length\n\t  var valLength = val.length\n\t\n\t  if (encoding !== undefined) {\n\t    encoding = String(encoding).toLowerCase()\n\t    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n\t        encoding === 'utf16le' || encoding === 'utf-16le') {\n\t      if (arr.length < 2 || val.length < 2) {\n\t        return -1\n\t      }\n\t      indexSize = 2\n\t      arrLength /= 2\n\t      valLength /= 2\n\t      byteOffset /= 2\n\t    }\n\t  }\n\t\n\t  function read (buf, i) {\n\t    if (indexSize === 1) {\n\t      return buf[i]\n\t    } else {\n\t      return buf.readUInt16BE(i * indexSize)\n\t    }\n\t  }\n\t\n\t  var i\n\t  if (dir) {\n\t    var foundIndex = -1\n\t    for (i = byteOffset; i < arrLength; i++) {\n\t      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n\t        if (foundIndex === -1) foundIndex = i\n\t        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n\t      } else {\n\t        if (foundIndex !== -1) i -= i - foundIndex\n\t        foundIndex = -1\n\t      }\n\t    }\n\t  } else {\n\t    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n\t    for (i = byteOffset; i >= 0; i--) {\n\t      var found = true\n\t      for (var j = 0; j < valLength; j++) {\n\t        if (read(arr, i + j) !== read(val, j)) {\n\t          found = false\n\t          break\n\t        }\n\t      }\n\t      if (found) return i\n\t    }\n\t  }\n\t\n\t  return -1\n\t}\n\t\n\tBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n\t  return this.indexOf(val, byteOffset, encoding) !== -1\n\t}\n\t\n\tBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n\t  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n\t}\n\t\n\tBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n\t  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n\t}\n\t\n\tfunction hexWrite (buf, string, offset, length) {\n\t  offset = Number(offset) || 0\n\t  var remaining = buf.length - offset\n\t  if (!length) {\n\t    length = remaining\n\t  } else {\n\t    length = Number(length)\n\t    if (length > remaining) {\n\t      length = remaining\n\t    }\n\t  }\n\t\n\t  // must be an even number of digits\n\t  var strLen = string.length\n\t  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\t\n\t  if (length > strLen / 2) {\n\t    length = strLen / 2\n\t  }\n\t  for (var i = 0; i < length; ++i) {\n\t    var parsed = parseInt(string.substr(i * 2, 2), 16)\n\t    if (isNaN(parsed)) return i\n\t    buf[offset + i] = parsed\n\t  }\n\t  return i\n\t}\n\t\n\tfunction utf8Write (buf, string, offset, length) {\n\t  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n\t}\n\t\n\tfunction asciiWrite (buf, string, offset, length) {\n\t  return blitBuffer(asciiToBytes(string), buf, offset, length)\n\t}\n\t\n\tfunction latin1Write (buf, string, offset, length) {\n\t  return asciiWrite(buf, string, offset, length)\n\t}\n\t\n\tfunction base64Write (buf, string, offset, length) {\n\t  return blitBuffer(base64ToBytes(string), buf, offset, length)\n\t}\n\t\n\tfunction ucs2Write (buf, string, offset, length) {\n\t  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n\t}\n\t\n\tBuffer.prototype.write = function write (string, offset, length, encoding) {\n\t  // Buffer#write(string)\n\t  if (offset === undefined) {\n\t    encoding = 'utf8'\n\t    length = this.length\n\t    offset = 0\n\t  // Buffer#write(string, encoding)\n\t  } else if (length === undefined && typeof offset === 'string') {\n\t    encoding = offset\n\t    length = this.length\n\t    offset = 0\n\t  // Buffer#write(string, offset[, length][, encoding])\n\t  } else if (isFinite(offset)) {\n\t    offset = offset | 0\n\t    if (isFinite(length)) {\n\t      length = length | 0\n\t      if (encoding === undefined) encoding = 'utf8'\n\t    } else {\n\t      encoding = length\n\t      length = undefined\n\t    }\n\t  // legacy write(string, encoding, offset, length) - remove in v0.13\n\t  } else {\n\t    throw new Error(\n\t      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n\t    )\n\t  }\n\t\n\t  var remaining = this.length - offset\n\t  if (length === undefined || length > remaining) length = remaining\n\t\n\t  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n\t    throw new RangeError('Attempt to write outside buffer bounds')\n\t  }\n\t\n\t  if (!encoding) encoding = 'utf8'\n\t\n\t  var loweredCase = false\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexWrite(this, string, offset, length)\n\t\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Write(this, string, offset, length)\n\t\n\t      case 'ascii':\n\t        return asciiWrite(this, string, offset, length)\n\t\n\t      case 'latin1':\n\t      case 'binary':\n\t        return latin1Write(this, string, offset, length)\n\t\n\t      case 'base64':\n\t        // Warning: maxLength not taken into account in base64Write\n\t        return base64Write(this, string, offset, length)\n\t\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return ucs2Write(this, string, offset, length)\n\t\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n\t        encoding = ('' + encoding).toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\t\n\tBuffer.prototype.toJSON = function toJSON () {\n\t  return {\n\t    type: 'Buffer',\n\t    data: Array.prototype.slice.call(this._arr || this, 0)\n\t  }\n\t}\n\t\n\tfunction base64Slice (buf, start, end) {\n\t  if (start === 0 && end === buf.length) {\n\t    return base64.fromByteArray(buf)\n\t  } else {\n\t    return base64.fromByteArray(buf.slice(start, end))\n\t  }\n\t}\n\t\n\tfunction utf8Slice (buf, start, end) {\n\t  end = Math.min(buf.length, end)\n\t  var res = []\n\t\n\t  var i = start\n\t  while (i < end) {\n\t    var firstByte = buf[i]\n\t    var codePoint = null\n\t    var bytesPerSequence = (firstByte > 0xEF) ? 4\n\t      : (firstByte > 0xDF) ? 3\n\t      : (firstByte > 0xBF) ? 2\n\t      : 1\n\t\n\t    if (i + bytesPerSequence <= end) {\n\t      var secondByte, thirdByte, fourthByte, tempCodePoint\n\t\n\t      switch (bytesPerSequence) {\n\t        case 1:\n\t          if (firstByte < 0x80) {\n\t            codePoint = firstByte\n\t          }\n\t          break\n\t        case 2:\n\t          secondByte = buf[i + 1]\n\t          if ((secondByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n\t            if (tempCodePoint > 0x7F) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t          break\n\t        case 3:\n\t          secondByte = buf[i + 1]\n\t          thirdByte = buf[i + 2]\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n\t            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t          break\n\t        case 4:\n\t          secondByte = buf[i + 1]\n\t          thirdByte = buf[i + 2]\n\t          fourthByte = buf[i + 3]\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n\t            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t      }\n\t    }\n\t\n\t    if (codePoint === null) {\n\t      // we did not generate a valid codePoint so insert a\n\t      // replacement char (U+FFFD) and advance only 1 byte\n\t      codePoint = 0xFFFD\n\t      bytesPerSequence = 1\n\t    } else if (codePoint > 0xFFFF) {\n\t      // encode to utf16 (surrogate pair dance)\n\t      codePoint -= 0x10000\n\t      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n\t      codePoint = 0xDC00 | codePoint & 0x3FF\n\t    }\n\t\n\t    res.push(codePoint)\n\t    i += bytesPerSequence\n\t  }\n\t\n\t  return decodeCodePointsArray(res)\n\t}\n\t\n\t// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n\t// the lowest limit is Chrome, with 0x10000 args.\n\t// We go 1 magnitude less, for safety\n\tvar MAX_ARGUMENTS_LENGTH = 0x1000\n\t\n\tfunction decodeCodePointsArray (codePoints) {\n\t  var len = codePoints.length\n\t  if (len <= MAX_ARGUMENTS_LENGTH) {\n\t    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n\t  }\n\t\n\t  // Decode in chunks to avoid \"call stack size exceeded\".\n\t  var res = ''\n\t  var i = 0\n\t  while (i < len) {\n\t    res += String.fromCharCode.apply(\n\t      String,\n\t      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n\t    )\n\t  }\n\t  return res\n\t}\n\t\n\tfunction asciiSlice (buf, start, end) {\n\t  var ret = ''\n\t  end = Math.min(buf.length, end)\n\t\n\t  for (var i = start; i < end; ++i) {\n\t    ret += String.fromCharCode(buf[i] & 0x7F)\n\t  }\n\t  return ret\n\t}\n\t\n\tfunction latin1Slice (buf, start, end) {\n\t  var ret = ''\n\t  end = Math.min(buf.length, end)\n\t\n\t  for (var i = start; i < end; ++i) {\n\t    ret += String.fromCharCode(buf[i])\n\t  }\n\t  return ret\n\t}\n\t\n\tfunction hexSlice (buf, start, end) {\n\t  var len = buf.length\n\t\n\t  if (!start || start < 0) start = 0\n\t  if (!end || end < 0 || end > len) end = len\n\t\n\t  var out = ''\n\t  for (var i = start; i < end; ++i) {\n\t    out += toHex(buf[i])\n\t  }\n\t  return out\n\t}\n\t\n\tfunction utf16leSlice (buf, start, end) {\n\t  var bytes = buf.slice(start, end)\n\t  var res = ''\n\t  for (var i = 0; i < bytes.length; i += 2) {\n\t    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n\t  }\n\t  return res\n\t}\n\t\n\tBuffer.prototype.slice = function slice (start, end) {\n\t  var len = this.length\n\t  start = ~~start\n\t  end = end === undefined ? len : ~~end\n\t\n\t  if (start < 0) {\n\t    start += len\n\t    if (start < 0) start = 0\n\t  } else if (start > len) {\n\t    start = len\n\t  }\n\t\n\t  if (end < 0) {\n\t    end += len\n\t    if (end < 0) end = 0\n\t  } else if (end > len) {\n\t    end = len\n\t  }\n\t\n\t  if (end < start) end = start\n\t\n\t  var newBuf\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    newBuf = this.subarray(start, end)\n\t    newBuf.__proto__ = Buffer.prototype\n\t  } else {\n\t    var sliceLen = end - start\n\t    newBuf = new Buffer(sliceLen, undefined)\n\t    for (var i = 0; i < sliceLen; ++i) {\n\t      newBuf[i] = this[i + start]\n\t    }\n\t  }\n\t\n\t  return newBuf\n\t}\n\t\n\t/*\n\t * Need to make sure that buffer isn't trying to write out of bounds.\n\t */\n\tfunction checkOffset (offset, ext, length) {\n\t  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n\t  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n\t}\n\t\n\tBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var val = this[offset]\n\t  var mul = 1\n\t  var i = 0\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul\n\t  }\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    checkOffset(offset, byteLength, this.length)\n\t  }\n\t\n\t  var val = this[offset + --byteLength]\n\t  var mul = 1\n\t  while (byteLength > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --byteLength] * mul\n\t  }\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length)\n\t  return this[offset]\n\t}\n\t\n\tBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  return this[offset] | (this[offset + 1] << 8)\n\t}\n\t\n\tBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  return (this[offset] << 8) | this[offset + 1]\n\t}\n\t\n\tBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return ((this[offset]) |\n\t      (this[offset + 1] << 8) |\n\t      (this[offset + 2] << 16)) +\n\t      (this[offset + 3] * 0x1000000)\n\t}\n\t\n\tBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset] * 0x1000000) +\n\t    ((this[offset + 1] << 16) |\n\t    (this[offset + 2] << 8) |\n\t    this[offset + 3])\n\t}\n\t\n\tBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var val = this[offset]\n\t  var mul = 1\n\t  var i = 0\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul\n\t  }\n\t  mul *= 0x80\n\t\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var i = byteLength\n\t  var mul = 1\n\t  var val = this[offset + --i]\n\t  while (i > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --i] * mul\n\t  }\n\t  mul *= 0x80\n\t\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length)\n\t  if (!(this[offset] & 0x80)) return (this[offset])\n\t  return ((0xff - this[offset] + 1) * -1)\n\t}\n\t\n\tBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  var val = this[offset] | (this[offset + 1] << 8)\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t}\n\t\n\tBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  var val = this[offset + 1] | (this[offset] << 8)\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t}\n\t\n\tBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset]) |\n\t    (this[offset + 1] << 8) |\n\t    (this[offset + 2] << 16) |\n\t    (this[offset + 3] << 24)\n\t}\n\t\n\tBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset] << 24) |\n\t    (this[offset + 1] << 16) |\n\t    (this[offset + 2] << 8) |\n\t    (this[offset + 3])\n\t}\n\t\n\tBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t  return ieee754.read(this, offset, true, 23, 4)\n\t}\n\t\n\tBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t  return ieee754.read(this, offset, false, 23, 4)\n\t}\n\t\n\tBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length)\n\t  return ieee754.read(this, offset, true, 52, 8)\n\t}\n\t\n\tBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length)\n\t  return ieee754.read(this, offset, false, 52, 8)\n\t}\n\t\n\tfunction checkInt (buf, value, offset, ext, max, min) {\n\t  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n\t  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n\t  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n\t}\n\t\n\tBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n\t    checkInt(this, value, offset, byteLength, maxBytes, 0)\n\t  }\n\t\n\t  var mul = 1\n\t  var i = 0\n\t  this[offset] = value & 0xFF\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    this[offset + i] = (value / mul) & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n\t    checkInt(this, value, offset, byteLength, maxBytes, 0)\n\t  }\n\t\n\t  var i = byteLength - 1\n\t  var mul = 1\n\t  this[offset + i] = value & 0xFF\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    this[offset + i] = (value / mul) & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n\t  this[offset] = (value & 0xff)\n\t  return offset + 1\n\t}\n\t\n\tfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffff + value + 1\n\t  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n\t    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n\t      (littleEndian ? i : 1 - i) * 8\n\t  }\n\t}\n\t\n\tBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 8)\n\t    this[offset + 1] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffffffff + value + 1\n\t  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n\t    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n\t  }\n\t}\n\t\n\tBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset + 3] = (value >>> 24)\n\t    this[offset + 2] = (value >>> 16)\n\t    this[offset + 1] = (value >>> 8)\n\t    this[offset] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 24)\n\t    this[offset + 1] = (value >>> 16)\n\t    this[offset + 2] = (value >>> 8)\n\t    this[offset + 3] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1)\n\t\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n\t  }\n\t\n\t  var i = 0\n\t  var mul = 1\n\t  var sub = 0\n\t  this[offset] = value & 0xFF\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n\t      sub = 1\n\t    }\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1)\n\t\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n\t  }\n\t\n\t  var i = byteLength - 1\n\t  var mul = 1\n\t  var sub = 0\n\t  this[offset + i] = value & 0xFF\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n\t      sub = 1\n\t    }\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n\t  if (value < 0) value = 0xff + value + 1\n\t  this[offset] = (value & 0xff)\n\t  return offset + 1\n\t}\n\t\n\tBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 8)\n\t    this[offset + 1] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t    this[offset + 2] = (value >>> 16)\n\t    this[offset + 3] = (value >>> 24)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n\t  if (value < 0) value = 0xffffffff + value + 1\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 24)\n\t    this[offset + 1] = (value >>> 16)\n\t    this[offset + 2] = (value >>> 8)\n\t    this[offset + 3] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n\t  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n\t  if (offset < 0) throw new RangeError('Index out of range')\n\t}\n\t\n\tfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n\t  }\n\t  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, true, noAssert)\n\t}\n\t\n\tBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, false, noAssert)\n\t}\n\t\n\tfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n\t  }\n\t  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n\t  return offset + 8\n\t}\n\t\n\tBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, true, noAssert)\n\t}\n\t\n\tBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, false, noAssert)\n\t}\n\t\n\t// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\tBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n\t  if (!start) start = 0\n\t  if (!end && end !== 0) end = this.length\n\t  if (targetStart >= target.length) targetStart = target.length\n\t  if (!targetStart) targetStart = 0\n\t  if (end > 0 && end < start) end = start\n\t\n\t  // Copy 0 bytes; we're done\n\t  if (end === start) return 0\n\t  if (target.length === 0 || this.length === 0) return 0\n\t\n\t  // Fatal error conditions\n\t  if (targetStart < 0) {\n\t    throw new RangeError('targetStart out of bounds')\n\t  }\n\t  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n\t  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\t\n\t  // Are we oob?\n\t  if (end > this.length) end = this.length\n\t  if (target.length - targetStart < end - start) {\n\t    end = target.length - targetStart + start\n\t  }\n\t\n\t  var len = end - start\n\t  var i\n\t\n\t  if (this === target && start < targetStart && targetStart < end) {\n\t    // descending copy from end\n\t    for (i = len - 1; i >= 0; --i) {\n\t      target[i + targetStart] = this[i + start]\n\t    }\n\t  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // ascending copy from start\n\t    for (i = 0; i < len; ++i) {\n\t      target[i + targetStart] = this[i + start]\n\t    }\n\t  } else {\n\t    Uint8Array.prototype.set.call(\n\t      target,\n\t      this.subarray(start, start + len),\n\t      targetStart\n\t    )\n\t  }\n\t\n\t  return len\n\t}\n\t\n\t// Usage:\n\t//    buffer.fill(number[, offset[, end]])\n\t//    buffer.fill(buffer[, offset[, end]])\n\t//    buffer.fill(string[, offset[, end]][, encoding])\n\tBuffer.prototype.fill = function fill (val, start, end, encoding) {\n\t  // Handle string cases:\n\t  if (typeof val === 'string') {\n\t    if (typeof start === 'string') {\n\t      encoding = start\n\t      start = 0\n\t      end = this.length\n\t    } else if (typeof end === 'string') {\n\t      encoding = end\n\t      end = this.length\n\t    }\n\t    if (val.length === 1) {\n\t      var code = val.charCodeAt(0)\n\t      if (code < 256) {\n\t        val = code\n\t      }\n\t    }\n\t    if (encoding !== undefined && typeof encoding !== 'string') {\n\t      throw new TypeError('encoding must be a string')\n\t    }\n\t    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n\t      throw new TypeError('Unknown encoding: ' + encoding)\n\t    }\n\t  } else if (typeof val === 'number') {\n\t    val = val & 255\n\t  }\n\t\n\t  // Invalid ranges are not set to a default, so can range check early.\n\t  if (start < 0 || this.length < start || this.length < end) {\n\t    throw new RangeError('Out of range index')\n\t  }\n\t\n\t  if (end <= start) {\n\t    return this\n\t  }\n\t\n\t  start = start >>> 0\n\t  end = end === undefined ? this.length : end >>> 0\n\t\n\t  if (!val) val = 0\n\t\n\t  var i\n\t  if (typeof val === 'number') {\n\t    for (i = start; i < end; ++i) {\n\t      this[i] = val\n\t    }\n\t  } else {\n\t    var bytes = Buffer.isBuffer(val)\n\t      ? val\n\t      : utf8ToBytes(new Buffer(val, encoding).toString())\n\t    var len = bytes.length\n\t    for (i = 0; i < end - start; ++i) {\n\t      this[i + start] = bytes[i % len]\n\t    }\n\t  }\n\t\n\t  return this\n\t}\n\t\n\t// HELPER FUNCTIONS\n\t// ================\n\t\n\tvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\t\n\tfunction base64clean (str) {\n\t  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n\t  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n\t  // Node converts strings with length < 2 to ''\n\t  if (str.length < 2) return ''\n\t  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\t  while (str.length % 4 !== 0) {\n\t    str = str + '='\n\t  }\n\t  return str\n\t}\n\t\n\tfunction stringtrim (str) {\n\t  if (str.trim) return str.trim()\n\t  return str.replace(/^\\s+|\\s+$/g, '')\n\t}\n\t\n\tfunction toHex (n) {\n\t  if (n < 16) return '0' + n.toString(16)\n\t  return n.toString(16)\n\t}\n\t\n\tfunction utf8ToBytes (string, units) {\n\t  units = units || Infinity\n\t  var codePoint\n\t  var length = string.length\n\t  var leadSurrogate = null\n\t  var bytes = []\n\t\n\t  for (var i = 0; i < length; ++i) {\n\t    codePoint = string.charCodeAt(i)\n\t\n\t    // is surrogate component\n\t    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n\t      // last char was a lead\n\t      if (!leadSurrogate) {\n\t        // no lead yet\n\t        if (codePoint > 0xDBFF) {\n\t          // unexpected trail\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          continue\n\t        } else if (i + 1 === length) {\n\t          // unpaired lead\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          continue\n\t        }\n\t\n\t        // valid lead\n\t        leadSurrogate = codePoint\n\t\n\t        continue\n\t      }\n\t\n\t      // 2 leads in a row\n\t      if (codePoint < 0xDC00) {\n\t        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t        leadSurrogate = codePoint\n\t        continue\n\t      }\n\t\n\t      // valid surrogate pair\n\t      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n\t    } else if (leadSurrogate) {\n\t      // valid bmp char, but last char was a lead\n\t      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t    }\n\t\n\t    leadSurrogate = null\n\t\n\t    // encode utf8\n\t    if (codePoint < 0x80) {\n\t      if ((units -= 1) < 0) break\n\t      bytes.push(codePoint)\n\t    } else if (codePoint < 0x800) {\n\t      if ((units -= 2) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x6 | 0xC0,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else if (codePoint < 0x10000) {\n\t      if ((units -= 3) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0xC | 0xE0,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else if (codePoint < 0x110000) {\n\t      if ((units -= 4) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x12 | 0xF0,\n\t        codePoint >> 0xC & 0x3F | 0x80,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else {\n\t      throw new Error('Invalid code point')\n\t    }\n\t  }\n\t\n\t  return bytes\n\t}\n\t\n\tfunction asciiToBytes (str) {\n\t  var byteArray = []\n\t  for (var i = 0; i < str.length; ++i) {\n\t    // Node's code seems to be doing this and not & 0x7F..\n\t    byteArray.push(str.charCodeAt(i) & 0xFF)\n\t  }\n\t  return byteArray\n\t}\n\t\n\tfunction utf16leToBytes (str, units) {\n\t  var c, hi, lo\n\t  var byteArray = []\n\t  for (var i = 0; i < str.length; ++i) {\n\t    if ((units -= 2) < 0) break\n\t\n\t    c = str.charCodeAt(i)\n\t    hi = c >> 8\n\t    lo = c % 256\n\t    byteArray.push(lo)\n\t    byteArray.push(hi)\n\t  }\n\t\n\t  return byteArray\n\t}\n\t\n\tfunction base64ToBytes (str) {\n\t  return base64.toByteArray(base64clean(str))\n\t}\n\t\n\tfunction blitBuffer (src, dst, offset, length) {\n\t  for (var i = 0; i < length; ++i) {\n\t    if ((i + offset >= dst.length) || (i >= src.length)) break\n\t    dst[i + offset] = src[i]\n\t  }\n\t  return i\n\t}\n\t\n\tfunction isnan (val) {\n\t  return val !== val // eslint-disable-line no-self-compare\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 55 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @typechecks\n\t */\n\t\n\tvar emptyFunction = __webpack_require__(8);\n\t\n\t/**\n\t * Upstream version of event listener. Does not take into account specific\n\t * nature of platform.\n\t */\n\tvar EventListener = {\n\t  /**\n\t   * Listen to DOM events during the bubble phase.\n\t   *\n\t   * @param {DOMEventTarget} target DOM element to register listener on.\n\t   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n\t   * @param {function} callback Callback function.\n\t   * @return {object} Object with a `remove` method.\n\t   */\n\t  listen: function listen(target, eventType, callback) {\n\t    if (target.addEventListener) {\n\t      target.addEventListener(eventType, callback, false);\n\t      return {\n\t        remove: function remove() {\n\t          target.removeEventListener(eventType, callback, false);\n\t        }\n\t      };\n\t    } else if (target.attachEvent) {\n\t      target.attachEvent('on' + eventType, callback);\n\t      return {\n\t        remove: function remove() {\n\t          target.detachEvent('on' + eventType, callback);\n\t        }\n\t      };\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Listen to DOM events during the capture phase.\n\t   *\n\t   * @param {DOMEventTarget} target DOM element to register listener on.\n\t   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n\t   * @param {function} callback Callback function.\n\t   * @return {object} Object with a `remove` method.\n\t   */\n\t  capture: function capture(target, eventType, callback) {\n\t    if (target.addEventListener) {\n\t      target.addEventListener(eventType, callback, true);\n\t      return {\n\t        remove: function remove() {\n\t          target.removeEventListener(eventType, callback, true);\n\t        }\n\t      };\n\t    } else {\n\t      if (false) {\n\t        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');\n\t      }\n\t      return {\n\t        remove: emptyFunction\n\t      };\n\t    }\n\t  },\n\t\n\t  registerDefault: function registerDefault() {}\n\t};\n\t\n\tmodule.exports = EventListener;\n\n/***/ },\n/* 56 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * @param {DOMElement} node input/textarea to focus\n\t */\n\t\n\tfunction focusNode(node) {\n\t  // IE8 can throw \"Can't move focus to the control because it is invisible,\n\t  // not enabled, or of a type that does not accept the focus.\" for all kinds of\n\t  // reasons that are too expensive and fragile to test.\n\t  try {\n\t    node.focus();\n\t  } catch (e) {}\n\t}\n\t\n\tmodule.exports = focusNode;\n\n/***/ },\n/* 57 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks\n\t */\n\t\n\t/* eslint-disable fb-www/typeof-undefined */\n\t\n\t/**\n\t * Same as document.activeElement but wraps in a try-catch block. In IE it is\n\t * not safe to call document.activeElement if there is nothing focused.\n\t *\n\t * The activeElement will be null only if the document or document body is not\n\t * yet defined.\n\t *\n\t * @param {?DOMDocument} doc Defaults to current document.\n\t * @return {?DOMElement}\n\t */\n\tfunction getActiveElement(doc) /*?DOMElement*/{\n\t  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n\t  if (typeof doc === 'undefined') {\n\t    return null;\n\t  }\n\t  try {\n\t    return doc.activeElement || doc.body;\n\t  } catch (e) {\n\t    return doc.body;\n\t  }\n\t}\n\t\n\tmodule.exports = getActiveElement;\n\n/***/ },\n/* 58 */\n/***/ function(module, exports) {\n\n\t/*\r\n\t\r\n\t## IMPORTANT NOTE --- IMPORTANT \r\n\tThe master for this file is located at:\r\n\thttps://github.com/joostn/openjscad/tree/gh-pages\r\n\tThat is the gh-pages branch of the joostn/openjscad project\r\n\tIf contributing from openjscad.org, please do NOT edit this local file but make pull requests against\r\n\tabove joostn/gh-pages branch.\r\n\t## IMPORTANT NOTE --- IMPORTANT NOTE\r\n\t\r\n\t\r\n\t## License\r\n\t\r\n\tCopyright (c) 2014 bebbi (elghatta@gmail.com)\r\n\tCopyright (c) 2013 Eduard Bespalov (edwbes@gmail.com)\r\n\tCopyright (c) 2012 Joost Nieuwenhuijse (joost@newhouse.nl)\r\n\tCopyright (c) 2011 Evan Wallace (http://evanw.github.com/csg.js/)\r\n\tCopyright (c) 2012 Alexandre Girard (https://github.com/alx)\r\n\t\r\n\tAll code released under MIT license\r\n\t\r\n\t## Overview\r\n\t\r\n\tFor an overview of the CSG process see the original csg.js code:\r\n\thttp://evanw.github.com/csg.js/\r\n\t\r\n\tCSG operations through BSP trees suffer from one problem: heavy fragmentation\r\n\tof polygons. If two CSG solids of n polygons are unified, the resulting solid may have\r\n\tin the order of n*n polygons, because each polygon is split by the planes of all other\r\n\tpolygons. After a few operations the number of polygons explodes.\r\n\t\r\n\tThis version of CSG.js solves the problem in 3 ways:\r\n\t\r\n\t1. Every polygon split is recorded in a tree (CSG.PolygonTreeNode). This is a separate\r\n\ttree, not to be confused with the CSG tree. If a polygon is split into two parts but in\r\n\tthe end both fragments have not been discarded by the CSG operation, we can retrieve\r\n\tthe original unsplit polygon from the tree, instead of the two fragments.\r\n\t\r\n\tThis does not completely solve the issue though: if a polygon is split multiple times\r\n\tthe number of fragments depends on the order of subsequent splits, and we might still\r\n\tend up with unncessary splits:\r\n\tSuppose a polygon is first split into A and B, and then into A1, B1, A2, B2. Suppose B2 is\r\n\tdiscarded. We will end up with 2 polygons: A and B1. Depending on the actual split boundaries\r\n\twe could still have joined A and B1 into one polygon. Therefore a second approach is used as well:\r\n\t\r\n\t2. After CSG operations all coplanar polygon fragments are joined by a retesselating\r\n\toperation. See CSG.reTesselated(). Retesselation is done through a\r\n\tlinear sweep over the polygon surface. The sweep line passes over the y coordinates\r\n\tof all vertices in the polygon. Polygons are split at each sweep line, and the fragments\r\n\tare joined horizontally and vertically into larger polygons (making sure that we\r\n\twill end up with convex polygons).\r\n\tThis still doesn't solve the problem completely: due to floating point imprecisions\r\n\twe may end up with small gaps between polygons, and polygons may not be exactly coplanar\r\n\tanymore, and as a result the retesselation algorithm may fail to join those polygons.\r\n\tTherefore:\r\n\t\r\n\t3. A canonicalization algorithm is implemented: it looks for vertices that have\r\n\tapproximately the same coordinates (with a certain tolerance, say 1e-5) and replaces\r\n\tthem with the same vertex. If polygons share a vertex they will actually point to the\r\n\tsame CSG.Vertex instance. The same is done for polygon planes. See CSG.canonicalized().\r\n\t\r\n\t\r\n\tPerformance improvements to the original CSG.js:\r\n\t\r\n\tReplaced the flip() and invert() methods by flipped() and inverted() which don't\r\n\tmodify the source object. This allows to get rid of all clone() calls, so that\r\n\tmultiple polygons can refer to the same CSG.Plane instance etc.\r\n\t\r\n\tThe original union() used an extra invert(), clipTo(), invert() sequence just to remove the\r\n\tcoplanar front faces from b; this is now combined in a single b.clipTo(a, true) call.\r\n\t\r\n\tDetection whether a polygon is in front or in back of a plane: for each polygon\r\n\twe are caching the coordinates of the bounding sphere. If the bounding sphere is\r\n\tin front or in back of the plane we don't have to check the individual vertices\r\n\tanymore.\r\n\t\r\n\t\r\n\tOther additions to the original CSG.js:\r\n\t\r\n\tCSG.Vector class has been renamed into CSG.Vector3D\r\n\t\r\n\tClasses for 3D lines, 2D vectors, 2D lines, and methods to find the intersection of\r\n\ta line and a plane etc.\r\n\t\r\n\tTransformations: CSG.transform(), CSG.translate(), CSG.rotate(), CSG.scale()\r\n\t\r\n\tExpanding or contracting a solid: CSG.expand() and CSG.contract(). Creates nice\r\n\tsmooth corners.\r\n\t\r\n\tThe vertex normal has been removed since it complicates retesselation. It's not needed\r\n\tfor solid CAD anyway.\r\n\t\r\n\t*/\r\n\t\r\n\t(function(module) {\r\n\t\r\n\t    var _CSGDEBUG = false;\r\n\t\r\n\t    function fnNumberSort(a, b) {\r\n\t        return a - b;\r\n\t    }\r\n\t\r\n\t    // # class CSG\r\n\t    // Holds a binary space partition tree representing a 3D solid. Two solids can\r\n\t    // be combined using the `union()`, `subtract()`, and `intersect()` methods.\r\n\t    var CSG = function() {\r\n\t        this.polygons = [];\r\n\t        this.properties = new CSG.Properties();\r\n\t        this.isCanonicalized = true;\r\n\t        this.isRetesselated = true;\r\n\t    };\r\n\t\r\n\t    CSG.defaultResolution2D = 32;\r\n\t    CSG.defaultResolution3D = 12;\r\n\t\r\n\t    // Construct a CSG solid from a list of `CSG.Polygon` instances.\r\n\t    CSG.fromPolygons = function(polygons) {\r\n\t        var csg = new CSG();\r\n\t        csg.polygons = polygons;\r\n\t        csg.isCanonicalized = false;\r\n\t        csg.isRetesselated = false;\r\n\t        return csg;\r\n\t    };\r\n\t\r\n\t    // Construct a CSG solid from generated slices.\r\n\t    // Look at CSG.Polygon.prototype.solidFromSlices for details\r\n\t    CSG.fromSlices = function(options) {\r\n\t        return (new CSG.Polygon.createFromPoints([\r\n\t            [0, 0, 0],\r\n\t            [1, 0, 0],\r\n\t            [1, 1, 0],\r\n\t            [0, 1, 0]\r\n\t        ])).solidFromSlices(options);\r\n\t    };\r\n\t\r\n\t    // create from an untyped object with identical property names:\r\n\t    CSG.fromObject = function(obj) {\r\n\t        var polygons = obj.polygons.map(function(p) {\r\n\t            return CSG.Polygon.fromObject(p);\r\n\t        });\r\n\t        var csg = CSG.fromPolygons(polygons);\r\n\t        csg = csg.canonicalized();\r\n\t        return csg;\r\n\t    };\r\n\t\r\n\t    // Reconstruct a CSG from the output of toCompactBinary()\r\n\t    CSG.fromCompactBinary = function(bin) {\r\n\t        if (bin['class'] != \"CSG\") throw new Error(\"Not a CSG\");\r\n\t        var planes = [],\r\n\t            planeData = bin.planeData,\r\n\t            numplanes = planeData.length / 4,\r\n\t            arrayindex = 0,\r\n\t            x, y, z, w, normal, plane;\r\n\t        for (var planeindex = 0; planeindex < numplanes; planeindex++) {\r\n\t            x = planeData[arrayindex++];\r\n\t            y = planeData[arrayindex++];\r\n\t            z = planeData[arrayindex++];\r\n\t            w = planeData[arrayindex++];\r\n\t            normal = CSG.Vector3D.Create(x, y, z);\r\n\t            plane = new CSG.Plane(normal, w);\r\n\t            planes.push(plane);\r\n\t        }\r\n\t\r\n\t        var vertices = [],\r\n\t            vertexData = bin.vertexData,\r\n\t            numvertices = vertexData.length / 3,\r\n\t            pos, vertex;\r\n\t        arrayindex = 0;\r\n\t        for (var vertexindex = 0; vertexindex < numvertices; vertexindex++) {\r\n\t            x = vertexData[arrayindex++];\r\n\t            y = vertexData[arrayindex++];\r\n\t            z = vertexData[arrayindex++];\r\n\t            pos = CSG.Vector3D.Create(x, y, z);\r\n\t            vertex = new CSG.Vertex(pos);\r\n\t            vertices.push(vertex);\r\n\t        }\r\n\t\r\n\t        var shareds = bin.shared.map(function(shared) {\r\n\t            return CSG.Polygon.Shared.fromObject(shared);\r\n\t        });\r\n\t\r\n\t        var polygons = [],\r\n\t            numpolygons = bin.numPolygons,\r\n\t            numVerticesPerPolygon = bin.numVerticesPerPolygon,\r\n\t            polygonVertices = bin.polygonVertices,\r\n\t            polygonPlaneIndexes = bin.polygonPlaneIndexes,\r\n\t            polygonSharedIndexes = bin.polygonSharedIndexes,\r\n\t            numpolygonvertices, polygonvertices, shared, polygon; //already defined plane,\r\n\t        arrayindex = 0;\r\n\t        for (var polygonindex = 0; polygonindex < numpolygons; polygonindex++) {\r\n\t            numpolygonvertices = numVerticesPerPolygon[polygonindex];\r\n\t            polygonvertices = [];\r\n\t            for (var i = 0; i < numpolygonvertices; i++) {\r\n\t                polygonvertices.push(vertices[polygonVertices[arrayindex++]]);\r\n\t            }\r\n\t            plane = planes[polygonPlaneIndexes[polygonindex]];\r\n\t            shared = shareds[polygonSharedIndexes[polygonindex]];\r\n\t            polygon = new CSG.Polygon(polygonvertices, shared, plane);\r\n\t            polygons.push(polygon);\r\n\t        }\r\n\t        var csg = CSG.fromPolygons(polygons);\r\n\t        csg.isCanonicalized = true;\r\n\t        csg.isRetesselated = true;\r\n\t        return csg;\r\n\t    };\r\n\t\r\n\t    CSG.prototype = {\r\n\t        toPolygons: function() {\r\n\t            return this.polygons;\r\n\t        },\r\n\t\r\n\t        // Return a new CSG solid representing space in either this solid or in the\r\n\t        // solid `csg`. Neither this solid nor the solid `csg` are modified.\r\n\t        //\r\n\t        //     A.union(B)\r\n\t        //\r\n\t        //     +-------+            +-------+\r\n\t        //     |       |            |       |\r\n\t        //     |   A   |            |       |\r\n\t        //     |    +--+----+   =   |       +----+\r\n\t        //     +----+--+    |       +----+       |\r\n\t        //          |   B   |            |       |\r\n\t        //          |       |            |       |\r\n\t        //          +-------+            +-------+\r\n\t        //\r\n\t        union: function(csg) {\r\n\t            var csgs;\r\n\t            if (csg instanceof Array) {\r\n\t                csgs = csg.slice(0);\r\n\t                csgs.push(this);\r\n\t            } else {\r\n\t                csgs = [this, csg];\r\n\t            }\r\n\t\r\n\t            // combine csg pairs in a way that forms a balanced binary tree pattern\r\n\t            for (var i = 1; i < csgs.length; i += 2) {\r\n\t                csgs.push(csgs[i-1].unionSub(csgs[i]));\r\n\t            }\r\n\t\r\n\t            return csgs[i - 1].reTesselated().canonicalized();\r\n\t        },\r\n\t\r\n\t        unionSub: function(csg, retesselate, canonicalize) {\r\n\t            if (!this.mayOverlap(csg)) {\r\n\t                return this.unionForNonIntersecting(csg);\r\n\t            } else {\r\n\t                var a = new CSG.Tree(this.polygons);\r\n\t                var b = new CSG.Tree(csg.polygons);\r\n\t                a.clipTo(b, false);\r\n\t\r\n\t                // b.clipTo(a, true); // ERROR: this doesn't work\r\n\t                b.clipTo(a);\r\n\t                b.invert();\r\n\t                b.clipTo(a);\r\n\t                b.invert();\r\n\t\r\n\t                var newpolygons = a.allPolygons().concat(b.allPolygons());\r\n\t                var result = CSG.fromPolygons(newpolygons);\r\n\t                result.properties = this.properties._merge(csg.properties);\r\n\t                if (retesselate) result = result.reTesselated();\r\n\t                if (canonicalize) result = result.canonicalized();\r\n\t                return result;\r\n\t            }\r\n\t        },\r\n\t\r\n\t        // Like union, but when we know that the two solids are not intersecting\r\n\t        // Do not use if you are not completely sure that the solids do not intersect!\r\n\t        unionForNonIntersecting: function(csg) {\r\n\t            var newpolygons = this.polygons.concat(csg.polygons);\r\n\t            var result = CSG.fromPolygons(newpolygons);\r\n\t            result.properties = this.properties._merge(csg.properties);\r\n\t            result.isCanonicalized = this.isCanonicalized && csg.isCanonicalized;\r\n\t            result.isRetesselated = this.isRetesselated && csg.isRetesselated;\r\n\t            return result;\r\n\t        },\r\n\t\r\n\t        // Return a new CSG solid representing space in this solid but not in the\r\n\t        // solid `csg`. Neither this solid nor the solid `csg` are modified.\r\n\t        //\r\n\t        //     A.subtract(B)\r\n\t        //\r\n\t        //     +-------+            +-------+\r\n\t        //     |       |            |       |\r\n\t        //     |   A   |            |       |\r\n\t        //     |    +--+----+   =   |    +--+\r\n\t        //     +----+--+    |       +----+\r\n\t        //          |   B   |\r\n\t        //          |       |\r\n\t        //          +-------+\r\n\t        //\r\n\t        subtract: function(csg) {\r\n\t            var csgs;\r\n\t            if (csg instanceof Array) {\r\n\t                csgs = csg;\r\n\t            } else {\r\n\t                csgs = [csg];\r\n\t            }\r\n\t            var result = this;\r\n\t            for (var i = 0; i < csgs.length; i++) {\r\n\t                var islast = (i == (csgs.length - 1));\r\n\t                result = result.subtractSub(csgs[i], islast, islast);\r\n\t            }\r\n\t            return result;\r\n\t        },\r\n\t\r\n\t        subtractSub: function(csg, retesselate, canonicalize) {\r\n\t            var a = new CSG.Tree(this.polygons);\r\n\t            var b = new CSG.Tree(csg.polygons);\r\n\t            a.invert();\r\n\t            a.clipTo(b);\r\n\t            b.clipTo(a, true);\r\n\t            a.addPolygons(b.allPolygons());\r\n\t            a.invert();\r\n\t            var result = CSG.fromPolygons(a.allPolygons());\r\n\t            result.properties = this.properties._merge(csg.properties);\r\n\t            if (retesselate) result = result.reTesselated();\r\n\t            if (canonicalize) result = result.canonicalized();\r\n\t            return result;\r\n\t        },\r\n\t\r\n\t        // Return a new CSG solid representing space both this solid and in the\r\n\t        // solid `csg`. Neither this solid nor the solid `csg` are modified.\r\n\t        //\r\n\t        //     A.intersect(B)\r\n\t        //\r\n\t        //     +-------+\r\n\t        //     |       |\r\n\t        //     |   A   |\r\n\t        //     |    +--+----+   =   +--+\r\n\t        //     +----+--+    |       +--+\r\n\t        //          |   B   |\r\n\t        //          |       |\r\n\t        //          +-------+\r\n\t        //\r\n\t        intersect: function(csg) {\r\n\t            var csgs;\r\n\t            if (csg instanceof Array) {\r\n\t                csgs = csg;\r\n\t            } else {\r\n\t                csgs = [csg];\r\n\t            }\r\n\t            var result = this;\r\n\t            for (var i = 0; i < csgs.length; i++) {\r\n\t                var islast = (i == (csgs.length - 1));\r\n\t                result = result.intersectSub(csgs[i], islast, islast);\r\n\t            }\r\n\t            return result;\r\n\t        },\r\n\t\r\n\t        intersectSub: function(csg, retesselate, canonicalize) {\r\n\t            var a = new CSG.Tree(this.polygons);\r\n\t            var b = new CSG.Tree(csg.polygons);\r\n\t            a.invert();\r\n\t            b.clipTo(a);\r\n\t            b.invert();\r\n\t            a.clipTo(b);\r\n\t            b.clipTo(a);\r\n\t            a.addPolygons(b.allPolygons());\r\n\t            a.invert();\r\n\t            var result = CSG.fromPolygons(a.allPolygons());\r\n\t            result.properties = this.properties._merge(csg.properties);\r\n\t            if (retesselate) result = result.reTesselated();\r\n\t            if (canonicalize) result = result.canonicalized();\r\n\t            return result;\r\n\t        },\r\n\t\r\n\t        // Return a new CSG solid with solid and empty space switched. This solid is\r\n\t        // not modified.\r\n\t        invert: function() {\r\n\t            var flippedpolygons = this.polygons.map(function(p) {\r\n\t                return p.flipped();\r\n\t            });\r\n\t            return CSG.fromPolygons(flippedpolygons);\r\n\t            // TODO: flip properties?\r\n\t        },\r\n\t\r\n\t        // Affine transformation of CSG object. Returns a new CSG object\r\n\t        transform1: function(matrix4x4) {\r\n\t            var newpolygons = this.polygons.map(function(p) {\r\n\t                return p.transform(matrix4x4);\r\n\t            });\r\n\t            var result = CSG.fromPolygons(newpolygons);\r\n\t            result.properties = this.properties._transform(matrix4x4);\r\n\t            result.isRetesselated = this.isRetesselated;\r\n\t            return result;\r\n\t        },\r\n\t\r\n\t        transform: function(matrix4x4) {\r\n\t            var ismirror = matrix4x4.isMirroring();\r\n\t            var transformedvertices = {};\r\n\t            var transformedplanes = {};\r\n\t            var newpolygons = this.polygons.map(function(p) {\r\n\t                var newplane;\r\n\t                var plane = p.plane;\r\n\t                var planetag = plane.getTag();\r\n\t                if (planetag in transformedplanes) {\r\n\t                    newplane = transformedplanes[planetag];\r\n\t                } else {\r\n\t                    newplane = plane.transform(matrix4x4);\r\n\t                    transformedplanes[planetag] = newplane;\r\n\t                }\r\n\t                var newvertices = p.vertices.map(function(v) {\r\n\t                    var newvertex;\r\n\t                    var vertextag = v.getTag();\r\n\t                    if (vertextag in transformedvertices) {\r\n\t                        newvertex = transformedvertices[vertextag];\r\n\t                    } else {\r\n\t                        newvertex = v.transform(matrix4x4);\r\n\t                        transformedvertices[vertextag] = newvertex;\r\n\t                    }\r\n\t                    return newvertex;\r\n\t                });\r\n\t                if (ismirror) newvertices.reverse();\r\n\t                return new CSG.Polygon(newvertices, p.shared, newplane);\r\n\t            });\r\n\t            var result = CSG.fromPolygons(newpolygons);\r\n\t            result.properties = this.properties._transform(matrix4x4);\r\n\t            result.isRetesselated = this.isRetesselated;\r\n\t            result.isCanonicalized = this.isCanonicalized;\r\n\t            return result;\r\n\t        },\r\n\t\r\n\t        toString: function() {\r\n\t            var result = \"CSG solid:\\n\";\r\n\t            this.polygons.map(function(p) {\r\n\t                result += p.toString();\r\n\t            });\r\n\t            return result;\r\n\t        },\r\n\t\r\n\t        // Expand the solid\r\n\t        // resolution: number of points per 360 degree for the rounded corners\r\n\t        expand: function(radius, resolution) {\r\n\t            var result = this.expandedShell(radius, resolution, true);\r\n\t            result = result.reTesselated();\r\n\t            result.properties = this.properties; // keep original properties\r\n\t            return result;\r\n\t        },\r\n\t\r\n\t        // Contract the solid\r\n\t        // resolution: number of points per 360 degree for the rounded corners\r\n\t        contract: function(radius, resolution) {\r\n\t            var expandedshell = this.expandedShell(radius, resolution, false);\r\n\t            var result = this.subtract(expandedshell);\r\n\t            result = result.reTesselated();\r\n\t            result.properties = this.properties; // keep original properties\r\n\t            return result;\r\n\t        },\r\n\t\r\n\t        // cut the solid at a plane, and stretch the cross-section found along plane normal\r\n\t        stretchAtPlane: function(normal, point, length) {\r\n\t            var plane = CSG.Plane.fromNormalAndPoint(normal, point);\r\n\t            var onb = new CSG.OrthoNormalBasis(plane);\r\n\t            var crosssect = this.sectionCut(onb);\r\n\t            var midpiece = crosssect.extrudeInOrthonormalBasis(onb, length);\r\n\t            var piece1 = this.cutByPlane(plane);\r\n\t            var piece2 = this.cutByPlane(plane.flipped());\r\n\t            var result = piece1.union([midpiece, piece2.translate(plane.normal.times(length))]);\r\n\t            return result;\r\n\t        },\r\n\t\r\n\t\r\n\t        // Create the expanded shell of the solid:\r\n\t        // All faces are extruded to get a thickness of 2*radius\r\n\t        // Cylinders are constructed around every side\r\n\t        // Spheres are placed on every vertex\r\n\t        // unionWithThis: if true, the resulting solid will be united with 'this' solid;\r\n\t        //   the result is a true expansion of the solid\r\n\t        //   If false, returns only the shell\r\n\t        expandedShell: function(radius, resolution, unionWithThis) {\r\n\t            var csg = this.reTesselated();\r\n\t            var result;\r\n\t            if (unionWithThis) {\r\n\t                result = csg;\r\n\t            } else {\r\n\t                result = new CSG();\r\n\t            }\r\n\t\r\n\t            // first extrude all polygons:\r\n\t            csg.polygons.map(function(polygon) {\r\n\t                var extrudevector = polygon.plane.normal.unit().times(2 * radius);\r\n\t                var translatedpolygon = polygon.translate(extrudevector.times(-0.5));\r\n\t                var extrudedface = translatedpolygon.extrude(extrudevector);\r\n\t                result = result.unionSub(extrudedface, false, false);\r\n\t            });\r\n\t\r\n\t            // Make a list of all unique vertex pairs (i.e. all sides of the solid)\r\n\t            // For each vertex pair we collect the following:\r\n\t            //   v1: first coordinate\r\n\t            //   v2: second coordinate\r\n\t            //   planenormals: array of normal vectors of all planes touching this side\r\n\t            var vertexpairs = {}; // map of 'vertex pair tag' to {v1, v2, planenormals}\r\n\t            csg.polygons.map(function(polygon) {\r\n\t                var numvertices = polygon.vertices.length;\r\n\t                var prevvertex = polygon.vertices[numvertices - 1];\r\n\t                var prevvertextag = prevvertex.getTag();\r\n\t                for (var i = 0; i < numvertices; i++) {\r\n\t                    var vertex = polygon.vertices[i];\r\n\t                    var vertextag = vertex.getTag();\r\n\t                    var vertextagpair;\r\n\t                    if (vertextag < prevvertextag) {\r\n\t                        vertextagpair = vertextag + \"-\" + prevvertextag;\r\n\t                    } else {\r\n\t                        vertextagpair = prevvertextag + \"-\" + vertextag;\r\n\t                    }\r\n\t                    var obj;\r\n\t                    if (vertextagpair in vertexpairs) {\r\n\t                        obj = vertexpairs[vertextagpair];\r\n\t                    } else {\r\n\t                        obj = {\r\n\t                            v1: prevvertex,\r\n\t                            v2: vertex,\r\n\t                            planenormals: []\r\n\t                        };\r\n\t                        vertexpairs[vertextagpair] = obj;\r\n\t                    }\r\n\t                    obj.planenormals.push(polygon.plane.normal);\r\n\t\r\n\t                    prevvertextag = vertextag;\r\n\t                    prevvertex = vertex;\r\n\t                }\r\n\t            });\r\n\t\r\n\t            // now construct a cylinder on every side\r\n\t            // The cylinder is always an approximation of a true cylinder: it will have <resolution> polygons\r\n\t            // around the sides. We will make sure though that the cylinder will have an edge at every\r\n\t            // face that touches this side. This ensures that we will get a smooth fill even\r\n\t            // if two edges are at, say, 10 degrees and the resolution is low.\r\n\t            // Note: the result is not retesselated yet but it really should be!\r\n\t            for (var vertextagpair in vertexpairs) {\r\n\t                var vertexpair = vertexpairs[vertextagpair],\r\n\t                    startpoint = vertexpair.v1.pos,\r\n\t                    endpoint = vertexpair.v2.pos,\r\n\t                    // our x,y and z vectors:\r\n\t                    zbase = endpoint.minus(startpoint).unit(),\r\n\t                    xbase = vertexpair.planenormals[0].unit(),\r\n\t                    ybase = xbase.cross(zbase),\r\n\t\r\n\t                    // make a list of angles that the cylinder should traverse:\r\n\t                    angles = [];\r\n\t\r\n\t                // first of all equally spaced around the cylinder:\r\n\t                for (var i = 0; i < resolution; i++) {\r\n\t                    angles.push(i * Math.PI * 2 / resolution);\r\n\t                }\r\n\t\r\n\t                // and also at every normal of all touching planes:\r\n\t                for (var i = 0, iMax = vertexpair.planenormals.length; i < iMax; i++) {\r\n\t                    var planenormal = vertexpair.planenormals[i],\r\n\t                        si = ybase.dot(planenormal),\r\n\t                        co = xbase.dot(planenormal),\r\n\t                        angle = Math.atan2(si, co);\r\n\t\r\n\t                    if (angle < 0) angle += Math.PI * 2;\r\n\t                    angles.push(angle);\r\n\t                    angle = Math.atan2(-si, -co);\r\n\t                    if (angle < 0) angle += Math.PI * 2;\r\n\t                    angles.push(angle);\r\n\t                }\r\n\t\r\n\t                // this will result in some duplicate angles but we will get rid of those later.\r\n\t                // Sort:\r\n\t                angles = angles.sort(fnNumberSort);\r\n\t\r\n\t                // Now construct the cylinder by traversing all angles:\r\n\t                var numangles = angles.length,\r\n\t                    prevp1, prevp2,\r\n\t                    startfacevertices = [],\r\n\t                    endfacevertices = [],\r\n\t                    polygons = [];\r\n\t                for (var i = -1; i < numangles; i++) {\r\n\t                    var angle = angles[(i < 0) ? (i + numangles) : i],\r\n\t                        si = Math.sin(angle),\r\n\t                        co = Math.cos(angle),\r\n\t                        p = xbase.times(co * radius).plus(ybase.times(si * radius)),\r\n\t                        p1 = startpoint.plus(p),\r\n\t                        p2 = endpoint.plus(p),\r\n\t                        skip = false;\r\n\t                    if (i >= 0) {\r\n\t                        if (p1.distanceTo(prevp1) < 1e-5) {\r\n\t                            skip = true;\r\n\t                        }\r\n\t                    }\r\n\t                    if (!skip) {\r\n\t                        if (i >= 0) {\r\n\t                            startfacevertices.push(new CSG.Vertex(p1));\r\n\t                            endfacevertices.push(new CSG.Vertex(p2));\r\n\t                            var polygonvertices = [\r\n\t                                new CSG.Vertex(prevp2),\r\n\t                                new CSG.Vertex(p2),\r\n\t                                new CSG.Vertex(p1),\r\n\t                                new CSG.Vertex(prevp1)\r\n\t                            ];\r\n\t                            var polygon = new CSG.Polygon(polygonvertices);\r\n\t                            polygons.push(polygon);\r\n\t                        }\r\n\t                        prevp1 = p1;\r\n\t                        prevp2 = p2;\r\n\t                    }\r\n\t                }\r\n\t                endfacevertices.reverse();\r\n\t                polygons.push(new CSG.Polygon(startfacevertices));\r\n\t                polygons.push(new CSG.Polygon(endfacevertices));\r\n\t                var cylinder = CSG.fromPolygons(polygons);\r\n\t                result = result.unionSub(cylinder, false, false);\r\n\t            }\r\n\t\r\n\t            // make a list of all unique vertices\r\n\t            // For each vertex we also collect the list of normals of the planes touching the vertices\r\n\t            var vertexmap = {};\r\n\t            csg.polygons.map(function(polygon) {\r\n\t                polygon.vertices.map(function(vertex) {\r\n\t                    var vertextag = vertex.getTag();\r\n\t                    var obj;\r\n\t                    if (vertextag in vertexmap) {\r\n\t                        obj = vertexmap[vertextag];\r\n\t                    } else {\r\n\t                        obj = {\r\n\t                            pos: vertex.pos,\r\n\t                            normals: []\r\n\t                        };\r\n\t                        vertexmap[vertextag] = obj;\r\n\t                    }\r\n\t                    obj.normals.push(polygon.plane.normal);\r\n\t                });\r\n\t            });\r\n\t\r\n\t            // and build spheres at each vertex\r\n\t            // We will try to set the x and z axis to the normals of 2 planes\r\n\t            // This will ensure that our sphere tesselation somewhat matches 2 planes\r\n\t            for (var vertextag in vertexmap) {\r\n\t                var vertexobj = vertexmap[vertextag];\r\n\t                // use the first normal to be the x axis of our sphere:\r\n\t                var xaxis = vertexobj.normals[0].unit();\r\n\t                // and find a suitable z axis. We will use the normal which is most perpendicular to the x axis:\r\n\t                var bestzaxis = null;\r\n\t                var bestzaxisorthogonality = 0;\r\n\t                for (var i = 1; i < vertexobj.normals.length; i++) {\r\n\t                    var normal = vertexobj.normals[i].unit();\r\n\t                    var cross = xaxis.cross(normal);\r\n\t                    var crosslength = cross.length();\r\n\t                    if (crosslength > 0.05) {\r\n\t                        if (crosslength > bestzaxisorthogonality) {\r\n\t                            bestzaxisorthogonality = crosslength;\r\n\t                            bestzaxis = normal;\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t                if (!bestzaxis) {\r\n\t                    bestzaxis = xaxis.randomNonParallelVector();\r\n\t                }\r\n\t                var yaxis = xaxis.cross(bestzaxis).unit();\r\n\t                var zaxis = yaxis.cross(xaxis);\r\n\t                var sphere = CSG.sphere({\r\n\t                    center: vertexobj.pos,\r\n\t                    radius: radius,\r\n\t                    resolution: resolution,\r\n\t                    axes: [xaxis, yaxis, zaxis]\r\n\t                });\r\n\t                result = result.unionSub(sphere, false, false);\r\n\t            }\r\n\t\r\n\t            return result;\r\n\t        },\r\n\t\r\n\t        canonicalized: function() {\r\n\t            if (this.isCanonicalized) {\r\n\t                return this;\r\n\t            } else {\r\n\t                var factory = new CSG.fuzzyCSGFactory();\r\n\t                var result = factory.getCSG(this);\r\n\t                result.isCanonicalized = true;\r\n\t                result.isRetesselated = this.isRetesselated;\r\n\t                result.properties = this.properties; // keep original properties\r\n\t                return result;\r\n\t            }\r\n\t        },\r\n\t\r\n\t        reTesselated: function() {\r\n\t            if (this.isRetesselated) {\r\n\t                return this;\r\n\t            } else {\r\n\t                var csg = this;\r\n\t                var polygonsPerPlane = {};\r\n\t                var isCanonicalized = csg.isCanonicalized;\r\n\t                var fuzzyfactory = new CSG.fuzzyCSGFactory();\r\n\t                csg.polygons.map(function(polygon) {\r\n\t                    var plane = polygon.plane;\r\n\t                    var shared = polygon.shared;\r\n\t                    if (!isCanonicalized) {\r\n\t                        // in order to identify to polygons having the same plane, we need to canonicalize the planes\r\n\t                        // We don't have to do a full canonizalization (including vertices), to save time only do the planes and the shared data:\r\n\t                        plane = fuzzyfactory.getPlane(plane);\r\n\t                        shared = fuzzyfactory.getPolygonShared(shared);\r\n\t                    }\r\n\t                    var tag = plane.getTag() + \"/\" + shared.getTag();\r\n\t                    if (!(tag in polygonsPerPlane)) {\r\n\t                        polygonsPerPlane[tag] = [polygon];\r\n\t                    } else {\r\n\t                        polygonsPerPlane[tag].push(polygon);\r\n\t                    }\r\n\t                });\r\n\t                var destpolygons = [];\r\n\t                for (var planetag in polygonsPerPlane) {\r\n\t                    var sourcepolygons = polygonsPerPlane[planetag];\r\n\t                    if (sourcepolygons.length < 2) {\r\n\t                        destpolygons = destpolygons.concat(sourcepolygons);\r\n\t                    } else {\r\n\t                        var retesselayedpolygons = [];\r\n\t                        CSG.reTesselateCoplanarPolygons(sourcepolygons, retesselayedpolygons);\r\n\t                        destpolygons = destpolygons.concat(retesselayedpolygons);\r\n\t                    }\r\n\t                }\r\n\t                var result = CSG.fromPolygons(destpolygons);\r\n\t                result.isRetesselated = true;\r\n\t                // result = result.canonicalized();\r\n\t                result.properties = this.properties; // keep original properties\r\n\t                return result;\r\n\t            }\r\n\t        },\r\n\t\r\n\t        // returns an array of two CSG.Vector3Ds (minimum coordinates and maximum coordinates)\r\n\t        getBounds: function() {\r\n\t            if (!this.cachedBoundingBox) {\r\n\t                var minpoint = new CSG.Vector3D(0, 0, 0);\r\n\t                var maxpoint = new CSG.Vector3D(0, 0, 0);\r\n\t                var polygons = this.polygons;\r\n\t                var numpolygons = polygons.length;\r\n\t                for (var i = 0; i < numpolygons; i++) {\r\n\t                    var polygon = polygons[i];\r\n\t                    var bounds = polygon.boundingBox();\r\n\t                    if (i === 0) {\r\n\t                        minpoint = bounds[0];\r\n\t                        maxpoint = bounds[1];\r\n\t                    } else {\r\n\t                        minpoint = minpoint.min(bounds[0]);\r\n\t                        maxpoint = maxpoint.max(bounds[1]);\r\n\t                    }\r\n\t                }\r\n\t                this.cachedBoundingBox = [minpoint, maxpoint];\r\n\t            }\r\n\t            return this.cachedBoundingBox;\r\n\t        },\r\n\t\r\n\t        // returns true if there is a possibility that the two solids overlap\r\n\t        // returns false if we can be sure that they do not overlap\r\n\t        mayOverlap: function(csg) {\r\n\t            if ((this.polygons.length === 0) || (csg.polygons.length === 0)) {\r\n\t                return false;\r\n\t            } else {\r\n\t                var mybounds = this.getBounds();\r\n\t                var otherbounds = csg.getBounds();\r\n\t                if (mybounds[1].x < otherbounds[0].x) return false;\r\n\t                if (mybounds[0].x > otherbounds[1].x) return false;\r\n\t                if (mybounds[1].y < otherbounds[0].y) return false;\r\n\t                if (mybounds[0].y > otherbounds[1].y) return false;\r\n\t                if (mybounds[1].z < otherbounds[0].z) return false;\r\n\t                if (mybounds[0].z > otherbounds[1].z) return false;\r\n\t                return true;\r\n\t            }\r\n\t        },\r\n\t\r\n\t        // Cut the solid by a plane. Returns the solid on the back side of the plane\r\n\t        cutByPlane: function(plane) {\r\n\t            if (this.polygons.length === 0) {\r\n\t                return new CSG();\r\n\t            }\r\n\t            // Ideally we would like to do an intersection with a polygon of inifinite size\r\n\t            // but this is not supported by our implementation. As a workaround, we will create\r\n\t            // a cube, with one face on the plane, and a size larger enough so that the entire\r\n\t            // solid fits in the cube.\r\n\t            // find the max distance of any vertex to the center of the plane:\r\n\t            var planecenter = plane.normal.times(plane.w);\r\n\t            var maxdistance = 0;\r\n\t            this.polygons.map(function(polygon) {\r\n\t                polygon.vertices.map(function(vertex) {\r\n\t                    var distance = vertex.pos.distanceToSquared(planecenter);\r\n\t                    if (distance > maxdistance) maxdistance = distance;\r\n\t                });\r\n\t            });\r\n\t            maxdistance = Math.sqrt(maxdistance);\r\n\t            maxdistance *= 1.01; // make sure it's really larger\r\n\t            // Now build a polygon on the plane, at any point farther than maxdistance from the plane center:\r\n\t            var vertices = [];\r\n\t            var orthobasis = new CSG.OrthoNormalBasis(plane);\r\n\t            vertices.push(new CSG.Vertex(orthobasis.to3D(new CSG.Vector2D(maxdistance, -maxdistance))));\r\n\t            vertices.push(new CSG.Vertex(orthobasis.to3D(new CSG.Vector2D(-maxdistance, -maxdistance))));\r\n\t            vertices.push(new CSG.Vertex(orthobasis.to3D(new CSG.Vector2D(-maxdistance, maxdistance))));\r\n\t            vertices.push(new CSG.Vertex(orthobasis.to3D(new CSG.Vector2D(maxdistance, maxdistance))));\r\n\t            var polygon = new CSG.Polygon(vertices, null, plane.flipped());\r\n\t\r\n\t            // and extrude the polygon into a cube, backwards of the plane:\r\n\t            var cube = polygon.extrude(plane.normal.times(-maxdistance));\r\n\t\r\n\t            // Now we can do the intersection:\r\n\t            var result = this.intersect(cube);\r\n\t            result.properties = this.properties; // keep original properties\r\n\t            return result;\r\n\t        },\r\n\t\r\n\t        // Connect a solid to another solid, such that two CSG.Connectors become connected\r\n\t        //   myConnector: a CSG.Connector of this solid\r\n\t        //   otherConnector: a CSG.Connector to which myConnector should be connected\r\n\t        //   mirror: false: the 'axis' vectors of the connectors should point in the same direction\r\n\t        //           true: the 'axis' vectors of the connectors should point in opposite direction\r\n\t        //   normalrotation: degrees of rotation between the 'normal' vectors of the two\r\n\t        //                   connectors\r\n\t        connectTo: function(myConnector, otherConnector, mirror, normalrotation) {\r\n\t            var matrix = myConnector.getTransformationTo(otherConnector, mirror, normalrotation);\r\n\t            return this.transform(matrix);\r\n\t        },\r\n\t\r\n\t        // set the .shared property of all polygons\r\n\t        // Returns a new CSG solid, the original is unmodified!\r\n\t        setShared: function(shared) {\r\n\t            var polygons = this.polygons.map(function(p) {\r\n\t                return new CSG.Polygon(p.vertices, shared, p.plane);\r\n\t            });\r\n\t            var result = CSG.fromPolygons(polygons);\r\n\t            result.properties = this.properties; // keep original properties\r\n\t            result.isRetesselated = this.isRetesselated;\r\n\t            result.isCanonicalized = this.isCanonicalized;\r\n\t            return result;\r\n\t        },\r\n\t\r\n\t        setColor: function(args) {\r\n\t            var newshared = CSG.Polygon.Shared.fromColor.apply(this, arguments);\r\n\t            return this.setShared(newshared);\r\n\t        },\r\n\t\r\n\t        toCompactBinary: function() {\r\n\t            var csg = this.canonicalized(),\r\n\t                numpolygons = csg.polygons.length,\r\n\t                numpolygonvertices = 0,\r\n\t                numvertices = 0,\r\n\t                vertexmap = {},\r\n\t                vertices = [],\r\n\t                numplanes = 0,\r\n\t                planemap = {},\r\n\t                polygonindex = 0,\r\n\t                planes = [],\r\n\t                shareds = [],\r\n\t                sharedmap = {},\r\n\t                numshared = 0;\r\n\t            // for (var i = 0, iMax = csg.polygons.length; i < iMax; i++) {\r\n\t            //  var p = csg.polygons[i];\r\n\t            //  for (var j = 0, jMax = p.length; j < jMax; j++) {\r\n\t            //      ++numpolygonvertices;\r\n\t            //      var vertextag = p[j].getTag();\r\n\t            //      if(!(vertextag in vertexmap)) {\r\n\t            //          vertexmap[vertextag] = numvertices++;\r\n\t            //          vertices.push(p[j]);\r\n\t            //      }\r\n\t            //  }\r\n\t            csg.polygons.map(function(p) {\r\n\t                p.vertices.map(function(v) {\r\n\t                    ++numpolygonvertices;\r\n\t                    var vertextag = v.getTag();\r\n\t                    if (!(vertextag in vertexmap)) {\r\n\t                        vertexmap[vertextag] = numvertices++;\r\n\t                        vertices.push(v);\r\n\t                    }\r\n\t                });\r\n\t\r\n\t                var planetag = p.plane.getTag();\r\n\t                if (!(planetag in planemap)) {\r\n\t                    planemap[planetag] = numplanes++;\r\n\t                    planes.push(p.plane);\r\n\t                }\r\n\t                var sharedtag = p.shared.getTag();\r\n\t                if (!(sharedtag in sharedmap)) {\r\n\t                    sharedmap[sharedtag] = numshared++;\r\n\t                    shareds.push(p.shared);\r\n\t                }\r\n\t            });\r\n\t            var numVerticesPerPolygon = new Uint32Array(numpolygons),\r\n\t                polygonSharedIndexes = new Uint32Array(numpolygons),\r\n\t                polygonVertices = new Uint32Array(numpolygonvertices),\r\n\t                polygonPlaneIndexes = new Uint32Array(numpolygons),\r\n\t                vertexData = new Float64Array(numvertices * 3),\r\n\t                planeData = new Float64Array(numplanes * 4),\r\n\t                polygonVerticesIndex = 0;\r\n\t            for (var polygonindex = 0; polygonindex < numpolygons; ++polygonindex) {\r\n\t                var p = csg.polygons[polygonindex];\r\n\t                numVerticesPerPolygon[polygonindex] = p.vertices.length;\r\n\t                p.vertices.map(function(v) {\r\n\t                    var vertextag = v.getTag();\r\n\t                    var vertexindex = vertexmap[vertextag];\r\n\t                    polygonVertices[polygonVerticesIndex++] = vertexindex;\r\n\t                });\r\n\t                var planetag = p.plane.getTag();\r\n\t                var planeindex = planemap[planetag];\r\n\t                polygonPlaneIndexes[polygonindex] = planeindex;\r\n\t                var sharedtag = p.shared.getTag();\r\n\t                var sharedindex = sharedmap[sharedtag];\r\n\t                polygonSharedIndexes[polygonindex] = sharedindex;\r\n\t            }\r\n\t            var verticesArrayIndex = 0;\r\n\t            vertices.map(function(v) {\r\n\t                var pos = v.pos;\r\n\t                vertexData[verticesArrayIndex++] = pos._x;\r\n\t                vertexData[verticesArrayIndex++] = pos._y;\r\n\t                vertexData[verticesArrayIndex++] = pos._z;\r\n\t            });\r\n\t            var planesArrayIndex = 0;\r\n\t            planes.map(function(p) {\r\n\t                var normal = p.normal;\r\n\t                planeData[planesArrayIndex++] = normal._x;\r\n\t                planeData[planesArrayIndex++] = normal._y;\r\n\t                planeData[planesArrayIndex++] = normal._z;\r\n\t                planeData[planesArrayIndex++] = p.w;\r\n\t            });\r\n\t            var result = {\r\n\t                \"class\": \"CSG\",\r\n\t                numPolygons: numpolygons,\r\n\t                numVerticesPerPolygon: numVerticesPerPolygon,\r\n\t                polygonPlaneIndexes: polygonPlaneIndexes,\r\n\t                polygonSharedIndexes: polygonSharedIndexes,\r\n\t                polygonVertices: polygonVertices,\r\n\t                vertexData: vertexData,\r\n\t                planeData: planeData,\r\n\t                shared: shareds\r\n\t            };\r\n\t            return result;\r\n\t        },\r\n\t\r\n\t        // For debugging\r\n\t        // Creates a new solid with a tiny cube at every vertex of the source solid\r\n\t        toPointCloud: function(cuberadius) {\r\n\t            var csg = this.reTesselated();\r\n\t\r\n\t            var result = new CSG();\r\n\t\r\n\t            // make a list of all unique vertices\r\n\t            // For each vertex we also collect the list of normals of the planes touching the vertices\r\n\t            var vertexmap = {};\r\n\t            csg.polygons.map(function(polygon) {\r\n\t                polygon.vertices.map(function(vertex) {\r\n\t                    vertexmap[vertex.getTag()] = vertex.pos;\r\n\t                });\r\n\t            });\r\n\t\r\n\t            for (var vertextag in vertexmap) {\r\n\t                var pos = vertexmap[vertextag];\r\n\t                var cube = CSG.cube({\r\n\t                    center: pos,\r\n\t                    radius: cuberadius\r\n\t                });\r\n\t                result = result.unionSub(cube, false, false);\r\n\t            }\r\n\t            result = result.reTesselated();\r\n\t            return result;\r\n\t        },\r\n\t\r\n\t        // Get the transformation that transforms this CSG such that it is lying on the z=0 plane,\r\n\t        // as flat as possible (i.e. the least z-height).\r\n\t        // So that it is in an orientation suitable for CNC milling\r\n\t        getTransformationAndInverseTransformationToFlatLying: function() {\r\n\t            if (this.polygons.length === 0) {\r\n\t                return new CSG.Matrix4x4(); // unity\r\n\t            } else {\r\n\t                // get a list of unique planes in the CSG:\r\n\t                var csg = this.canonicalized();\r\n\t                var planemap = {};\r\n\t                csg.polygons.map(function(polygon) {\r\n\t                    planemap[polygon.plane.getTag()] = polygon.plane;\r\n\t                });\r\n\t                // try each plane in the CSG and find the plane that, when we align it flat onto z=0,\r\n\t                // gives the least height in z-direction.\r\n\t                // If two planes give the same height, pick the plane that originally had a normal closest\r\n\t                // to [0,0,-1].\r\n\t                var xvector = new CSG.Vector3D(1, 0, 0);\r\n\t                var yvector = new CSG.Vector3D(0, 1, 0);\r\n\t                var zvector = new CSG.Vector3D(0, 0, 1);\r\n\t                var z0connectorx = new CSG.Connector([0, 0, 0], [0, 0, -1], xvector);\r\n\t                var z0connectory = new CSG.Connector([0, 0, 0], [0, 0, -1], yvector);\r\n\t                var isfirst = true;\r\n\t                var minheight = 0;\r\n\t                var maxdotz = 0;\r\n\t                var besttransformation, bestinversetransformation;\r\n\t                for (var planetag in planemap) {\r\n\t                    var plane = planemap[planetag];\r\n\t                    var pointonplane = plane.normal.times(plane.w);\r\n\t                    var transformation, inversetransformation;\r\n\t                    // We need a normal vecrtor for the transformation\r\n\t                    // determine which is more perpendicular to the plane normal: x or y?\r\n\t                    // we will align this as much as possible to the x or y axis vector\r\n\t                    var xorthogonality = plane.normal.cross(xvector).length();\r\n\t                    var yorthogonality = plane.normal.cross(yvector).length();\r\n\t                    if (xorthogonality > yorthogonality) {\r\n\t                        // x is better:\r\n\t                        var planeconnector = new CSG.Connector(pointonplane, plane.normal, xvector);\r\n\t                        transformation = planeconnector.getTransformationTo(z0connectorx, false, 0);\r\n\t                        inversetransformation = z0connectorx.getTransformationTo(planeconnector, false, 0);\r\n\t                    } else {\r\n\t                        // y is better:\r\n\t                        var planeconnector = new CSG.Connector(pointonplane, plane.normal, yvector);\r\n\t                        transformation = planeconnector.getTransformationTo(z0connectory, false, 0);\r\n\t                        inversetransformation = z0connectory.getTransformationTo(planeconnector, false, 0);\r\n\t                    }\r\n\t                    var transformedcsg = csg.transform(transformation);\r\n\t                    var dotz = -plane.normal.dot(zvector);\r\n\t                    var bounds = transformedcsg.getBounds();\r\n\t                    var zheight = bounds[1].z - bounds[0].z;\r\n\t                    var isbetter = isfirst;\r\n\t                    if (!isbetter) {\r\n\t                        if (zheight < minheight) {\r\n\t                            isbetter = true;\r\n\t                        } else if (zheight == minheight) {\r\n\t                            if (dotz > maxdotz) isbetter = true;\r\n\t                        }\r\n\t                    }\r\n\t                    if (isbetter) {\r\n\t                        // translate the transformation around the z-axis and onto the z plane:\r\n\t                        var translation = new CSG.Vector3D([-0.5 * (bounds[1].x + bounds[0].x), -0.5 * (bounds[1].y + bounds[0].y), -bounds[0].z]);\r\n\t                        transformation = transformation.multiply(CSG.Matrix4x4.translation(translation));\r\n\t                        inversetransformation = CSG.Matrix4x4.translation(translation.negated()).multiply(inversetransformation);\r\n\t                        minheight = zheight;\r\n\t                        maxdotz = dotz;\r\n\t                        besttransformation = transformation;\r\n\t                        bestinversetransformation = inversetransformation;\r\n\t                    }\r\n\t                    isfirst = false;\r\n\t                }\r\n\t                return [besttransformation, bestinversetransformation];\r\n\t            }\r\n\t        },\r\n\t\r\n\t        getTransformationToFlatLying: function() {\r\n\t            var result = this.getTransformationAndInverseTransformationToFlatLying();\r\n\t            return result[0];\r\n\t        },\r\n\t\r\n\t        lieFlat: function() {\r\n\t            var transformation = this.getTransformationToFlatLying();\r\n\t            return this.transform(transformation);\r\n\t        },\r\n\t\r\n\t        // project the 3D CSG onto a plane\r\n\t        // This returns a 2D CAG with the 'shadow' shape of the 3D solid when projected onto the\r\n\t        // plane represented by the orthonormal basis\r\n\t        projectToOrthoNormalBasis: function(orthobasis) {\r\n\t            var EPS = 1e-5;\r\n\t            var cags = [];\r\n\t            this.polygons.filter(function(p) {\r\n\t                    // only return polys in plane, others may disturb result\r\n\t                    return p.plane.normal.minus(orthobasis.plane.normal).lengthSquared() < EPS*EPS;\r\n\t                })\r\n\t                .map(function(polygon) {\r\n\t                    var cag = polygon.projectToOrthoNormalBasis(orthobasis);\r\n\t                    if (cag.sides.length > 0) {\r\n\t                        cags.push(cag);\r\n\t                    }\r\n\t            });\r\n\t            var result = new CAG().union(cags);\r\n\t            return result;\r\n\t        },\r\n\t\r\n\t        sectionCut: function(orthobasis) {\r\n\t            var EPS = 1e-5;\r\n\t            var plane1 = orthobasis.plane;\r\n\t            var plane2 = orthobasis.plane.flipped();\r\n\t            plane1 = new CSG.Plane(plane1.normal, plane1.w);\r\n\t            plane2 = new CSG.Plane(plane2.normal, plane2.w + 5*EPS);\r\n\t            var cut3d = this.cutByPlane(plane1);\r\n\t            cut3d = cut3d.cutByPlane(plane2);\r\n\t            return cut3d.projectToOrthoNormalBasis(orthobasis);\r\n\t        },\r\n\t\r\n\t        /*\r\n\t         fixTJunctions:\r\n\t\r\n\t         Suppose we have two polygons ACDB and EDGF:\r\n\t\r\n\t          A-----B\r\n\t          |     |\r\n\t          |     E--F\r\n\t          |     |  |\r\n\t          C-----D--G\r\n\t\r\n\t         Note that vertex E forms a T-junction on the side BD. In this case some STL slicers will complain\r\n\t         that the solid is not watertight. This is because the watertightness check is done by checking if\r\n\t         each side DE is matched by another side ED.\r\n\t\r\n\t         This function will return a new solid with ACDB replaced by ACDEB\r\n\t\r\n\t         Note that this can create polygons that are slightly non-convex (due to rounding errors). Therefore the result should\r\n\t         not be used for further CSG operations!\r\n\t         */\r\n\t        fixTJunctions: function() {\r\n\t            var csg = this.canonicalized();\r\n\t            var sidemap = {};\r\n\t            for (var polygonindex = 0; polygonindex < csg.polygons.length; polygonindex++) {\r\n\t                var polygon = csg.polygons[polygonindex];\r\n\t                var numvertices = polygon.vertices.length;\r\n\t                if (numvertices >= 3) // should be true\r\n\t                {\r\n\t                    var vertex = polygon.vertices[0];\r\n\t                    var vertextag = vertex.getTag();\r\n\t                    for (var vertexindex = 0; vertexindex < numvertices; vertexindex++) {\r\n\t                        var nextvertexindex = vertexindex + 1;\r\n\t                        if (nextvertexindex == numvertices) nextvertexindex = 0;\r\n\t                        var nextvertex = polygon.vertices[nextvertexindex];\r\n\t                        var nextvertextag = nextvertex.getTag();\r\n\t                        var sidetag = vertextag + \"/\" + nextvertextag;\r\n\t                        var reversesidetag = nextvertextag + \"/\" + vertextag;\r\n\t                        if (reversesidetag in sidemap) {\r\n\t                            // this side matches the same side in another polygon. Remove from sidemap:\r\n\t                            var ar = sidemap[reversesidetag];\r\n\t                            ar.splice(-1, 1);\r\n\t                            if (ar.length === 0) {\r\n\t                                delete sidemap[reversesidetag];\r\n\t                            }\r\n\t                        } else {\r\n\t                            var sideobj = {\r\n\t                                vertex0: vertex,\r\n\t                                vertex1: nextvertex,\r\n\t                                polygonindex: polygonindex\r\n\t                            };\r\n\t                            if (!(sidetag in sidemap)) {\r\n\t                                sidemap[sidetag] = [sideobj];\r\n\t                            } else {\r\n\t                                sidemap[sidetag].push(sideobj);\r\n\t                            }\r\n\t                        }\r\n\t                        vertex = nextvertex;\r\n\t                        vertextag = nextvertextag;\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            // now sidemap contains 'unmatched' sides\r\n\t            // i.e. side AB in one polygon does not have a matching side BA in another polygon\r\n\t            var vertextag2sidestart = {};\r\n\t            var vertextag2sideend = {};\r\n\t            var sidestocheck = {};\r\n\t            var sidemapisempty = true;\r\n\t            for (var sidetag in sidemap) {\r\n\t                sidemapisempty = false;\r\n\t                sidestocheck[sidetag] = true;\r\n\t                sidemap[sidetag].map(function(sideobj) {\r\n\t                    var starttag = sideobj.vertex0.getTag();\r\n\t                    var endtag = sideobj.vertex1.getTag();\r\n\t                    if (starttag in vertextag2sidestart) {\r\n\t                        vertextag2sidestart[starttag].push(sidetag);\r\n\t                    } else {\r\n\t                        vertextag2sidestart[starttag] = [sidetag];\r\n\t                    }\r\n\t                    if (endtag in vertextag2sideend) {\r\n\t                        vertextag2sideend[endtag].push(sidetag);\r\n\t                    } else {\r\n\t                        vertextag2sideend[endtag] = [sidetag];\r\n\t                    }\r\n\t                });\r\n\t            }\r\n\t\r\n\t            if (!sidemapisempty) {\r\n\t                // make a copy of the polygons array, since we are going to modify it:\r\n\t                var polygons = csg.polygons.slice(0);\r\n\t\r\n\t                function addSide(vertex0, vertex1, polygonindex) {\r\n\t                    var starttag = vertex0.getTag();\r\n\t                    var endtag = vertex1.getTag();\r\n\t                    if (starttag == endtag) throw new Error(\"Assertion failed\");\r\n\t                    var newsidetag = starttag + \"/\" + endtag;\r\n\t                    var reversesidetag = endtag + \"/\" + starttag;\r\n\t                    if (reversesidetag in sidemap) {\r\n\t                        // we have a matching reverse oriented side.\r\n\t                        // Instead of adding the new side, cancel out the reverse side:\r\n\t                        // console.log(\"addSide(\"+newsidetag+\") has reverse side:\");\r\n\t                        deleteSide(vertex1, vertex0, null);\r\n\t                        return null;\r\n\t                    }\r\n\t                    //  console.log(\"addSide(\"+newsidetag+\")\");\r\n\t                    var newsideobj = {\r\n\t                        vertex0: vertex0,\r\n\t                        vertex1: vertex1,\r\n\t                        polygonindex: polygonindex\r\n\t                    };\r\n\t                    if (!(newsidetag in sidemap)) {\r\n\t                        sidemap[newsidetag] = [newsideobj];\r\n\t                    } else {\r\n\t                        sidemap[newsidetag].push(newsideobj);\r\n\t                    }\r\n\t                    if (starttag in vertextag2sidestart) {\r\n\t                        vertextag2sidestart[starttag].push(newsidetag);\r\n\t                    } else {\r\n\t                        vertextag2sidestart[starttag] = [newsidetag];\r\n\t                    }\r\n\t                    if (endtag in vertextag2sideend) {\r\n\t                        vertextag2sideend[endtag].push(newsidetag);\r\n\t                    } else {\r\n\t                        vertextag2sideend[endtag] = [newsidetag];\r\n\t                    }\r\n\t                    return newsidetag;\r\n\t                }\r\n\t\r\n\t                function deleteSide(vertex0, vertex1, polygonindex) {\r\n\t                    var starttag = vertex0.getTag();\r\n\t                    var endtag = vertex1.getTag();\r\n\t                    var sidetag = starttag + \"/\" + endtag;\r\n\t                    // console.log(\"deleteSide(\"+sidetag+\")\");\r\n\t                    if (!(sidetag in sidemap)) throw new Error(\"Assertion failed\");\r\n\t                    var idx = -1;\r\n\t                    var sideobjs = sidemap[sidetag];\r\n\t                    for (var i = 0; i < sideobjs.length; i++) {\r\n\t                        var sideobj = sideobjs[i];\r\n\t                        if (sideobj.vertex0 != vertex0) continue;\r\n\t                        if (sideobj.vertex1 != vertex1) continue;\r\n\t                        if (polygonindex !== null) {\r\n\t                            if (sideobj.polygonindex != polygonindex) continue;\r\n\t                        }\r\n\t                        idx = i;\r\n\t                        break;\r\n\t                    }\r\n\t                    if (idx < 0) throw new Error(\"Assertion failed\");\r\n\t                    sideobjs.splice(idx, 1);\r\n\t                    if (sideobjs.length === 0) {\r\n\t                        delete sidemap[sidetag];\r\n\t                    }\r\n\t                    idx = vertextag2sidestart[starttag].indexOf(sidetag);\r\n\t                    if (idx < 0) throw new Error(\"Assertion failed\");\r\n\t                    vertextag2sidestart[starttag].splice(idx, 1);\r\n\t                    if (vertextag2sidestart[starttag].length === 0) {\r\n\t                        delete vertextag2sidestart[starttag];\r\n\t                    }\r\n\t\r\n\t                    idx = vertextag2sideend[endtag].indexOf(sidetag);\r\n\t                    if (idx < 0) throw new Error(\"Assertion failed\");\r\n\t                    vertextag2sideend[endtag].splice(idx, 1);\r\n\t                    if (vertextag2sideend[endtag].length === 0) {\r\n\t                        delete vertextag2sideend[endtag];\r\n\t                    }\r\n\t                }\r\n\t\r\n\t\r\n\t                while (true) {\r\n\t                    var sidemapisempty = true;\r\n\t                    for (var sidetag in sidemap) {\r\n\t                        sidemapisempty = false;\r\n\t                        sidestocheck[sidetag] = true;\r\n\t                    }\r\n\t                    if (sidemapisempty) break;\r\n\t                    var donesomething = false;\r\n\t                    while (true) {\r\n\t                        var sidetagtocheck = null;\r\n\t                        for (var sidetag in sidestocheck) {\r\n\t                            sidetagtocheck = sidetag;\r\n\t                            break;\r\n\t                        }\r\n\t                        if (sidetagtocheck === null) break; // sidestocheck is empty, we're done!\r\n\t                        var donewithside = true;\r\n\t                        if (sidetagtocheck in sidemap) {\r\n\t                            var sideobjs = sidemap[sidetagtocheck];\r\n\t                            if (sideobjs.length === 0) throw new Error(\"Assertion failed\");\r\n\t                            var sideobj = sideobjs[0];\r\n\t                            for (var directionindex = 0; directionindex < 2; directionindex++) {\r\n\t                                var startvertex = (directionindex === 0) ? sideobj.vertex0 : sideobj.vertex1;\r\n\t                                var endvertex = (directionindex === 0) ? sideobj.vertex1 : sideobj.vertex0;\r\n\t                                var startvertextag = startvertex.getTag();\r\n\t                                var endvertextag = endvertex.getTag();\r\n\t                                var matchingsides = [];\r\n\t                                if (directionindex === 0) {\r\n\t                                    if (startvertextag in vertextag2sideend) {\r\n\t                                        matchingsides = vertextag2sideend[startvertextag];\r\n\t                                    }\r\n\t                                } else {\r\n\t                                    if (startvertextag in vertextag2sidestart) {\r\n\t                                        matchingsides = vertextag2sidestart[startvertextag];\r\n\t                                    }\r\n\t                                }\r\n\t                                for (var matchingsideindex = 0; matchingsideindex < matchingsides.length; matchingsideindex++) {\r\n\t                                    var matchingsidetag = matchingsides[matchingsideindex];\r\n\t                                    var matchingside = sidemap[matchingsidetag][0];\r\n\t                                    var matchingsidestartvertex = (directionindex === 0) ? matchingside.vertex0 : matchingside.vertex1;\r\n\t                                    var matchingsideendvertex = (directionindex === 0) ? matchingside.vertex1 : matchingside.vertex0;\r\n\t                                    var matchingsidestartvertextag = matchingsidestartvertex.getTag();\r\n\t                                    var matchingsideendvertextag = matchingsideendvertex.getTag();\r\n\t                                    if (matchingsideendvertextag != startvertextag) throw new Error(\"Assertion failed\");\r\n\t                                    if (matchingsidestartvertextag == endvertextag) {\r\n\t                                        // matchingside cancels sidetagtocheck\r\n\t                                        deleteSide(startvertex, endvertex, null);\r\n\t                                        deleteSide(endvertex, startvertex, null);\r\n\t                                        donewithside = false;\r\n\t                                        directionindex = 2; // skip reverse direction check\r\n\t                                        donesomething = true;\r\n\t                                        break;\r\n\t                                    } else {\r\n\t                                        var startpos = startvertex.pos;\r\n\t                                        var endpos = endvertex.pos;\r\n\t                                        var checkpos = matchingsidestartvertex.pos;\r\n\t                                        var direction = checkpos.minus(startpos);\r\n\t                                        // Now we need to check if endpos is on the line startpos-checkpos:\r\n\t                                        var t = endpos.minus(startpos).dot(direction) / direction.dot(direction);\r\n\t                                        if ((t > 0) && (t < 1)) {\r\n\t                                            var closestpoint = startpos.plus(direction.times(t));\r\n\t                                            var distancesquared = closestpoint.distanceToSquared(endpos);\r\n\t                                            if (distancesquared < 1e-10) {\r\n\t                                                // Yes it's a t-junction! We need to split matchingside in two:\r\n\t                                                var polygonindex = matchingside.polygonindex;\r\n\t                                                var polygon = polygons[polygonindex];\r\n\t                                                // find the index of startvertextag in polygon:\r\n\t                                                var insertionvertextag = matchingside.vertex1.getTag();\r\n\t                                                var insertionvertextagindex = -1;\r\n\t                                                for (var i = 0; i < polygon.vertices.length; i++) {\r\n\t                                                    if (polygon.vertices[i].getTag() == insertionvertextag) {\r\n\t                                                        insertionvertextagindex = i;\r\n\t                                                        break;\r\n\t                                                    }\r\n\t                                                }\r\n\t                                                if (insertionvertextagindex < 0) throw new Error(\"Assertion failed\");\r\n\t                                                // split the side by inserting the vertex:\r\n\t                                                var newvertices = polygon.vertices.slice(0);\r\n\t                                                newvertices.splice(insertionvertextagindex, 0, endvertex);\r\n\t                                                var newpolygon = new CSG.Polygon(newvertices, polygon.shared /*polygon.plane*/ );\r\n\t                                                polygons[polygonindex] = newpolygon;\r\n\t\r\n\t                                                // remove the original sides from our maps:\r\n\t                                                // deleteSide(sideobj.vertex0, sideobj.vertex1, null);\r\n\t                                                deleteSide(matchingside.vertex0, matchingside.vertex1, polygonindex);\r\n\t                                                var newsidetag1 = addSide(matchingside.vertex0, endvertex, polygonindex);\r\n\t                                                var newsidetag2 = addSide(endvertex, matchingside.vertex1, polygonindex);\r\n\t                                                if (newsidetag1 !== null) sidestocheck[newsidetag1] = true;\r\n\t                                                if (newsidetag2 !== null) sidestocheck[newsidetag2] = true;\r\n\t                                                donewithside = false;\r\n\t                                                directionindex = 2; // skip reverse direction check\r\n\t                                                donesomething = true;\r\n\t                                                break;\r\n\t                                            } // if(distancesquared < 1e-10)\r\n\t                                        } // if( (t > 0) && (t < 1) )\r\n\t                                    } // if(endingstidestartvertextag == endvertextag)\r\n\t                                } // for matchingsideindex\r\n\t                            } // for directionindex\r\n\t                        } // if(sidetagtocheck in sidemap)\r\n\t                        if (donewithside) {\r\n\t                            delete sidestocheck[sidetag];\r\n\t                        }\r\n\t                    }\r\n\t                    if (!donesomething) break;\r\n\t                }\r\n\t                var newcsg = CSG.fromPolygons(polygons);\r\n\t                newcsg.properties = csg.properties;\r\n\t                newcsg.isCanonicalized = true;\r\n\t                newcsg.isRetesselated = true;\r\n\t                csg = newcsg;\r\n\t            } // if(!sidemapisempty)\r\n\t            var sidemapisempty = true;\r\n\t            for (var sidetag in sidemap) {\r\n\t                sidemapisempty = false;\r\n\t                break;\r\n\t            }\r\n\t            if (!sidemapisempty) {\r\n\t                // throw new Error(\"!sidemapisempty\");\r\n\t            OpenJsCad.log(\"!sidemapisempty\");\r\n\t            }\r\n\t            return csg;\r\n\t        },\r\n\t\r\n\t        toTriangles: function() {\r\n\t            var polygons = [];\r\n\t            this.polygons.forEach(function(poly) {\r\n\t                var firstVertex = poly.vertices[0];\r\n\t                for (var i = poly.vertices.length - 3; i >= 0; i--) {\r\n\t                    polygons.push(new CSG.Polygon([\r\n\t                            firstVertex, poly.vertices[i + 1], poly.vertices[i + 2]\r\n\t                        ],\r\n\t                        poly.shared, poly.plane));\r\n\t                }\r\n\t            });\r\n\t            return polygons;\r\n\t        },\r\n\t\r\n\t        // features: string, or array containing 1 or more strings of: 'volume', 'area'\r\n\t        // more could be added here (Fourier coeff, moments)\r\n\t        getFeatures: function(features) {\r\n\t            if (!(features instanceof Array)) {\r\n\t                features = [features];\r\n\t            }\r\n\t            var result = this.toTriangles().map(function(triPoly) {\r\n\t                    return triPoly.getTetraFeatures(features);\r\n\t                })\r\n\t                .reduce(function(pv, v) {\r\n\t                    return v.map(function(feat, i) {\r\n\t                        return feat + (pv === 0 ? 0 : pv[i]);\r\n\t                    });\r\n\t                }, 0);\r\n\t            return (result.length == 1) ? result[0] : result;\r\n\t        }\r\n\t    };\r\n\t\r\n\t    // Parse an option from the options object\r\n\t    // If the option is not present, return the default value\r\n\t    CSG.parseOption = function(options, optionname, defaultvalue) {\r\n\t        var result = defaultvalue;\r\n\t        if (options) {\r\n\t            if (optionname in options) {\r\n\t                result = options[optionname];\r\n\t            }\r\n\t        }\r\n\t        return result;\r\n\t    };\r\n\t\r\n\t    // Parse an option and force into a CSG.Vector3D. If a scalar is passed it is converted\r\n\t    // into a vector with equal x,y,z\r\n\t    CSG.parseOptionAs3DVector = function(options, optionname, defaultvalue) {\r\n\t        var result = CSG.parseOption(options, optionname, defaultvalue);\r\n\t        result = new CSG.Vector3D(result);\r\n\t        return result;\r\n\t    };\r\n\t\r\n\t    CSG.parseOptionAs3DVectorList = function(options, optionname, defaultvalue) {\r\n\t        var result = CSG.parseOption(options, optionname, defaultvalue);\r\n\t        return result.map(function(res) {\r\n\t            return new CSG.Vector3D(res);\r\n\t        });\r\n\t    };\r\n\t\r\n\t    // Parse an option and force into a CSG.Vector2D. If a scalar is passed it is converted\r\n\t    // into a vector with equal x,y\r\n\t    CSG.parseOptionAs2DVector = function(options, optionname, defaultvalue) {\r\n\t        var result = CSG.parseOption(options, optionname, defaultvalue);\r\n\t        result = new CSG.Vector2D(result);\r\n\t        return result;\r\n\t    };\r\n\t\r\n\t    CSG.parseOptionAsFloat = function(options, optionname, defaultvalue) {\r\n\t        var result = CSG.parseOption(options, optionname, defaultvalue);\r\n\t        if (typeof(result) == \"string\") {\r\n\t            result = Number(result);\r\n\t        }\r\n\t        if (isNaN(result) || typeof(result) != \"number\") {\r\n\t            throw new Error(\"Parameter \" + optionname + \" should be a number\");\r\n\t        }\r\n\t        return result;\r\n\t    };\r\n\t\r\n\t    CSG.parseOptionAsInt = function(options, optionname, defaultvalue) {\r\n\t        var result = CSG.parseOption(options, optionname, defaultvalue);\r\n\t        result = Number(Math.floor(result));\r\n\t        if (isNaN(result)) {\r\n\t            throw new Error(\"Parameter \" + optionname + \" should be a number\");\r\n\t        }\r\n\t        return result;\r\n\t    };\r\n\t\r\n\t    CSG.parseOptionAsBool = function(options, optionname, defaultvalue) {\r\n\t        var result = CSG.parseOption(options, optionname, defaultvalue);\r\n\t        if (typeof(result) == \"string\") {\r\n\t            if (result == \"true\") result = true;\r\n\t            else if (result == \"false\") result = false;\r\n\t            else if (result == 0) result = false;\r\n\t        }\r\n\t        result = !!result;\r\n\t        return result;\r\n\t    };\r\n\t\r\n\t    // Construct an axis-aligned solid cuboid.\r\n\t    // Parameters:\r\n\t    //   center: center of cube (default [0,0,0])\r\n\t    //   radius: radius of cube (default [1,1,1]), can be specified as scalar or as 3D vector\r\n\t    //\r\n\t    // Example code:\r\n\t    //\r\n\t    //     var cube = CSG.cube({\r\n\t    //       center: [0, 0, 0],\r\n\t    //       radius: 1\r\n\t    //     });\r\n\t    CSG.cube = function(options) {\r\n\t        var c, r;\r\n\t        options = options || {};\r\n\t        if (('corner1' in options) || ('corner2' in options)) {\r\n\t            if (('center' in options) || ('radius' in options)) {\r\n\t                throw new Error(\"cube: should either give a radius and center parameter, or a corner1 and corner2 parameter\")\r\n\t            }\r\n\t            corner1 = CSG.parseOptionAs3DVector(options, \"corner1\", [0, 0, 0]);\r\n\t            corner2 = CSG.parseOptionAs3DVector(options, \"corner2\", [1, 1, 1]);\r\n\t            c = corner1.plus(corner2).times(0.5);\r\n\t            r = corner2.minus(corner1).times(0.5);\r\n\t        } else {\r\n\t            c = CSG.parseOptionAs3DVector(options, \"center\", [0, 0, 0]);\r\n\t            r = CSG.parseOptionAs3DVector(options, \"radius\", [1, 1, 1]);\r\n\t        }\r\n\t        r = r.abs(); // negative radii make no sense\r\n\t        var result = CSG.fromPolygons([\r\n\t            [\r\n\t                [0, 4, 6, 2],\r\n\t                [-1, 0, 0]\r\n\t            ],\r\n\t            [\r\n\t                [1, 3, 7, 5],\r\n\t                [+1, 0, 0]\r\n\t            ],\r\n\t            [\r\n\t                [0, 1, 5, 4],\r\n\t                [0, -1, 0]\r\n\t            ],\r\n\t            [\r\n\t                [2, 6, 7, 3],\r\n\t                [0, +1, 0]\r\n\t            ],\r\n\t            [\r\n\t                [0, 2, 3, 1],\r\n\t                [0, 0, -1]\r\n\t            ],\r\n\t            [\r\n\t                [4, 5, 7, 6],\r\n\t                [0, 0, +1]\r\n\t            ]\r\n\t        ].map(function(info) {\r\n\t            //var normal = new CSG.Vector3D(info[1]);\r\n\t            //var plane = new CSG.Plane(normal, 1);\r\n\t            var vertices = info[0].map(function(i) {\r\n\t                var pos = new CSG.Vector3D(\r\n\t                    c.x + r.x * (2 * !!(i & 1) - 1), c.y + r.y * (2 * !!(i & 2) - 1), c.z + r.z * (2 * !!(i & 4) - 1));\r\n\t                return new CSG.Vertex(pos);\r\n\t            });\r\n\t            return new CSG.Polygon(vertices, null /* , plane */ );\r\n\t        }));\r\n\t        result.properties.cube = new CSG.Properties();\r\n\t        result.properties.cube.center = new CSG.Vector3D(c);\r\n\t        // add 6 connectors, at the centers of each face:\r\n\t        result.properties.cube.facecenters = [\r\n\t            new CSG.Connector(new CSG.Vector3D([r.x, 0, 0]).plus(c), [1, 0, 0], [0, 0, 1]),\r\n\t            new CSG.Connector(new CSG.Vector3D([-r.x, 0, 0]).plus(c), [-1, 0, 0], [0, 0, 1]),\r\n\t            new CSG.Connector(new CSG.Vector3D([0, r.y, 0]).plus(c), [0, 1, 0], [0, 0, 1]),\r\n\t            new CSG.Connector(new CSG.Vector3D([0, -r.y, 0]).plus(c), [0, -1, 0], [0, 0, 1]),\r\n\t            new CSG.Connector(new CSG.Vector3D([0, 0, r.z]).plus(c), [0, 0, 1], [1, 0, 0]),\r\n\t            new CSG.Connector(new CSG.Vector3D([0, 0, -r.z]).plus(c), [0, 0, -1], [1, 0, 0])\r\n\t        ];\r\n\t        return result;\r\n\t    };\r\n\t\r\n\t    // Construct a solid sphere\r\n\t    //\r\n\t    // Parameters:\r\n\t    //   center: center of sphere (default [0,0,0])\r\n\t    //   radius: radius of sphere (default 1), must be a scalar\r\n\t    //   resolution: determines the number of polygons per 360 degree revolution (default 12)\r\n\t    //   axes: (optional) an array with 3 vectors for the x, y and z base vectors\r\n\t    //\r\n\t    // Example usage:\r\n\t    //\r\n\t    //     var sphere = CSG.sphere({\r\n\t    //       center: [0, 0, 0],\r\n\t    //       radius: 2,\r\n\t    //       resolution: 32,\r\n\t    //     });\r\n\t    CSG.sphere = function(options) {\r\n\t        options = options || {};\r\n\t        var center = CSG.parseOptionAs3DVector(options, \"center\", [0, 0, 0]);\r\n\t        var radius = CSG.parseOptionAsFloat(options, \"radius\", 1);\r\n\t        var resolution = CSG.parseOptionAsInt(options, \"resolution\", CSG.defaultResolution3D);\r\n\t        var xvector, yvector, zvector;\r\n\t        if ('axes' in options) {\r\n\t            xvector = options.axes[0].unit().times(radius);\r\n\t            yvector = options.axes[1].unit().times(radius);\r\n\t            zvector = options.axes[2].unit().times(radius);\r\n\t        } else {\r\n\t            xvector = new CSG.Vector3D([1, 0, 0]).times(radius);\r\n\t            yvector = new CSG.Vector3D([0, -1, 0]).times(radius);\r\n\t            zvector = new CSG.Vector3D([0, 0, 1]).times(radius);\r\n\t        }\r\n\t        if (resolution < 4) resolution = 4;\r\n\t        var qresolution = Math.round(resolution / 4);\r\n\t        var prevcylinderpoint;\r\n\t        var polygons = [];\r\n\t        for (var slice1 = 0; slice1 <= resolution; slice1++) {\r\n\t            var angle = Math.PI * 2.0 * slice1 / resolution;\r\n\t            var cylinderpoint = xvector.times(Math.cos(angle)).plus(yvector.times(Math.sin(angle)));\r\n\t            if (slice1 > 0) {\r\n\t                // cylinder vertices:\r\n\t                var vertices = [];\r\n\t                var prevcospitch, prevsinpitch;\r\n\t                for (var slice2 = 0; slice2 <= qresolution; slice2++) {\r\n\t                    var pitch = 0.5 * Math.PI * slice2 / qresolution;\r\n\t                    var cospitch = Math.cos(pitch);\r\n\t                    var sinpitch = Math.sin(pitch);\r\n\t                    if (slice2 > 0) {\r\n\t                        vertices = [];\r\n\t                        vertices.push(new CSG.Vertex(center.plus(prevcylinderpoint.times(prevcospitch).minus(zvector.times(prevsinpitch)))));\r\n\t                        vertices.push(new CSG.Vertex(center.plus(cylinderpoint.times(prevcospitch).minus(zvector.times(prevsinpitch)))));\r\n\t                        if (slice2 < qresolution) {\r\n\t                            vertices.push(new CSG.Vertex(center.plus(cylinderpoint.times(cospitch).minus(zvector.times(sinpitch)))));\r\n\t                        }\r\n\t                        vertices.push(new CSG.Vertex(center.plus(prevcylinderpoint.times(cospitch).minus(zvector.times(sinpitch)))));\r\n\t                        polygons.push(new CSG.Polygon(vertices));\r\n\t                        vertices = [];\r\n\t                        vertices.push(new CSG.Vertex(center.plus(prevcylinderpoint.times(prevcospitch).plus(zvector.times(prevsinpitch)))));\r\n\t                        vertices.push(new CSG.Vertex(center.plus(cylinderpoint.times(prevcospitch).plus(zvector.times(prevsinpitch)))));\r\n\t                        if (slice2 < qresolution) {\r\n\t                            vertices.push(new CSG.Vertex(center.plus(cylinderpoint.times(cospitch).plus(zvector.times(sinpitch)))));\r\n\t                        }\r\n\t                        vertices.push(new CSG.Vertex(center.plus(prevcylinderpoint.times(cospitch).plus(zvector.times(sinpitch)))));\r\n\t                        vertices.reverse();\r\n\t                        polygons.push(new CSG.Polygon(vertices));\r\n\t                    }\r\n\t                    prevcospitch = cospitch;\r\n\t                    prevsinpitch = sinpitch;\r\n\t                }\r\n\t            }\r\n\t            prevcylinderpoint = cylinderpoint;\r\n\t        }\r\n\t        var result = CSG.fromPolygons(polygons);\r\n\t        result.properties.sphere = new CSG.Properties();\r\n\t        result.properties.sphere.center = new CSG.Vector3D(center);\r\n\t        result.properties.sphere.facepoint = center.plus(xvector);\r\n\t        return result;\r\n\t    };\r\n\t\r\n\t    // Construct a solid cylinder.\r\n\t    //\r\n\t    // Parameters:\r\n\t    //   start: start point of cylinder (default [0, -1, 0])\r\n\t    //   end: end point of cylinder (default [0, 1, 0])\r\n\t    //   radius: radius of cylinder (default 1), must be a scalar\r\n\t    //   resolution: determines the number of polygons per 360 degree revolution (default 12)\r\n\t    //\r\n\t    // Example usage:\r\n\t    //\r\n\t    //     var cylinder = CSG.cylinder({\r\n\t    //       start: [0, -1, 0],\r\n\t    //       end: [0, 1, 0],\r\n\t    //       radius: 1,\r\n\t    //       resolution: 16\r\n\t    //     });\r\n\t    CSG.cylinder = function(options) {\r\n\t        var s = CSG.parseOptionAs3DVector(options, \"start\", [0, -1, 0]);\r\n\t        var e = CSG.parseOptionAs3DVector(options, \"end\", [0, 1, 0]);\r\n\t        var r = CSG.parseOptionAsFloat(options, \"radius\", 1);\r\n\t        var rEnd = CSG.parseOptionAsFloat(options, \"radiusEnd\", r);\r\n\t        var rStart = CSG.parseOptionAsFloat(options, \"radiusStart\", r);\r\n\t        var alpha = CSG.parseOptionAsFloat(options, \"sectorAngle\", 360);\r\n\t        alpha = alpha > 360 ? alpha % 360 : alpha;\r\n\t\r\n\t        if ((rEnd < 0) || (rStart < 0)) {\r\n\t            throw new Error(\"Radius should be non-negative\");\r\n\t        }\r\n\t        if ((rEnd === 0) && (rStart === 0)) {\r\n\t            throw new Error(\"Either radiusStart or radiusEnd should be positive\");\r\n\t        }\r\n\t\r\n\t        var slices = CSG.parseOptionAsInt(options, \"resolution\", CSG.defaultResolution2D);\r\n\t        var ray = e.minus(s);\r\n\t        var axisZ = ray.unit(); //, isY = (Math.abs(axisZ.y) > 0.5);\r\n\t        var axisX = axisZ.randomNonParallelVector().unit();\r\n\t\r\n\t        //  var axisX = new CSG.Vector3D(isY, !isY, 0).cross(axisZ).unit();\r\n\t        var axisY = axisX.cross(axisZ).unit();\r\n\t        var start = new CSG.Vertex(s);\r\n\t        var end = new CSG.Vertex(e);\r\n\t        var polygons = [];\r\n\t\r\n\t        function point(stack, slice, radius) {\r\n\t            var angle = slice * Math.PI * alpha / 180;\r\n\t            var out = axisX.times(Math.cos(angle)).plus(axisY.times(Math.sin(angle)));\r\n\t            var pos = s.plus(ray.times(stack)).plus(out.times(radius));\r\n\t            return new CSG.Vertex(pos);\r\n\t        }\r\n\t        if (alpha > 0) {\r\n\t            for (var i = 0; i < slices; i++) {\r\n\t                var t0 = i / slices,\r\n\t                    t1 = (i + 1) / slices;\r\n\t                if (rEnd == rStart) {\r\n\t                    polygons.push(new CSG.Polygon([start, point(0, t0, rEnd), point(0, t1, rEnd)]));\r\n\t                    polygons.push(new CSG.Polygon([point(0, t1, rEnd), point(0, t0, rEnd), point(1, t0, rEnd), point(1, t1, rEnd)]));\r\n\t                    polygons.push(new CSG.Polygon([end, point(1, t1, rEnd), point(1, t0, rEnd)]));\r\n\t                } else {\r\n\t                    if (rStart > 0) {\r\n\t                        polygons.push(new CSG.Polygon([start, point(0, t0, rStart), point(0, t1, rStart)]));\r\n\t                        polygons.push(new CSG.Polygon([point(0, t0, rStart), point(1, t0, rEnd), point(0, t1, rStart)]));\r\n\t                    }\r\n\t                    if (rEnd > 0) {\r\n\t                        polygons.push(new CSG.Polygon([end, point(1, t1, rEnd), point(1, t0, rEnd)]));\r\n\t                        polygons.push(new CSG.Polygon([point(1, t0, rEnd), point(1, t1, rEnd), point(0, t1, rStart)]));\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            if (alpha < 360) {\r\n\t                polygons.push(new CSG.Polygon([start, end, point(0, 0, rStart)]));\r\n\t                polygons.push(new CSG.Polygon([point(0, 0, rStart), end, point(1, 0, rEnd)]));\r\n\t                polygons.push(new CSG.Polygon([start, point(0, 1, rStart), end]));\r\n\t                polygons.push(new CSG.Polygon([point(0, 1, rStart), point(1, 1, rEnd), end]));\r\n\t            }\r\n\t        }\r\n\t        var result = CSG.fromPolygons(polygons);\r\n\t        result.properties.cylinder = new CSG.Properties();\r\n\t        result.properties.cylinder.start = new CSG.Connector(s, axisZ.negated(), axisX);\r\n\t        result.properties.cylinder.end = new CSG.Connector(e, axisZ, axisX);\r\n\t        var cylCenter = s.plus(ray.times(0.5));\r\n\t        var fptVec = axisX.rotate(s, axisZ, -alpha / 2).times((rStart + rEnd) / 2);\r\n\t        var fptVec90 = fptVec.cross(axisZ);\r\n\t        // note this one is NOT a face normal for a cone. - It's horizontal from cyl perspective\r\n\t        result.properties.cylinder.facepointH = new CSG.Connector(cylCenter.plus(fptVec), fptVec, axisZ);\r\n\t        result.properties.cylinder.facepointH90 = new CSG.Connector(cylCenter.plus(fptVec90), fptVec90, axisZ);\r\n\t        return result;\r\n\t    };\r\n\t\r\n\t    // Like a cylinder, but with rounded ends instead of flat\r\n\t    //\r\n\t    // Parameters:\r\n\t    //   start: start point of cylinder (default [0, -1, 0])\r\n\t    //   end: end point of cylinder (default [0, 1, 0])\r\n\t    //   radius: radius of cylinder (default 1), must be a scalar\r\n\t    //   resolution: determines the number of polygons per 360 degree revolution (default 12)\r\n\t    //   normal: a vector determining the starting angle for tesselation. Should be non-parallel to start.minus(end)\r\n\t    //\r\n\t    // Example usage:\r\n\t    //\r\n\t    //     var cylinder = CSG.roundedCylinder({\r\n\t    //       start: [0, -1, 0],\r\n\t    //       end: [0, 1, 0],\r\n\t    //       radius: 1,\r\n\t    //       resolution: 16\r\n\t    //     });\r\n\t    CSG.roundedCylinder = function(options) {\r\n\t        var p1 = CSG.parseOptionAs3DVector(options, \"start\", [0, -1, 0]);\r\n\t        var p2 = CSG.parseOptionAs3DVector(options, \"end\", [0, 1, 0]);\r\n\t        var radius = CSG.parseOptionAsFloat(options, \"radius\", 1);\r\n\t        var direction = p2.minus(p1);\r\n\t        var defaultnormal;\r\n\t        if (Math.abs(direction.x) > Math.abs(direction.y)) {\r\n\t            defaultnormal = new CSG.Vector3D(0, 1, 0);\r\n\t        } else {\r\n\t            defaultnormal = new CSG.Vector3D(1, 0, 0);\r\n\t        }\r\n\t        var normal = CSG.parseOptionAs3DVector(options, \"normal\", defaultnormal);\r\n\t        var resolution = CSG.parseOptionAsInt(options, \"resolution\", CSG.defaultResolution3D);\r\n\t        if (resolution < 4) resolution = 4;\r\n\t        var polygons = [];\r\n\t        var qresolution = Math.floor(0.25 * resolution);\r\n\t        var length = direction.length();\r\n\t        if (length < 1e-10) {\r\n\t            return CSG.sphere({\r\n\t                center: p1,\r\n\t                radius: radius,\r\n\t                resolution: resolution\r\n\t            });\r\n\t        }\r\n\t        var zvector = direction.unit().times(radius);\r\n\t        var xvector = zvector.cross(normal).unit().times(radius);\r\n\t        var yvector = xvector.cross(zvector).unit().times(radius);\r\n\t        var prevcylinderpoint;\r\n\t        for (var slice1 = 0; slice1 <= resolution; slice1++) {\r\n\t            var angle = Math.PI * 2.0 * slice1 / resolution;\r\n\t            var cylinderpoint = xvector.times(Math.cos(angle)).plus(yvector.times(Math.sin(angle)));\r\n\t            if (slice1 > 0) {\r\n\t                // cylinder vertices:\r\n\t                var vertices = [];\r\n\t                vertices.push(new CSG.Vertex(p1.plus(cylinderpoint)));\r\n\t                vertices.push(new CSG.Vertex(p1.plus(prevcylinderpoint)));\r\n\t                vertices.push(new CSG.Vertex(p2.plus(prevcylinderpoint)));\r\n\t                vertices.push(new CSG.Vertex(p2.plus(cylinderpoint)));\r\n\t                polygons.push(new CSG.Polygon(vertices));\r\n\t                var prevcospitch, prevsinpitch;\r\n\t                for (var slice2 = 0; slice2 <= qresolution; slice2++) {\r\n\t                    var pitch = 0.5 * Math.PI * slice2 / qresolution;\r\n\t                    //var pitch = Math.asin(slice2/qresolution);\r\n\t                    var cospitch = Math.cos(pitch);\r\n\t                    var sinpitch = Math.sin(pitch);\r\n\t                    if (slice2 > 0) {\r\n\t                        vertices = [];\r\n\t                        vertices.push(new CSG.Vertex(p1.plus(prevcylinderpoint.times(prevcospitch).minus(zvector.times(prevsinpitch)))));\r\n\t                        vertices.push(new CSG.Vertex(p1.plus(cylinderpoint.times(prevcospitch).minus(zvector.times(prevsinpitch)))));\r\n\t                        if (slice2 < qresolution) {\r\n\t                            vertices.push(new CSG.Vertex(p1.plus(cylinderpoint.times(cospitch).minus(zvector.times(sinpitch)))));\r\n\t                        }\r\n\t                        vertices.push(new CSG.Vertex(p1.plus(prevcylinderpoint.times(cospitch).minus(zvector.times(sinpitch)))));\r\n\t                        polygons.push(new CSG.Polygon(vertices));\r\n\t                        vertices = [];\r\n\t                        vertices.push(new CSG.Vertex(p2.plus(prevcylinderpoint.times(prevcospitch).plus(zvector.times(prevsinpitch)))));\r\n\t                        vertices.push(new CSG.Vertex(p2.plus(cylinderpoint.times(prevcospitch).plus(zvector.times(prevsinpitch)))));\r\n\t                        if (slice2 < qresolution) {\r\n\t                            vertices.push(new CSG.Vertex(p2.plus(cylinderpoint.times(cospitch).plus(zvector.times(sinpitch)))));\r\n\t                        }\r\n\t                        vertices.push(new CSG.Vertex(p2.plus(prevcylinderpoint.times(cospitch).plus(zvector.times(sinpitch)))));\r\n\t                        vertices.reverse();\r\n\t                        polygons.push(new CSG.Polygon(vertices));\r\n\t                    }\r\n\t                    prevcospitch = cospitch;\r\n\t                    prevsinpitch = sinpitch;\r\n\t                }\r\n\t            }\r\n\t            prevcylinderpoint = cylinderpoint;\r\n\t        }\r\n\t        var result = CSG.fromPolygons(polygons);\r\n\t        var ray = zvector.unit();\r\n\t        var axisX = xvector.unit();\r\n\t        result.properties.roundedCylinder = new CSG.Properties();\r\n\t        result.properties.roundedCylinder.start = new CSG.Connector(p1, ray.negated(), axisX);\r\n\t        result.properties.roundedCylinder.end = new CSG.Connector(p2, ray, axisX);\r\n\t        result.properties.roundedCylinder.facepoint = p1.plus(xvector);\r\n\t        return result;\r\n\t    };\r\n\t\r\n\t    // Construct an axis-aligned solid rounded cuboid.\r\n\t    // Parameters:\r\n\t    //   center: center of cube (default [0,0,0])\r\n\t    //   radius: radius of cube (default [1,1,1]), can be specified as scalar or as 3D vector\r\n\t    //   roundradius: radius of rounded corners (default 0.2), must be a scalar\r\n\t    //   resolution: determines the number of polygons per 360 degree revolution (default 8)\r\n\t    //\r\n\t    // Example code:\r\n\t    //\r\n\t    //     var cube = CSG.roundedCube({\r\n\t    //       center: [0, 0, 0],\r\n\t    //       radius: 1,\r\n\t    //       roundradius: 0.2,\r\n\t    //       resolution: 8,\r\n\t    //     });\r\n\t    CSG.roundedCube = function(options) {\r\n\t        var EPS = 1e-5;\r\n\t        var minRR = 1e-2; //minroundradius 1e-3 gives rounding errors already\r\n\t        var center, cuberadius;\r\n\t        options = options || {};\r\n\t        if (('corner1' in options) || ('corner2' in options)) {\r\n\t            if (('center' in options) || ('radius' in options)) {\r\n\t                throw new Error(\"roundedCube: should either give a radius and center parameter, or a corner1 and corner2 parameter\");\r\n\t            }\r\n\t            corner1 = CSG.parseOptionAs3DVector(options, \"corner1\", [0, 0, 0]);\r\n\t            corner2 = CSG.parseOptionAs3DVector(options, \"corner2\", [1, 1, 1]);\r\n\t            center = corner1.plus(corner2).times(0.5);\r\n\t            cuberadius = corner2.minus(corner1).times(0.5);\r\n\t        } else {\r\n\t            center = CSG.parseOptionAs3DVector(options, \"center\", [0, 0, 0]);\r\n\t            cuberadius = CSG.parseOptionAs3DVector(options, \"radius\", [1, 1, 1]);\r\n\t        }\r\n\t        cuberadius = cuberadius.abs(); // negative radii make no sense\r\n\t        var resolution = CSG.parseOptionAsInt(options, \"resolution\", CSG.defaultResolution3D);\r\n\t        if (resolution < 4) resolution = 4;\r\n\t        if (resolution%2 == 1 && resolution < 8) resolution = 8; // avoid ugly\r\n\t        var roundradius = CSG.parseOptionAs3DVector(options, \"roundradius\", [0.2, 0.2, 0.2]);\r\n\t        // slight hack for now - total radius stays ok\r\n\t        roundradius = CSG.Vector3D.Create(Math.max(roundradius.x, minRR), Math.max(roundradius.y, minRR), Math.max(roundradius.z, minRR));\r\n\t        var innerradius = cuberadius.minus(roundradius);\r\n\t        if (innerradius.x < 0 || innerradius.y < 0 || innerradius.z < 0) {\r\n\t            throw('roundradius <= radius!');\r\n\t        }\r\n\t        var res = CSG.sphere({radius:1, resolution:resolution});\r\n\t        res = res.scale(roundradius);\r\n\t        innerradius.x > EPS && (res = res.stretchAtPlane([1, 0, 0], [0, 0, 0], 2*innerradius.x));\r\n\t        innerradius.y > EPS && (res = res.stretchAtPlane([0, 1, 0], [0, 0, 0], 2*innerradius.y));\r\n\t        innerradius.z > EPS && (res = res.stretchAtPlane([0, 0, 1], [0, 0, 0], 2*innerradius.z));\r\n\t        res = res.translate([-innerradius.x+center.x, -innerradius.y+center.y, -innerradius.z+center.z]);\r\n\t        res = res.reTesselated();\r\n\t        res.properties.roundedCube = new CSG.Properties();\r\n\t        res.properties.roundedCube.center = new CSG.Vertex(center);\r\n\t        res.properties.roundedCube.facecenters = [\r\n\t            new CSG.Connector(new CSG.Vector3D([cuberadius.x, 0, 0]).plus(center), [1, 0, 0], [0, 0, 1]),\r\n\t            new CSG.Connector(new CSG.Vector3D([-cuberadius.x, 0, 0]).plus(center), [-1, 0, 0], [0, 0, 1]),\r\n\t            new CSG.Connector(new CSG.Vector3D([0, cuberadius.y, 0]).plus(center), [0, 1, 0], [0, 0, 1]),\r\n\t            new CSG.Connector(new CSG.Vector3D([0, -cuberadius.y, 0]).plus(center), [0, -1, 0], [0, 0, 1]),\r\n\t            new CSG.Connector(new CSG.Vector3D([0, 0, cuberadius.z]).plus(center), [0, 0, 1], [1, 0, 0]),\r\n\t            new CSG.Connector(new CSG.Vector3D([0, 0, -cuberadius.z]).plus(center), [0, 0, -1], [1, 0, 0])\r\n\t        ];\r\n\t        return res;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * polyhedron accepts openscad style arguments. I.e. define face vertices clockwise looking from outside\r\n\t     */\r\n\t    CSG.polyhedron = function(options) {\r\n\t        options = options || {};\r\n\t        if (('points' in options) !== ('faces' in options)) {\r\n\t            throw new Error(\"polyhedron needs 'points' and 'faces' arrays\");\r\n\t        }\r\n\t        var vertices = CSG.parseOptionAs3DVectorList(options, \"points\", [\r\n\t                [1, 1, 0],\r\n\t                [1, -1, 0],\r\n\t                [-1, -1, 0],\r\n\t                [-1, 1, 0],\r\n\t                [0, 0, 1]\r\n\t            ])\r\n\t            .map(function(pt) {\r\n\t                return new CSG.Vertex(pt);\r\n\t            });\r\n\t        var faces = CSG.parseOption(options, \"faces\", [\r\n\t                [0, 1, 4],\r\n\t                [1, 2, 4],\r\n\t                [2, 3, 4],\r\n\t                [3, 0, 4],\r\n\t                [1, 0, 3],\r\n\t                [2, 1, 3]\r\n\t            ]);\r\n\t        // openscad convention defines inward normals - so we have to invert here\r\n\t        faces.forEach(function(face) {\r\n\t            face.reverse();\r\n\t        });\r\n\t        var polygons = faces.map(function(face) {\r\n\t            return new CSG.Polygon(face.map(function(idx) {\r\n\t                return vertices[idx];\r\n\t            }));\r\n\t        });\r\n\t\r\n\t        // TODO: facecenters as connectors? probably overkill. Maybe centroid\r\n\t        // the re-tesselation here happens because it's so easy for a user to\r\n\t        // create parametrized polyhedrons that end up with 1-2 dimensional polygons.\r\n\t        // These will create infinite loops at CSG.Tree()\r\n\t        return CSG.fromPolygons(polygons).reTesselated();\r\n\t    };\r\n\t\r\n\t    CSG.IsFloat = function(n) {\r\n\t        return (!isNaN(n)) || (n === Infinity) || (n === -Infinity);\r\n\t    };\r\n\t\r\n\t    // solve 2x2 linear equation:\r\n\t    // [ab][x] = [u]\r\n\t    // [cd][y]   [v]\r\n\t    CSG.solve2Linear = function(a, b, c, d, u, v) {\r\n\t        var det = a * d - b * c;\r\n\t        var invdet = 1.0 / det;\r\n\t        var x = u * d - b * v;\r\n\t        var y = -u * c + a * v;\r\n\t        x *= invdet;\r\n\t        y *= invdet;\r\n\t        return [x, y];\r\n\t    };\r\n\t\r\n\t    // # class Vector3D\r\n\t    // Represents a 3D vector.\r\n\t    //\r\n\t    // Example usage:\r\n\t    //\r\n\t    //     new CSG.Vector3D(1, 2, 3);\r\n\t    //     new CSG.Vector3D([1, 2, 3]);\r\n\t    //     new CSG.Vector3D({ x: 1, y: 2, z: 3 });\r\n\t    //     new CSG.Vector3D(1, 2); // assumes z=0\r\n\t    //     new CSG.Vector3D([1, 2]); // assumes z=0\r\n\t    CSG.Vector3D = function(x, y, z) {\r\n\t        if (arguments.length == 3) {\r\n\t            this._x = parseFloat(x);\r\n\t            this._y = parseFloat(y);\r\n\t            this._z = parseFloat(z);\r\n\t        } else if (arguments.length == 2) {\r\n\t            this._x = parseFloat(x);\r\n\t            this._y = parseFloat(y);\r\n\t            this._z = 0;\r\n\t        } else {\r\n\t            var ok = true;\r\n\t            if (arguments.length == 1) {\r\n\t                if (typeof(x) == \"object\") {\r\n\t                    if (x instanceof CSG.Vector3D) {\r\n\t                        this._x = x._x;\r\n\t                        this._y = x._y;\r\n\t                        this._z = x._z;\r\n\t                    } else if (x instanceof CSG.Vector2D) {\r\n\t                        this._x = x._x;\r\n\t                        this._y = x._y;\r\n\t                        this._z = 0;\r\n\t                    } else if (x instanceof Array) {\r\n\t                        if ((x.length < 2) || (x.length > 3)) {\r\n\t                            ok = false;\r\n\t                        } else {\r\n\t                            this._x = parseFloat(x[0]);\r\n\t                            this._y = parseFloat(x[1]);\r\n\t                            if (x.length == 3) {\r\n\t                                this._z = parseFloat(x[2]);\r\n\t                            } else {\r\n\t                                this._z = 0;\r\n\t                            }\r\n\t                        }\r\n\t                    } else if (('x' in x) && ('y' in x)) {\r\n\t                        this._x = parseFloat(x.x);\r\n\t                        this._y = parseFloat(x.y);\r\n\t                        if ('z' in x) {\r\n\t                            this._z = parseFloat(x.z);\r\n\t                        } else {\r\n\t                            this._z = 0;\r\n\t                        }\r\n\t                    } else ok = false;\r\n\t                } else {\r\n\t                    var v = parseFloat(x);\r\n\t                    this._x = v;\r\n\t                    this._y = v;\r\n\t                    this._z = v;\r\n\t                }\r\n\t            } else ok = false;\r\n\t            if (ok) {\r\n\t                if ((!CSG.IsFloat(this._x)) || (!CSG.IsFloat(this._y)) || (!CSG.IsFloat(this._z))) ok = false;\r\n\t            }\r\n\t            if (!ok) {\r\n\t                throw new Error(\"wrong arguments\");\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t\r\n\t    // This does the same as new CSG.Vector3D(x,y,z) but it doesn't go through the constructor\r\n\t    // and the parameters are not validated. Is much faster.\r\n\t    CSG.Vector3D.Create = function(x, y, z) {\r\n\t        var result = Object.create(CSG.Vector3D.prototype);\r\n\t        result._x = x;\r\n\t        result._y = y;\r\n\t        result._z = z;\r\n\t        return result;\r\n\t    };\r\n\t\r\n\t    CSG.Vector3D.prototype = {\r\n\t        get x() {\r\n\t            return this._x;\r\n\t        },\r\n\t        get y() {\r\n\t            return this._y;\r\n\t        },\r\n\t        get z() {\r\n\t            return this._z;\r\n\t        },\r\n\t\r\n\t        set x(v) {\r\n\t            throw new Error(\"Vector3D is immutable\");\r\n\t        },\r\n\t        set y(v) {\r\n\t            throw new Error(\"Vector3D is immutable\");\r\n\t        },\r\n\t        set z(v) {\r\n\t            throw new Error(\"Vector3D is immutable\");\r\n\t        },\r\n\t\r\n\t        clone: function() {\r\n\t            return CSG.Vector3D.Create(this._x, this._y, this._z);\r\n\t        },\r\n\t\r\n\t        negated: function() {\r\n\t            return CSG.Vector3D.Create(-this._x, -this._y, -this._z);\r\n\t        },\r\n\t\r\n\t        abs: function() {\r\n\t            return CSG.Vector3D.Create(Math.abs(this._x), Math.abs(this._y), Math.abs(this._z));\r\n\t        },\r\n\t\r\n\t        plus: function(a) {\r\n\t            return CSG.Vector3D.Create(this._x + a._x, this._y + a._y, this._z + a._z);\r\n\t        },\r\n\t\r\n\t        minus: function(a) {\r\n\t            return CSG.Vector3D.Create(this._x - a._x, this._y - a._y, this._z - a._z);\r\n\t        },\r\n\t\r\n\t        times: function(a) {\r\n\t            return CSG.Vector3D.Create(this._x * a, this._y * a, this._z * a);\r\n\t        },\r\n\t\r\n\t        dividedBy: function(a) {\r\n\t            return CSG.Vector3D.Create(this._x / a, this._y / a, this._z / a);\r\n\t        },\r\n\t\r\n\t        dot: function(a) {\r\n\t            return this._x * a._x + this._y * a._y + this._z * a._z;\r\n\t        },\r\n\t\r\n\t        lerp: function(a, t) {\r\n\t            return this.plus(a.minus(this).times(t));\r\n\t        },\r\n\t\r\n\t        lengthSquared: function() {\r\n\t            return this.dot(this);\r\n\t        },\r\n\t\r\n\t        length: function() {\r\n\t            return Math.sqrt(this.lengthSquared());\r\n\t        },\r\n\t\r\n\t        unit: function() {\r\n\t            return this.dividedBy(this.length());\r\n\t        },\r\n\t\r\n\t        cross: function(a) {\r\n\t            return CSG.Vector3D.Create(\r\n\t                this._y * a._z - this._z * a._y, this._z * a._x - this._x * a._z, this._x * a._y - this._y * a._x);\r\n\t        },\r\n\t\r\n\t        distanceTo: function(a) {\r\n\t            return this.minus(a).length();\r\n\t        },\r\n\t\r\n\t        distanceToSquared: function(a) {\r\n\t            return this.minus(a).lengthSquared();\r\n\t        },\r\n\t\r\n\t        equals: function(a) {\r\n\t            return (this._x == a._x) && (this._y == a._y) && (this._z == a._z);\r\n\t        },\r\n\t\r\n\t        // Right multiply by a 4x4 matrix (the vector is interpreted as a row vector)\r\n\t        // Returns a new CSG.Vector3D\r\n\t        multiply4x4: function(matrix4x4) {\r\n\t            return matrix4x4.leftMultiply1x3Vector(this);\r\n\t        },\r\n\t\r\n\t        transform: function(matrix4x4) {\r\n\t            return matrix4x4.leftMultiply1x3Vector(this);\r\n\t        },\r\n\t\r\n\t        toString: function() {\r\n\t            return \"(\" + this._x.toFixed(2) + \", \" + this._y.toFixed(2) + \", \" + this._z.toFixed(2) + \")\";\r\n\t        },\r\n\t\r\n\t        // find a vector that is somewhat perpendicular to this one\r\n\t        randomNonParallelVector: function() {\r\n\t            var abs = this.abs();\r\n\t            if ((abs._x <= abs._y) && (abs._x <= abs._z)) {\r\n\t                return CSG.Vector3D.Create(1, 0, 0);\r\n\t            } else if ((abs._y <= abs._x) && (abs._y <= abs._z)) {\r\n\t                return CSG.Vector3D.Create(0, 1, 0);\r\n\t            } else {\r\n\t                return CSG.Vector3D.Create(0, 0, 1);\r\n\t            }\r\n\t        },\r\n\t\r\n\t        min: function(p) {\r\n\t            return CSG.Vector3D.Create(\r\n\t                Math.min(this._x, p._x), Math.min(this._y, p._y), Math.min(this._z, p._z));\r\n\t        },\r\n\t\r\n\t        max: function(p) {\r\n\t            return CSG.Vector3D.Create(\r\n\t                Math.max(this._x, p._x), Math.max(this._y, p._y), Math.max(this._z, p._z));\r\n\t        }\r\n\t    };\r\n\t\r\n\t    // # class Vertex\r\n\t    // Represents a vertex of a polygon. Use your own vertex class instead of this\r\n\t    // one to provide additional features like texture coordinates and vertex\r\n\t    // colors. Custom vertex classes need to provide a `pos` property\r\n\t    // `flipped()`, and `interpolate()` methods that behave analogous to the ones\r\n\t    // defined by `CSG.Vertex`.\r\n\t    CSG.Vertex = function(pos) {\r\n\t        this.pos = pos;\r\n\t    };\r\n\t\r\n\t    // create from an untyped object with identical property names:\r\n\t    CSG.Vertex.fromObject = function(obj) {\r\n\t        var pos = new CSG.Vector3D(obj.pos);\r\n\t        return new CSG.Vertex(pos);\r\n\t    };\r\n\t\r\n\t    CSG.Vertex.prototype = {\r\n\t        // Return a vertex with all orientation-specific data (e.g. vertex normal) flipped. Called when the\r\n\t        // orientation of a polygon is flipped.\r\n\t        flipped: function() {\r\n\t            return this;\r\n\t        },\r\n\t\r\n\t        getTag: function() {\r\n\t            var result = this.tag;\r\n\t            if (!result) {\r\n\t                result = CSG.getTag();\r\n\t                this.tag = result;\r\n\t            }\r\n\t            return result;\r\n\t        },\r\n\t\r\n\t        // Create a new vertex between this vertex and `other` by linearly\r\n\t        // interpolating all properties using a parameter of `t`. Subclasses should\r\n\t        // override this to interpolate additional properties.\r\n\t        interpolate: function(other, t) {\r\n\t            var newpos = this.pos.lerp(other.pos, t);\r\n\t            return new CSG.Vertex(newpos);\r\n\t        },\r\n\t\r\n\t        // Affine transformation of vertex. Returns a new CSG.Vertex\r\n\t        transform: function(matrix4x4) {\r\n\t            var newpos = this.pos.multiply4x4(matrix4x4);\r\n\t            return new CSG.Vertex(newpos);\r\n\t        },\r\n\t\r\n\t        toString: function() {\r\n\t            return this.pos.toString();\r\n\t        }\r\n\t    };\r\n\t\r\n\t    // # class Plane\r\n\t    // Represents a plane in 3D space.\r\n\t    CSG.Plane = function(normal, w) {\r\n\t        this.normal = normal;\r\n\t        this.w = w;\r\n\t    };\r\n\t\r\n\t    // create from an untyped object with identical property names:\r\n\t    CSG.Plane.fromObject = function(obj) {\r\n\t        var normal = new CSG.Vector3D(obj.normal);\r\n\t        var w = parseFloat(obj.w);\r\n\t        return new CSG.Plane(normal, w);\r\n\t    };\r\n\t\r\n\t    // `CSG.Plane.EPSILON` is the tolerance used by `splitPolygon()` to decide if a\r\n\t    // point is on the plane.\r\n\t    CSG.Plane.EPSILON = 1e-5;\r\n\t\r\n\t    CSG.Plane.fromVector3Ds = function(a, b, c) {\r\n\t        var n = b.minus(a).cross(c.minus(a)).unit();\r\n\t        return new CSG.Plane(n, n.dot(a));\r\n\t    };\r\n\t\r\n\t    // like fromVector3Ds, but allow the vectors to be on one point or one line\r\n\t    // in such a case a random plane through the given points is constructed\r\n\t    CSG.Plane.anyPlaneFromVector3Ds = function(a, b, c) {\r\n\t        var v1 = b.minus(a);\r\n\t        var v2 = c.minus(a);\r\n\t        if (v1.length() < 1e-5) {\r\n\t            v1 = v2.randomNonParallelVector();\r\n\t        }\r\n\t        if (v2.length() < 1e-5) {\r\n\t            v2 = v1.randomNonParallelVector();\r\n\t        }\r\n\t        var normal = v1.cross(v2);\r\n\t        if (normal.length() < 1e-5) {\r\n\t            // this would mean that v1 == v2.negated()\r\n\t            v2 = v1.randomNonParallelVector();\r\n\t            normal = v1.cross(v2);\r\n\t        }\r\n\t        normal = normal.unit();\r\n\t        return new CSG.Plane(normal, normal.dot(a));\r\n\t    };\r\n\t\r\n\t    CSG.Plane.fromPoints = function(a, b, c) {\r\n\t        a = new CSG.Vector3D(a);\r\n\t        b = new CSG.Vector3D(b);\r\n\t        c = new CSG.Vector3D(c);\r\n\t        return CSG.Plane.fromVector3Ds(a, b, c);\r\n\t    };\r\n\t\r\n\t    CSG.Plane.fromNormalAndPoint = function(normal, point) {\r\n\t        normal = new CSG.Vector3D(normal);\r\n\t        point = new CSG.Vector3D(point);\r\n\t        normal = normal.unit();\r\n\t        var w = point.dot(normal);\r\n\t        return new CSG.Plane(normal, w);\r\n\t    };\r\n\t\r\n\t    CSG.Plane.prototype = {\r\n\t        flipped: function() {\r\n\t            return new CSG.Plane(this.normal.negated(), -this.w);\r\n\t        },\r\n\t\r\n\t        getTag: function() {\r\n\t            var result = this.tag;\r\n\t            if (!result) {\r\n\t                result = CSG.getTag();\r\n\t                this.tag = result;\r\n\t            }\r\n\t            return result;\r\n\t        },\r\n\t\r\n\t        equals: function(n) {\r\n\t            return this.normal.equals(n.normal) && this.w == n.w;\r\n\t        },\r\n\t\r\n\t        transform: function(matrix4x4) {\r\n\t            var ismirror = matrix4x4.isMirroring();\r\n\t            // get two vectors in the plane:\r\n\t            var r = this.normal.randomNonParallelVector();\r\n\t            var u = this.normal.cross(r);\r\n\t            var v = this.normal.cross(u);\r\n\t            // get 3 points in the plane:\r\n\t            var point1 = this.normal.times(this.w);\r\n\t            var point2 = point1.plus(u);\r\n\t            var point3 = point1.plus(v);\r\n\t            // transform the points:\r\n\t            point1 = point1.multiply4x4(matrix4x4);\r\n\t            point2 = point2.multiply4x4(matrix4x4);\r\n\t            point3 = point3.multiply4x4(matrix4x4);\r\n\t            // and create a new plane from the transformed points:\r\n\t            var newplane = CSG.Plane.fromVector3Ds(point1, point2, point3);\r\n\t            if (ismirror) {\r\n\t                // the transform is mirroring\r\n\t                // We should mirror the plane:\r\n\t                newplane = newplane.flipped();\r\n\t            }\r\n\t            return newplane;\r\n\t        },\r\n\t\r\n\t        // Returns object:\r\n\t        // .type:\r\n\t        //   0: coplanar-front\r\n\t        //   1: coplanar-back\r\n\t        //   2: front\r\n\t        //   3: back\r\n\t        //   4: spanning\r\n\t        // In case the polygon is spanning, returns:\r\n\t        // .front: a CSG.Polygon of the front part\r\n\t        // .back: a CSG.Polygon of the back part\r\n\t        splitPolygon: function(polygon) {\r\n\t            var result = {\r\n\t                type: null,\r\n\t                front: null,\r\n\t                back: null\r\n\t            };\r\n\t            // cache in local vars (speedup):\r\n\t            var planenormal = this.normal;\r\n\t            var vertices = polygon.vertices;\r\n\t            var numvertices = vertices.length;\r\n\t            if (polygon.plane.equals(this)) {\r\n\t                result.type = 0;\r\n\t            } else {\r\n\t                var EPS = CSG.Plane.EPSILON;\r\n\t                var thisw = this.w;\r\n\t                var hasfront = false;\r\n\t                var hasback = false;\r\n\t                var vertexIsBack = [];\r\n\t                var MINEPS = -EPS;\r\n\t                for (var i = 0; i < numvertices; i++) {\r\n\t                    var t = planenormal.dot(vertices[i].pos) - thisw;\r\n\t                    var isback = (t < 0);\r\n\t                    vertexIsBack.push(isback);\r\n\t                    if (t > EPS) hasfront = true;\r\n\t                    if (t < MINEPS) hasback = true;\r\n\t                }\r\n\t                if ((!hasfront) && (!hasback)) {\r\n\t                    // all points coplanar\r\n\t                    var t = planenormal.dot(polygon.plane.normal);\r\n\t                    result.type = (t >= 0) ? 0 : 1;\r\n\t                } else if (!hasback) {\r\n\t                    result.type = 2;\r\n\t                } else if (!hasfront) {\r\n\t                    result.type = 3;\r\n\t                } else {\r\n\t                    // spanning\r\n\t                    result.type = 4;\r\n\t                    var frontvertices = [],\r\n\t                        backvertices = [];\r\n\t                    var isback = vertexIsBack[0];\r\n\t                    for (var vertexindex = 0; vertexindex < numvertices; vertexindex++) {\r\n\t                        var vertex = vertices[vertexindex];\r\n\t                        var nextvertexindex = vertexindex + 1;\r\n\t                        if (nextvertexindex >= numvertices) nextvertexindex = 0;\r\n\t                        var nextisback = vertexIsBack[nextvertexindex];\r\n\t                        if (isback == nextisback) {\r\n\t                            // line segment is on one side of the plane:\r\n\t                            if (isback) {\r\n\t                                backvertices.push(vertex);\r\n\t                            } else {\r\n\t                                frontvertices.push(vertex);\r\n\t                            }\r\n\t                        } else {\r\n\t                            // line segment intersects plane:\r\n\t                            var point = vertex.pos;\r\n\t                            var nextpoint = vertices[nextvertexindex].pos;\r\n\t                            var intersectionpoint = this.splitLineBetweenPoints(point, nextpoint);\r\n\t                            var intersectionvertex = new CSG.Vertex(intersectionpoint);\r\n\t                            if (isback) {\r\n\t                                backvertices.push(vertex);\r\n\t                                backvertices.push(intersectionvertex);\r\n\t                                frontvertices.push(intersectionvertex);\r\n\t                            } else {\r\n\t                                frontvertices.push(vertex);\r\n\t                                frontvertices.push(intersectionvertex);\r\n\t                                backvertices.push(intersectionvertex);\r\n\t                            }\r\n\t                        }\r\n\t                        isback = nextisback;\r\n\t                    } // for vertexindex\r\n\t                    // remove duplicate vertices:\r\n\t                    var EPS_SQUARED = CSG.Plane.EPSILON * CSG.Plane.EPSILON;\r\n\t                    if (backvertices.length >= 3) {\r\n\t                        var prevvertex = backvertices[backvertices.length - 1];\r\n\t                        for (var vertexindex = 0; vertexindex < backvertices.length; vertexindex++) {\r\n\t                            var vertex = backvertices[vertexindex];\r\n\t                            if (vertex.pos.distanceToSquared(prevvertex.pos) < EPS_SQUARED) {\r\n\t                                backvertices.splice(vertexindex, 1);\r\n\t                                vertexindex--;\r\n\t                            }\r\n\t                            prevvertex = vertex;\r\n\t                        }\r\n\t                    }\r\n\t                    if (frontvertices.length >= 3) {\r\n\t                        var prevvertex = frontvertices[frontvertices.length - 1];\r\n\t                        for (var vertexindex = 0; vertexindex < frontvertices.length; vertexindex++) {\r\n\t                            var vertex = frontvertices[vertexindex];\r\n\t                            if (vertex.pos.distanceToSquared(prevvertex.pos) < EPS_SQUARED) {\r\n\t                                frontvertices.splice(vertexindex, 1);\r\n\t                                vertexindex--;\r\n\t                            }\r\n\t                            prevvertex = vertex;\r\n\t                        }\r\n\t                    }\r\n\t                    if (frontvertices.length >= 3) {\r\n\t                        result.front = new CSG.Polygon(frontvertices, polygon.shared, polygon.plane);\r\n\t                    }\r\n\t                    if (backvertices.length >= 3) {\r\n\t                        result.back = new CSG.Polygon(backvertices, polygon.shared, polygon.plane);\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            return result;\r\n\t        },\r\n\t\r\n\t        // robust splitting of a line by a plane\r\n\t        // will work even if the line is parallel to the plane\r\n\t        splitLineBetweenPoints: function(p1, p2) {\r\n\t            var direction = p2.minus(p1);\r\n\t            var labda = (this.w - this.normal.dot(p1)) / this.normal.dot(direction);\r\n\t            if (isNaN(labda)) labda = 0;\r\n\t            if (labda > 1) labda = 1;\r\n\t            if (labda < 0) labda = 0;\r\n\t            var result = p1.plus(direction.times(labda));\r\n\t            return result;\r\n\t        },\r\n\t\r\n\t        // returns CSG.Vector3D\r\n\t        intersectWithLine: function(line3d) {\r\n\t            return line3d.intersectWithPlane(this);\r\n\t        },\r\n\t\r\n\t        // intersection of two planes\r\n\t        intersectWithPlane: function(plane) {\r\n\t            return CSG.Line3D.fromPlanes(this, plane);\r\n\t        },\r\n\t\r\n\t        signedDistanceToPoint: function(point) {\r\n\t            var t = this.normal.dot(point) - this.w;\r\n\t            return t;\r\n\t        },\r\n\t\r\n\t        toString: function() {\r\n\t            return \"[normal: \" + this.normal.toString() + \", w: \" + this.w + \"]\";\r\n\t        },\r\n\t\r\n\t        mirrorPoint: function(point3d) {\r\n\t            var distance = this.signedDistanceToPoint(point3d);\r\n\t            var mirrored = point3d.minus(this.normal.times(distance * 2.0));\r\n\t            return mirrored;\r\n\t        }\r\n\t    };\r\n\t\r\n\t\r\n\t    // # class Polygon\r\n\t    // Represents a convex polygon. The vertices used to initialize a polygon must\r\n\t    // be coplanar and form a convex loop. They do not have to be `CSG.Vertex`\r\n\t    // instances but they must behave similarly (duck typing can be used for\r\n\t    // customization).\r\n\t    //\r\n\t    // Each convex polygon has a `shared` property, which is shared between all\r\n\t    // polygons that are clones of each other or were split from the same polygon.\r\n\t    // This can be used to define per-polygon properties (such as surface color).\r\n\t    //\r\n\t    // The plane of the polygon is calculated from the vertex coordinates\r\n\t    // To avoid unnecessary recalculation, the plane can alternatively be\r\n\t    // passed as the third argument\r\n\t    CSG.Polygon = function(vertices, shared, plane) {\r\n\t        this.vertices = vertices;\r\n\t        if (!shared) shared = CSG.Polygon.defaultShared;\r\n\t        this.shared = shared;\r\n\t        //var numvertices = vertices.length;\r\n\t\r\n\t        if (arguments.length >= 3) {\r\n\t            this.plane = plane;\r\n\t        } else {\r\n\t            this.plane = CSG.Plane.fromVector3Ds(vertices[0].pos, vertices[1].pos, vertices[2].pos);\r\n\t        }\r\n\t\r\n\t        if (_CSGDEBUG) {\r\n\t            this.checkIfConvex();\r\n\t        }\r\n\t    };\r\n\t\r\n\t    // create from an untyped object with identical property names:\r\n\t    CSG.Polygon.fromObject = function(obj) {\r\n\t        var vertices = obj.vertices.map(function(v) {\r\n\t            return CSG.Vertex.fromObject(v);\r\n\t        });\r\n\t        var shared = CSG.Polygon.Shared.fromObject(obj.shared);\r\n\t        var plane = CSG.Plane.fromObject(obj.plane);\r\n\t        return new CSG.Polygon(vertices, shared, plane);\r\n\t    };\r\n\t\r\n\t    CSG.Polygon.prototype = {\r\n\t        // check whether the polygon is convex (it should be, otherwise we will get unexpected results)\r\n\t        checkIfConvex: function() {\r\n\t            if (!CSG.Polygon.verticesConvex(this.vertices, this.plane.normal)) {\r\n\t                CSG.Polygon.verticesConvex(this.vertices, this.plane.normal);\r\n\t                throw new Error(\"Not convex!\");\r\n\t            }\r\n\t        },\r\n\t\r\n\t        setColor: function(args) {\r\n\t            var newshared = CSG.Polygon.Shared.fromColor.apply(this, arguments);\r\n\t            this.shared = newshared;\r\n\t            return this;\r\n\t        },\r\n\t\r\n\t        getSignedVolume: function() {\r\n\t            var signedVolume = 0;\r\n\t            for (var i = 0; i < this.vertices.length - 2; i++) {\r\n\t                signedVolume += this.vertices[0].pos.dot(this.vertices[i+1].pos\r\n\t                    .cross(this.vertices[i+2].pos));\r\n\t            }\r\n\t            signedVolume /= 6;\r\n\t            return signedVolume;\r\n\t        },\r\n\t\r\n\t        // Note: could calculate vectors only once to speed up\r\n\t        getArea: function() {\r\n\t            var polygonArea = 0;\r\n\t            for (var i = 0; i < this.vertices.length - 2; i++) {\r\n\t                polygonArea += this.vertices[i+1].pos.minus(this.vertices[0].pos)\r\n\t                    .cross(this.vertices[i+2].pos.minus(this.vertices[i+1].pos)).length();\r\n\t            }\r\n\t            polygonArea /= 2;\r\n\t            return polygonArea;\r\n\t        },\r\n\t\r\n\t\r\n\t        // accepts array of features to calculate\r\n\t        // returns array of results\r\n\t        getTetraFeatures: function(features) {\r\n\t            var result = [];\r\n\t            features.forEach(function(feature) {\r\n\t                if (feature == 'volume') {\r\n\t                    result.push(this.getSignedVolume());\r\n\t                } else if (feature == 'area') {\r\n\t                    result.push(this.getArea());\r\n\t                }\r\n\t            }, this);\r\n\t            return result;\r\n\t        },\r\n\t\r\n\t        // Extrude a polygon into the direction offsetvector\r\n\t        // Returns a CSG object\r\n\t        extrude: function(offsetvector) {\r\n\t            var newpolygons = [];\r\n\t\r\n\t            var polygon1 = this;\r\n\t            var direction = polygon1.plane.normal.dot(offsetvector);\r\n\t            if (direction > 0) {\r\n\t                polygon1 = polygon1.flipped();\r\n\t            }\r\n\t            newpolygons.push(polygon1);\r\n\t            var polygon2 = polygon1.translate(offsetvector);\r\n\t            var numvertices = this.vertices.length;\r\n\t            for (var i = 0; i < numvertices; i++) {\r\n\t                var sidefacepoints = [];\r\n\t                var nexti = (i < (numvertices - 1)) ? i + 1 : 0;\r\n\t                sidefacepoints.push(polygon1.vertices[i].pos);\r\n\t                sidefacepoints.push(polygon2.vertices[i].pos);\r\n\t                sidefacepoints.push(polygon2.vertices[nexti].pos);\r\n\t                sidefacepoints.push(polygon1.vertices[nexti].pos);\r\n\t                var sidefacepolygon = CSG.Polygon.createFromPoints(sidefacepoints, this.shared);\r\n\t                newpolygons.push(sidefacepolygon);\r\n\t            }\r\n\t            polygon2 = polygon2.flipped();\r\n\t            newpolygons.push(polygon2);\r\n\t            return CSG.fromPolygons(newpolygons);\r\n\t        },\r\n\t\r\n\t        translate: function(offset) {\r\n\t            return this.transform(CSG.Matrix4x4.translation(offset));\r\n\t        },\r\n\t\r\n\t        // returns an array with a CSG.Vector3D (center point) and a radius\r\n\t        boundingSphere: function() {\r\n\t            if (!this.cachedBoundingSphere) {\r\n\t                var box = this.boundingBox();\r\n\t                var middle = box[0].plus(box[1]).times(0.5);\r\n\t                var radius3 = box[1].minus(middle);\r\n\t                var radius = radius3.length();\r\n\t                this.cachedBoundingSphere = [middle, radius];\r\n\t            }\r\n\t            return this.cachedBoundingSphere;\r\n\t        },\r\n\t\r\n\t        // returns an array of two CSG.Vector3Ds (minimum coordinates and maximum coordinates)\r\n\t        boundingBox: function() {\r\n\t            if (!this.cachedBoundingBox) {\r\n\t                var minpoint, maxpoint;\r\n\t                var vertices = this.vertices;\r\n\t                var numvertices = vertices.length;\r\n\t                if (numvertices === 0) {\r\n\t                    minpoint = new CSG.Vector3D(0, 0, 0);\r\n\t                } else {\r\n\t                    minpoint = vertices[0].pos;\r\n\t                }\r\n\t                maxpoint = minpoint;\r\n\t                for (var i = 1; i < numvertices; i++) {\r\n\t                    var point = vertices[i].pos;\r\n\t                    minpoint = minpoint.min(point);\r\n\t                    maxpoint = maxpoint.max(point);\r\n\t                }\r\n\t                this.cachedBoundingBox = [minpoint, maxpoint];\r\n\t            }\r\n\t            return this.cachedBoundingBox;\r\n\t        },\r\n\t\r\n\t        flipped: function() {\r\n\t            var newvertices = this.vertices.map(function(v) {\r\n\t                return v.flipped();\r\n\t            });\r\n\t            newvertices.reverse();\r\n\t            var newplane = this.plane.flipped();\r\n\t            return new CSG.Polygon(newvertices, this.shared, newplane);\r\n\t        },\r\n\t\r\n\t        // Affine transformation of polygon. Returns a new CSG.Polygon\r\n\t        transform: function(matrix4x4) {\r\n\t            var newvertices = this.vertices.map(function(v) {\r\n\t                return v.transform(matrix4x4);\r\n\t            });\r\n\t            var newplane = this.plane.transform(matrix4x4);\r\n\t            if (matrix4x4.isMirroring()) {\r\n\t                // need to reverse the vertex order\r\n\t                // in order to preserve the inside/outside orientation:\r\n\t                newvertices.reverse();\r\n\t            }\r\n\t            return new CSG.Polygon(newvertices, this.shared, newplane);\r\n\t        },\r\n\t\r\n\t        toString: function() {\r\n\t            var result = \"Polygon plane: \" + this.plane.toString() + \"\\n\";\r\n\t            this.vertices.map(function(vertex) {\r\n\t                result += \"  \" + vertex.toString() + \"\\n\";\r\n\t            });\r\n\t            return result;\r\n\t        },\r\n\t\r\n\t        // project the 3D polygon onto a plane\r\n\t        projectToOrthoNormalBasis: function(orthobasis) {\r\n\t            var points2d = this.vertices.map(function(vertex) {\r\n\t                return orthobasis.to2D(vertex.pos);\r\n\t            });\r\n\t            var result = CAG.fromPointsNoCheck(points2d);\r\n\t            var area = result.area();\r\n\t            if (Math.abs(area) < 1e-5) {\r\n\t                // the polygon was perpendicular to the orthnormal plane. The resulting 2D polygon would be degenerate\r\n\t                // return an empty area instead:\r\n\t                result = new CAG();\r\n\t            } else if (area < 0) {\r\n\t                result = result.flipped();\r\n\t            }\r\n\t            return result;\r\n\t        },\r\n\t\r\n\t        /**\r\n\t         * Creates solid from slices (CSG.Polygon) by generating walls\r\n\t         * @param {Object} options Solid generating options\r\n\t         *  - numslices {Number} Number of slices to be generated\r\n\t         *  - callback(t, slice) {Function} Callback function generating slices.\r\n\t         *          arguments: t = [0..1], slice = [0..numslices - 1]\r\n\t         *          return: CSG.Polygon or null to skip\r\n\t         *  - loop {Boolean} no flats, only walls, it's used to generate solids like a tor\r\n\t         */\r\n\t        solidFromSlices: function(options) {\r\n\t            var polygons = [],\r\n\t                csg = null,\r\n\t                prev = null,\r\n\t                bottom = null,\r\n\t                top = null,\r\n\t                numSlices = 2,\r\n\t                bLoop = false,\r\n\t                fnCallback,\r\n\t                flipped = null;\r\n\t\r\n\t            if (options) {\r\n\t                bLoop = Boolean(options['loop']);\r\n\t\r\n\t                if (options.numslices)\r\n\t                    numSlices = options.numslices;\r\n\t\r\n\t                if (options.callback)\r\n\t                    fnCallback = options.callback;\r\n\t            }\r\n\t            if (!fnCallback) {\r\n\t                var square = new CSG.Polygon.createFromPoints([\r\n\t                    [0, 0, 0],\r\n\t                    [1, 0, 0],\r\n\t                    [1, 1, 0],\r\n\t                    [0, 1, 0]\r\n\t                ]);\r\n\t                fnCallback = function(t, slice) {\r\n\t                    return t == 0 || t == 1 ? square.translate([0, 0, t]) : null;\r\n\t                }\r\n\t            }\r\n\t            for (var i = 0, iMax = numSlices - 1; i <= iMax; i++) {\r\n\t                csg = fnCallback.call(this, i / iMax, i);\r\n\t                if (csg) {\r\n\t                    if (!(csg instanceof CSG.Polygon)) {\r\n\t                        throw new Error(\"CSG.Polygon.solidFromSlices callback error: CSG.Polygon expected\");\r\n\t                    }\r\n\t                    csg.checkIfConvex();\r\n\t\r\n\t                    if (prev) { //generate walls\r\n\t                        if (flipped === null) { //not generated yet\r\n\t                            flipped = prev.plane.signedDistanceToPoint(csg.vertices[0].pos) < 0;\r\n\t                        }\r\n\t                        this._addWalls(polygons, prev, csg, flipped);\r\n\t\r\n\t                    } else { //the first - will be a bottom\r\n\t                        bottom = csg;\r\n\t                    }\r\n\t                    prev = csg;\r\n\t                } //callback can return null to skip that slice\r\n\t            }\r\n\t            top = csg;\r\n\t\r\n\t            if (bLoop) {\r\n\t                var bSameTopBottom = bottom.vertices.length == top.vertices.length &&\r\n\t                    bottom.vertices.every(function(v, index) {\r\n\t                        return v.pos.equals(top.vertices[index].pos)\r\n\t                    });\r\n\t                //if top and bottom are not the same -\r\n\t                //generate walls between them\r\n\t                if (!bSameTopBottom) {\r\n\t                    this._addWalls(polygons, top, bottom, flipped);\r\n\t                } //else - already generated\r\n\t            } else {\r\n\t                //save top and bottom\r\n\t                //TODO: flip if necessary\r\n\t                polygons.unshift(flipped ? bottom : bottom.flipped());\r\n\t                polygons.push(flipped ? top.flipped() : top);\r\n\t            }\r\n\t            return CSG.fromPolygons(polygons);\r\n\t        },\r\n\t        /**\r\n\t         *\r\n\t         * @param walls Array of wall polygons\r\n\t         * @param bottom Bottom polygon\r\n\t         * @param top Top polygon\r\n\t         */\r\n\t        _addWalls: function(walls, bottom, top, bFlipped) {\r\n\t            var bottomPoints = bottom.vertices.slice(0), //make a copy\r\n\t                topPoints = top.vertices.slice(0), //make a copy\r\n\t                color = top.shared || null;\r\n\t\r\n\t            //check if bottom perimeter is closed\r\n\t            if (!bottomPoints[0].pos.equals(bottomPoints[bottomPoints.length - 1].pos)) {\r\n\t                bottomPoints.push(bottomPoints[0]);\r\n\t            }\r\n\t\r\n\t            //check if top perimeter is closed\r\n\t            if (!topPoints[0].pos.equals(topPoints[topPoints.length - 1].pos)) {\r\n\t                topPoints.push(topPoints[0]);\r\n\t            }\r\n\t            if (bFlipped) {\r\n\t                bottomPoints = bottomPoints.reverse();\r\n\t                topPoints = topPoints.reverse();\r\n\t            }\r\n\t\r\n\t            var iTopLen = topPoints.length - 1,\r\n\t                iBotLen = bottomPoints.length - 1,\r\n\t                iExtra = iTopLen - iBotLen, //how many extra triangles we need\r\n\t                bMoreTops = iExtra > 0,\r\n\t                bMoreBottoms = iExtra < 0;\r\n\t\r\n\t            var aMin = []; //indexes to start extra triangles (polygon with minimal square)\r\n\t            //init - we need exactly /iExtra/ small triangles\r\n\t            for (var i = Math.abs(iExtra); i > 0; i--) {\r\n\t                aMin.push({\r\n\t                    len: Infinity,\r\n\t                    index: -1\r\n\t                });\r\n\t            }\r\n\t\r\n\t            var len;\r\n\t            if (bMoreBottoms) {\r\n\t                for (var i = 0; i < iBotLen; i++) {\r\n\t                    len = bottomPoints[i].pos.distanceToSquared(bottomPoints[i + 1].pos);\r\n\t                    //find the element to replace\r\n\t                    for (var j = aMin.length - 1; j >= 0; j--) {\r\n\t                        if (aMin[j].len > len) {\r\n\t                            aMin[j].len = len;\r\n\t                            aMin.index = j;\r\n\t                            break;\r\n\t                        }\r\n\t                    } //for\r\n\t                }\r\n\t            } else if (bMoreTops) {\r\n\t                for (var i = 0; i < iTopLen; i++) {\r\n\t                    len = topPoints[i].pos.distanceToSquared(topPoints[i + 1].pos);\r\n\t                    //find the element to replace\r\n\t                    for (var j = aMin.length - 1; j >= 0; j--) {\r\n\t                        if (aMin[j].len > len) {\r\n\t                            aMin[j].len = len;\r\n\t                            aMin.index = j;\r\n\t                            break;\r\n\t                        }\r\n\t                    } //for\r\n\t                }\r\n\t            } //if\r\n\t            //sort by index\r\n\t            aMin.sort(fnSortByIndex);\r\n\t            var getTriangle = function addWallsPutTriangle(pointA, pointB, pointC, color) {\r\n\t                return new CSG.Polygon([pointA, pointB, pointC], color);\r\n\t                //return bFlipped ? triangle.flipped() : triangle;\r\n\t            };\r\n\t\r\n\t            var bpoint = bottomPoints[0],\r\n\t                tpoint = topPoints[0],\r\n\t                secondPoint,\r\n\t                nBotFacet, nTopFacet; //length of triangle facet side\r\n\t            for (var iB = 0, iT = 0, iMax = iTopLen + iBotLen; iB + iT < iMax;) {\r\n\t                if (aMin.length) {\r\n\t                    if (bMoreTops && iT == aMin[0].index) { //one vertex is on the bottom, 2 - on the top\r\n\t                        secondPoint = topPoints[++iT];\r\n\t                        //console.log('<<< extra top: ' + secondPoint + ', ' + tpoint + ', bottom: ' + bpoint);\r\n\t                        walls.push(getTriangle(\r\n\t                            secondPoint, tpoint, bpoint, color\r\n\t                        ));\r\n\t                        tpoint = secondPoint;\r\n\t                        aMin.shift();\r\n\t                        continue;\r\n\t                    } else if (bMoreBottoms && iB == aMin[0].index) {\r\n\t                        secondPoint = bottomPoints[++iB];\r\n\t                        walls.push(getTriangle(\r\n\t                            tpoint, bpoint, secondPoint, color\r\n\t                        ));\r\n\t                        bpoint = secondPoint;\r\n\t                        aMin.shift();\r\n\t                        continue;\r\n\t                    }\r\n\t                }\r\n\t                //choose the shortest path\r\n\t                if (iB < iBotLen) { //one vertex is on the top, 2 - on the bottom\r\n\t                    nBotFacet = tpoint.pos.distanceToSquared(bottomPoints[iB + 1].pos);\r\n\t                } else {\r\n\t                    nBotFacet = Infinity;\r\n\t                }\r\n\t                if (iT < iTopLen) { //one vertex is on the bottom, 2 - on the top\r\n\t                    nTopFacet = bpoint.pos.distanceToSquared(topPoints[iT + 1].pos);\r\n\t                } else {\r\n\t                    nTopFacet = Infinity;\r\n\t                }\r\n\t                if (nBotFacet <= nTopFacet) {\r\n\t                    secondPoint = bottomPoints[++iB];\r\n\t                    walls.push(getTriangle(\r\n\t                        tpoint, bpoint, secondPoint, color\r\n\t                    ));\r\n\t                    bpoint = secondPoint;\r\n\t                } else if (iT < iTopLen) { //nTopFacet < Infinity\r\n\t                    secondPoint = topPoints[++iT];\r\n\t                    //console.log('<<< top: ' + secondPoint + ', ' + tpoint + ', bottom: ' + bpoint);\r\n\t                    walls.push(getTriangle(\r\n\t                        secondPoint, tpoint, bpoint, color\r\n\t                    ));\r\n\t                    tpoint = secondPoint;\r\n\t                };\r\n\t            }\r\n\t            return walls;\r\n\t        }\r\n\t    };\r\n\t\r\n\t    CSG.Polygon.verticesConvex = function(vertices, planenormal) {\r\n\t        var numvertices = vertices.length;\r\n\t        if (numvertices > 2) {\r\n\t            var prevprevpos = vertices[numvertices - 2].pos;\r\n\t            var prevpos = vertices[numvertices - 1].pos;\r\n\t            for (var i = 0; i < numvertices; i++) {\r\n\t                var pos = vertices[i].pos;\r\n\t                if (!CSG.Polygon.isConvexPoint(prevprevpos, prevpos, pos, planenormal)) {\r\n\t                    return false;\r\n\t                }\r\n\t                prevprevpos = prevpos;\r\n\t                prevpos = pos;\r\n\t            }\r\n\t        }\r\n\t        return true;\r\n\t    };\r\n\t\r\n\t    // Create a polygon from the given points\r\n\t    CSG.Polygon.createFromPoints = function(points, shared, plane) {\r\n\t        var normal;\r\n\t        if (arguments.length < 3) {\r\n\t            // initially set a dummy vertex normal:\r\n\t            normal = new CSG.Vector3D(0, 0, 0);\r\n\t        } else {\r\n\t            normal = plane.normal;\r\n\t        }\r\n\t        var vertices = [];\r\n\t        points.map(function(p) {\r\n\t            var vec = new CSG.Vector3D(p);\r\n\t            var vertex = new CSG.Vertex(vec);\r\n\t            vertices.push(vertex);\r\n\t        });\r\n\t        var polygon;\r\n\t        if (arguments.length < 3) {\r\n\t            polygon = new CSG.Polygon(vertices, shared);\r\n\t        } else {\r\n\t            polygon = new CSG.Polygon(vertices, shared, plane);\r\n\t        }\r\n\t        return polygon;\r\n\t    };\r\n\t\r\n\t    // calculate whether three points form a convex corner\r\n\t    //  prevpoint, point, nextpoint: the 3 coordinates (CSG.Vector3D instances)\r\n\t    //  normal: the normal vector of the plane\r\n\t    CSG.Polygon.isConvexPoint = function(prevpoint, point, nextpoint, normal) {\r\n\t        var crossproduct = point.minus(prevpoint).cross(nextpoint.minus(point));\r\n\t        var crossdotnormal = crossproduct.dot(normal);\r\n\t        return (crossdotnormal >= 0);\r\n\t    };\r\n\t\r\n\t    CSG.Polygon.isStrictlyConvexPoint = function(prevpoint, point, nextpoint, normal) {\r\n\t        var crossproduct = point.minus(prevpoint).cross(nextpoint.minus(point));\r\n\t        var crossdotnormal = crossproduct.dot(normal);\r\n\t        return (crossdotnormal >= 1e-5);\r\n\t    };\r\n\t\r\n\t    // # class CSG.Polygon.Shared\r\n\t    // Holds the shared properties for each polygon (currently only color)\r\n\t    // Constructor expects a 4 element array [r,g,b,a], values from 0 to 1, or null\r\n\t    CSG.Polygon.Shared = function(color) {\r\n\t        if(color !== null)\r\n\t        {\r\n\t            if (color.length != 4) {\r\n\t                throw new Error(\"Expecting 4 element array\");\r\n\t            }\r\n\t        }\r\n\t        this.color = color;\r\n\t    };\r\n\t\r\n\t    CSG.Polygon.Shared.fromObject = function(obj) {\r\n\t        return new CSG.Polygon.Shared(obj.color);\r\n\t    };\r\n\t\r\n\t    // Create CSG.Polygon.Shared from a color, can be called as follows:\r\n\t    // var s = CSG.Polygon.Shared.fromColor(r,g,b [,a])\r\n\t    // var s = CSG.Polygon.Shared.fromColor([r,g,b [,a]])\r\n\t    CSG.Polygon.Shared.fromColor = function(args) {\r\n\t        var color;\r\n\t        if(arguments.length == 1) {\r\n\t            color = arguments[0].slice(); // make deep copy\r\n\t        }\r\n\t        else {\r\n\t            color = [];\r\n\t            for(var i=0; i < arguments.length; i++) {\r\n\t                color.push(arguments[i]);\r\n\t            }\r\n\t        }\r\n\t        if(color.length == 3) {\r\n\t            color.push(1);\r\n\t        } else if(color.length != 4) {\r\n\t            throw new Error(\"setColor expects either an array with 3 or 4 elements, or 3 or 4 parameters.\");\r\n\t        }\r\n\t        return new CSG.Polygon.Shared(color);\r\n\t    };\r\n\t\r\n\t    CSG.Polygon.Shared.prototype = {\r\n\t        getTag: function() {\r\n\t            var result = this.tag;\r\n\t            if (!result) {\r\n\t                result = CSG.getTag();\r\n\t                this.tag = result;\r\n\t            }\r\n\t            return result;\r\n\t        },\r\n\t        // get a string uniquely identifying this object\r\n\t        getHash: function() {\r\n\t            if (!this.color) return \"null\";\r\n\t            return this.color.join(\"/\");\r\n\t        }\r\n\t    };\r\n\t\r\n\t    CSG.Polygon.defaultShared = new CSG.Polygon.Shared(null);\r\n\t\r\n\t    // # class PolygonTreeNode\r\n\t    // This class manages hierarchical splits of polygons\r\n\t    // At the top is a root node which doesn hold a polygon, only child PolygonTreeNodes\r\n\t    // Below that are zero or more 'top' nodes; each holds a polygon. The polygons can be in different planes\r\n\t    // splitByPlane() splits a node by a plane. If the plane intersects the polygon, two new child nodes\r\n\t    // are created holding the splitted polygon.\r\n\t    // getPolygons() retrieves the polygon from the tree. If for PolygonTreeNode the polygon is split but\r\n\t    // the two split parts (child nodes) are still intact, then the unsplit polygon is returned.\r\n\t    // This ensures that we can safely split a polygon into many fragments. If the fragments are untouched,\r\n\t    //  getPolygons() will return the original unsplit polygon instead of the fragments.\r\n\t    // remove() removes a polygon from the tree. Once a polygon is removed, the parent polygons are invalidated\r\n\t    // since they are no longer intact.\r\n\t    // constructor creates the root node:\r\n\t    CSG.PolygonTreeNode = function() {\r\n\t        this.parent = null;\r\n\t        this.children = [];\r\n\t        this.polygon = null;\r\n\t        this.removed = false;\r\n\t    };\r\n\t\r\n\t    CSG.PolygonTreeNode.prototype = {\r\n\t        // fill the tree with polygons. Should be called on the root node only; child nodes must\r\n\t        // always be a derivate (split) of the parent node.\r\n\t        addPolygons: function(polygons) {\r\n\t            if (!this.isRootNode())\r\n\t            // new polygons can only be added to root node; children can only be splitted polygons\r\n\t                throw new Error(\"Assertion failed\");\r\n\t            var _this = this;\r\n\t            polygons.map(function(polygon) {\r\n\t                _this.addChild(polygon);\r\n\t            });\r\n\t        },\r\n\t\r\n\t        // remove a node\r\n\t        // - the siblings become toplevel nodes\r\n\t        // - the parent is removed recursively\r\n\t        remove: function() {\r\n\t            if (!this.removed) {\r\n\t                this.removed = true;\r\n\t\r\n\t                if (_CSGDEBUG) {\r\n\t                    if (this.isRootNode()) throw new Error(\"Assertion failed\"); // can't remove root node\r\n\t                    if (this.children.length) throw new Error(\"Assertion failed\"); // we shouldn't remove nodes with children\r\n\t                }\r\n\t\r\n\t                // remove ourselves from the parent's children list:\r\n\t                var parentschildren = this.parent.children;\r\n\t                var i = parentschildren.indexOf(this);\r\n\t                if (i < 0) throw new Error(\"Assertion failed\");\r\n\t                parentschildren.splice(i, 1);\r\n\t\r\n\t                // invalidate the parent's polygon, and of all parents above it:\r\n\t                this.parent.recursivelyInvalidatePolygon();\r\n\t            }\r\n\t        },\r\n\t\r\n\t        isRemoved: function() {\r\n\t            return this.removed;\r\n\t        },\r\n\t\r\n\t        isRootNode: function() {\r\n\t            return !this.parent;\r\n\t        },\r\n\t\r\n\t        // invert all polygons in the tree. Call on the root node\r\n\t        invert: function() {\r\n\t            if (!this.isRootNode()) throw new Error(\"Assertion failed\"); // can only call this on the root node\r\n\t            this.invertSub();\r\n\t        },\r\n\t\r\n\t        getPolygon: function() {\r\n\t            if (!this.polygon) throw new Error(\"Assertion failed\"); // doesn't have a polygon, which means that it has been broken down\r\n\t            return this.polygon;\r\n\t        },\r\n\t\r\n\t        getPolygons: function(result) {\r\n\t            var children = [this];\r\n\t            var queue = [children];\r\n\t            var i, j, l, node;\r\n\t            for (i = 0; i < queue.length; ++i ) { // queue size can change in loop, don't cache length\r\n\t                children = queue[i];\r\n\t                for (j = 0, l = children.length; j < l; j++) { // ok to cache length\r\n\t                    node = children[j];\r\n\t                    if (node.polygon) {\r\n\t                        // the polygon hasn't been broken yet. We can ignore the children and return our polygon:\r\n\t                        result.push(node.polygon);\r\n\t                    } else {\r\n\t                        // our polygon has been split up and broken, so gather all subpolygons from the children\r\n\t                        queue.push(node.children);\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        },\r\n\t\r\n\t        // split the node by a plane; add the resulting nodes to the frontnodes and backnodes array\r\n\t        // If the plane doesn't intersect the polygon, the 'this' object is added to one of the arrays\r\n\t        // If the plane does intersect the polygon, two new child nodes are created for the front and back fragments,\r\n\t        //  and added to both arrays.\r\n\t        splitByPlane: function(plane, coplanarfrontnodes, coplanarbacknodes, frontnodes, backnodes) {\r\n\t            if (this.children.length) {\r\n\t                var queue = [this.children], i, j, l, node, nodes;\r\n\t                for (i = 0; i < queue.length; i++) { // queue.length can increase, do not cache\r\n\t                    nodes = queue[i];\r\n\t                    for (j = 0, l = nodes.length; j < l; j++) { // ok to cache length\r\n\t                        node = nodes[j];\r\n\t                        if (node.children.length) {\r\n\t                            queue.push(node.children);\r\n\t                        } else {\r\n\t                            // no children. Split the polygon:\r\n\t                            node._splitByPlane(plane, coplanarfrontnodes, coplanarbacknodes, frontnodes, backnodes);\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t            } else {\r\n\t                this._splitByPlane(plane, coplanarfrontnodes, coplanarbacknodes, frontnodes, backnodes);\r\n\t            }\r\n\t        },\r\n\t\r\n\t        // only to be called for nodes with no children\r\n\t        _splitByPlane: function (plane, coplanarfrontnodes, coplanarbacknodes, frontnodes, backnodes) {\r\n\t            var polygon = this.polygon;\r\n\t            if (polygon) {\r\n\t                var bound = polygon.boundingSphere();\r\n\t                var sphereradius = bound[1] + 1e-4;\r\n\t                var planenormal = plane.normal;\r\n\t                var spherecenter = bound[0];\r\n\t                var d = planenormal.dot(spherecenter) - plane.w;\r\n\t                if (d > sphereradius) {\r\n\t                    frontnodes.push(this);\r\n\t                } else if (d < -sphereradius) {\r\n\t                    backnodes.push(this);\r\n\t                } else {\r\n\t                    var splitresult = plane.splitPolygon(polygon);\r\n\t                    switch (splitresult.type) {\r\n\t                        case 0:\r\n\t                            // coplanar front:\r\n\t                            coplanarfrontnodes.push(this);\r\n\t                            break;\r\n\t\r\n\t                        case 1:\r\n\t                            // coplanar back:\r\n\t                            coplanarbacknodes.push(this);\r\n\t                            break;\r\n\t\r\n\t                        case 2:\r\n\t                            // front:\r\n\t                            frontnodes.push(this);\r\n\t                            break;\r\n\t\r\n\t                        case 3:\r\n\t                            // back:\r\n\t                            backnodes.push(this);\r\n\t                            break;\r\n\t\r\n\t                        case 4:\r\n\t                            // spanning:\r\n\t                            if (splitresult.front) {\r\n\t                                var frontnode = this.addChild(splitresult.front);\r\n\t                                frontnodes.push(frontnode);\r\n\t                            }\r\n\t                            if (splitresult.back) {\r\n\t                                var backnode = this.addChild(splitresult.back);\r\n\t                                backnodes.push(backnode);\r\n\t                            }\r\n\t                            break;\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        },\r\n\t\r\n\t\r\n\t        // PRIVATE methods from here:\r\n\t        // add child to a node\r\n\t        // this should be called whenever the polygon is split\r\n\t        // a child should be created for every fragment of the split polygon\r\n\t        // returns the newly created child\r\n\t        addChild: function(polygon) {\r\n\t            var newchild = new CSG.PolygonTreeNode();\r\n\t            newchild.parent = this;\r\n\t            newchild.polygon = polygon;\r\n\t            this.children.push(newchild);\r\n\t            return newchild;\r\n\t        },\r\n\t\r\n\t        invertSub: function() {\r\n\t            var children = [this];\r\n\t            var queue = [children];\r\n\t            var i, j, l, node;\r\n\t            for (i = 0; i < queue.length; i++) {\r\n\t                children = queue[i];\r\n\t                for (j = 0, l = children.length; j < l; j++) {\r\n\t                    node = children[j];\r\n\t                    if (node.polygon) {\r\n\t                        node.polygon = node.polygon.flipped();\r\n\t                    }\r\n\t                    queue.push(node.children);\r\n\t                }\r\n\t            }\r\n\t        },\r\n\t\r\n\t        recursivelyInvalidatePolygon: function() {\r\n\t            var node = this;\r\n\t            while (node.polygon) {\r\n\t                node.polygon = null;\r\n\t                if (node.parent) {\r\n\t                    node = node.parent;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t\r\n\t\r\n\t\r\n\t    // # class Tree\r\n\t    // This is the root of a BSP tree\r\n\t    // We are using this separate class for the root of the tree, to hold the PolygonTreeNode root\r\n\t    // The actual tree is kept in this.rootnode\r\n\t    CSG.Tree = function(polygons) {\r\n\t        this.polygonTree = new CSG.PolygonTreeNode();\r\n\t        this.rootnode = new CSG.Node(null);\r\n\t        if (polygons) this.addPolygons(polygons);\r\n\t    };\r\n\t\r\n\t    CSG.Tree.prototype = {\r\n\t        invert: function() {\r\n\t            this.polygonTree.invert();\r\n\t            this.rootnode.invert();\r\n\t        },\r\n\t\r\n\t        // Remove all polygons in this BSP tree that are inside the other BSP tree\r\n\t        // `tree`.\r\n\t        clipTo: function(tree, alsoRemovecoplanarFront) {\r\n\t            alsoRemovecoplanarFront = alsoRemovecoplanarFront ? true : false;\r\n\t            this.rootnode.clipTo(tree, alsoRemovecoplanarFront);\r\n\t        },\r\n\t\r\n\t        allPolygons: function() {\r\n\t            var result = [];\r\n\t            this.polygonTree.getPolygons(result);\r\n\t            return result;\r\n\t        },\r\n\t\r\n\t        addPolygons: function(polygons) {\r\n\t            var _this = this;\r\n\t            var polygontreenodes = polygons.map(function(p) {\r\n\t                return _this.polygonTree.addChild(p);\r\n\t            });\r\n\t            this.rootnode.addPolygonTreeNodes(polygontreenodes);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    // # class Node\r\n\t    // Holds a node in a BSP tree. A BSP tree is built from a collection of polygons\r\n\t    // by picking a polygon to split along.\r\n\t    // Polygons are not stored directly in the tree, but in PolygonTreeNodes, stored in\r\n\t    // this.polygontreenodes. Those PolygonTreeNodes are children of the owning\r\n\t    // CSG.Tree.polygonTree\r\n\t    // This is not a leafy BSP tree since there is\r\n\t    // no distinction between internal and leaf nodes.\r\n\t    CSG.Node = function(parent) {\r\n\t        this.plane = null;\r\n\t        this.front = null;\r\n\t        this.back = null;\r\n\t        this.polygontreenodes = [];\r\n\t        this.parent = parent;\r\n\t    };\r\n\t\r\n\t    CSG.Node.prototype = {\r\n\t        // Convert solid space to empty space and empty space to solid space.\r\n\t        invert: function() {\r\n\t            var queue = [this];\r\n\t            var i, node;\r\n\t            for (var i = 0; i < queue.length; i++) {\r\n\t                node = queue[i];\r\n\t                if(node.plane) node.plane = node.plane.flipped();\r\n\t                if(node.front) queue.push(node.front);\r\n\t                if(node.back) queue.push(node.back);\r\n\t                var temp = node.front;\r\n\t                node.front = node.back;\r\n\t                node.back = temp;\r\n\t            }\r\n\t        },\r\n\t\r\n\t        // clip polygontreenodes to our plane\r\n\t        // calls remove() for all clipped PolygonTreeNodes\r\n\t        clipPolygons: function(polygontreenodes, alsoRemovecoplanarFront) {\r\n\t            var args = {'node': this, 'polygontreenodes': polygontreenodes }\r\n\t            var node;\r\n\t            var stack = [];\r\n\t\r\n\t            do {\r\n\t                node = args.node;\r\n\t                polygontreenodes = args.polygontreenodes;\r\n\t\r\n\t                // begin \"function\"\r\n\t                if(node.plane) {\r\n\t                    var backnodes = [];\r\n\t                    var frontnodes = [];\r\n\t                    var coplanarfrontnodes = alsoRemovecoplanarFront ? backnodes : frontnodes;\r\n\t                    var plane = node.plane;\r\n\t                    var numpolygontreenodes = polygontreenodes.length;\r\n\t                    for(i = 0; i < numpolygontreenodes; i++) {\r\n\t                        var node1 = polygontreenodes[i];\r\n\t                        if(!node1.isRemoved()) {\r\n\t                            node1.splitByPlane(plane, coplanarfrontnodes, backnodes, frontnodes, backnodes);\r\n\t                        }\r\n\t                    }\r\n\t\r\n\t                    if(node.front && (frontnodes.length > 0)) {\r\n\t                        stack.push({'node': node.front, 'polygontreenodes': frontnodes});\r\n\t                    }\r\n\t                    var numbacknodes = backnodes.length;\r\n\t                    if (node.back && (numbacknodes > 0)) {\r\n\t                        stack.push({'node': node.back, 'polygontreenodes': backnodes});\r\n\t                    } else {\r\n\t                        // there's nothing behind this plane. Delete the nodes behind this plane:\r\n\t                        for (var i = 0; i < numbacknodes; i++) {\r\n\t                            backnodes[i].remove();\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t                args = stack.pop();\r\n\t            } while (typeof(args) !== 'undefined');\r\n\t        },\r\n\t\r\n\t        // Remove all polygons in this BSP tree that are inside the other BSP tree\r\n\t        // `tree`.\r\n\t        clipTo: function(tree, alsoRemovecoplanarFront) {\r\n\t            var node = this, stack = [];\r\n\t            do {\r\n\t                if(node.polygontreenodes.length > 0) {\r\n\t                    tree.rootnode.clipPolygons(node.polygontreenodes, alsoRemovecoplanarFront);\r\n\t                }\r\n\t                if(node.front) stack.push(node.front);\r\n\t                if(node.back) stack.push(node.back);\r\n\t                node = stack.pop();\r\n\t            } while(typeof(node) !== 'undefined');\r\n\t        },\r\n\t\r\n\t        addPolygonTreeNodes: function(polygontreenodes) {\r\n\t            var args = {'node': this, 'polygontreenodes': polygontreenodes };\r\n\t            var node;\r\n\t            var stack = [];\r\n\t            do {\r\n\t                node = args.node;\r\n\t                polygontreenodes = args.polygontreenodes;\r\n\t\r\n\t                if (polygontreenodes.length === 0) {\r\n\t                    args = stack.pop();\r\n\t                    continue;\r\n\t                }\r\n\t                var _this = node;\r\n\t                if (!node.plane) {\r\n\t                    var bestplane = polygontreenodes[0].getPolygon().plane;\r\n\t                    node.plane = bestplane;\r\n\t                }\r\n\t                var frontnodes = [];\r\n\t                var backnodes = [];\r\n\t\r\n\t                for (var i = 0, n = polygontreenodes.length ; i < n; ++i) {\r\n\t                    polygontreenodes[i].splitByPlane(_this.plane, _this.polygontreenodes, backnodes, frontnodes, backnodes);\r\n\t                }\r\n\t\r\n\t                if (frontnodes.length > 0) {\r\n\t                    if (!node.front) node.front = new CSG.Node(node);\r\n\t                    stack.push({'node': node.front, 'polygontreenodes': frontnodes});\r\n\t                }\r\n\t                if (backnodes.length > 0) {\r\n\t                    if (!node.back) node.back = new CSG.Node(node);\r\n\t                    stack.push({'node': node.back, 'polygontreenodes': backnodes});\r\n\t                }\r\n\t\r\n\t                args = stack.pop();\r\n\t            } while (typeof(args) !== 'undefined');\r\n\t        },\r\n\t\r\n\t        getParentPlaneNormals: function(normals, maxdepth) {\r\n\t            if (maxdepth > 0) {\r\n\t                if (this.parent) {\r\n\t                    normals.push(this.parent.plane.normal);\r\n\t                    this.parent.getParentPlaneNormals(normals, maxdepth - 1);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t\r\n\t    //////////\r\n\t    // # class Matrix4x4:\r\n\t    // Represents a 4x4 matrix. Elements are specified in row order\r\n\t    CSG.Matrix4x4 = function(elements) {\r\n\t        if (arguments.length >= 1) {\r\n\t            this.elements = elements;\r\n\t        } else {\r\n\t            // if no arguments passed: create unity matrix\r\n\t            this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n\t        }\r\n\t    };\r\n\t\r\n\t    CSG.Matrix4x4.prototype = {\r\n\t        plus: function(m) {\r\n\t            var r = [];\r\n\t            for (var i = 0; i < 16; i++) {\r\n\t                r[i] = this.elements[i] + m.elements[i];\r\n\t            }\r\n\t            return new CSG.Matrix4x4(r);\r\n\t        },\r\n\t\r\n\t        minus: function(m) {\r\n\t            var r = [];\r\n\t            for (var i = 0; i < 16; i++) {\r\n\t                r[i] = this.elements[i] - m.elements[i];\r\n\t            }\r\n\t            return new CSG.Matrix4x4(r);\r\n\t        },\r\n\t\r\n\t        // right multiply by another 4x4 matrix:\r\n\t        multiply: function(m) {\r\n\t            // cache elements in local variables, for speedup:\r\n\t            var this0 = this.elements[0];\r\n\t            var this1 = this.elements[1];\r\n\t            var this2 = this.elements[2];\r\n\t            var this3 = this.elements[3];\r\n\t            var this4 = this.elements[4];\r\n\t            var this5 = this.elements[5];\r\n\t            var this6 = this.elements[6];\r\n\t            var this7 = this.elements[7];\r\n\t            var this8 = this.elements[8];\r\n\t            var this9 = this.elements[9];\r\n\t            var this10 = this.elements[10];\r\n\t            var this11 = this.elements[11];\r\n\t            var this12 = this.elements[12];\r\n\t            var this13 = this.elements[13];\r\n\t            var this14 = this.elements[14];\r\n\t            var this15 = this.elements[15];\r\n\t            var m0 = m.elements[0];\r\n\t            var m1 = m.elements[1];\r\n\t            var m2 = m.elements[2];\r\n\t            var m3 = m.elements[3];\r\n\t            var m4 = m.elements[4];\r\n\t            var m5 = m.elements[5];\r\n\t            var m6 = m.elements[6];\r\n\t            var m7 = m.elements[7];\r\n\t            var m8 = m.elements[8];\r\n\t            var m9 = m.elements[9];\r\n\t            var m10 = m.elements[10];\r\n\t            var m11 = m.elements[11];\r\n\t            var m12 = m.elements[12];\r\n\t            var m13 = m.elements[13];\r\n\t            var m14 = m.elements[14];\r\n\t            var m15 = m.elements[15];\r\n\t\r\n\t            var result = [];\r\n\t            result[0] = this0 * m0 + this1 * m4 + this2 * m8 + this3 * m12;\r\n\t            result[1] = this0 * m1 + this1 * m5 + this2 * m9 + this3 * m13;\r\n\t            result[2] = this0 * m2 + this1 * m6 + this2 * m10 + this3 * m14;\r\n\t            result[3] = this0 * m3 + this1 * m7 + this2 * m11 + this3 * m15;\r\n\t            result[4] = this4 * m0 + this5 * m4 + this6 * m8 + this7 * m12;\r\n\t            result[5] = this4 * m1 + this5 * m5 + this6 * m9 + this7 * m13;\r\n\t            result[6] = this4 * m2 + this5 * m6 + this6 * m10 + this7 * m14;\r\n\t            result[7] = this4 * m3 + this5 * m7 + this6 * m11 + this7 * m15;\r\n\t            result[8] = this8 * m0 + this9 * m4 + this10 * m8 + this11 * m12;\r\n\t            result[9] = this8 * m1 + this9 * m5 + this10 * m9 + this11 * m13;\r\n\t            result[10] = this8 * m2 + this9 * m6 + this10 * m10 + this11 * m14;\r\n\t            result[11] = this8 * m3 + this9 * m7 + this10 * m11 + this11 * m15;\r\n\t            result[12] = this12 * m0 + this13 * m4 + this14 * m8 + this15 * m12;\r\n\t            result[13] = this12 * m1 + this13 * m5 + this14 * m9 + this15 * m13;\r\n\t            result[14] = this12 * m2 + this13 * m6 + this14 * m10 + this15 * m14;\r\n\t            result[15] = this12 * m3 + this13 * m7 + this14 * m11 + this15 * m15;\r\n\t            return new CSG.Matrix4x4(result);\r\n\t        },\r\n\t\r\n\t        clone: function() {\r\n\t            var elements = this.elements.map(function(p) {\r\n\t                return p;\r\n\t            });\r\n\t            return new CSG.Matrix4x4(elements);\r\n\t        },\r\n\t\r\n\t        // Right multiply the matrix by a CSG.Vector3D (interpreted as 3 row, 1 column)\r\n\t        // (result = M*v)\r\n\t        // Fourth element is taken as 1\r\n\t        rightMultiply1x3Vector: function(v) {\r\n\t            var v0 = v._x;\r\n\t            var v1 = v._y;\r\n\t            var v2 = v._z;\r\n\t            var v3 = 1;\r\n\t            var x = v0 * this.elements[0] + v1 * this.elements[1] + v2 * this.elements[2] + v3 * this.elements[3];\r\n\t            var y = v0 * this.elements[4] + v1 * this.elements[5] + v2 * this.elements[6] + v3 * this.elements[7];\r\n\t            var z = v0 * this.elements[8] + v1 * this.elements[9] + v2 * this.elements[10] + v3 * this.elements[11];\r\n\t            var w = v0 * this.elements[12] + v1 * this.elements[13] + v2 * this.elements[14] + v3 * this.elements[15];\r\n\t            // scale such that fourth element becomes 1:\r\n\t            if (w != 1) {\r\n\t                var invw = 1.0 / w;\r\n\t                x *= invw;\r\n\t                y *= invw;\r\n\t                z *= invw;\r\n\t            }\r\n\t            return new CSG.Vector3D(x, y, z);\r\n\t        },\r\n\t\r\n\t        // Multiply a CSG.Vector3D (interpreted as 3 column, 1 row) by this matrix\r\n\t        // (result = v*M)\r\n\t        // Fourth element is taken as 1\r\n\t        leftMultiply1x3Vector: function(v) {\r\n\t            var v0 = v._x;\r\n\t            var v1 = v._y;\r\n\t            var v2 = v._z;\r\n\t            var v3 = 1;\r\n\t            var x = v0 * this.elements[0] + v1 * this.elements[4] + v2 * this.elements[8] + v3 * this.elements[12];\r\n\t            var y = v0 * this.elements[1] + v1 * this.elements[5] + v2 * this.elements[9] + v3 * this.elements[13];\r\n\t            var z = v0 * this.elements[2] + v1 * this.elements[6] + v2 * this.elements[10] + v3 * this.elements[14];\r\n\t            var w = v0 * this.elements[3] + v1 * this.elements[7] + v2 * this.elements[11] + v3 * this.elements[15];\r\n\t            // scale such that fourth element becomes 1:\r\n\t            if (w != 1) {\r\n\t                var invw = 1.0 / w;\r\n\t                x *= invw;\r\n\t                y *= invw;\r\n\t                z *= invw;\r\n\t            }\r\n\t            return new CSG.Vector3D(x, y, z);\r\n\t        },\r\n\t\r\n\t        // Right multiply the matrix by a CSG.Vector2D (interpreted as 2 row, 1 column)\r\n\t        // (result = M*v)\r\n\t        // Fourth element is taken as 1\r\n\t        rightMultiply1x2Vector: function(v) {\r\n\t            var v0 = v.x;\r\n\t            var v1 = v.y;\r\n\t            var v2 = 0;\r\n\t            var v3 = 1;\r\n\t            var x = v0 * this.elements[0] + v1 * this.elements[1] + v2 * this.elements[2] + v3 * this.elements[3];\r\n\t            var y = v0 * this.elements[4] + v1 * this.elements[5] + v2 * this.elements[6] + v3 * this.elements[7];\r\n\t            var z = v0 * this.elements[8] + v1 * this.elements[9] + v2 * this.elements[10] + v3 * this.elements[11];\r\n\t            var w = v0 * this.elements[12] + v1 * this.elements[13] + v2 * this.elements[14] + v3 * this.elements[15];\r\n\t            // scale such that fourth element becomes 1:\r\n\t            if (w != 1) {\r\n\t                var invw = 1.0 / w;\r\n\t                x *= invw;\r\n\t                y *= invw;\r\n\t                z *= invw;\r\n\t            }\r\n\t            return new CSG.Vector2D(x, y);\r\n\t        },\r\n\t\r\n\t        // Multiply a CSG.Vector2D (interpreted as 2 column, 1 row) by this matrix\r\n\t        // (result = v*M)\r\n\t        // Fourth element is taken as 1\r\n\t        leftMultiply1x2Vector: function(v) {\r\n\t            var v0 = v.x;\r\n\t            var v1 = v.y;\r\n\t            var v2 = 0;\r\n\t            var v3 = 1;\r\n\t            var x = v0 * this.elements[0] + v1 * this.elements[4] + v2 * this.elements[8] + v3 * this.elements[12];\r\n\t            var y = v0 * this.elements[1] + v1 * this.elements[5] + v2 * this.elements[9] + v3 * this.elements[13];\r\n\t            var z = v0 * this.elements[2] + v1 * this.elements[6] + v2 * this.elements[10] + v3 * this.elements[14];\r\n\t            var w = v0 * this.elements[3] + v1 * this.elements[7] + v2 * this.elements[11] + v3 * this.elements[15];\r\n\t            // scale such that fourth element becomes 1:\r\n\t            if (w != 1) {\r\n\t                var invw = 1.0 / w;\r\n\t                x *= invw;\r\n\t                y *= invw;\r\n\t                z *= invw;\r\n\t            }\r\n\t            return new CSG.Vector2D(x, y);\r\n\t        },\r\n\t\r\n\t        // determine whether this matrix is a mirroring transformation\r\n\t        isMirroring: function() {\r\n\t            var u = new CSG.Vector3D(this.elements[0], this.elements[4], this.elements[8]);\r\n\t            var v = new CSG.Vector3D(this.elements[1], this.elements[5], this.elements[9]);\r\n\t            var w = new CSG.Vector3D(this.elements[2], this.elements[6], this.elements[10]);\r\n\t\r\n\t            // for a true orthogonal, non-mirrored base, u.cross(v) == w\r\n\t            // If they have an opposite direction then we are mirroring\r\n\t            var mirrorvalue = u.cross(v).dot(w);\r\n\t            var ismirror = (mirrorvalue < 0);\r\n\t            return ismirror;\r\n\t        }\r\n\t    };\r\n\t\r\n\t    // return the unity matrix\r\n\t    CSG.Matrix4x4.unity = function() {\r\n\t        return new CSG.Matrix4x4();\r\n\t    };\r\n\t\r\n\t    // Create a rotation matrix for rotating around the x axis\r\n\t    CSG.Matrix4x4.rotationX = function(degrees) {\r\n\t        var radians = degrees * Math.PI * (1.0 / 180.0);\r\n\t        var cos = Math.cos(radians);\r\n\t        var sin = Math.sin(radians);\r\n\t        var els = [\r\n\t            1, 0, 0, 0, 0, cos, sin, 0, 0, -sin, cos, 0, 0, 0, 0, 1\r\n\t        ];\r\n\t        return new CSG.Matrix4x4(els);\r\n\t    };\r\n\t\r\n\t    // Create a rotation matrix for rotating around the y axis\r\n\t    CSG.Matrix4x4.rotationY = function(degrees) {\r\n\t        var radians = degrees * Math.PI * (1.0 / 180.0);\r\n\t        var cos = Math.cos(radians);\r\n\t        var sin = Math.sin(radians);\r\n\t        var els = [\r\n\t            cos, 0, -sin, 0, 0, 1, 0, 0, sin, 0, cos, 0, 0, 0, 0, 1\r\n\t        ];\r\n\t        return new CSG.Matrix4x4(els);\r\n\t    };\r\n\t\r\n\t    // Create a rotation matrix for rotating around the z axis\r\n\t    CSG.Matrix4x4.rotationZ = function(degrees) {\r\n\t        var radians = degrees * Math.PI * (1.0 / 180.0);\r\n\t        var cos = Math.cos(radians);\r\n\t        var sin = Math.sin(radians);\r\n\t        var els = [\r\n\t            cos, sin, 0, 0, -sin, cos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1\r\n\t        ];\r\n\t        return new CSG.Matrix4x4(els);\r\n\t    };\r\n\t\r\n\t    // Matrix for rotation about arbitrary point and axis\r\n\t    CSG.Matrix4x4.rotation = function(rotationCenter, rotationAxis, degrees) {\r\n\t        rotationCenter = new CSG.Vector3D(rotationCenter);\r\n\t        rotationAxis = new CSG.Vector3D(rotationAxis);\r\n\t        var rotationPlane = CSG.Plane.fromNormalAndPoint(rotationAxis, rotationCenter);\r\n\t        var orthobasis = new CSG.OrthoNormalBasis(rotationPlane);\r\n\t        var transformation = CSG.Matrix4x4.translation(rotationCenter.negated());\r\n\t        transformation = transformation.multiply(orthobasis.getProjectionMatrix());\r\n\t        transformation = transformation.multiply(CSG.Matrix4x4.rotationZ(degrees));\r\n\t        transformation = transformation.multiply(orthobasis.getInverseProjectionMatrix());\r\n\t        transformation = transformation.multiply(CSG.Matrix4x4.translation(rotationCenter));\r\n\t        return transformation;\r\n\t    };\r\n\t\r\n\t    // Create an affine matrix for translation:\r\n\t    CSG.Matrix4x4.translation = function(v) {\r\n\t        // parse as CSG.Vector3D, so we can pass an array or a CSG.Vector3D\r\n\t        var vec = new CSG.Vector3D(v);\r\n\t        var els = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, vec.x, vec.y, vec.z, 1];\r\n\t        return new CSG.Matrix4x4(els);\r\n\t    };\r\n\t\r\n\t    // Create an affine matrix for mirroring into an arbitrary plane:\r\n\t    CSG.Matrix4x4.mirroring = function(plane) {\r\n\t        var nx = plane.normal.x;\r\n\t        var ny = plane.normal.y;\r\n\t        var nz = plane.normal.z;\r\n\t        var w = plane.w;\r\n\t        var els = [\r\n\t            (1.0 - 2.0 * nx * nx), (-2.0 * ny * nx), (-2.0 * nz * nx), 0,\r\n\t            (-2.0 * nx * ny), (1.0 - 2.0 * ny * ny), (-2.0 * nz * ny), 0,\r\n\t            (-2.0 * nx * nz), (-2.0 * ny * nz), (1.0 - 2.0 * nz * nz), 0,\r\n\t            (2.0 * nx * w), (2.0 * ny * w), (2.0 * nz * w), 1\r\n\t        ];\r\n\t        return new CSG.Matrix4x4(els);\r\n\t    };\r\n\t\r\n\t    // Create an affine matrix for scaling:\r\n\t    CSG.Matrix4x4.scaling = function(v) {\r\n\t        // parse as CSG.Vector3D, so we can pass an array or a CSG.Vector3D\r\n\t        var vec = new CSG.Vector3D(v);\r\n\t        var els = [\r\n\t            vec.x, 0, 0, 0, 0, vec.y, 0, 0, 0, 0, vec.z, 0, 0, 0, 0, 1\r\n\t        ];\r\n\t        return new CSG.Matrix4x4(els);\r\n\t    };\r\n\t\r\n\t    ///////////////////////////////////////////////////\r\n\t    // # class Vector2D:\r\n\t    // Represents a 2 element vector\r\n\t    CSG.Vector2D = function(x, y) {\r\n\t        if (arguments.length == 2) {\r\n\t            this._x = parseFloat(x);\r\n\t            this._y = parseFloat(y);\r\n\t        } else {\r\n\t            var ok = true;\r\n\t            if (arguments.length == 1) {\r\n\t                if (typeof(x) == \"object\") {\r\n\t                    if (x instanceof CSG.Vector2D) {\r\n\t                        this._x = x._x;\r\n\t                        this._y = x._y;\r\n\t                    } else if (x instanceof Array) {\r\n\t                        this._x = parseFloat(x[0]);\r\n\t                        this._y = parseFloat(x[1]);\r\n\t                    } else if (('x' in x) && ('y' in x)) {\r\n\t                        this._x = parseFloat(x.x);\r\n\t                        this._y = parseFloat(x.y);\r\n\t                    } else ok = false;\r\n\t                } else {\r\n\t                    var v = parseFloat(x);\r\n\t                    this._x = v;\r\n\t                    this._y = v;\r\n\t                }\r\n\t            } else ok = false;\r\n\t            if (ok) {\r\n\t                if ((!CSG.IsFloat(this._x)) || (!CSG.IsFloat(this._y))) ok = false;\r\n\t            }\r\n\t            if (!ok) {\r\n\t                throw new Error(\"wrong arguments\");\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t\r\n\t    CSG.Vector2D.fromAngle = function(radians) {\r\n\t        return CSG.Vector2D.fromAngleRadians(radians);\r\n\t    };\r\n\t\r\n\t    CSG.Vector2D.fromAngleDegrees = function(degrees) {\r\n\t        var radians = Math.PI * degrees / 180;\r\n\t        return CSG.Vector2D.fromAngleRadians(radians);\r\n\t    };\r\n\t\r\n\t    CSG.Vector2D.fromAngleRadians = function(radians) {\r\n\t        return CSG.Vector2D.Create(Math.cos(radians), Math.sin(radians));\r\n\t    };\r\n\t\r\n\t    // This does the same as new CSG.Vector2D(x,y) but it doesn't go through the constructor\r\n\t    // and the parameters are not validated. Is much faster.\r\n\t    CSG.Vector2D.Create = function(x, y) {\r\n\t        var result = Object.create(CSG.Vector2D.prototype);\r\n\t        result._x = x;\r\n\t        result._y = y;\r\n\t        return result;\r\n\t    };\r\n\t\r\n\t    CSG.Vector2D.prototype = {\r\n\t        get x() {\r\n\t            return this._x;\r\n\t        },\r\n\t        get y() {\r\n\t            return this._y;\r\n\t        },\r\n\t\r\n\t        set x(v) {\r\n\t            throw new Error(\"Vector2D is immutable\");\r\n\t        },\r\n\t        set y(v) {\r\n\t            throw new Error(\"Vector2D is immutable\");\r\n\t        },\r\n\t\r\n\t        // extend to a 3D vector by adding a z coordinate:\r\n\t        toVector3D: function(z) {\r\n\t            return new CSG.Vector3D(this._x, this._y, z);\r\n\t        },\r\n\t\r\n\t        equals: function(a) {\r\n\t            return (this._x == a._x) && (this._y == a._y);\r\n\t        },\r\n\t\r\n\t        clone: function() {\r\n\t            return CSG.Vector2D.Create(this._x, this._y);\r\n\t        },\r\n\t\r\n\t        negated: function() {\r\n\t            return CSG.Vector2D.Create(-this._x, -this._y);\r\n\t        },\r\n\t\r\n\t        plus: function(a) {\r\n\t            return CSG.Vector2D.Create(this._x + a._x, this._y + a._y);\r\n\t        },\r\n\t\r\n\t        minus: function(a) {\r\n\t            return CSG.Vector2D.Create(this._x - a._x, this._y - a._y);\r\n\t        },\r\n\t\r\n\t        times: function(a) {\r\n\t            return CSG.Vector2D.Create(this._x * a, this._y * a);\r\n\t        },\r\n\t\r\n\t        dividedBy: function(a) {\r\n\t            return CSG.Vector2D.Create(this._x / a, this._y / a);\r\n\t        },\r\n\t\r\n\t        dot: function(a) {\r\n\t            return this._x * a._x + this._y * a._y;\r\n\t        },\r\n\t\r\n\t        lerp: function(a, t) {\r\n\t            return this.plus(a.minus(this).times(t));\r\n\t        },\r\n\t\r\n\t        length: function() {\r\n\t            return Math.sqrt(this.dot(this));\r\n\t        },\r\n\t\r\n\t        distanceTo: function(a) {\r\n\t            return this.minus(a).length();\r\n\t        },\r\n\t\r\n\t        distanceToSquared: function(a) {\r\n\t            return this.minus(a).lengthSquared();\r\n\t        },\r\n\t\r\n\t        lengthSquared: function() {\r\n\t            return this.dot(this);\r\n\t        },\r\n\t\r\n\t        unit: function() {\r\n\t            return this.dividedBy(this.length());\r\n\t        },\r\n\t\r\n\t        cross: function(a) {\r\n\t            return this._x * a._y - this._y * a._x;\r\n\t        },\r\n\t\r\n\t        // returns the vector rotated by 90 degrees clockwise\r\n\t        normal: function() {\r\n\t            return CSG.Vector2D.Create(this._y, -this._x);\r\n\t        },\r\n\t\r\n\t        // Right multiply by a 4x4 matrix (the vector is interpreted as a row vector)\r\n\t        // Returns a new CSG.Vector2D\r\n\t        multiply4x4: function(matrix4x4) {\r\n\t            return matrix4x4.leftMultiply1x2Vector(this);\r\n\t        },\r\n\t\r\n\t        transform: function(matrix4x4) {\r\n\t            return matrix4x4.leftMultiply1x2Vector(this);\r\n\t        },\r\n\t\r\n\t        angle: function() {\r\n\t            return this.angleRadians();\r\n\t        },\r\n\t\r\n\t        angleDegrees: function() {\r\n\t            var radians = this.angleRadians();\r\n\t            return 180 * radians / Math.PI;\r\n\t        },\r\n\t\r\n\t        angleRadians: function() {\r\n\t            // y=sin, x=cos\r\n\t            return Math.atan2(this._y, this._x);\r\n\t        },\r\n\t\r\n\t        min: function(p) {\r\n\t            return CSG.Vector2D.Create(\r\n\t                Math.min(this._x, p._x), Math.min(this._y, p._y));\r\n\t        },\r\n\t\r\n\t        max: function(p) {\r\n\t            return CSG.Vector2D.Create(\r\n\t                Math.max(this._x, p._x), Math.max(this._y, p._y));\r\n\t        },\r\n\t\r\n\t        toString: function() {\r\n\t            return \"(\" + this._x.toFixed(2) + \", \" + this._y.toFixed(2) + \")\";\r\n\t        },\r\n\t\r\n\t        abs: function() {\r\n\t            return CSG.Vector2D.Create(Math.abs(this._x), Math.abs(this._y));\r\n\t        },\r\n\t    };\r\n\t\r\n\t\r\n\t    // # class Line2D\r\n\t    // Represents a directional line in 2D space\r\n\t    // A line is parametrized by its normal vector (perpendicular to the line, rotated 90 degrees counter clockwise)\r\n\t    // and w. The line passes through the point <normal>.times(w).\r\n\t    // normal must be a unit vector!\r\n\t    // Equation: p is on line if normal.dot(p)==w\r\n\t    CSG.Line2D = function(normal, w) {\r\n\t        normal = new CSG.Vector2D(normal);\r\n\t        w = parseFloat(w);\r\n\t        var l = normal.length();\r\n\t        // normalize:\r\n\t        w *= l;\r\n\t        normal = normal.times(1.0 / l);\r\n\t        this.normal = normal;\r\n\t        this.w = w;\r\n\t    };\r\n\t\r\n\t    CSG.Line2D.fromPoints = function(p1, p2) {\r\n\t        p1 = new CSG.Vector2D(p1);\r\n\t        p2 = new CSG.Vector2D(p2);\r\n\t        var direction = p2.minus(p1);\r\n\t        var normal = direction.normal().negated().unit();\r\n\t        var w = p1.dot(normal);\r\n\t        return new CSG.Line2D(normal, w);\r\n\t    };\r\n\t\r\n\t    CSG.Line2D.prototype = {\r\n\t        // same line but opposite direction:\r\n\t        reverse: function() {\r\n\t            return new CSG.Line2D(this.normal.negated(), -this.w);\r\n\t        },\r\n\t\r\n\t        equals: function(l) {\r\n\t            return (l.normal.equals(this.normal) && (l.w == this.w));\r\n\t        },\r\n\t\r\n\t        origin: function() {\r\n\t            return this.normal.times(this.w);\r\n\t        },\r\n\t\r\n\t        direction: function() {\r\n\t            return this.normal.normal();\r\n\t        },\r\n\t\r\n\t        xAtY: function(y) {\r\n\t            // (py == y) && (normal * p == w)\r\n\t            // -> px = (w - normal._y * y) / normal.x\r\n\t            var x = (this.w - this.normal._y * y) / this.normal.x;\r\n\t            return x;\r\n\t        },\r\n\t\r\n\t        absDistanceToPoint: function(point) {\r\n\t            point = new CSG.Vector2D(point);\r\n\t            var point_projected = point.dot(this.normal);\r\n\t            var distance = Math.abs(point_projected - this.w);\r\n\t            return distance;\r\n\t        },\r\n\t        /*FIXME: has error - origin is not defined, the method is never used\r\n\t         closestPoint: function(point) {\r\n\t             point = new CSG.Vector2D(point);\r\n\t             var vector = point.dot(this.direction());\r\n\t             return origin.plus(vector);\r\n\t         },\r\n\t         */\r\n\t\r\n\t        // intersection between two lines, returns point as Vector2D\r\n\t        intersectWithLine: function(line2d) {\r\n\t            var point = CSG.solve2Linear(this.normal.x, this.normal.y, line2d.normal.x, line2d.normal.y, this.w, line2d.w);\r\n\t            point = new CSG.Vector2D(point); // make  vector2d\r\n\t            return point;\r\n\t        },\r\n\t\r\n\t        transform: function(matrix4x4) {\r\n\t            var origin = new CSG.Vector2D(0, 0);\r\n\t            var pointOnPlane = this.normal.times(this.w);\r\n\t            var neworigin = origin.multiply4x4(matrix4x4);\r\n\t            var neworiginPlusNormal = this.normal.multiply4x4(matrix4x4);\r\n\t            var newnormal = neworiginPlusNormal.minus(neworigin);\r\n\t            var newpointOnPlane = pointOnPlane.multiply4x4(matrix4x4);\r\n\t            var neww = newnormal.dot(newpointOnPlane);\r\n\t            return new CSG.Line2D(newnormal, neww);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    // # class Line3D\r\n\t    // Represents a line in 3D space\r\n\t    // direction must be a unit vector\r\n\t    // point is a random point on the line\r\n\t    CSG.Line3D = function(point, direction) {\r\n\t        point = new CSG.Vector3D(point);\r\n\t        direction = new CSG.Vector3D(direction);\r\n\t        this.point = point;\r\n\t        this.direction = direction.unit();\r\n\t    };\r\n\t\r\n\t    CSG.Line3D.fromPoints = function(p1, p2) {\r\n\t        p1 = new CSG.Vector3D(p1);\r\n\t        p2 = new CSG.Vector3D(p2);\r\n\t        var direction = p2.minus(p1);\r\n\t        return new CSG.Line3D(p1, direction);\r\n\t    };\r\n\t\r\n\t    CSG.Line3D.fromPlanes = function(p1, p2) {\r\n\t        var direction = p1.normal.cross(p2.normal);\r\n\t        var l = direction.length();\r\n\t        if (l < 1e-10) {\r\n\t            throw new Error(\"Parallel planes\");\r\n\t        }\r\n\t        direction = direction.times(1.0 / l);\r\n\t\r\n\t        var mabsx = Math.abs(direction.x);\r\n\t        var mabsy = Math.abs(direction.y);\r\n\t        var mabsz = Math.abs(direction.z);\r\n\t        var origin;\r\n\t        if ((mabsx >= mabsy) && (mabsx >= mabsz)) {\r\n\t            // direction vector is mostly pointing towards x\r\n\t            // find a point p for which x is zero:\r\n\t            var r = CSG.solve2Linear(p1.normal.y, p1.normal.z, p2.normal.y, p2.normal.z, p1.w, p2.w);\r\n\t            origin = new CSG.Vector3D(0, r[0], r[1]);\r\n\t        } else if ((mabsy >= mabsx) && (mabsy >= mabsz)) {\r\n\t            // find a point p for which y is zero:\r\n\t            var r = CSG.solve2Linear(p1.normal.x, p1.normal.z, p2.normal.x, p2.normal.z, p1.w, p2.w);\r\n\t            origin = new CSG.Vector3D(r[0], 0, r[1]);\r\n\t        } else {\r\n\t            // find a point p for which z is zero:\r\n\t            var r = CSG.solve2Linear(p1.normal.x, p1.normal.y, p2.normal.x, p2.normal.y, p1.w, p2.w);\r\n\t            origin = new CSG.Vector3D(r[0], r[1], 0);\r\n\t        }\r\n\t        return new CSG.Line3D(origin, direction);\r\n\t    };\r\n\t\r\n\t\r\n\t    CSG.Line3D.prototype = {\r\n\t        intersectWithPlane: function(plane) {\r\n\t            // plane: plane.normal * p = plane.w\r\n\t            // line: p=line.point + labda * line.direction\r\n\t            var labda = (plane.w - plane.normal.dot(this.point)) / plane.normal.dot(this.direction);\r\n\t            var point = this.point.plus(this.direction.times(labda));\r\n\t            return point;\r\n\t        },\r\n\t\r\n\t        clone: function(line) {\r\n\t            return new CSG.Line3D(this.point.clone(), this.direction.clone());\r\n\t        },\r\n\t\r\n\t        reverse: function() {\r\n\t            return new CSG.Line3D(this.point.clone(), this.direction.negated());\r\n\t        },\r\n\t\r\n\t        transform: function(matrix4x4) {\r\n\t            var newpoint = this.point.multiply4x4(matrix4x4);\r\n\t            var pointPlusDirection = this.point.plus(this.direction);\r\n\t            var newPointPlusDirection = pointPlusDirection.multiply4x4(matrix4x4);\r\n\t            var newdirection = newPointPlusDirection.minus(newpoint);\r\n\t            return new CSG.Line3D(newpoint, newdirection);\r\n\t        },\r\n\t\r\n\t        closestPointOnLine: function(point) {\r\n\t            point = new CSG.Vector3D(point);\r\n\t            var t = point.minus(this.point).dot(this.direction) / this.direction.dot(this.direction);\r\n\t            var closestpoint = this.point.plus(this.direction.times(t));\r\n\t            return closestpoint;\r\n\t        },\r\n\t\r\n\t        distanceToPoint: function(point) {\r\n\t            point = new CSG.Vector3D(point);\r\n\t            var closestpoint = this.closestPointOnLine(point);\r\n\t            var distancevector = point.minus(closestpoint);\r\n\t            var distance = distancevector.length();\r\n\t            return distance;\r\n\t        },\r\n\t\r\n\t        equals: function(line3d) {\r\n\t            if (!this.direction.equals(line3d.direction)) return false;\r\n\t            var distance = this.distanceToPoint(line3d.point);\r\n\t            if (distance > 1e-8) return false;\r\n\t            return true;\r\n\t        }\r\n\t    };\r\n\t\r\n\t\r\n\t    // # class OrthoNormalBasis\r\n\t    // Reprojects points on a 3D plane onto a 2D plane\r\n\t    // or from a 2D plane back onto the 3D plane\r\n\t    CSG.OrthoNormalBasis = function(plane, rightvector) {\r\n\t        if (arguments.length < 2) {\r\n\t            // choose an arbitrary right hand vector, making sure it is somewhat orthogonal to the plane normal:\r\n\t            rightvector = plane.normal.randomNonParallelVector();\r\n\t        } else {\r\n\t            rightvector = new CSG.Vector3D(rightvector);\r\n\t        }\r\n\t        this.v = plane.normal.cross(rightvector).unit();\r\n\t        this.u = this.v.cross(plane.normal);\r\n\t        this.plane = plane;\r\n\t        this.planeorigin = plane.normal.times(plane.w);\r\n\t    };\r\n\t\r\n\t    // Get an orthonormal basis for the standard XYZ planes.\r\n\t    // Parameters: the names of two 3D axes. The 2d x axis will map to the first given 3D axis, the 2d y \r\n\t    // axis will map to the second.\r\n\t    // Prepend the axis with a \"-\" to invert the direction of this axis.\r\n\t    // For example: CSG.OrthoNormalBasis.GetCartesian(\"-Y\",\"Z\")\r\n\t    //   will return an orthonormal basis where the 2d X axis maps to the 3D inverted Y axis, and\r\n\t    //   the 2d Y axis maps to the 3D Z axis.\r\n\t    CSG.OrthoNormalBasis.GetCartesian = function(xaxisid, yaxisid) {\r\n\t        var axisid = xaxisid + \"/\" + yaxisid;\r\n\t        var planenormal, rightvector;\r\n\t        if (axisid == \"X/Y\") {\r\n\t            planenormal = [0, 0, 1];\r\n\t            rightvector = [1, 0, 0];\r\n\t        } else if (axisid == \"Y/-X\") {\r\n\t            planenormal = [0, 0, 1];\r\n\t            rightvector = [0, 1, 0];\r\n\t        } else if (axisid == \"-X/-Y\") {\r\n\t            planenormal = [0, 0, 1];\r\n\t            rightvector = [-1, 0, 0];\r\n\t        } else if (axisid == \"-Y/X\") {\r\n\t            planenormal = [0, 0, 1];\r\n\t            rightvector = [0, -1, 0];\r\n\t        } else if (axisid == \"-X/Y\") {\r\n\t            planenormal = [0, 0, -1];\r\n\t            rightvector = [-1, 0, 0];\r\n\t        } else if (axisid == \"-Y/-X\") {\r\n\t            planenormal = [0, 0, -1];\r\n\t            rightvector = [0, -1, 0];\r\n\t        } else if (axisid == \"X/-Y\") {\r\n\t            planenormal = [0, 0, -1];\r\n\t            rightvector = [1, 0, 0];\r\n\t        } else if (axisid == \"Y/X\") {\r\n\t            planenormal = [0, 0, -1];\r\n\t            rightvector = [0, 1, 0];\r\n\t        } else if (axisid == \"X/Z\") {\r\n\t            planenormal = [0, -1, 0];\r\n\t            rightvector = [1, 0, 0];\r\n\t        } else if (axisid == \"Z/-X\") {\r\n\t            planenormal = [0, -1, 0];\r\n\t            rightvector = [0, 0, 1];\r\n\t        } else if (axisid == \"-X/-Z\") {\r\n\t            planenormal = [0, -1, 0];\r\n\t            rightvector = [-1, 0, 0];\r\n\t        } else if (axisid == \"-Z/X\") {\r\n\t            planenormal = [0, -1, 0];\r\n\t            rightvector = [0, 0, -1];\r\n\t        } else if (axisid == \"-X/Z\") {\r\n\t            planenormal = [0, 1, 0];\r\n\t            rightvector = [-1, 0, 0];\r\n\t        } else if (axisid == \"-Z/-X\") {\r\n\t            planenormal = [0, 1, 0];\r\n\t            rightvector = [0, 0, -1];\r\n\t        } else if (axisid == \"X/-Z\") {\r\n\t            planenormal = [0, 1, 0];\r\n\t            rightvector = [1, 0, 0];\r\n\t        } else if (axisid == \"Z/X\") {\r\n\t            planenormal = [0, 1, 0];\r\n\t            rightvector = [0, 0, 1];\r\n\t        } else if (axisid == \"Y/Z\") {\r\n\t            planenormal = [1, 0, 0];\r\n\t            rightvector = [0, 1, 0];\r\n\t        } else if (axisid == \"Z/-Y\") {\r\n\t            planenormal = [1, 0, 0];\r\n\t            rightvector = [0, 0, 1];\r\n\t        } else if (axisid == \"-Y/-Z\") {\r\n\t            planenormal = [1, 0, 0];\r\n\t            rightvector = [0, -1, 0];\r\n\t        } else if (axisid == \"-Z/Y\") {\r\n\t            planenormal = [1, 0, 0];\r\n\t            rightvector = [0, 0, -1];\r\n\t        } else if (axisid == \"-Y/Z\") {\r\n\t            planenormal = [-1, 0, 0];\r\n\t            rightvector = [0, -1, 0];\r\n\t        } else if (axisid == \"-Z/-Y\") {\r\n\t            planenormal = [-1, 0, 0];\r\n\t            rightvector = [0, 0, -1];\r\n\t        } else if (axisid == \"Y/-Z\") {\r\n\t            planenormal = [-1, 0, 0];\r\n\t            rightvector = [0, 1, 0];\r\n\t        } else if (axisid == \"Z/Y\") {\r\n\t            planenormal = [-1, 0, 0];\r\n\t            rightvector = [0, 0, 1];\r\n\t        } else {\r\n\t            throw new Error(\"CSG.OrthoNormalBasis.GetCartesian: invalid combination of axis identifiers. Should pass two string arguments from [X,Y,Z,-X,-Y,-Z], being two different axes.\");\r\n\t        }\r\n\t        return new CSG.OrthoNormalBasis(new CSG.Plane(new CSG.Vector3D(planenormal), 0), new CSG.Vector3D(rightvector));\r\n\t    };\r\n\t\r\n\t    /*\r\n\t    // test code for CSG.OrthoNormalBasis.GetCartesian()\r\n\t    CSG.OrthoNormalBasis.GetCartesian_Test=function() {\r\n\t      var axisnames=[\"X\",\"Y\",\"Z\",\"-X\",\"-Y\",\"-Z\"];\r\n\t      var axisvectors=[[1,0,0], [0,1,0], [0,0,1], [-1,0,0], [0,-1,0], [0,0,-1]];\r\n\t      for(var axis1=0; axis1 < 3; axis1++) {\r\n\t        for(var axis1inverted=0; axis1inverted < 2; axis1inverted++) {\r\n\t          var axis1name=axisnames[axis1+3*axis1inverted];\r\n\t          var axis1vector=axisvectors[axis1+3*axis1inverted];\r\n\t          for(var axis2=0; axis2 < 3; axis2++) {\r\n\t            if(axis2 != axis1) {\r\n\t              for(var axis2inverted=0; axis2inverted < 2; axis2inverted++) {\r\n\t                var axis2name=axisnames[axis2+3*axis2inverted];\r\n\t                var axis2vector=axisvectors[axis2+3*axis2inverted];\r\n\t                var orthobasis=CSG.OrthoNormalBasis.GetCartesian(axis1name, axis2name);\r\n\t                var test1=orthobasis.to3D(new CSG.Vector2D([1,0]));\r\n\t                var test2=orthobasis.to3D(new CSG.Vector2D([0,1]));\r\n\t                var expected1=new CSG.Vector3D(axis1vector);\r\n\t                var expected2=new CSG.Vector3D(axis2vector);\r\n\t                var d1=test1.distanceTo(expected1);\r\n\t                var d2=test2.distanceTo(expected2);\r\n\t                if( (d1 > 0.01) || (d2 > 0.01) ) {\r\n\t                  throw new Error(\"Wrong!\");\r\n\t      }}}}}}\r\n\t      throw new Error(\"OK\");\r\n\t    };\r\n\t    */\r\n\t\r\n\t    // The z=0 plane, with the 3D x and y vectors mapped to the 2D x and y vector\r\n\t    CSG.OrthoNormalBasis.Z0Plane = function() {\r\n\t        var plane = new CSG.Plane(new CSG.Vector3D([0, 0, 1]), 0);\r\n\t        return new CSG.OrthoNormalBasis(plane, new CSG.Vector3D([1, 0, 0]));\r\n\t    };\r\n\t\r\n\t    CSG.OrthoNormalBasis.prototype = {\r\n\t        getProjectionMatrix: function() {\r\n\t            return new CSG.Matrix4x4([\r\n\t                this.u.x, this.v.x, this.plane.normal.x, 0,\r\n\t                this.u.y, this.v.y, this.plane.normal.y, 0,\r\n\t                this.u.z, this.v.z, this.plane.normal.z, 0,\r\n\t                0, 0, -this.plane.w, 1\r\n\t            ]);\r\n\t        },\r\n\t\r\n\t        getInverseProjectionMatrix: function() {\r\n\t            var p = this.plane.normal.times(this.plane.w);\r\n\t            return new CSG.Matrix4x4([\r\n\t                this.u.x, this.u.y, this.u.z, 0,\r\n\t                this.v.x, this.v.y, this.v.z, 0,\r\n\t                this.plane.normal.x, this.plane.normal.y, this.plane.normal.z, 0,\r\n\t                p.x, p.y, p.z, 1\r\n\t            ]);\r\n\t        },\r\n\t\r\n\t        to2D: function(vec3) {\r\n\t            return new CSG.Vector2D(vec3.dot(this.u), vec3.dot(this.v));\r\n\t        },\r\n\t\r\n\t        to3D: function(vec2) {\r\n\t            return this.planeorigin.plus(this.u.times(vec2.x)).plus(this.v.times(vec2.y));\r\n\t        },\r\n\t\r\n\t        line3Dto2D: function(line3d) {\r\n\t            var a = line3d.point;\r\n\t            var b = line3d.direction.plus(a);\r\n\t            var a2d = this.to2D(a);\r\n\t            var b2d = this.to2D(b);\r\n\t            return CSG.Line2D.fromPoints(a2d, b2d);\r\n\t        },\r\n\t\r\n\t        line2Dto3D: function(line2d) {\r\n\t            var a = line2d.origin();\r\n\t            var b = line2d.direction().plus(a);\r\n\t            var a3d = this.to3D(a);\r\n\t            var b3d = this.to3D(b);\r\n\t            return CSG.Line3D.fromPoints(a3d, b3d);\r\n\t        },\r\n\t\r\n\t        transform: function(matrix4x4) {\r\n\t            // todo: this may not work properly in case of mirroring\r\n\t            var newplane = this.plane.transform(matrix4x4);\r\n\t            var rightpoint_transformed = this.u.transform(matrix4x4);\r\n\t            var origin_transformed = new CSG.Vector3D(0, 0, 0).transform(matrix4x4);\r\n\t            var newrighthandvector = rightpoint_transformed.minus(origin_transformed);\r\n\t            var newbasis = new CSG.OrthoNormalBasis(newplane, newrighthandvector);\r\n\t            return newbasis;\r\n\t        }\r\n\t    };\r\n\t\r\n\t    function insertSorted(array, element, comparefunc) {\r\n\t        var leftbound = 0;\r\n\t        var rightbound = array.length;\r\n\t        while (rightbound > leftbound) {\r\n\t            var testindex = Math.floor((leftbound + rightbound) / 2);\r\n\t            var testelement = array[testindex];\r\n\t            var compareresult = comparefunc(element, testelement);\r\n\t            if (compareresult > 0) // element > testelement\r\n\t            {\r\n\t                leftbound = testindex + 1;\r\n\t            } else {\r\n\t                rightbound = testindex;\r\n\t            }\r\n\t        }\r\n\t        array.splice(leftbound, 0, element);\r\n\t    }\r\n\t\r\n\t    // Get the x coordinate of a point with a certain y coordinate, interpolated between two\r\n\t    // points (CSG.Vector2D).\r\n\t    // Interpolation is robust even if the points have the same y coordinate\r\n\t    CSG.interpolateBetween2DPointsForY = function(point1, point2, y) {\r\n\t        var f1 = y - point1.y;\r\n\t        var f2 = point2.y - point1.y;\r\n\t        if (f2 < 0) {\r\n\t            f1 = -f1;\r\n\t            f2 = -f2;\r\n\t        }\r\n\t        var t;\r\n\t        if (f1 <= 0) {\r\n\t            t = 0.0;\r\n\t        } else if (f1 >= f2) {\r\n\t            t = 1.0;\r\n\t        } else if (f2 < 1e-10) {\r\n\t            t = 0.5;\r\n\t        } else {\r\n\t            t = f1 / f2;\r\n\t        }\r\n\t        var result = point1.x + t * (point2.x - point1.x);\r\n\t        return result;\r\n\t    };\r\n\t\r\n\t    // Retesselation function for a set of coplanar polygons. See the introduction at the top of\r\n\t    // this file.\r\n\t    CSG.reTesselateCoplanarPolygons = function(sourcepolygons, destpolygons) {\r\n\t        var EPS = 1e-5;\r\n\t\r\n\t        var numpolygons = sourcepolygons.length;\r\n\t        if (numpolygons > 0) {\r\n\t            var plane = sourcepolygons[0].plane;\r\n\t            var shared = sourcepolygons[0].shared;\r\n\t            var orthobasis = new CSG.OrthoNormalBasis(plane);\r\n\t            var polygonvertices2d = []; // array of array of CSG.Vector2D\r\n\t            var polygontopvertexindexes = []; // array of indexes of topmost vertex per polygon\r\n\t            var topy2polygonindexes = {};\r\n\t            var ycoordinatetopolygonindexes = {};\r\n\t\r\n\t            var xcoordinatebins = {};\r\n\t            var ycoordinatebins = {};\r\n\t\r\n\t            // convert all polygon vertices to 2D\r\n\t            // Make a list of all encountered y coordinates\r\n\t            // And build a map of all polygons that have a vertex at a certain y coordinate:\r\n\t            var ycoordinateBinningFactor = 1.0 / EPS * 10;\r\n\t            for (var polygonindex = 0; polygonindex < numpolygons; polygonindex++) {\r\n\t                var poly3d = sourcepolygons[polygonindex];\r\n\t                var vertices2d = [];\r\n\t                var numvertices = poly3d.vertices.length;\r\n\t                var minindex = -1;\r\n\t                if (numvertices > 0) {\r\n\t                    var miny, maxy, maxindex;\r\n\t                    for (var i = 0; i < numvertices; i++) {\r\n\t                        var pos2d = orthobasis.to2D(poly3d.vertices[i].pos);\r\n\t                        // perform binning of y coordinates: If we have multiple vertices very\r\n\t                        // close to each other, give them the same y coordinate:\r\n\t                        var ycoordinatebin = Math.floor(pos2d.y * ycoordinateBinningFactor);\r\n\t                        var newy;\r\n\t                        if (ycoordinatebin in ycoordinatebins) {\r\n\t                            newy = ycoordinatebins[ycoordinatebin];\r\n\t                        } else if (ycoordinatebin + 1 in ycoordinatebins) {\r\n\t                            newy = ycoordinatebins[ycoordinatebin + 1];\r\n\t                        } else if (ycoordinatebin - 1 in ycoordinatebins) {\r\n\t                            newy = ycoordinatebins[ycoordinatebin - 1];\r\n\t                        } else {\r\n\t                            newy = pos2d.y;\r\n\t                            ycoordinatebins[ycoordinatebin] = pos2d.y;\r\n\t                        }\r\n\t                        pos2d = CSG.Vector2D.Create(pos2d.x, newy);\r\n\t                        vertices2d.push(pos2d);\r\n\t                        var y = pos2d.y;\r\n\t                        if ((i === 0) || (y < miny)) {\r\n\t                            miny = y;\r\n\t                            minindex = i;\r\n\t                        }\r\n\t                        if ((i === 0) || (y > maxy)) {\r\n\t                            maxy = y;\r\n\t                            maxindex = i;\r\n\t                        }\r\n\t                        if (!(y in ycoordinatetopolygonindexes)) {\r\n\t                            ycoordinatetopolygonindexes[y] = {};\r\n\t                        }\r\n\t                        ycoordinatetopolygonindexes[y][polygonindex] = true;\r\n\t                    }\r\n\t                    if (miny >= maxy) {\r\n\t                        // degenerate polygon, all vertices have same y coordinate. Just ignore it from now:\r\n\t                        vertices2d = [];\r\n\t                        numvertices = 0;\r\n\t                        minindex = -1;\r\n\t                    } else {\r\n\t                        if (!(miny in topy2polygonindexes)) {\r\n\t                            topy2polygonindexes[miny] = [];\r\n\t                        }\r\n\t                        topy2polygonindexes[miny].push(polygonindex);\r\n\t                    }\r\n\t                } // if(numvertices > 0)\r\n\t                // reverse the vertex order:\r\n\t                vertices2d.reverse();\r\n\t                minindex = numvertices - minindex - 1;\r\n\t                polygonvertices2d.push(vertices2d);\r\n\t                polygontopvertexindexes.push(minindex);\r\n\t            }\r\n\t            var ycoordinates = [];\r\n\t            for (var ycoordinate in ycoordinatetopolygonindexes) ycoordinates.push(ycoordinate);\r\n\t            ycoordinates.sort(fnNumberSort);\r\n\t\r\n\t            // Now we will iterate over all y coordinates, from lowest to highest y coordinate\r\n\t            // activepolygons: source polygons that are 'active', i.e. intersect with our y coordinate\r\n\t            //   Is sorted so the polygons are in left to right order\r\n\t            // Each element in activepolygons has these properties:\r\n\t            //        polygonindex: the index of the source polygon (i.e. an index into the sourcepolygons\r\n\t            //                      and polygonvertices2d arrays)\r\n\t            //        leftvertexindex: the index of the vertex at the left side of the polygon (lowest x)\r\n\t            //                         that is at or just above the current y coordinate\r\n\t            //        rightvertexindex: dito at right hand side of polygon\r\n\t            //        topleft, bottomleft: coordinates of the left side of the polygon crossing the current y coordinate\r\n\t            //        topright, bottomright: coordinates of the right hand side of the polygon crossing the current y coordinate\r\n\t            var activepolygons = [];\r\n\t            var prevoutpolygonrow = [];\r\n\t            for (var yindex = 0; yindex < ycoordinates.length; yindex++) {\r\n\t                var newoutpolygonrow = [];\r\n\t                var ycoordinate_as_string = ycoordinates[yindex];\r\n\t                var ycoordinate = Number(ycoordinate_as_string);\r\n\t\r\n\t                // update activepolygons for this y coordinate:\r\n\t                // - Remove any polygons that end at this y coordinate\r\n\t                // - update leftvertexindex and rightvertexindex (which point to the current vertex index\r\n\t                //   at the the left and right side of the polygon\r\n\t                // Iterate over all polygons that have a corner at this y coordinate:\r\n\t                var polygonindexeswithcorner = ycoordinatetopolygonindexes[ycoordinate_as_string];\r\n\t                for (var activepolygonindex = 0; activepolygonindex < activepolygons.length; ++activepolygonindex) {\r\n\t                    var activepolygon = activepolygons[activepolygonindex];\r\n\t                    var polygonindex = activepolygon.polygonindex;\r\n\t                    if (polygonindexeswithcorner[polygonindex]) {\r\n\t                        // this active polygon has a corner at this y coordinate:\r\n\t                        var vertices2d = polygonvertices2d[polygonindex];\r\n\t                        var numvertices = vertices2d.length;\r\n\t                        var newleftvertexindex = activepolygon.leftvertexindex;\r\n\t                        var newrightvertexindex = activepolygon.rightvertexindex;\r\n\t                        // See if we need to increase leftvertexindex or decrease rightvertexindex:\r\n\t                        while (true) {\r\n\t                            var nextleftvertexindex = newleftvertexindex + 1;\r\n\t                            if (nextleftvertexindex >= numvertices) nextleftvertexindex = 0;\r\n\t                            if (vertices2d[nextleftvertexindex].y != ycoordinate) break;\r\n\t                            newleftvertexindex = nextleftvertexindex;\r\n\t                        }\r\n\t                        var nextrightvertexindex = newrightvertexindex - 1;\r\n\t                        if (nextrightvertexindex < 0) nextrightvertexindex = numvertices - 1;\r\n\t                        if (vertices2d[nextrightvertexindex].y == ycoordinate) {\r\n\t                            newrightvertexindex = nextrightvertexindex;\r\n\t                        }\r\n\t                        if ((newleftvertexindex != activepolygon.leftvertexindex) && (newleftvertexindex == newrightvertexindex)) {\r\n\t                            // We have increased leftvertexindex or decreased rightvertexindex, and now they point to the same vertex\r\n\t                            // This means that this is the bottom point of the polygon. We'll remove it:\r\n\t                            activepolygons.splice(activepolygonindex, 1);\r\n\t                            --activepolygonindex;\r\n\t                        } else {\r\n\t                            activepolygon.leftvertexindex = newleftvertexindex;\r\n\t                            activepolygon.rightvertexindex = newrightvertexindex;\r\n\t                            activepolygon.topleft = vertices2d[newleftvertexindex];\r\n\t                            activepolygon.topright = vertices2d[newrightvertexindex];\r\n\t                            var nextleftvertexindex = newleftvertexindex + 1;\r\n\t                            if (nextleftvertexindex >= numvertices) nextleftvertexindex = 0;\r\n\t                            activepolygon.bottomleft = vertices2d[nextleftvertexindex];\r\n\t                            var nextrightvertexindex = newrightvertexindex - 1;\r\n\t                            if (nextrightvertexindex < 0) nextrightvertexindex = numvertices - 1;\r\n\t                            activepolygon.bottomright = vertices2d[nextrightvertexindex];\r\n\t                        }\r\n\t                    } // if polygon has corner here\r\n\t                } // for activepolygonindex\r\n\t                var nextycoordinate;\r\n\t                if (yindex >= ycoordinates.length - 1) {\r\n\t                    // last row, all polygons must be finished here:\r\n\t                    activepolygons = [];\r\n\t                    nextycoordinate = null;\r\n\t                } else // yindex < ycoordinates.length-1\r\n\t                {\r\n\t                    nextycoordinate = Number(ycoordinates[yindex + 1]);\r\n\t                    var middleycoordinate = 0.5 * (ycoordinate + nextycoordinate);\r\n\t                    // update activepolygons by adding any polygons that start here:\r\n\t                    var startingpolygonindexes = topy2polygonindexes[ycoordinate_as_string];\r\n\t                    for (var polygonindex_key in startingpolygonindexes) {\r\n\t                        var polygonindex = startingpolygonindexes[polygonindex_key];\r\n\t                        var vertices2d = polygonvertices2d[polygonindex];\r\n\t                        var numvertices = vertices2d.length;\r\n\t                        var topvertexindex = polygontopvertexindexes[polygonindex];\r\n\t                        // the top of the polygon may be a horizontal line. In that case topvertexindex can point to any point on this line.\r\n\t                        // Find the left and right topmost vertices which have the current y coordinate:\r\n\t                        var topleftvertexindex = topvertexindex;\r\n\t                        while (true) {\r\n\t                            var i = topleftvertexindex + 1;\r\n\t                            if (i >= numvertices) i = 0;\r\n\t                            if (vertices2d[i].y != ycoordinate) break;\r\n\t                            if (i == topvertexindex) break; // should not happen, but just to prevent endless loops\r\n\t                            topleftvertexindex = i;\r\n\t                        }\r\n\t                        var toprightvertexindex = topvertexindex;\r\n\t                        while (true) {\r\n\t                            var i = toprightvertexindex - 1;\r\n\t                            if (i < 0) i = numvertices - 1;\r\n\t                            if (vertices2d[i].y != ycoordinate) break;\r\n\t                            if (i == topleftvertexindex) break; // should not happen, but just to prevent endless loops\r\n\t                            toprightvertexindex = i;\r\n\t                        }\r\n\t                        var nextleftvertexindex = topleftvertexindex + 1;\r\n\t                        if (nextleftvertexindex >= numvertices) nextleftvertexindex = 0;\r\n\t                        var nextrightvertexindex = toprightvertexindex - 1;\r\n\t                        if (nextrightvertexindex < 0) nextrightvertexindex = numvertices - 1;\r\n\t                        var newactivepolygon = {\r\n\t                            polygonindex: polygonindex,\r\n\t                            leftvertexindex: topleftvertexindex,\r\n\t                            rightvertexindex: toprightvertexindex,\r\n\t                            topleft: vertices2d[topleftvertexindex],\r\n\t                            topright: vertices2d[toprightvertexindex],\r\n\t                            bottomleft: vertices2d[nextleftvertexindex],\r\n\t                            bottomright: vertices2d[nextrightvertexindex],\r\n\t                        };\r\n\t                        insertSorted(activepolygons, newactivepolygon, function(el1, el2) {\r\n\t                            var x1 = CSG.interpolateBetween2DPointsForY(\r\n\t                                el1.topleft, el1.bottomleft, middleycoordinate);\r\n\t                            var x2 = CSG.interpolateBetween2DPointsForY(\r\n\t                                el2.topleft, el2.bottomleft, middleycoordinate);\r\n\t                            if (x1 > x2) return 1;\r\n\t                            if (x1 < x2) return -1;\r\n\t                            return 0;\r\n\t                        });\r\n\t                    } // for(var polygonindex in startingpolygonindexes)\r\n\t                } //  yindex < ycoordinates.length-1\r\n\t                //if( (yindex == ycoordinates.length-1) || (nextycoordinate - ycoordinate > EPS) )\r\n\t                if (true) {\r\n\t                    // Now activepolygons is up to date\r\n\t                    // Build the output polygons for the next row in newoutpolygonrow:\r\n\t                    for (var activepolygon_key in activepolygons) {\r\n\t                        var activepolygon = activepolygons[activepolygon_key];\r\n\t                        var polygonindex = activepolygon.polygonindex;\r\n\t                        var vertices2d = polygonvertices2d[polygonindex];\r\n\t                        var numvertices = vertices2d.length;\r\n\t\r\n\t                        var x = CSG.interpolateBetween2DPointsForY(activepolygon.topleft, activepolygon.bottomleft, ycoordinate);\r\n\t                        var topleft = CSG.Vector2D.Create(x, ycoordinate);\r\n\t                        x = CSG.interpolateBetween2DPointsForY(activepolygon.topright, activepolygon.bottomright, ycoordinate);\r\n\t                        var topright = CSG.Vector2D.Create(x, ycoordinate);\r\n\t                        x = CSG.interpolateBetween2DPointsForY(activepolygon.topleft, activepolygon.bottomleft, nextycoordinate);\r\n\t                        var bottomleft = CSG.Vector2D.Create(x, nextycoordinate);\r\n\t                        x = CSG.interpolateBetween2DPointsForY(activepolygon.topright, activepolygon.bottomright, nextycoordinate);\r\n\t                        var bottomright = CSG.Vector2D.Create(x, nextycoordinate);\r\n\t                        var outpolygon = {\r\n\t                            topleft: topleft,\r\n\t                            topright: topright,\r\n\t                            bottomleft: bottomleft,\r\n\t                            bottomright: bottomright,\r\n\t                            leftline: CSG.Line2D.fromPoints(topleft, bottomleft),\r\n\t                            rightline: CSG.Line2D.fromPoints(bottomright, topright)\r\n\t                        };\r\n\t                        if (newoutpolygonrow.length > 0) {\r\n\t                            var prevoutpolygon = newoutpolygonrow[newoutpolygonrow.length - 1];\r\n\t                            var d1 = outpolygon.topleft.distanceTo(prevoutpolygon.topright);\r\n\t                            var d2 = outpolygon.bottomleft.distanceTo(prevoutpolygon.bottomright);\r\n\t                            if ((d1 < EPS) && (d2 < EPS)) {\r\n\t                                // we can join this polygon with the one to the left:\r\n\t                                outpolygon.topleft = prevoutpolygon.topleft;\r\n\t                                outpolygon.leftline = prevoutpolygon.leftline;\r\n\t                                outpolygon.bottomleft = prevoutpolygon.bottomleft;\r\n\t                                newoutpolygonrow.splice(newoutpolygonrow.length - 1, 1);\r\n\t                            }\r\n\t                        }\r\n\t                        newoutpolygonrow.push(outpolygon);\r\n\t                    } // for(activepolygon in activepolygons)\r\n\t                    if (yindex > 0) {\r\n\t                        // try to match the new polygons against the previous row:\r\n\t                        var prevcontinuedindexes = {};\r\n\t                        var matchedindexes = {};\r\n\t                        for (var i = 0; i < newoutpolygonrow.length; i++) {\r\n\t                            var thispolygon = newoutpolygonrow[i];\r\n\t                            for (var ii = 0; ii < prevoutpolygonrow.length; ii++) {\r\n\t                                if (!matchedindexes[ii]) // not already processed?\r\n\t                                {\r\n\t                                    // We have a match if the sidelines are equal or if the top coordinates\r\n\t                                    // are on the sidelines of the previous polygon\r\n\t                                    var prevpolygon = prevoutpolygonrow[ii];\r\n\t                                    if (prevpolygon.bottomleft.distanceTo(thispolygon.topleft) < EPS) {\r\n\t                                        if (prevpolygon.bottomright.distanceTo(thispolygon.topright) < EPS) {\r\n\t                                            // Yes, the top of this polygon matches the bottom of the previous:\r\n\t                                            matchedindexes[ii] = true;\r\n\t                                            // Now check if the joined polygon would remain convex:\r\n\t                                            var d1 = thispolygon.leftline.direction().x - prevpolygon.leftline.direction().x;\r\n\t                                            var d2 = thispolygon.rightline.direction().x - prevpolygon.rightline.direction().x;\r\n\t                                            var leftlinecontinues = Math.abs(d1) < EPS;\r\n\t                                            var rightlinecontinues = Math.abs(d2) < EPS;\r\n\t                                            var leftlineisconvex = leftlinecontinues || (d1 >= 0);\r\n\t                                            var rightlineisconvex = rightlinecontinues || (d2 >= 0);\r\n\t                                            if (leftlineisconvex && rightlineisconvex) {\r\n\t                                                // yes, both sides have convex corners:\r\n\t                                                // This polygon will continue the previous polygon\r\n\t                                                thispolygon.outpolygon = prevpolygon.outpolygon;\r\n\t                                                thispolygon.leftlinecontinues = leftlinecontinues;\r\n\t                                                thispolygon.rightlinecontinues = rightlinecontinues;\r\n\t                                                prevcontinuedindexes[ii] = true;\r\n\t                                            }\r\n\t                                            break;\r\n\t                                        }\r\n\t                                    }\r\n\t                                } // if(!prevcontinuedindexes[ii])\r\n\t                            } // for ii\r\n\t                        } // for i\r\n\t                        for (var ii = 0; ii < prevoutpolygonrow.length; ii++) {\r\n\t                            if (!prevcontinuedindexes[ii]) {\r\n\t                                // polygon ends here\r\n\t                                // Finish the polygon with the last point(s):\r\n\t                                var prevpolygon = prevoutpolygonrow[ii];\r\n\t                                prevpolygon.outpolygon.rightpoints.push(prevpolygon.bottomright);\r\n\t                                if (prevpolygon.bottomright.distanceTo(prevpolygon.bottomleft) > EPS) {\r\n\t                                    // polygon ends with a horizontal line:\r\n\t                                    prevpolygon.outpolygon.leftpoints.push(prevpolygon.bottomleft);\r\n\t                                }\r\n\t                                // reverse the left half so we get a counterclockwise circle:\r\n\t                                prevpolygon.outpolygon.leftpoints.reverse();\r\n\t                                var points2d = prevpolygon.outpolygon.rightpoints.concat(prevpolygon.outpolygon.leftpoints);\r\n\t                                var vertices3d = [];\r\n\t                                points2d.map(function(point2d) {\r\n\t                                    var point3d = orthobasis.to3D(point2d);\r\n\t                                    var vertex3d = new CSG.Vertex(point3d);\r\n\t                                    vertices3d.push(vertex3d);\r\n\t                                });\r\n\t                                var polygon = new CSG.Polygon(vertices3d, shared, plane);\r\n\t                                destpolygons.push(polygon);\r\n\t                            }\r\n\t                        }\r\n\t                    } // if(yindex > 0)\r\n\t                    for (var i = 0; i < newoutpolygonrow.length; i++) {\r\n\t                        var thispolygon = newoutpolygonrow[i];\r\n\t                        if (!thispolygon.outpolygon) {\r\n\t                            // polygon starts here:\r\n\t                            thispolygon.outpolygon = {\r\n\t                                leftpoints: [],\r\n\t                                rightpoints: []\r\n\t                            };\r\n\t                            thispolygon.outpolygon.leftpoints.push(thispolygon.topleft);\r\n\t                            if (thispolygon.topleft.distanceTo(thispolygon.topright) > EPS) {\r\n\t                                // we have a horizontal line at the top:\r\n\t                                thispolygon.outpolygon.rightpoints.push(thispolygon.topright);\r\n\t                            }\r\n\t                        } else {\r\n\t                            // continuation of a previous row\r\n\t                            if (!thispolygon.leftlinecontinues) {\r\n\t                                thispolygon.outpolygon.leftpoints.push(thispolygon.topleft);\r\n\t                            }\r\n\t                            if (!thispolygon.rightlinecontinues) {\r\n\t                                thispolygon.outpolygon.rightpoints.push(thispolygon.topright);\r\n\t                            }\r\n\t                        }\r\n\t                    }\r\n\t                    prevoutpolygonrow = newoutpolygonrow;\r\n\t                }\r\n\t            } // for yindex\r\n\t        } // if(numpolygons > 0)\r\n\t    };\r\n\t\r\n\t    ////////////////////////////////\r\n\t    // ## class fuzzyFactory\r\n\t    // This class acts as a factory for objects. We can search for an object with approximately\r\n\t    // the desired properties (say a rectangle with width 2 and height 1)\r\n\t    // The lookupOrCreate() method looks for an existing object (for example it may find an existing rectangle\r\n\t    // with width 2.0001 and height 0.999. If no object is found, the user supplied callback is\r\n\t    // called, which should generate a new object. The new object is inserted into the database\r\n\t    // so it can be found by future lookupOrCreate() calls.\r\n\t    // Constructor:\r\n\t    //   numdimensions: the number of parameters for each object\r\n\t    //     for example for a 2D rectangle this would be 2\r\n\t    //   tolerance: The maximum difference for each parameter allowed to be considered a match\r\n\t    CSG.fuzzyFactory = function(numdimensions, tolerance) {\r\n\t        this.lookuptable = {};\r\n\t        this.multiplier = 1.0 / tolerance;\r\n\t    };\r\n\t\r\n\t    CSG.fuzzyFactory.prototype = {\r\n\t        // var obj = f.lookupOrCreate([el1, el2, el3], function(elements) {/* create the new object */});\r\n\t        // Performs a fuzzy lookup of the object with the specified elements.\r\n\t        // If found, returns the existing object\r\n\t        // If not found, calls the supplied callback function which should create a new object with\r\n\t        // the specified properties. This object is inserted in the lookup database.\r\n\t        lookupOrCreate: function(els, creatorCallback) {\r\n\t            var hash = \"\";\r\n\t            var multiplier = this.multiplier;\r\n\t            els.forEach(function(el) {\r\n\t                var valueQuantized = Math.round(el * multiplier);\r\n\t                hash += valueQuantized + \"/\";\r\n\t            });\r\n\t            if (hash in this.lookuptable) {\r\n\t                return this.lookuptable[hash];\r\n\t            } else {\r\n\t                var object = creatorCallback(els);\r\n\t                var hashparts = els.map(function(el) {\r\n\t                    var q0 = Math.floor(el * multiplier);\r\n\t                    var q1 = q0 + 1;\r\n\t                    return [\"\" + q0 + \"/\", \"\" + q1 + \"/\"];\r\n\t                });\r\n\t                var numelements = els.length;\r\n\t                var numhashes = 1 << numelements;\r\n\t                for (var hashmask = 0; hashmask < numhashes; ++hashmask) {\r\n\t                    var hashmask_shifted = hashmask;\r\n\t                    hash = \"\";\r\n\t                    hashparts.forEach(function(hashpart) {\r\n\t                        hash += hashpart[hashmask_shifted & 1];\r\n\t                        hashmask_shifted >>= 1;\r\n\t                    });\r\n\t                    this.lookuptable[hash] = object;\r\n\t                }\r\n\t                return object;\r\n\t            }\r\n\t        },\r\n\t    };\r\n\t\r\n\t\r\n\t    //////////////////////////////////////\r\n\t    CSG.fuzzyCSGFactory = function() {\r\n\t        this.vertexfactory = new CSG.fuzzyFactory(3, 1e-5);\r\n\t        this.planefactory = new CSG.fuzzyFactory(4, 1e-5);\r\n\t        this.polygonsharedfactory = {};\r\n\t    };\r\n\t\r\n\t    CSG.fuzzyCSGFactory.prototype = {\r\n\t        getPolygonShared: function(sourceshared) {\r\n\t            var hash = sourceshared.getHash();\r\n\t            if (hash in this.polygonsharedfactory) {\r\n\t                return this.polygonsharedfactory[hash];\r\n\t            } else {\r\n\t                this.polygonsharedfactory[hash] = sourceshared;\r\n\t                return sourceshared;\r\n\t            }\r\n\t        },\r\n\t\r\n\t        getVertex: function(sourcevertex) {\r\n\t            var elements = [sourcevertex.pos._x, sourcevertex.pos._y, sourcevertex.pos._z];\r\n\t            var result = this.vertexfactory.lookupOrCreate(elements, function(els) {\r\n\t                return sourcevertex;\r\n\t            });\r\n\t            return result;\r\n\t        },\r\n\t\r\n\t        getPlane: function(sourceplane) {\r\n\t            var elements = [sourceplane.normal._x, sourceplane.normal._y, sourceplane.normal._z, sourceplane.w];\r\n\t            var result = this.planefactory.lookupOrCreate(elements, function(els) {\r\n\t                return sourceplane;\r\n\t            });\r\n\t            return result;\r\n\t        },\r\n\t\r\n\t        getPolygon: function(sourcepolygon) {\r\n\t            var newplane = this.getPlane(sourcepolygon.plane);\r\n\t            var newshared = this.getPolygonShared(sourcepolygon.shared);\r\n\t            var _this = this;\r\n\t            var newvertices = sourcepolygon.vertices.map(function(vertex) {\r\n\t                return _this.getVertex(vertex);\r\n\t            });\r\n\t            // two vertices that were originally very close may now have become\r\n\t            // truly identical (referring to the same CSG.Vertex object).\r\n\t            // Remove duplicate vertices:\r\n\t            var newvertices_dedup = [];\r\n\t            if(newvertices.length > 0) {\r\n\t                var prevvertextag = newvertices[newvertices.length-1].getTag();\r\n\t                newvertices.forEach(function(vertex) {\r\n\t                    var vertextag = vertex.getTag();\r\n\t                    if(vertextag != prevvertextag)\r\n\t                    {\r\n\t                        newvertices_dedup.push(vertex);\r\n\t                    }\r\n\t                    prevvertextag = vertextag;\r\n\t                });\r\n\t            }\r\n\t            // If it's degenerate, remove all vertices:\r\n\t            if(newvertices_dedup.length < 3) {\r\n\t                newvertices_dedup = [];\r\n\t            }\r\n\t            return new CSG.Polygon(newvertices_dedup, newshared, newplane);\r\n\t        },\r\n\t\r\n\t        getCSG: function(sourcecsg) {\r\n\t            var _this = this;\r\n\t            var newpolygons = [];\r\n\t            sourcecsg.polygons.forEach(function(polygon) {\r\n\t                var newpolygon = _this.getPolygon(polygon);\r\n\t                // see getPolygon above: we may get a polygon with no vertices, discard it:\r\n\t                if(newpolygon.vertices.length >= 3)\r\n\t                {\r\n\t                    newpolygons.push(newpolygon);\r\n\t                }\r\n\t            });\r\n\t            return CSG.fromPolygons(newpolygons);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    //////////////////////////////////////\r\n\t    // Tag factory: we can request a unique tag through CSG.getTag()\r\n\t    CSG.staticTag = 1;\r\n\t\r\n\t    CSG.getTag = function() {\r\n\t        return CSG.staticTag++;\r\n\t    };\r\n\t\r\n\t    //////////////////////////////////////\r\n\t    // # Class Properties\r\n\t    // This class is used to store properties of a solid\r\n\t    // A property can for example be a CSG.Vertex, a CSG.Plane or a CSG.Line3D\r\n\t    // Whenever an affine transform is applied to the CSG solid, all its properties are\r\n\t    // transformed as well.\r\n\t    // The properties can be stored in a complex nested structure (using arrays and objects)\r\n\t    CSG.Properties = function() {};\r\n\t\r\n\t    CSG.Properties.prototype = {\r\n\t        _transform: function(matrix4x4) {\r\n\t            var result = new CSG.Properties();\r\n\t            CSG.Properties.transformObj(this, result, matrix4x4);\r\n\t            return result;\r\n\t        },\r\n\t        _merge: function(otherproperties) {\r\n\t            var result = new CSG.Properties();\r\n\t            CSG.Properties.cloneObj(this, result);\r\n\t            CSG.Properties.addFrom(result, otherproperties);\r\n\t            return result;\r\n\t        }\r\n\t    };\r\n\t\r\n\t    CSG.Properties.transformObj = function(source, result, matrix4x4) {\r\n\t        for (var propertyname in source) {\r\n\t            if (propertyname == \"_transform\") continue;\r\n\t            if (propertyname == \"_merge\") continue;\r\n\t            var propertyvalue = source[propertyname];\r\n\t            var transformed = propertyvalue;\r\n\t            if (typeof(propertyvalue) == \"object\") {\r\n\t                if (('transform' in propertyvalue) && (typeof(propertyvalue.transform) == \"function\")) {\r\n\t                    transformed = propertyvalue.transform(matrix4x4);\r\n\t                } else if (propertyvalue instanceof Array) {\r\n\t                    transformed = [];\r\n\t                    CSG.Properties.transformObj(propertyvalue, transformed, matrix4x4);\r\n\t                } else if (propertyvalue instanceof CSG.Properties) {\r\n\t                    transformed = new CSG.Properties();\r\n\t                    CSG.Properties.transformObj(propertyvalue, transformed, matrix4x4);\r\n\t                }\r\n\t            }\r\n\t            result[propertyname] = transformed;\r\n\t        }\r\n\t    };\r\n\t\r\n\t    CSG.Properties.cloneObj = function(source, result) {\r\n\t        for (var propertyname in source) {\r\n\t            if (propertyname == \"_transform\") continue;\r\n\t            if (propertyname == \"_merge\") continue;\r\n\t            var propertyvalue = source[propertyname];\r\n\t            var cloned = propertyvalue;\r\n\t            if (typeof(propertyvalue) == \"object\") {\r\n\t                if (propertyvalue instanceof Array) {\r\n\t                    cloned = [];\r\n\t                    for (var i = 0; i < propertyvalue.length; i++) {\r\n\t                        cloned.push(propertyvalue[i]);\r\n\t                    }\r\n\t                } else if (propertyvalue instanceof CSG.Properties) {\r\n\t                    cloned = new CSG.Properties();\r\n\t                    CSG.Properties.cloneObj(propertyvalue, cloned);\r\n\t                }\r\n\t            }\r\n\t            result[propertyname] = cloned;\r\n\t        }\r\n\t    };\r\n\t\r\n\t    CSG.Properties.addFrom = function(result, otherproperties) {\r\n\t        for (var propertyname in otherproperties) {\r\n\t            if (propertyname == \"_transform\") continue;\r\n\t            if (propertyname == \"_merge\") continue;\r\n\t            if ((propertyname in result) &&\r\n\t                (typeof(result[propertyname]) == \"object\") &&\r\n\t                (result[propertyname] instanceof CSG.Properties) &&\r\n\t                (typeof(otherproperties[propertyname]) == \"object\") &&\r\n\t                (otherproperties[propertyname] instanceof CSG.Properties)) {\r\n\t                CSG.Properties.addFrom(result[propertyname], otherproperties[propertyname]);\r\n\t            } else if (!(propertyname in result)) {\r\n\t                result[propertyname] = otherproperties[propertyname];\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t\r\n\t    //////////////////////////////////////\r\n\t    // # class Connector\r\n\t    // A connector allows to attach two objects at predefined positions\r\n\t    // For example a servo motor and a servo horn:\r\n\t    // Both can have a Connector called 'shaft'\r\n\t    // The horn can be moved and rotated such that the two connectors match\r\n\t    // and the horn is attached to the servo motor at the proper position.\r\n\t    // Connectors are stored in the properties of a CSG solid so they are\r\n\t    // ge the same transformations applied as the solid\r\n\t    CSG.Connector = function(point, axisvector, normalvector) {\r\n\t        this.point = new CSG.Vector3D(point);\r\n\t        this.axisvector = new CSG.Vector3D(axisvector).unit();\r\n\t        this.normalvector = new CSG.Vector3D(normalvector).unit();\r\n\t    };\r\n\t\r\n\t    CSG.Connector.prototype = {\r\n\t        normalized: function() {\r\n\t            var axisvector = this.axisvector.unit();\r\n\t            // make the normal vector truly normal:\r\n\t            var n = this.normalvector.cross(axisvector).unit();\r\n\t            var normalvector = axisvector.cross(n);\r\n\t            return new CSG.Connector(this.point, axisvector, normalvector);\r\n\t        },\r\n\t\r\n\t        transform: function(matrix4x4) {\r\n\t            var point = this.point.multiply4x4(matrix4x4);\r\n\t            var axisvector = this.point.plus(this.axisvector).multiply4x4(matrix4x4).minus(point);\r\n\t            var normalvector = this.point.plus(this.normalvector).multiply4x4(matrix4x4).minus(point);\r\n\t            return new CSG.Connector(point, axisvector, normalvector);\r\n\t        },\r\n\t\r\n\t        // Get the transformation matrix to connect this Connector to another connector\r\n\t        //   other: a CSG.Connector to which this connector should be connected\r\n\t        //   mirror: false: the 'axis' vectors of the connectors should point in the same direction\r\n\t        //           true: the 'axis' vectors of the connectors should point in opposite direction\r\n\t        //   normalrotation: degrees of rotation between the 'normal' vectors of the two\r\n\t        //                   connectors\r\n\t        getTransformationTo: function(other, mirror, normalrotation) {\r\n\t            mirror = mirror ? true : false;\r\n\t            normalrotation = normalrotation ? Number(normalrotation) : 0;\r\n\t            var us = this.normalized();\r\n\t            other = other.normalized();\r\n\t            // shift to the origin:\r\n\t            var transformation = CSG.Matrix4x4.translation(this.point.negated());\r\n\t            // construct the plane crossing through the origin and the two axes:\r\n\t            var axesplane = CSG.Plane.anyPlaneFromVector3Ds(\r\n\t                new CSG.Vector3D(0, 0, 0), us.axisvector, other.axisvector);\r\n\t            var axesbasis = new CSG.OrthoNormalBasis(axesplane);\r\n\t            var angle1 = axesbasis.to2D(us.axisvector).angle();\r\n\t            var angle2 = axesbasis.to2D(other.axisvector).angle();\r\n\t            var rotation = 180.0 * (angle2 - angle1) / Math.PI;\r\n\t            if (mirror) rotation += 180.0;\r\n\t            transformation = transformation.multiply(axesbasis.getProjectionMatrix());\r\n\t            transformation = transformation.multiply(CSG.Matrix4x4.rotationZ(rotation));\r\n\t            transformation = transformation.multiply(axesbasis.getInverseProjectionMatrix());\r\n\t            var usAxesAligned = us.transform(transformation);\r\n\t            // Now we have done the transformation for aligning the axes.\r\n\t            // We still need to align the normals:\r\n\t            var normalsplane = CSG.Plane.fromNormalAndPoint(other.axisvector, new CSG.Vector3D(0, 0, 0));\r\n\t            var normalsbasis = new CSG.OrthoNormalBasis(normalsplane);\r\n\t            angle1 = normalsbasis.to2D(usAxesAligned.normalvector).angle();\r\n\t            angle2 = normalsbasis.to2D(other.normalvector).angle();\r\n\t            rotation = 180.0 * (angle2 - angle1) / Math.PI;\r\n\t            rotation += normalrotation;\r\n\t            transformation = transformation.multiply(normalsbasis.getProjectionMatrix());\r\n\t            transformation = transformation.multiply(CSG.Matrix4x4.rotationZ(rotation));\r\n\t            transformation = transformation.multiply(normalsbasis.getInverseProjectionMatrix());\r\n\t            // and translate to the destination point:\r\n\t            transformation = transformation.multiply(CSG.Matrix4x4.translation(other.point));\r\n\t            // var usAligned = us.transform(transformation);\r\n\t            return transformation;\r\n\t        },\r\n\t\r\n\t        axisLine: function() {\r\n\t            return new CSG.Line3D(this.point, this.axisvector);\r\n\t        },\r\n\t\r\n\t        // creates a new Connector, with the connection point moved in the direction of the axisvector\r\n\t        extend: function(distance) {\r\n\t            var newpoint = this.point.plus(this.axisvector.unit().times(distance));\r\n\t            return new CSG.Connector(newpoint, this.axisvector, this.normalvector);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    CSG.ConnectorList = function(connectors) {\r\n\t        this.connectors_ = connectors ? connectors.slice() : [];\r\n\t    };\r\n\t\r\n\t    CSG.ConnectorList.defaultNormal = [0, 0, 1];\r\n\t\r\n\t    CSG.ConnectorList.fromPath2D = function(path2D, arg1, arg2) {\r\n\t        if (arguments.length === 3) {\r\n\t            return CSG.ConnectorList._fromPath2DTangents(path2D, arg1, arg2);\r\n\t        } else if (arguments.length == 2) {\r\n\t            return CSG.ConnectorList._fromPath2DExplicit(path2D, arg1);\r\n\t        } else {\r\n\t            throw(\"call with path2D and either 2 direction vectors, or a function returning direction vectors\");\r\n\t        }\r\n\t    };\r\n\t\r\n\t    /*\r\n\t     * calculate the connector axisvectors by calculating the \"tangent\" for path2D.\r\n\t     * This is undefined for start and end points, so axis for these have to be manually\r\n\t     * provided.\r\n\t     */\r\n\t    CSG.ConnectorList._fromPath2DTangents = function(path2D, start, end) {\r\n\t        // path2D\r\n\t        var axis;\r\n\t        var pathLen = path2D.points.length;\r\n\t        var result = new CSG.ConnectorList([new CSG.Connector(path2D.points[0],\r\n\t            start, CSG.ConnectorList.defaultNormal)]);\r\n\t        // middle points\r\n\t        path2D.points.slice(1, pathLen - 1).forEach(function(p2, i) {\r\n\t            axis = path2D.points[i + 2].minus(path2D.points[i]).toVector3D(0);\r\n\t            result.appendConnector(new CSG.Connector(p2.toVector3D(0), axis,\r\n\t              CSG.ConnectorList.defaultNormal));\r\n\t        }, this);\r\n\t        result.appendConnector(new CSG.Connector(path2D.points[pathLen - 1], end,\r\n\t          CSG.ConnectorList.defaultNormal));\r\n\t        result.closed = path2D.closed;\r\n\t        return result;\r\n\t    };\r\n\t\r\n\t    /*\r\n\t     * angleIsh: either a static angle, or a function(point) returning an angle\r\n\t     */\r\n\t    CSG.ConnectorList._fromPath2DExplicit = function(path2D, angleIsh) {\r\n\t        function getAngle(angleIsh, pt, i) {\r\n\t            if (typeof angleIsh == 'function') {\r\n\t                angleIsh = angleIsh(pt, i);\r\n\t            }\r\n\t            return angleIsh;\r\n\t        }\r\n\t        var result = new CSG.ConnectorList(\r\n\t            path2D.points.map(function(p2, i) {\r\n\t                return new CSG.Connector(p2.toVector3D(0),\r\n\t                    CSG.Vector3D.Create(1, 0, 0).rotateZ(getAngle(angleIsh, p2, i)),\r\n\t                      CSG.ConnectorList.defaultNormal);\r\n\t            }, this)\r\n\t        );\r\n\t        result.closed = path2D.closed;\r\n\t        return result;\r\n\t    };\r\n\t\r\n\t\r\n\t    CSG.ConnectorList.prototype = {\r\n\t        setClosed: function(bool) {\r\n\t            this.closed = !!closed;\r\n\t        },\r\n\t        appendConnector: function(conn) {\r\n\t            this.connectors_.push(conn);\r\n\t        },\r\n\t        /*\r\n\t         * arguments: cagish: a cag or a function(connector) returning a cag\r\n\t         *            closed: whether the 3d path defined by connectors location\r\n\t         *              should be closed or stay open\r\n\t         *              Note: don't duplicate connectors in the path\r\n\t         * TODO: consider an option \"maySelfIntersect\" to close & force union all single segments\r\n\t         */\r\n\t        followWith: function(cagish) {\r\n\t            this.verify();\r\n\t            function getCag(cagish, connector) {\r\n\t                if (typeof cagish == \"function\") {\r\n\t                    cagish = cagish(connector.point, connector.axisvector, connector.normalvector);\r\n\t                }\r\n\t                return cagish;\r\n\t            }\r\n\t\r\n\t            var polygons = [], currCag;\r\n\t            var prevConnector = this.connectors_[this.connectors_.length - 1];\r\n\t            var prevCag = getCag(cagish, prevConnector);\r\n\t            // add walls\r\n\t            this.connectors_.forEach(function(connector, notFirst) {\r\n\t                currCag = getCag(cagish, connector);\r\n\t                if (notFirst || this.closed) {\r\n\t                    polygons.push.apply(polygons, prevCag._toWallPolygons({\r\n\t                        toConnector1: prevConnector, toConnector2: connector, cag: currCag}));\r\n\t                } else {\r\n\t                    // it is the first, and shape not closed -> build start wall\r\n\t                    polygons.push.apply(polygons,\r\n\t                        currCag._toPlanePolygons({toConnector: connector, flipped: true}));\r\n\t                }\r\n\t                if (notFirst == this.connectors_.length - 1 && !this.closed) {\r\n\t                    // build end wall\r\n\t                    polygons.push.apply(polygons,\r\n\t                        currCag._toPlanePolygons({toConnector: connector}));\r\n\t                }\r\n\t                prevCag = currCag;\r\n\t                prevConnector = connector;\r\n\t            }, this);\r\n\t            return CSG.fromPolygons(polygons).reTesselated().canonicalized();\r\n\t        },\r\n\t        /*\r\n\t         * general idea behind these checks: connectors need to have smooth transition from one to another\r\n\t         * TODO: add a check that 2 follow-on CAGs are not intersecting\r\n\t         */\r\n\t        verify: function() {\r\n\t            var connI, connI1, dPosToAxis, axisToNextAxis;\r\n\t            for (var i = 0; i < this.connectors_.length - 1; i++) {\r\n\t                connI = this.connectors_[i], connI1 = this.connectors_[i + 1];\r\n\t                if (connI1.point.minus(connI.point).dot(connI.axisvector) <= 0) {\r\n\t                    throw(\"Invalid ConnectorList. Each connectors position needs to be within a <90deg range of previous connectors axisvector\");\r\n\t                }\r\n\t                if (connI.axisvector.dot(connI1.axisvector) <= 0) {\r\n\t                    throw(\"invalid ConnectorList. No neighboring connectors axisvectors may span a >=90deg angle\");\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t\r\n\t    //////////////////////////////////////\r\n\t    // # Class Path2D\r\n\t    CSG.Path2D = function(points, closed) {\r\n\t        closed = !!closed;\r\n\t        points = points || [];\r\n\t        // re-parse the points into CSG.Vector2D\r\n\t        // and remove any duplicate points\r\n\t        var prevpoint = null;\r\n\t        if (closed && (points.length > 0)) {\r\n\t            prevpoint = new CSG.Vector2D(points[points.length - 1]);\r\n\t        }\r\n\t        var newpoints = [];\r\n\t        points.map(function(point) {\r\n\t            point = new CSG.Vector2D(point);\r\n\t            var skip = false;\r\n\t            if (prevpoint !== null) {\r\n\t                var distance = point.distanceTo(prevpoint);\r\n\t                skip = distance < 1e-5;\r\n\t            }\r\n\t            if (!skip) newpoints.push(point);\r\n\t            prevpoint = point;\r\n\t        });\r\n\t        this.points = newpoints;\r\n\t        this.closed = closed;\r\n\t    };\r\n\t\r\n\t    /*\r\n\t    Construct a (part of a) circle. Parameters:\r\n\t      options.center: the center point of the arc (CSG.Vector2D or array [x,y])\r\n\t      options.radius: the circle radius (float)\r\n\t      options.startangle: the starting angle of the arc, in degrees\r\n\t        0 degrees corresponds to [1,0]\r\n\t        90 degrees to [0,1]\r\n\t        and so on\r\n\t      options.endangle: the ending angle of the arc, in degrees\r\n\t      options.resolution: number of points per 360 degree of rotation\r\n\t      options.maketangent: adds two extra tiny line segments at both ends of the circle\r\n\t        this ensures that the gradients at the edges are tangent to the circle\r\n\t    Returns a CSG.Path2D. The path is not closed (even if it is a 360 degree arc).\r\n\t    close() the resulting path if you want to create a true circle.\r\n\t    */\r\n\t    CSG.Path2D.arc = function(options) {\r\n\t        var center = CSG.parseOptionAs2DVector(options, \"center\", 0);\r\n\t        var radius = CSG.parseOptionAsFloat(options, \"radius\", 1);\r\n\t        var startangle = CSG.parseOptionAsFloat(options, \"startangle\", 0);\r\n\t        var endangle = CSG.parseOptionAsFloat(options, \"endangle\", 360);\r\n\t        var resolution = CSG.parseOptionAsInt(options, \"resolution\", CSG.defaultResolution2D);\r\n\t        var maketangent = CSG.parseOptionAsBool(options, \"maketangent\", false);\r\n\t        // no need to make multiple turns:\r\n\t        while (endangle - startangle >= 720) {\r\n\t            endangle -= 360;\r\n\t        }\r\n\t        while (endangle - startangle <= -720) {\r\n\t            endangle += 360;\r\n\t        }\r\n\t        var points = [],\r\n\t            point;\r\n\t        var absangledif = Math.abs(endangle - startangle);\r\n\t        if (absangledif < 1e-5) {\r\n\t            point = CSG.Vector2D.fromAngle(startangle / 180.0 * Math.PI).times(radius);\r\n\t            points.push(point.plus(center));\r\n\t        } else {\r\n\t            var numsteps = Math.floor(resolution * absangledif / 360) + 1;\r\n\t            var edgestepsize = numsteps * 0.5 / absangledif; // step size for half a degree\r\n\t            if (edgestepsize > 0.25) edgestepsize = 0.25;\r\n\t            var numsteps_mod = maketangent ? (numsteps + 2) : numsteps;\r\n\t            for (var i = 0; i <= numsteps_mod; i++) {\r\n\t                var step = i;\r\n\t                if (maketangent) {\r\n\t                    step = (i - 1) * (numsteps - 2 * edgestepsize) / numsteps + edgestepsize;\r\n\t                    if (step < 0) step = 0;\r\n\t                    if (step > numsteps) step = numsteps;\r\n\t                }\r\n\t                var angle = startangle + step * (endangle - startangle) / numsteps;\r\n\t                point = CSG.Vector2D.fromAngle(angle / 180.0 * Math.PI).times(radius);\r\n\t                points.push(point.plus(center));\r\n\t            }\r\n\t        }\r\n\t        return new CSG.Path2D(points, false);\r\n\t    };\r\n\t\r\n\t    CSG.Path2D.prototype = {\r\n\t        concat: function(otherpath) {\r\n\t            if (this.closed || otherpath.closed) {\r\n\t                throw new Error(\"Paths must not be closed\");\r\n\t            }\r\n\t            var newpoints = this.points.concat(otherpath.points);\r\n\t            return new CSG.Path2D(newpoints);\r\n\t        },\r\n\t\r\n\t        appendPoint: function(point) {\r\n\t            if (this.closed) {\r\n\t                throw new Error(\"Path must not be closed\");\r\n\t            }\r\n\t            point = new CSG.Vector2D(point); // cast to Vector2D\r\n\t            var newpoints = this.points.concat([point]);\r\n\t            return new CSG.Path2D(newpoints);\r\n\t        },\r\n\t\r\n\t        appendPoints: function(points) {\r\n\t            if (this.closed) {\r\n\t                throw new Error(\"Path must not be closed\");\r\n\t            }\r\n\t            var newpoints = this.points;\r\n\t            points.forEach(function(point) {\r\n\t                newpoints.push(new CSG.Vector2D(point)); // cast to Vector2D\r\n\t            })\r\n\t            return new CSG.Path2D(newpoints);\r\n\t        },\r\n\t\r\n\t        close: function() {\r\n\t            return new CSG.Path2D(this.points, true);\r\n\t        },\r\n\t\r\n\t        // Extrude the path by following it with a rectangle (upright, perpendicular to the path direction)\r\n\t        // Returns a CSG solid\r\n\t        //   width: width of the extrusion, in the z=0 plane\r\n\t        //   height: height of the extrusion in the z direction\r\n\t        //   resolution: number of segments per 360 degrees for the curve in a corner\r\n\t        rectangularExtrude: function(width, height, resolution) {\r\n\t            var cag = this.expandToCAG(width / 2, resolution);\r\n\t            var result = cag.extrude({\r\n\t                offset: [0, 0, height]\r\n\t            });\r\n\t            return result;\r\n\t        },\r\n\t\r\n\t        // Expand the path to a CAG\r\n\t        // This traces the path with a circle with radius pathradius\r\n\t        expandToCAG: function(pathradius, resolution) {\r\n\t            var sides = [];\r\n\t            var numpoints = this.points.length;\r\n\t            var startindex = 0;\r\n\t            if (this.closed && (numpoints > 2)) startindex = -1;\r\n\t            var prevvertex;\r\n\t            for (var i = startindex; i < numpoints; i++) {\r\n\t                var pointindex = i;\r\n\t                if (pointindex < 0) pointindex = numpoints - 1;\r\n\t                var point = this.points[pointindex];\r\n\t                var vertex = new CAG.Vertex(point);\r\n\t                if (i > startindex) {\r\n\t                    var side = new CAG.Side(prevvertex, vertex);\r\n\t                    sides.push(side);\r\n\t                }\r\n\t                prevvertex = vertex;\r\n\t            }\r\n\t            var shellcag = CAG.fromSides(sides);\r\n\t            var expanded = shellcag.expandedShell(pathradius, resolution);\r\n\t            return expanded;\r\n\t        },\r\n\t\r\n\t        innerToCAG: function() {\r\n\t            if (!this.closed) throw new Error(\"The path should be closed!\");\r\n\t            return CAG.fromPoints(this.points);\r\n\t        },\r\n\t\r\n\t        transform: function(matrix4x4) {\r\n\t            var newpoints = this.points.map(function(point) {\r\n\t                return point.multiply4x4(matrix4x4);\r\n\t            });\r\n\t            return new CSG.Path2D(newpoints, this.closed);\r\n\t        },\r\n\t\r\n\t        appendBezier: function(controlpoints, options) {\r\n\t            if (arguments.length < 2) {\r\n\t                options = {};\r\n\t            }\r\n\t            if (this.closed) {\r\n\t                throw new Error(\"Path must not be closed\");\r\n\t            }\r\n\t            if (!(controlpoints instanceof Array)) {\r\n\t                throw new Error(\"appendBezier: should pass an array of control points\")\r\n\t            }\r\n\t            if (controlpoints.length < 1) {\r\n\t                throw new Error(\"appendBezier: need at least 1 control point\")\r\n\t            }\r\n\t            if (this.points.length < 1) {\r\n\t                throw new Error(\"appendBezier: path must already contain a point (the endpoint of the path is used as the starting point for the bezier curve)\");\r\n\t            }\r\n\t            var resolution = CSG.parseOptionAsInt(options, \"resolution\", CSG.defaultResolution2D);\r\n\t            if (resolution < 4) resolution = 4;\r\n\t            var factorials = [];\r\n\t            var controlpoints_parsed = [];\r\n\t            controlpoints_parsed.push(this.points[this.points.length - 1]); // start at the previous end point\r\n\t            for (var i = 0; i < controlpoints.length; ++i) {\r\n\t                var p = controlpoints[i];\r\n\t                if (p === null) {\r\n\t                    // we can pass null as the first control point. In that case a smooth gradient is ensured:\r\n\t                    if (i != 0) {\r\n\t                        throw new Error(\"appendBezier: null can only be passed as the first control point\");\r\n\t                    }\r\n\t                    if (controlpoints.length < 2) {\r\n\t                        throw new Error(\"appendBezier: null can only be passed if there is at least one more control point\");\r\n\t                    }\r\n\t                    var lastBezierControlPoint;\r\n\t                    if ('lastBezierControlPoint' in this) {\r\n\t                        lastBezierControlPoint = this.lastBezierControlPoint;\r\n\t                    } else {\r\n\t                        if (this.points.length < 2) {\r\n\t                            throw new Error(\"appendBezier: null is passed as a control point but this requires a previous bezier curve or at least two points in the existing path\");\r\n\t                        }\r\n\t                        lastBezierControlPoint = this.points[this.points.length - 2];\r\n\t                    }\r\n\t                    // mirror the last bezier control point:\r\n\t                    p = this.points[this.points.length - 1].times(2).minus(lastBezierControlPoint);\r\n\t                } else {\r\n\t                    p = new CSG.Vector2D(p); // cast to Vector2D\r\n\t                }\r\n\t                controlpoints_parsed.push(p);\r\n\t            }\r\n\t            var bezier_order = controlpoints_parsed.length - 1;\r\n\t            var fact = 1;\r\n\t            for (var i = 0; i <= bezier_order; ++i) {\r\n\t                if (i > 0) fact *= i;\r\n\t                factorials.push(fact);\r\n\t            }\r\n\t            var binomials = [];\r\n\t            for (var i = 0; i <= bezier_order; ++i) {\r\n\t                var binomial = factorials[bezier_order] / (factorials[i] * factorials[bezier_order - i]);\r\n\t                binomials.push(binomial);\r\n\t            }\r\n\t            var getPointForT = function(t) {\r\n\t                var t_k = 1; // = pow(t,k)\r\n\t                var one_minus_t_n_minus_k = Math.pow(1 - t, bezier_order); // = pow( 1-t, bezier_order - k)\r\n\t                var inv_1_minus_t = (t != 1) ? (1 / (1 - t)) : 1;\r\n\t                var point = new CSG.Vector2D(0, 0);\r\n\t                for (var k = 0; k <= bezier_order; ++k) {\r\n\t                    if (k == bezier_order) one_minus_t_n_minus_k = 1;\r\n\t                    var bernstein_coefficient = binomials[k] * t_k * one_minus_t_n_minus_k;\r\n\t                    point = point.plus(controlpoints_parsed[k].times(bernstein_coefficient));\r\n\t                    t_k *= t;\r\n\t                    one_minus_t_n_minus_k *= inv_1_minus_t;\r\n\t                }\r\n\t                return point;\r\n\t            };\r\n\t            var newpoints = [];\r\n\t            var newpoints_t = [];\r\n\t            var numsteps = bezier_order + 1;\r\n\t            for (var i = 0; i < numsteps; ++i) {\r\n\t                var t = i / (numsteps - 1);\r\n\t                var point = getPointForT(t);\r\n\t                newpoints.push(point);\r\n\t                newpoints_t.push(t);\r\n\t            }\r\n\t            // subdivide each segment until the angle at each vertex becomes small enough:\r\n\t            var subdivide_base = 1;\r\n\t            var maxangle = Math.PI * 2 / resolution; // segments may have differ no more in angle than this\r\n\t            var maxsinangle = Math.sin(maxangle);\r\n\t            while (subdivide_base < newpoints.length - 1) {\r\n\t                var dir1 = newpoints[subdivide_base].minus(newpoints[subdivide_base - 1]).unit();\r\n\t                var dir2 = newpoints[subdivide_base + 1].minus(newpoints[subdivide_base]).unit();\r\n\t                var sinangle = dir1.cross(dir2); // this is the sine of the angle\r\n\t                if (Math.abs(sinangle) > maxsinangle) {\r\n\t                    // angle is too big, we need to subdivide\r\n\t                    var t0 = newpoints_t[subdivide_base - 1];\r\n\t                    var t1 = newpoints_t[subdivide_base + 1];\r\n\t                    var t0_new = t0 + (t1 - t0) * 1 / 3;\r\n\t                    var t1_new = t0 + (t1 - t0) * 2 / 3;\r\n\t                    var point0_new = getPointForT(t0_new);\r\n\t                    var point1_new = getPointForT(t1_new);\r\n\t                    // remove the point at subdivide_base and replace with 2 new points:\r\n\t                    newpoints.splice(subdivide_base, 1, point0_new, point1_new);\r\n\t                    newpoints_t.splice(subdivide_base, 1, t0_new, t1_new);\r\n\t                    // re - evaluate the angles, starting at the previous junction since it has changed:\r\n\t                    subdivide_base--;\r\n\t                    if (subdivide_base < 1) subdivide_base = 1;\r\n\t                } else {\r\n\t                    ++subdivide_base;\r\n\t                }\r\n\t            }\r\n\t            // append to the previous points, but skip the first new point because it is identical to the last point:\r\n\t            newpoints = this.points.concat(newpoints.slice(1));\r\n\t            var result = new CSG.Path2D(newpoints);\r\n\t            result.lastBezierControlPoint = controlpoints_parsed[controlpoints_parsed.length - 2];\r\n\t            return result;\r\n\t        },\r\n\t\r\n\t        /*\r\n\t         options:\r\n\t         .resolution // smoothness of the arc (number of segments per 360 degree of rotation)\r\n\t         // to create a circular arc:\r\n\t         .radius\r\n\t         // to create an elliptical arc:\r\n\t         .xradius\r\n\t         .yradius\r\n\t         .xaxisrotation  // the rotation (in degrees) of the x axis of the ellipse with respect to the x axis of our coordinate system\r\n\t         // this still leaves 4 possible arcs between the two given points. The following two flags select which one we draw:\r\n\t         .clockwise // = true | false (default is false). Two of the 4 solutions draw clockwise with respect to the center point, the other 2 counterclockwise\r\n\t         .large     // = true | false (default is false). Two of the 4 solutions are an arc longer than 180 degrees, the other two are <= 180 degrees\r\n\t         This implementation follows the SVG arc specs. For the details see\r\n\t         http://www.w3.org/TR/SVG/paths.html#PathDataEllipticalArcCommands\r\n\t         */\r\n\t        appendArc: function(endpoint, options) {\r\n\t            if (arguments.length < 2) {\r\n\t                options = {};\r\n\t            }\r\n\t            if (this.closed) {\r\n\t                throw new Error(\"Path must not be closed\");\r\n\t            }\r\n\t            if (this.points.length < 1) {\r\n\t                throw new Error(\"appendArc: path must already contain a point (the endpoint of the path is used as the starting point for the arc)\");\r\n\t            }\r\n\t            var resolution = CSG.parseOptionAsInt(options, \"resolution\", CSG.defaultResolution2D);\r\n\t            if (resolution < 4) resolution = 4;\r\n\t            var xradius, yradius;\r\n\t            if (('xradius' in options) || ('yradius' in options)) {\r\n\t                if ('radius' in options) {\r\n\t                    throw new Error(\"Should either give an xradius and yradius parameter, or a radius parameter\");\r\n\t                }\r\n\t                xradius = CSG.parseOptionAsFloat(options, \"xradius\", 0);\r\n\t                yradius = CSG.parseOptionAsFloat(options, \"yradius\", 0);\r\n\t            } else {\r\n\t                xradius = CSG.parseOptionAsFloat(options, \"radius\", 0);\r\n\t                yradius = xradius;\r\n\t            }\r\n\t            var xaxisrotation = CSG.parseOptionAsFloat(options, \"xaxisrotation\", 0);\r\n\t            var clockwise = CSG.parseOptionAsBool(options, \"clockwise\", false);\r\n\t            var largearc = CSG.parseOptionAsBool(options, \"large\", false);\r\n\t            var startpoint = this.points[this.points.length - 1];\r\n\t            endpoint = new CSG.Vector2D(endpoint);\r\n\t\r\n\t            var sweep_flag = !clockwise;\r\n\t            var newpoints = [];\r\n\t            if ((xradius == 0) || (yradius == 0)) {\r\n\t                // http://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes:\r\n\t                // If rx = 0 or ry = 0, then treat this as a straight line from (x1, y1) to (x2, y2) and stop\r\n\t                newpoints.push(endpoint);\r\n\t            } else {\r\n\t                xradius = Math.abs(xradius);\r\n\t                yradius = Math.abs(yradius);\r\n\t\r\n\t                // see http://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes :\r\n\t                var phi = xaxisrotation * Math.PI / 180.0;\r\n\t                var cosphi = Math.cos(phi);\r\n\t                var sinphi = Math.sin(phi);\r\n\t                var minushalfdistance = startpoint.minus(endpoint).times(0.5);\r\n\t                // F.6.5.1:\r\n\t                var start_translated = new CSG.Vector2D(cosphi * minushalfdistance.x + sinphi * minushalfdistance.y, -sinphi * minushalfdistance.x + cosphi * minushalfdistance.y);\r\n\t                // F.6.6.2:\r\n\t                var biglambda = start_translated.x * start_translated.x / (xradius * xradius) + start_translated.y * start_translated.y / (yradius * yradius);\r\n\t                if (biglambda > 1) {\r\n\t                    // F.6.6.3:\r\n\t                    var sqrtbiglambda = Math.sqrt(biglambda);\r\n\t                    xradius *= sqrtbiglambda;\r\n\t                    yradius *= sqrtbiglambda;\r\n\t                }\r\n\t                // F.6.5.2:\r\n\t                var multiplier1 = Math.sqrt((xradius * xradius * yradius * yradius - xradius * xradius * start_translated.y * start_translated.y - yradius * yradius * start_translated.x * start_translated.x) / (xradius * xradius * start_translated.y * start_translated.y + yradius * yradius * start_translated.x * start_translated.x));\r\n\t                if (sweep_flag == largearc) multiplier1 = -multiplier1;\r\n\t                var center_translated = new CSG.Vector2D(xradius * start_translated.y / yradius, -yradius * start_translated.x / xradius).times(multiplier1);\r\n\t                // F.6.5.3:\r\n\t                var center = new CSG.Vector2D(cosphi * center_translated.x - sinphi * center_translated.y, sinphi * center_translated.x + cosphi * center_translated.y).plus((startpoint.plus(endpoint)).times(0.5));\r\n\t                // F.6.5.5:\r\n\t                var vec1 = new CSG.Vector2D((start_translated.x - center_translated.x) / xradius, (start_translated.y - center_translated.y) / yradius);\r\n\t                var vec2 = new CSG.Vector2D((-start_translated.x - center_translated.x) / xradius, (-start_translated.y - center_translated.y) / yradius);\r\n\t                var theta1 = vec1.angleRadians();\r\n\t                var theta2 = vec2.angleRadians();\r\n\t                var deltatheta = theta2 - theta1;\r\n\t                deltatheta = deltatheta % (2 * Math.PI);\r\n\t                if ((!sweep_flag) && (deltatheta > 0)) {\r\n\t                    deltatheta -= 2 * Math.PI;\r\n\t                } else if ((sweep_flag) && (deltatheta < 0)) {\r\n\t                    deltatheta += 2 * Math.PI;\r\n\t                }\r\n\t\r\n\t                // Ok, we have the center point and angle range (from theta1, deltatheta radians) so we can create the ellipse\r\n\t                var numsteps = Math.ceil(Math.abs(deltatheta) / (2 * Math.PI) * resolution) + 1;\r\n\t                if (numsteps < 1) numsteps = 1;\r\n\t                for (var step = 1; step <= numsteps; step++) {\r\n\t                    var theta = theta1 + step / numsteps * deltatheta;\r\n\t                    var costheta = Math.cos(theta);\r\n\t                    var sintheta = Math.sin(theta);\r\n\t                    // F.6.3.1:\r\n\t                    var point = new CSG.Vector2D(cosphi * xradius * costheta - sinphi * yradius * sintheta, sinphi * xradius * costheta + cosphi * yradius * sintheta).plus(center);\r\n\t                    newpoints.push(point);\r\n\t                }\r\n\t            }\r\n\t            newpoints = this.points.concat(newpoints);\r\n\t            var result = new CSG.Path2D(newpoints);\r\n\t            return result;\r\n\t        },\r\n\t    };\r\n\t\r\n\t    // Add several convenience methods to the classes that support a transform() method:\r\n\t    CSG.addTransformationMethodsToPrototype = function(prot) {\r\n\t        prot.mirrored = function(plane) {\r\n\t            return this.transform(CSG.Matrix4x4.mirroring(plane));\r\n\t        };\r\n\t\r\n\t        prot.mirroredX = function() {\r\n\t            var plane = new CSG.Plane(CSG.Vector3D.Create(1, 0, 0), 0);\r\n\t            return this.mirrored(plane);\r\n\t        };\r\n\t\r\n\t        prot.mirroredY = function() {\r\n\t            var plane = new CSG.Plane(CSG.Vector3D.Create(0, 1, 0), 0);\r\n\t            return this.mirrored(plane);\r\n\t        };\r\n\t\r\n\t        prot.mirroredZ = function() {\r\n\t            var plane = new CSG.Plane(CSG.Vector3D.Create(0, 0, 1), 0);\r\n\t            return this.mirrored(plane);\r\n\t        };\r\n\t\r\n\t        prot.translate = function(v) {\r\n\t            return this.transform(CSG.Matrix4x4.translation(v));\r\n\t        };\r\n\t\r\n\t        prot.scale = function(f) {\r\n\t            return this.transform(CSG.Matrix4x4.scaling(f));\r\n\t        };\r\n\t\r\n\t        prot.rotateX = function(deg) {\r\n\t            return this.transform(CSG.Matrix4x4.rotationX(deg));\r\n\t        };\r\n\t\r\n\t        prot.rotateY = function(deg) {\r\n\t            return this.transform(CSG.Matrix4x4.rotationY(deg));\r\n\t        };\r\n\t\r\n\t        prot.rotateZ = function(deg) {\r\n\t            return this.transform(CSG.Matrix4x4.rotationZ(deg));\r\n\t        };\r\n\t\r\n\t        prot.rotate = function(rotationCenter, rotationAxis, degrees) {\r\n\t            return this.transform(CSG.Matrix4x4.rotation(rotationCenter, rotationAxis, degrees));\r\n\t        };\r\n\t\r\n\t        prot.rotateEulerAngles = function(alpha, beta, gamma, position) {\r\n\t            position = position || [0,0,0];\r\n\t\r\n\t            var Rz1 = CSG.Matrix4x4.rotationZ(alpha);\r\n\t            var Rx  = CSG.Matrix4x4.rotationX(beta);\r\n\t            var Rz2 = CSG.Matrix4x4.rotationZ(gamma);\r\n\t            var T   = CSG.Matrix4x4.translation(new CSG.Vector3D(position));\r\n\t\r\n\t            return this.transform(Rz2.multiply(Rx).multiply(Rz1).multiply(T));\r\n\t        };\r\n\t    };\r\n\t\r\n\t    // TODO: consider generalization and adding to addTransformationMethodsToPrototype\r\n\t    CSG.addCenteringToPrototype = function(prot, axes) {\r\n\t        prot.center = function(cAxes) {\r\n\t            cAxes = Array.prototype.map.call(arguments, function(a) {\r\n\t                return a.toLowerCase();\r\n\t            });\r\n\t            // no args: center on all axes\r\n\t            if (!cAxes.length) {\r\n\t                cAxes = axes.slice();\r\n\t            }\r\n\t            var b = this.getBounds();\r\n\t            return this.translate(axes.map(function(a) {\r\n\t                return cAxes.indexOf(a) > -1 ?\r\n\t                    -(b[0][a] + b[1][a])/2 : 0;\r\n\t            }));\r\n\t        };\r\n\t    };\r\n\t\r\n\t    //////////////////\r\n\t    // CAG: solid area geometry: like CSG but 2D\r\n\t    // Each area consists of a number of sides\r\n\t    // Each side is a line between 2 points\r\n\t    var CAG = function() {\r\n\t        this.sides = [];\r\n\t    };\r\n\t\r\n\t    // Construct a CAG from a list of `CAG.Side` instances.\r\n\t    CAG.fromSides = function(sides) {\r\n\t        var cag = new CAG();\r\n\t        cag.sides = sides;\r\n\t        return cag;\r\n\t    };\r\n\t\r\n\t    // Construct a CAG from a list of points (a polygon)\r\n\t    // Rotation direction of the points is not relevant. Points can be a convex or concave polygon.\r\n\t    // Polygon must not self intersect\r\n\t    CAG.fromPoints = function(points) {\r\n\t        var numpoints = points.length;\r\n\t        if (numpoints < 3) throw new Error(\"CAG shape needs at least 3 points\");\r\n\t        var sides = [];\r\n\t        var prevpoint = new CSG.Vector2D(points[numpoints - 1]);\r\n\t        var prevvertex = new CAG.Vertex(prevpoint);\r\n\t        points.map(function(p) {\r\n\t            var point = new CSG.Vector2D(p);\r\n\t            var vertex = new CAG.Vertex(point);\r\n\t            var side = new CAG.Side(prevvertex, vertex);\r\n\t            sides.push(side);\r\n\t            prevvertex = vertex;\r\n\t        });\r\n\t        var result = CAG.fromSides(sides);\r\n\t        if (result.isSelfIntersecting()) {\r\n\t            throw new Error(\"Polygon is self intersecting!\");\r\n\t        }\r\n\t        var area = result.area();\r\n\t        if (Math.abs(area) < 1e-5) {\r\n\t            throw new Error(\"Degenerate polygon!\");\r\n\t        }\r\n\t        if (area < 0) {\r\n\t            result = result.flipped();\r\n\t        }\r\n\t        result = result.canonicalized();\r\n\t        return result;\r\n\t    };\r\n\t\r\n\t    // Like CAG.fromPoints but does not check if it's a valid polygon.\r\n\t    // Points should rotate counter clockwise\r\n\t    CAG.fromPointsNoCheck = function(points) {\r\n\t        var sides = [];\r\n\t        var prevpoint = new CSG.Vector2D(points[points.length - 1]);\r\n\t        var prevvertex = new CAG.Vertex(prevpoint);\r\n\t        points.map(function(p) {\r\n\t            var point = new CSG.Vector2D(p);\r\n\t            var vertex = new CAG.Vertex(point);\r\n\t            var side = new CAG.Side(prevvertex, vertex);\r\n\t            sides.push(side);\r\n\t            prevvertex = vertex;\r\n\t        });\r\n\t        return CAG.fromSides(sides);\r\n\t    };\r\n\t\r\n\t    // Converts a CSG to a CAG. The CSG must consist of polygons with only z coordinates +1 and -1\r\n\t    // as constructed by CAG._toCSGWall(-1, 1). This is so we can use the 3D union(), intersect() etc\r\n\t    CAG.fromFakeCSG = function(csg) {\r\n\t        var sides = csg.polygons.map(function(p) {\r\n\t            return CAG.Side._fromFakePolygon(p);\r\n\t            })\r\n\t            .filter(function(s) {\r\n\t                return s !== null;\r\n\t        });\r\n\t        return CAG.fromSides(sides);\r\n\t    };\r\n\t\r\n\t    // see if the line between p0start and p0end intersects with the line between p1start and p1end\r\n\t    // returns true if the lines strictly intersect, the end points are not counted!\r\n\t    CAG.linesIntersect = function(p0start, p0end, p1start, p1end) {\r\n\t        if (p0end.equals(p1start) || p1end.equals(p0start)) {\r\n\t            var d = p1end.minus(p1start).unit().plus(p0end.minus(p0start).unit()).length();\r\n\t            if (d < 1e-5) {\r\n\t                return true;\r\n\t            }\r\n\t        } else {\r\n\t            var d0 = p0end.minus(p0start);\r\n\t            var d1 = p1end.minus(p1start);\r\n\t            if (Math.abs(d0.cross(d1)) < 1e-9) return false; // lines are parallel\r\n\t            var alphas = CSG.solve2Linear(-d0.x, d1.x, -d0.y, d1.y, p0start.x - p1start.x, p0start.y - p1start.y);\r\n\t            if ((alphas[0] > 1e-6) && (alphas[0] < 0.999999) && (alphas[1] > 1e-5) && (alphas[1] < 0.999999)) return true;\r\n\t            //    if( (alphas[0] >= 0) && (alphas[0] <= 1) && (alphas[1] >= 0) && (alphas[1] <= 1) ) return true;\r\n\t        }\r\n\t        return false;\r\n\t    };\r\n\t\r\n\t    /* Construct a circle\r\n\t    options:\r\n\t      center: a 2D center point\r\n\t      radius: a scalar\r\n\t      resolution: number of sides per 360 degree rotation\r\n\t    returns a CAG object\r\n\t    */\r\n\t    CAG.circle = function(options) {\r\n\t        options = options || {};\r\n\t        var center = CSG.parseOptionAs2DVector(options, \"center\", [0, 0]);\r\n\t        var radius = CSG.parseOptionAsFloat(options, \"radius\", 1);\r\n\t        var resolution = CSG.parseOptionAsInt(options, \"resolution\", CSG.defaultResolution2D);\r\n\t        var sides = [];\r\n\t        var prevvertex;\r\n\t        for (var i = 0; i <= resolution; i++) {\r\n\t            var radians = 2 * Math.PI * i / resolution;\r\n\t            var point = CSG.Vector2D.fromAngleRadians(radians).times(radius).plus(center);\r\n\t            var vertex = new CAG.Vertex(point);\r\n\t            if (i > 0) {\r\n\t                sides.push(new CAG.Side(prevvertex, vertex));\r\n\t            }\r\n\t            prevvertex = vertex;\r\n\t        }\r\n\t        return CAG.fromSides(sides);\r\n\t    };\r\n\t\r\n\t    /* Construct a rectangle\r\n\t    options:\r\n\t      center: a 2D center point\r\n\t      radius: a 2D vector with width and height\r\n\t      returns a CAG object\r\n\t    */\r\n\t    CAG.rectangle = function(options) {\r\n\t        options = options || {};\r\n\t        var c, r;\r\n\t        if (('corner1' in options) || ('corner2' in options)) {\r\n\t            if (('center' in options) || ('radius' in options)) {\r\n\t                throw new Error(\"rectangle: should either give a radius and center parameter, or a corner1 and corner2 parameter\")\r\n\t            }\r\n\t            corner1 = CSG.parseOptionAs2DVector(options, \"corner1\", [0, 0]);\r\n\t            corner2 = CSG.parseOptionAs2DVector(options, \"corner2\", [1, 1]);\r\n\t            c = corner1.plus(corner2).times(0.5);\r\n\t            r = corner2.minus(corner1).times(0.5);\r\n\t        } else {\r\n\t            c = CSG.parseOptionAs2DVector(options, \"center\", [0, 0]);\r\n\t            r = CSG.parseOptionAs2DVector(options, \"radius\", [1, 1]);\r\n\t        }\r\n\t        r = r.abs(); // negative radii make no sense\r\n\t        var rswap = new CSG.Vector2D(r.x, -r.y);\r\n\t        var points = [\r\n\t            c.plus(r), c.plus(rswap), c.minus(r), c.minus(rswap)\r\n\t        ];\r\n\t        return CAG.fromPoints(points);\r\n\t    };\r\n\t\r\n\t    //     var r = CSG.roundedRectangle({\r\n\t    //       center: [0, 0],\r\n\t    //       radius: [2, 1],\r\n\t    //       roundradius: 0.2,\r\n\t    //       resolution: 8,\r\n\t    //     });\r\n\t    CAG.roundedRectangle = function(options) {\r\n\t        options = options || {};\r\n\t        var center, radius;\r\n\t        if (('corner1' in options) || ('corner2' in options)) {\r\n\t            if (('center' in options) || ('radius' in options)) {\r\n\t                throw new Error(\"roundedRectangle: should either give a radius and center parameter, or a corner1 and corner2 parameter\")\r\n\t            }\r\n\t            corner1 = CSG.parseOptionAs2DVector(options, \"corner1\", [0, 0]);\r\n\t            corner2 = CSG.parseOptionAs2DVector(options, \"corner2\", [1, 1]);\r\n\t            center = corner1.plus(corner2).times(0.5);\r\n\t            radius = corner2.minus(corner1).times(0.5);\r\n\t        } else {\r\n\t            center = CSG.parseOptionAs2DVector(options, \"center\", [0, 0]);\r\n\t            radius = CSG.parseOptionAs2DVector(options, \"radius\", [1, 1]);\r\n\t        }\r\n\t        radius = radius.abs(); // negative radii make no sense\r\n\t        var roundradius = CSG.parseOptionAsFloat(options, \"roundradius\", 0.2);\r\n\t        var resolution = CSG.parseOptionAsInt(options, \"resolution\", CSG.defaultResolution2D);\r\n\t        var maxroundradius = Math.min(radius.x, radius.y);\r\n\t        maxroundradius -= 0.1;\r\n\t        roundradius = Math.min(roundradius, maxroundradius);\r\n\t        roundradius = Math.max(0, roundradius);\r\n\t        radius = new CSG.Vector2D(radius.x - roundradius, radius.y - roundradius);\r\n\t        var rect = CAG.rectangle({\r\n\t            center: center,\r\n\t            radius: radius\r\n\t        });\r\n\t        if (roundradius > 0) {\r\n\t            rect = rect.expand(roundradius, resolution);\r\n\t        }\r\n\t        return rect;\r\n\t    };\r\n\t\r\n\t    // Reconstruct a CAG from the output of toCompactBinary()\r\n\t    CAG.fromCompactBinary = function(bin) {\r\n\t        if (bin['class'] != \"CAG\") throw new Error(\"Not a CAG\");\r\n\t        var vertices = [];\r\n\t        var vertexData = bin.vertexData;\r\n\t        var numvertices = vertexData.length / 2;\r\n\t        var arrayindex = 0;\r\n\t        for (var vertexindex = 0; vertexindex < numvertices; vertexindex++) {\r\n\t            var x = vertexData[arrayindex++];\r\n\t            var y = vertexData[arrayindex++];\r\n\t            var pos = new CSG.Vector2D(x, y);\r\n\t            var vertex = new CAG.Vertex(pos);\r\n\t            vertices.push(vertex);\r\n\t        }\r\n\t\r\n\t        var sides = [];\r\n\t        var numsides = bin.sideVertexIndices.length / 2;\r\n\t        arrayindex = 0;\r\n\t        for (var sideindex = 0; sideindex < numsides; sideindex++) {\r\n\t            var vertexindex0 = bin.sideVertexIndices[arrayindex++];\r\n\t            var vertexindex1 = bin.sideVertexIndices[arrayindex++];\r\n\t            var side = new CAG.Side(vertices[vertexindex0], vertices[vertexindex1]);\r\n\t            sides.push(side);\r\n\t        }\r\n\t        var cag = CAG.fromSides(sides);\r\n\t        cag.isCanonicalized = true;\r\n\t        return cag;\r\n\t    };\r\n\t\r\n\t    function fnSortByIndex(a, b) {\r\n\t        return a.index - b.index;\r\n\t    }\r\n\t\r\n\t    CAG.prototype = {\r\n\t        toString: function() {\r\n\t            var result = \"CAG (\" + this.sides.length + \" sides):\\n\";\r\n\t            this.sides.map(function(side) {\r\n\t                result += \"  \" + side.toString() + \"\\n\";\r\n\t            });\r\n\t            return result;\r\n\t        },\r\n\t\r\n\t        _toCSGWall: function(z0, z1) {\r\n\t            var polygons = this.sides.map(function(side) {\r\n\t                return side.toPolygon3D(z0, z1);\r\n\t            });\r\n\t            return CSG.fromPolygons(polygons);\r\n\t        },\r\n\t\r\n\t        _toVector3DPairs: function(m) {\r\n\t            // transform m\r\n\t            var pairs = this.sides.map(function(side) {\r\n\t                var p0 = side.vertex0.pos, p1 = side.vertex1.pos;\r\n\t                return [CSG.Vector3D.Create(p0.x, p0.y, 0),\r\n\t                    CSG.Vector3D.Create(p1.x, p1.y, 0)];\r\n\t            });\r\n\t            if (typeof m != 'undefined') {\r\n\t                pairs = pairs.map(function(pair) {\r\n\t                    return pair.map(function(v) {\r\n\t                        return v.transform(m);\r\n\t                    });\r\n\t                });\r\n\t            }\r\n\t            return pairs;\r\n\t        },\r\n\t\r\n\t        /*\r\n\t         * transform a cag into the polygons of a corresponding 3d plane, positioned per options\r\n\t         * Accepts a connector for plane positioning, or optionally\r\n\t         * single translation, axisVector, normalVector arguments\r\n\t         * (toConnector has precedence over single arguments if provided)\r\n\t         */\r\n\t        _toPlanePolygons: function(options) {\r\n\t            var flipped = options.flipped || false;\r\n\t            // reference connector for transformation\r\n\t            var origin = [0, 0, 0], defaultAxis = [0, 0, 1], defaultNormal = [0, 1, 0];\r\n\t            var thisConnector = new CSG.Connector(origin, defaultAxis, defaultNormal);\r\n\t            // translated connector per options\r\n\t            var translation = options.translation || origin;\r\n\t            var axisVector = options.axisVector || defaultAxis;\r\n\t            var normalVector = options.normalVector || defaultNormal;\r\n\t            // will override above if options has toConnector\r\n\t            var toConnector = options.toConnector ||\r\n\t                new CSG.Connector(translation, axisVector, normalVector);\r\n\t            // resulting transform\r\n\t            var m = thisConnector.getTransformationTo(toConnector, false, 0);\r\n\t            // create plane as a (partial non-closed) CSG in XY plane\r\n\t            var bounds = this.getBounds();\r\n\t            bounds[0] = bounds[0].minus(new CSG.Vector2D(1, 1));\r\n\t            bounds[1] = bounds[1].plus(new CSG.Vector2D(1, 1));\r\n\t            var csgshell = this._toCSGWall(-1, 1);\r\n\t            var csgplane = CSG.fromPolygons([new CSG.Polygon([\r\n\t                new CSG.Vertex(new CSG.Vector3D(bounds[0].x, bounds[0].y, 0)),\r\n\t                new CSG.Vertex(new CSG.Vector3D(bounds[1].x, bounds[0].y, 0)),\r\n\t                new CSG.Vertex(new CSG.Vector3D(bounds[1].x, bounds[1].y, 0)),\r\n\t                new CSG.Vertex(new CSG.Vector3D(bounds[0].x, bounds[1].y, 0))\r\n\t            ])]);\r\n\t            if (flipped) {\r\n\t                csgplane = csgplane.invert();\r\n\t            }\r\n\t            // intersectSub -> prevent premature retesselate/canonicalize\r\n\t            csgplane = csgplane.intersectSub(csgshell);\r\n\t            // only keep the polygons in the z plane:\r\n\t            var polys = csgplane.polygons.filter(function(polygon) {\r\n\t                return Math.abs(polygon.plane.normal.z) > 0.99;\r\n\t            });\r\n\t            // finally, position the plane per passed transformations\r\n\t            return polys.map(function(poly) {\r\n\t                return poly.transform(m);\r\n\t            });\r\n\t        },\r\n\t\r\n\t\r\n\t        /*\r\n\t         * given 2 connectors, this returns all polygons of a \"wall\" between 2\r\n\t         * copies of this cag, positioned in 3d space as \"bottom\" and\r\n\t         * \"top\" plane per connectors toConnector1, and toConnector2, respectively \r\n\t         */\r\n\t        _toWallPolygons: function(options) {\r\n\t            // normals are going to be correct as long as toConn2.point - toConn1.point\r\n\t            // points into cag normal direction (check in caller)\r\n\t            // arguments: options.toConnector1, options.toConnector2, options.cag\r\n\t            //     walls go from toConnector1 to toConnector2\r\n\t            //     optionally, target cag to point to - cag needs to have same number of sides as this!\r\n\t            var origin = [0, 0, 0], defaultAxis = [0, 0, 1], defaultNormal = [0, 1, 0];\r\n\t            var thisConnector = new CSG.Connector(origin, defaultAxis, defaultNormal);\r\n\t            // arguments:\r\n\t            var toConnector1 = options.toConnector1;\r\n\t            // var toConnector2 = new CSG.Connector([0, 0, -30], defaultAxis, defaultNormal);\r\n\t            var toConnector2 = options.toConnector2;\r\n\t            if (!(toConnector1 instanceof CSG.Connector && toConnector2 instanceof CSG.Connector)) {\r\n\t                throw('could not parse CSG.Connector arguments toConnector1 or toConnector2');\r\n\t            }\r\n\t            if (options.cag) {\r\n\t                if (options.cag.sides.length != this.sides.length) {\r\n\t                    throw('target cag needs same sides count as start cag');\r\n\t                }\r\n\t            }\r\n\t            // target cag is same as this unless specified\r\n\t            var toCag = options.cag || this;\r\n\t            var m1 = thisConnector.getTransformationTo(toConnector1, false, 0);\r\n\t            var m2 = thisConnector.getTransformationTo(toConnector2, false, 0);\r\n\t            var vps1 = this._toVector3DPairs(m1);\r\n\t            var vps2 = toCag._toVector3DPairs(m2);\r\n\t\r\n\t            var polygons = [];\r\n\t            vps1.forEach(function(vp1, i) {\r\n\t                polygons.push(new CSG.Polygon([\r\n\t                    new CSG.Vertex(vps2[i][1]), new CSG.Vertex(vps2[i][0]), new CSG.Vertex(vp1[0])]));\r\n\t                polygons.push(new CSG.Polygon([\r\n\t                    new CSG.Vertex(vps2[i][1]), new CSG.Vertex(vp1[0]), new CSG.Vertex(vp1[1])]));\r\n\t            });\r\n\t            return polygons;\r\n\t        },\r\n\t\r\n\t        union: function(cag) {\r\n\t            var cags;\r\n\t            if (cag instanceof Array) {\r\n\t                cags = cag;\r\n\t            } else {\r\n\t                cags = [cag];\r\n\t            }\r\n\t            var r = this._toCSGWall(-1, 1);\r\n\t            var r = r.union(\r\n\t                cags.map(function(cag) {\r\n\t                    return cag._toCSGWall(-1, 1).reTesselated();\r\n\t                }), false, false)\r\n\t            return CAG.fromFakeCSG(r).canonicalized();\r\n\t        },\r\n\t\r\n\t        subtract: function(cag) {\r\n\t            var cags;\r\n\t            if (cag instanceof Array) {\r\n\t                cags = cag;\r\n\t            } else {\r\n\t                cags = [cag];\r\n\t            }\r\n\t            var r = this._toCSGWall(-1, 1);\r\n\t            cags.map(function(cag) {\r\n\t                r = r.subtractSub(cag._toCSGWall(-1, 1), false, false);\r\n\t            });\r\n\t            r = r.reTesselated();\r\n\t            r = r.canonicalized();\r\n\t            r = CAG.fromFakeCSG(r);\r\n\t            r = r.canonicalized();\r\n\t            return r;\r\n\t        },\r\n\t\r\n\t        intersect: function(cag) {\r\n\t            var cags;\r\n\t            if (cag instanceof Array) {\r\n\t                cags = cag;\r\n\t            } else {\r\n\t                cags = [cag];\r\n\t            }\r\n\t            var r = this._toCSGWall(-1, 1);\r\n\t            cags.map(function(cag) {\r\n\t                r = r.intersectSub(cag._toCSGWall(-1, 1), false, false);\r\n\t            });\r\n\t            r = r.reTesselated();\r\n\t            r = r.canonicalized();\r\n\t            r = CAG.fromFakeCSG(r);\r\n\t            r = r.canonicalized();\r\n\t            return r;\r\n\t        },\r\n\t\r\n\t        transform: function(matrix4x4) {\r\n\t            var ismirror = matrix4x4.isMirroring();\r\n\t            var newsides = this.sides.map(function(side) {\r\n\t                return side.transform(matrix4x4);\r\n\t            });\r\n\t            var result = CAG.fromSides(newsides);\r\n\t            if (ismirror) {\r\n\t                result = result.flipped();\r\n\t            }\r\n\t            return result;\r\n\t        },\r\n\t\r\n\t        // see http://local.wasp.uwa.edu.au/~pbourke/geometry/polyarea/ :\r\n\t        // Area of the polygon. For a counter clockwise rotating polygon the area is positive, otherwise negative\r\n\t        // Note(bebbi): this looks wrong. See polygon getArea()\r\n\t        area: function() {\r\n\t            var polygonArea = 0;\r\n\t            this.sides.map(function(side) {\r\n\t                polygonArea += side.vertex0.pos.cross(side.vertex1.pos);\r\n\t            });\r\n\t            polygonArea *= 0.5;\r\n\t            return polygonArea;\r\n\t        },\r\n\t\r\n\t        flipped: function() {\r\n\t            var newsides = this.sides.map(function(side) {\r\n\t                return side.flipped();\r\n\t            });\r\n\t            newsides.reverse();\r\n\t            return CAG.fromSides(newsides);\r\n\t        },\r\n\t\r\n\t        getBounds: function() {\r\n\t            var minpoint;\r\n\t            if (this.sides.length === 0) {\r\n\t                minpoint = new CSG.Vector2D(0, 0);\r\n\t            } else {\r\n\t                minpoint = this.sides[0].vertex0.pos;\r\n\t            }\r\n\t            var maxpoint = minpoint;\r\n\t            this.sides.map(function(side) {\r\n\t                minpoint = minpoint.min(side.vertex0.pos);\r\n\t                minpoint = minpoint.min(side.vertex1.pos);\r\n\t                maxpoint = maxpoint.max(side.vertex0.pos);\r\n\t                maxpoint = maxpoint.max(side.vertex1.pos);\r\n\t            });\r\n\t            return [minpoint, maxpoint];\r\n\t        },\r\n\t\r\n\t        isSelfIntersecting: function(debug) {\r\n\t            var numsides = this.sides.length;\r\n\t            for (var i = 0; i < numsides; i++) {\r\n\t                var side0 = this.sides[i];\r\n\t                for (var ii = i + 1; ii < numsides; ii++) {\r\n\t                    var side1 = this.sides[ii];\r\n\t                    if (CAG.linesIntersect(side0.vertex0.pos, side0.vertex1.pos, side1.vertex0.pos, side1.vertex1.pos)) {\r\n\t                        if (debug) { OpenJsCad.log(side0); OpenJsCad.log(side1);}\r\n\t                        return true;\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            return false;\r\n\t        },\r\n\t\r\n\t        expandedShell: function(radius, resolution) {\r\n\t            resolution = resolution || 8;\r\n\t            if (resolution < 4) resolution = 4;\r\n\t            var cags = [];\r\n\t            var pointmap = {};\r\n\t            var cag = this.canonicalized();\r\n\t            cag.sides.map(function(side) {\r\n\t                var d = side.vertex1.pos.minus(side.vertex0.pos);\r\n\t                var dl = d.length();\r\n\t                if (dl > 1e-5) {\r\n\t                    d = d.times(1.0 / dl);\r\n\t                    var normal = d.normal().times(radius);\r\n\t                    var shellpoints = [\r\n\t                        side.vertex1.pos.plus(normal),\r\n\t                        side.vertex1.pos.minus(normal),\r\n\t                        side.vertex0.pos.minus(normal),\r\n\t                        side.vertex0.pos.plus(normal)\r\n\t                    ];\r\n\t                    //      var newcag = CAG.fromPointsNoCheck(shellpoints);\r\n\t                    var newcag = CAG.fromPoints(shellpoints);\r\n\t                    cags.push(newcag);\r\n\t                    for (var step = 0; step < 2; step++) {\r\n\t                        var p1 = (step === 0) ? side.vertex0.pos : side.vertex1.pos;\r\n\t                        var p2 = (step === 0) ? side.vertex1.pos : side.vertex0.pos;\r\n\t                        var tag = p1.x + \" \" + p1.y;\r\n\t                        if (!(tag in pointmap)) {\r\n\t                            pointmap[tag] = [];\r\n\t                        }\r\n\t                        pointmap[tag].push({\r\n\t                            \"p1\": p1,\r\n\t                            \"p2\": p2\r\n\t                        });\r\n\t                    }\r\n\t                }\r\n\t            });\r\n\t            for (var tag in pointmap) {\r\n\t                var m = pointmap[tag];\r\n\t                var angle1, angle2;\r\n\t                var pcenter = m[0].p1;\r\n\t                if (m.length == 2) {\r\n\t                    var end1 = m[0].p2;\r\n\t                    var end2 = m[1].p2;\r\n\t                    angle1 = end1.minus(pcenter).angleDegrees();\r\n\t                    angle2 = end2.minus(pcenter).angleDegrees();\r\n\t                    if (angle2 < angle1) angle2 += 360;\r\n\t                    if (angle2 >= (angle1 + 360)) angle2 -= 360;\r\n\t                    if (angle2 < angle1 + 180) {\r\n\t                        var t = angle2;\r\n\t                        angle2 = angle1 + 360;\r\n\t                        angle1 = t;\r\n\t                    }\r\n\t                    angle1 += 90;\r\n\t                    angle2 -= 90;\r\n\t                } else {\r\n\t                    angle1 = 0;\r\n\t                    angle2 = 360;\r\n\t                }\r\n\t                var fullcircle = (angle2 > angle1 + 359.999);\r\n\t                if (fullcircle) {\r\n\t                    angle1 = 0;\r\n\t                    angle2 = 360;\r\n\t                }\r\n\t                if (angle2 > (angle1 + 1e-5)) {\r\n\t                    var points = [];\r\n\t                    if (!fullcircle) {\r\n\t                        points.push(pcenter);\r\n\t                    }\r\n\t                    var numsteps = Math.round(resolution * (angle2 - angle1) / 360);\r\n\t                    if (numsteps < 1) numsteps = 1;\r\n\t                    for (var step = 0; step <= numsteps; step++) {\r\n\t                        var angle = angle1 + step / numsteps * (angle2 - angle1);\r\n\t                        if (step == numsteps) angle = angle2; // prevent rounding errors\r\n\t                        var point = pcenter.plus(CSG.Vector2D.fromAngleDegrees(angle).times(radius));\r\n\t                        if ((!fullcircle) || (step > 0)) {\r\n\t                            points.push(point);\r\n\t                        }\r\n\t                    }\r\n\t                    var newcag = CAG.fromPointsNoCheck(points);\r\n\t                    cags.push(newcag);\r\n\t                }\r\n\t            }\r\n\t            var result = new CAG();\r\n\t            result = result.union(cags);\r\n\t            return result;\r\n\t        },\r\n\t\r\n\t        expand: function(radius, resolution) {\r\n\t            var result = this.union(this.expandedShell(radius, resolution));\r\n\t            return result;\r\n\t        },\r\n\t\r\n\t        contract: function(radius, resolution) {\r\n\t            var result = this.subtract(this.expandedShell(radius, resolution));\r\n\t            return result;\r\n\t        },\r\n\t\r\n\t        // extrude the CAG in a certain plane. \r\n\t        // Giving just a plane is not enough, multiple different extrusions in the same plane would be possible\r\n\t        // by rotating around the plane's origin. An additional right-hand vector should be specified as well,\r\n\t        // and this is exactly a CSG.OrthoNormalBasis.\r\n\t        // orthonormalbasis: characterizes the plane in which to extrude\r\n\t        // depth: thickness of the extruded shape. Extrusion is done from the plane towards above (unless \r\n\t        // symmetrical option is set, see below)\r\n\t        //\r\n\t        // options:\r\n\t        //   {symmetrical: true}  // extrude symmetrically in two directions about the plane\r\n\t        extrudeInOrthonormalBasis: function(orthonormalbasis, depth, options) {\r\n\t            // first extrude in the regular Z plane:\r\n\t            if (!(orthonormalbasis instanceof CSG.OrthoNormalBasis)) {\r\n\t                throw new Error(\"extrudeInPlane: the first parameter should be a CSG.OrthoNormalBasis\");\r\n\t            }\r\n\t            var extruded = this.extrude({\r\n\t                offset: [0, 0, depth]\r\n\t            });\r\n\t            if(CSG.parseOptionAsBool(options, \"symmetrical\", false))\r\n\t            {\r\n\t                extruded = extruded.translate([0,0,-depth/2]);\r\n\t            }\r\n\t            var matrix = orthonormalbasis.getInverseProjectionMatrix();\r\n\t            extruded = extruded.transform(matrix);\r\n\t            return extruded;\r\n\t        },\r\n\t\r\n\t        // Extrude in a standard cartesian plane, specified by two axis identifiers. Each identifier can be\r\n\t        // one of [\"X\",\"Y\",\"Z\",\"-X\",\"-Y\",\"-Z\"]\r\n\t        // The 2d x axis will map to the first given 3D axis, the 2d y axis will map to the second.\r\n\t        // See CSG.OrthoNormalBasis.GetCartesian for details.\r\n\t        extrudeInPlane: function(axis1, axis2, depth, options) {\r\n\t            return this.extrudeInOrthonormalBasis(CSG.OrthoNormalBasis.GetCartesian(axis1, axis2), depth, options);\r\n\t        },\r\n\t\r\n\t        // extruded=cag.extrude({offset: [0,0,10], twistangle: 360, twiststeps: 100});\r\n\t        // linear extrusion of 2D shape, with optional twist\r\n\t        // The 2d shape is placed in in z=0 plane and extruded into direction <offset> (a CSG.Vector3D)\r\n\t        // The final face is rotated <twistangle> degrees. Rotation is done around the origin of the 2d shape (i.e. x=0, y=0)\r\n\t        // twiststeps determines the resolution of the twist (should be >= 1)\r\n\t        // returns a CSG object\r\n\t        extrude: function(options) {\r\n\t            if (this.sides.length == 0) {\r\n\t                // empty!\r\n\t                return new CSG();\r\n\t            }\r\n\t            var offsetVector = CSG.parseOptionAs3DVector(options, \"offset\", [0, 0, 1]);\r\n\t            var twistangle = CSG.parseOptionAsFloat(options, \"twistangle\", 0);\r\n\t            var twiststeps = CSG.parseOptionAsInt(options, \"twiststeps\", CSG.defaultResolution3D);\r\n\t            if (offsetVector.z == 0) {\r\n\t                throw('offset cannot be orthogonal to Z axis');\r\n\t            }\r\n\t            if (twistangle == 0 || twiststeps < 1) {\r\n\t                twiststeps = 1;\r\n\t            }\r\n\t            var normalVector = CSG.Vector3D.Create(0, 1, 0);\r\n\t\r\n\t            var polygons = [];\r\n\t            // bottom and top\r\n\t            polygons = polygons.concat(this._toPlanePolygons({translation: [0, 0, 0],\r\n\t                normalVector: normalVector, flipped: !(offsetVector.z < 0)}));\r\n\t            polygons = polygons.concat(this._toPlanePolygons({translation: offsetVector,\r\n\t                normalVector: normalVector.rotateZ(twistangle), flipped: offsetVector.z < 0}));\r\n\t            // walls\r\n\t            for (var i = 0; i < twiststeps; i++) {\r\n\t                var c1 = new CSG.Connector(offsetVector.times(i / twiststeps), [0, 0, offsetVector.z],\r\n\t                    normalVector.rotateZ(i * twistangle/twiststeps));\r\n\t                var c2 = new CSG.Connector(offsetVector.times((i + 1) / twiststeps), [0, 0, offsetVector.z],\r\n\t                    normalVector.rotateZ((i + 1) * twistangle/twiststeps));\r\n\t                polygons = polygons.concat(this._toWallPolygons({toConnector1: c1, toConnector2: c2}));\r\n\t            }\r\n\t\r\n\t            return CSG.fromPolygons(polygons);\r\n\t        },\r\n\t\r\n\t        /*\r\n\t         * extrude CAG to 3d object by rotating the origin around the y axis\r\n\t         * (and turning everything into XY plane)\r\n\t         * arguments: options dict with angle and resolution, both optional\r\n\t         */\r\n\t        rotateExtrude: function(options) {\r\n\t            var alpha = CSG.parseOptionAsFloat(options, \"angle\", 360);\r\n\t            var resolution = CSG.parseOptionAsInt(options, \"resolution\", CSG.defaultResolution3D);\r\n\t\r\n\t            var EPS = 1e-5;\r\n\t\r\n\t            alpha = alpha > 360 ? alpha % 360 : alpha;\r\n\t            var origin = [0, 0, 0];\r\n\t            var axisV = CSG.Vector3D.Create(0, 1, 0);\r\n\t            var normalV = [0, 0, 1];\r\n\t            var polygons = [];\r\n\t            // planes only needed if alpha > 0\r\n\t            var connS = new CSG.Connector(origin, axisV, normalV);\r\n\t            if (alpha > 0 && alpha < 360) {\r\n\t                // we need to rotate negative to satisfy wall function condition of\r\n\t                // building in the direction of axis vector\r\n\t                var connE = new CSG.Connector(origin, axisV.rotateZ(-alpha), normalV);\r\n\t                polygons = polygons.concat(\r\n\t                    this._toPlanePolygons({toConnector: connS, flipped: true}));\r\n\t                polygons = polygons.concat(\r\n\t                    this._toPlanePolygons({toConnector: connE}));\r\n\t            }\r\n\t            var connT1 = connS, connT2;\r\n\t            var step = alpha/resolution;\r\n\t            for (var a = step; a <= alpha + EPS; a += step) {\r\n\t                connT2 = new CSG.Connector(origin, axisV.rotateZ(-a), normalV);\r\n\t                polygons = polygons.concat(this._toWallPolygons(\r\n\t                    {toConnector1: connT1, toConnector2: connT2}));\r\n\t                connT1 = connT2;\r\n\t            }\r\n\t            return CSG.fromPolygons(polygons).reTesselated();\r\n\t        },\r\n\t\r\n\t        // check if we are a valid CAG (for debugging)\r\n\t        // NOTE(bebbi) uneven side count doesn't work because rounding with EPS isn't taken into account\r\n\t        check: function() {\r\n\t            var EPS = 1e-5;\r\n\t            var errors = [];\r\n\t            if (this.isSelfIntersecting(true)) {\r\n\t                errors.push(\"Self intersects\");\r\n\t            }\r\n\t            var pointcount = {};\r\n\t            this.sides.map(function(side) {\r\n\t                function mappoint(p) {\r\n\t                    var tag = p.x + \" \" + p.y;\r\n\t                    if (!(tag in pointcount)) pointcount[tag] = 0;\r\n\t                    pointcount[tag] ++;\r\n\t                }\r\n\t                mappoint(side.vertex0.pos);\r\n\t                mappoint(side.vertex1.pos);\r\n\t            });\r\n\t            for (var tag in pointcount) {\r\n\t                var count = pointcount[tag];\r\n\t                if (count & 1) {\r\n\t                    errors.push(\"Uneven number of sides (\" + count + \") for point \" + tag);\r\n\t                }\r\n\t            }\r\n\t            var area = this.area();\r\n\t            if (area < EPS*EPS) {\r\n\t                errors.push(\"Area is \" + area);\r\n\t            }\r\n\t            if (errors.length > 0) {\r\n\t                var ertxt = \"\";\r\n\t                errors.map(function(err) {\r\n\t                    ertxt += err + \"\\n\";\r\n\t                });\r\n\t                throw new Error(ertxt);\r\n\t            }\r\n\t        },\r\n\t\r\n\t        canonicalized: function() {\r\n\t            if (this.isCanonicalized) {\r\n\t                return this;\r\n\t            } else {\r\n\t                var factory = new CAG.fuzzyCAGFactory();\r\n\t                var result = factory.getCAG(this);\r\n\t                result.isCanonicalized = true;\r\n\t                return result;\r\n\t            }\r\n\t        },\r\n\t\r\n\t        toCompactBinary: function() {\r\n\t            var cag = this.canonicalized();\r\n\t            var numsides = cag.sides.length;\r\n\t            var vertexmap = {};\r\n\t            var vertices = [];\r\n\t            var numvertices = 0;\r\n\t            var sideVertexIndices = new Uint32Array(2 * numsides);\r\n\t            var sidevertexindicesindex = 0;\r\n\t            cag.sides.map(function(side) {\r\n\t                [side.vertex0, side.vertex1].map(function(v) {\r\n\t                    var vertextag = v.getTag();\r\n\t                    var vertexindex;\r\n\t                    if (!(vertextag in vertexmap)) {\r\n\t                        vertexindex = numvertices++;\r\n\t                        vertexmap[vertextag] = vertexindex;\r\n\t                        vertices.push(v);\r\n\t                    } else {\r\n\t                        vertexindex = vertexmap[vertextag];\r\n\t                    }\r\n\t                    sideVertexIndices[sidevertexindicesindex++] = vertexindex;\r\n\t                });\r\n\t            });\r\n\t            var vertexData = new Float64Array(numvertices * 2);\r\n\t            var verticesArrayIndex = 0;\r\n\t            vertices.map(function(v) {\r\n\t                var pos = v.pos;\r\n\t                vertexData[verticesArrayIndex++] = pos._x;\r\n\t                vertexData[verticesArrayIndex++] = pos._y;\r\n\t            });\r\n\t            var result = {\r\n\t                'class': \"CAG\",\r\n\t                sideVertexIndices: sideVertexIndices,\r\n\t                vertexData: vertexData\r\n\t            };\r\n\t            return result;\r\n\t        },\r\n\t\r\n\t        getOutlinePaths: function() {\r\n\t            var cag = this.canonicalized();\r\n\t            var sideTagToSideMap = {};\r\n\t            var startVertexTagToSideTagMap = {};\r\n\t            cag.sides.map(function(side) {\r\n\t                var sidetag = side.getTag();\r\n\t                sideTagToSideMap[sidetag] = side;\r\n\t                var startvertextag = side.vertex0.getTag();\r\n\t                if (!(startvertextag in startVertexTagToSideTagMap)) {\r\n\t                    startVertexTagToSideTagMap[startvertextag] = [];\r\n\t                }\r\n\t                startVertexTagToSideTagMap[startvertextag].push(sidetag);\r\n\t            });\r\n\t            var paths = [];\r\n\t            while (true) {\r\n\t                var startsidetag = null;\r\n\t                for (var aVertexTag in startVertexTagToSideTagMap) {\r\n\t                    var sidesForThisVertex = startVertexTagToSideTagMap[aVertexTag];\r\n\t                    startsidetag = sidesForThisVertex[0];\r\n\t                    sidesForThisVertex.splice(0, 1);\r\n\t                    if (sidesForThisVertex.length === 0) {\r\n\t                        delete startVertexTagToSideTagMap[aVertexTag];\r\n\t                    }\r\n\t                    break;\r\n\t                }\r\n\t                if (startsidetag === null) break; // we've had all sides\r\n\t                var connectedVertexPoints = [];\r\n\t                var sidetag = startsidetag;\r\n\t                var thisside = sideTagToSideMap[sidetag];\r\n\t                var startvertextag = thisside.vertex0.getTag();\r\n\t                while (true) {\r\n\t                    connectedVertexPoints.push(thisside.vertex0.pos);\r\n\t                    var nextvertextag = thisside.vertex1.getTag();\r\n\t                    if (nextvertextag == startvertextag) break; // we've closed the polygon\r\n\t                    if (!(nextvertextag in startVertexTagToSideTagMap)) {\r\n\t                        throw new Error(\"Area is not closed!\");\r\n\t                    }\r\n\t                    var nextpossiblesidetags = startVertexTagToSideTagMap[nextvertextag];\r\n\t                    var nextsideindex = -1;\r\n\t                    if (nextpossiblesidetags.length == 1) {\r\n\t                        nextsideindex = 0;\r\n\t                    } else {\r\n\t                        // more than one side starting at the same vertex. This means we have\r\n\t                        // two shapes touching at the same corner\r\n\t                        var bestangle = null;\r\n\t                        var thisangle = thisside.direction().angleDegrees();\r\n\t                        for (var sideindex = 0; sideindex < nextpossiblesidetags.length; sideindex++) {\r\n\t                            var nextpossiblesidetag = nextpossiblesidetags[sideindex];\r\n\t                            var possibleside = sideTagToSideMap[nextpossiblesidetag];\r\n\t                            var angle = possibleside.direction().angleDegrees();\r\n\t                            var angledif = angle - thisangle;\r\n\t                            if (angledif < -180) angledif += 360;\r\n\t                            if (angledif >= 180) angledif -= 360;\r\n\t                            if ((nextsideindex < 0) || (angledif > bestangle)) {\r\n\t                                nextsideindex = sideindex;\r\n\t                                bestangle = angledif;\r\n\t                            }\r\n\t                        }\r\n\t                    }\r\n\t                    var nextsidetag = nextpossiblesidetags[nextsideindex];\r\n\t                    nextpossiblesidetags.splice(nextsideindex, 1);\r\n\t                    if (nextpossiblesidetags.length === 0) {\r\n\t                        delete startVertexTagToSideTagMap[nextvertextag];\r\n\t                    }\r\n\t                    thisside = sideTagToSideMap[nextsidetag];\r\n\t                } // inner loop\r\n\t                var path = new CSG.Path2D(connectedVertexPoints, true);\r\n\t                paths.push(path);\r\n\t            } // outer loop\r\n\t            return paths;\r\n\t        },\r\n\t\r\n\t        /*\r\n\t        cag = cag.overCutInsideCorners(cutterradius);\r\n\t\r\n\t        Using a CNC router it's impossible to cut out a true sharp inside corner. The inside corner\r\n\t        will be rounded due to the radius of the cutter. This function compensates for this by creating\r\n\t        an extra cutout at each inner corner so that the actual cut out shape will be at least as large\r\n\t        as needed.\r\n\t        */\r\n\t        overCutInsideCorners: function(cutterradius) {\r\n\t            var cag = this.canonicalized();\r\n\t            // for each vertex determine the 'incoming' side and 'outgoing' side:\r\n\t            var pointmap = {}; // tag => {pos: coord, from: [], to: []}\r\n\t            cag.sides.map(function(side) {\r\n\t                if (!(side.vertex0.getTag() in pointmap)) {\r\n\t                    pointmap[side.vertex0.getTag()] = {\r\n\t                        pos: side.vertex0.pos,\r\n\t                        from: [],\r\n\t                        to: []\r\n\t                    };\r\n\t                }\r\n\t                pointmap[side.vertex0.getTag()].to.push(side.vertex1.pos);\r\n\t                if (!(side.vertex1.getTag() in pointmap)) {\r\n\t                    pointmap[side.vertex1.getTag()] = {\r\n\t                        pos: side.vertex1.pos,\r\n\t                        from: [],\r\n\t                        to: []\r\n\t                    };\r\n\t                }\r\n\t                pointmap[side.vertex1.getTag()].from.push(side.vertex0.pos);\r\n\t            });\r\n\t            // overcut all sharp corners:\r\n\t            var cutouts = [];\r\n\t            for (var pointtag in pointmap) {\r\n\t                var pointobj = pointmap[pointtag];\r\n\t                if ((pointobj.from.length == 1) && (pointobj.to.length == 1)) {\r\n\t                    // ok, 1 incoming side and 1 outgoing side:\r\n\t                    var fromcoord = pointobj.from[0];\r\n\t                    var pointcoord = pointobj.pos;\r\n\t                    var tocoord = pointobj.to[0];\r\n\t                    var v1 = pointcoord.minus(fromcoord).unit();\r\n\t                    var v2 = tocoord.minus(pointcoord).unit();\r\n\t                    var crossproduct = v1.cross(v2);\r\n\t                    var isInnerCorner = (crossproduct < 0.001);\r\n\t                    if (isInnerCorner) {\r\n\t                        // yes it's a sharp corner:\r\n\t                        var alpha = v2.angleRadians() - v1.angleRadians() + Math.PI;\r\n\t                        if (alpha < 0) {\r\n\t                            alpha += 2 * Math.PI;\r\n\t                        } else if (alpha >= 2 * Math.PI) {\r\n\t                            alpha -= 2 * Math.PI;\r\n\t                        }\r\n\t                        var midvector = v2.minus(v1).unit();\r\n\t                        var circlesegmentangle = 30 / 180 * Math.PI; // resolution of the circle: segments of 30 degrees\r\n\t                        // we need to increase the radius slightly so that our imperfect circle will contain a perfect circle of cutterradius\r\n\t                        var radiuscorrected = cutterradius / Math.cos(circlesegmentangle / 2);\r\n\t                        var circlecenter = pointcoord.plus(midvector.times(radiuscorrected));\r\n\t                        // we don't need to create a full circle; a pie is enough. Find the angles for the pie:\r\n\t                        var startangle = alpha + midvector.angleRadians();\r\n\t                        var deltaangle = 2 * (Math.PI - alpha);\r\n\t                        var numsteps = 2 * Math.ceil(deltaangle / circlesegmentangle / 2); // should be even\r\n\t                        // build the pie:\r\n\t                        var points = [circlecenter];\r\n\t                        for (var i = 0; i <= numsteps; i++) {\r\n\t                            var angle = startangle + i / numsteps * deltaangle;\r\n\t                            var p = CSG.Vector2D.fromAngleRadians(angle).times(radiuscorrected).plus(circlecenter);\r\n\t                            points.push(p);\r\n\t                        }\r\n\t                        cutouts.push(CAG.fromPoints(points));\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            var result = cag.subtract(cutouts);\r\n\t            return result;\r\n\t        }\r\n\t    };\r\n\t\r\n\t    CAG.Vertex = function(pos) {\r\n\t        this.pos = pos;\r\n\t    };\r\n\t\r\n\t    CAG.Vertex.prototype = {\r\n\t        toString: function() {\r\n\t            return \"(\" + this.pos.x.toFixed(2) + \",\" + this.pos.y.toFixed(2) + \")\";\r\n\t        },\r\n\t        getTag: function() {\r\n\t            var result = this.tag;\r\n\t            if (!result) {\r\n\t                result = CSG.getTag();\r\n\t                this.tag = result;\r\n\t            }\r\n\t            return result;\r\n\t        }\r\n\t    };\r\n\t\r\n\t    CAG.Side = function(vertex0, vertex1) {\r\n\t        if (!(vertex0 instanceof CAG.Vertex)) throw new Error(\"Assertion failed\");\r\n\t        if (!(vertex1 instanceof CAG.Vertex)) throw new Error(\"Assertion failed\");\r\n\t        this.vertex0 = vertex0;\r\n\t        this.vertex1 = vertex1;\r\n\t    };\r\n\t\r\n\t    CAG.Side._fromFakePolygon = function(polygon) {\r\n\t        polygon.vertices.forEach(function(v) {\r\n\t            if (!((v.pos.z >= -1.001) && (v.pos.z < -0.999)) && !((v.pos.z >= 0.999) && (v.pos.z < 1.001))) {\r\n\t                throw(\"Assertion failed: _fromFakePolygon expects abs z values of 1\");\r\n\t            }\r\n\t        })\r\n\t        // this can happen based on union, seems to be residuals -\r\n\t        // return null and handle in caller\r\n\t        if (polygon.vertices.length < 4) {\r\n\t            return null;\r\n\t        }\r\n\t        var reverse = false;\r\n\t        var vert1Indices = [];\r\n\t        var pts2d = polygon.vertices.filter(function(v, i) {\r\n\t            if (v.pos.z > 0) {\r\n\t                vert1Indices.push(i);\r\n\t                return true;\r\n\t            }\r\n\t        })\r\n\t        .map(function(v) {\r\n\t            return new CSG.Vector2D(v.pos.x, v.pos.y);\r\n\t        });\r\n\t        if (pts2d.length != 2) {\r\n\t            throw('Assertion failed: _fromFakePolygon: not enough points found')\r\n\t        }\r\n\t        var d = vert1Indices[1] - vert1Indices[0];\r\n\t        if (d == 1 || d == 3) {\r\n\t            if (d == 1) {\r\n\t                pts2d.reverse();\r\n\t            }\r\n\t        } else {\r\n\t            throw('Assertion failed: _fromFakePolygon: unknown index ordering');\r\n\t        }\r\n\t        var result = new CAG.Side(new CAG.Vertex(pts2d[0]), new CAG.Vertex(pts2d[1]));\r\n\t        return result;\r\n\t    };\r\n\t\r\n\t    CAG.Side.prototype = {\r\n\t        toString: function() {\r\n\t            return this.vertex0 + \" -> \" + this.vertex1;\r\n\t        },\r\n\t\r\n\t        toPolygon3D: function(z0, z1) {\r\n\t            var vertices = [\r\n\t                new CSG.Vertex(this.vertex0.pos.toVector3D(z0)),\r\n\t                new CSG.Vertex(this.vertex1.pos.toVector3D(z0)),\r\n\t                new CSG.Vertex(this.vertex1.pos.toVector3D(z1)),\r\n\t                new CSG.Vertex(this.vertex0.pos.toVector3D(z1))\r\n\t            ];\r\n\t            return new CSG.Polygon(vertices);\r\n\t        },\r\n\t\r\n\t        transform: function(matrix4x4) {\r\n\t            var newp1 = this.vertex0.pos.transform(matrix4x4);\r\n\t            var newp2 = this.vertex1.pos.transform(matrix4x4);\r\n\t            return new CAG.Side(new CAG.Vertex(newp1), new CAG.Vertex(newp2));\r\n\t        },\r\n\t\r\n\t        flipped: function() {\r\n\t            return new CAG.Side(this.vertex1, this.vertex0);\r\n\t        },\r\n\t\r\n\t        direction: function() {\r\n\t            return this.vertex1.pos.minus(this.vertex0.pos);\r\n\t        },\r\n\t\r\n\t        getTag: function() {\r\n\t            var result = this.tag;\r\n\t            if (!result) {\r\n\t                result = CSG.getTag();\r\n\t                this.tag = result;\r\n\t            }\r\n\t            return result;\r\n\t        },\r\n\t\r\n\t        lengthSquared: function() {\r\n\t            var x = this.vertex1.pos.x - this.vertex0.pos.x,\r\n\t                y = this.vertex1.pos.y - this.vertex0.pos.y;\r\n\t            return x * x + y * y;\r\n\t        },\r\n\t\r\n\t        length: function() {\r\n\t            return Math.sqrt(this.lengthSquared());\r\n\t        }\r\n\t    };\r\n\t\r\n\t    //////////////////////////////////////\r\n\t    CAG.fuzzyCAGFactory = function() {\r\n\t        this.vertexfactory = new CSG.fuzzyFactory(2, 1e-5);\r\n\t    };\r\n\t\r\n\t    CAG.fuzzyCAGFactory.prototype = {\r\n\t        getVertex: function(sourcevertex) {\r\n\t            var elements = [sourcevertex.pos._x, sourcevertex.pos._y];\r\n\t            var result = this.vertexfactory.lookupOrCreate(elements, function(els) {\r\n\t                return sourcevertex;\r\n\t            });\r\n\t            return result;\r\n\t        },\r\n\t\r\n\t        getSide: function(sourceside) {\r\n\t            var vertex0 = this.getVertex(sourceside.vertex0);\r\n\t            var vertex1 = this.getVertex(sourceside.vertex1);\r\n\t            return new CAG.Side(vertex0, vertex1);\r\n\t        },\r\n\t\r\n\t        getCAG: function(sourcecag) {\r\n\t            var _this = this;\r\n\t            var newsides = sourcecag.sides.map(function(side) {\r\n\t                return _this.getSide(side);\r\n\t            })\r\n\t            // remove bad sides (mostly a user input issue)\r\n\t            .filter(function(side) {\r\n\t                return side.length() > 1e-5;\r\n\t            });\r\n\t            return CAG.fromSides(newsides);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    //////////////////////////////////////\r\n\t    CSG.addTransformationMethodsToPrototype(CSG.prototype);\r\n\t    CSG.addTransformationMethodsToPrototype(CSG.Vector2D.prototype);\r\n\t    CSG.addTransformationMethodsToPrototype(CSG.Vector3D.prototype);\r\n\t    CSG.addTransformationMethodsToPrototype(CSG.Vertex.prototype);\r\n\t    CSG.addTransformationMethodsToPrototype(CSG.Plane.prototype);\r\n\t    CSG.addTransformationMethodsToPrototype(CSG.Polygon.prototype);\r\n\t    CSG.addTransformationMethodsToPrototype(CSG.Line3D.prototype);\r\n\t    CSG.addTransformationMethodsToPrototype(CSG.Connector.prototype);\r\n\t    CSG.addTransformationMethodsToPrototype(CSG.Path2D.prototype);\r\n\t    CSG.addTransformationMethodsToPrototype(CSG.Line2D.prototype);\r\n\t    CSG.addTransformationMethodsToPrototype(CAG.prototype);\r\n\t    CSG.addTransformationMethodsToPrototype(CAG.Side.prototype);\r\n\t    CSG.addTransformationMethodsToPrototype(CSG.OrthoNormalBasis.prototype);\r\n\t\r\n\t    CSG.addCenteringToPrototype(CSG.prototype, ['x', 'y', 'z']);\r\n\t    CSG.addCenteringToPrototype(CAG.prototype, ['x', 'y']);\r\n\t\r\n\t    /*\r\n\t    2D polygons are now supported through the CAG class.\r\n\t    With many improvements (see documentation):\r\n\t      - shapes do no longer have to be convex\r\n\t      - union/intersect/subtract is supported\r\n\t      - expand / contract are supported\r\n\t\r\n\t    But we'll keep CSG.Polygon2D as a stub for backwards compatibility\r\n\t    */\r\n\t    CSG.Polygon2D = function(points) {\r\n\t        var cag = CAG.fromPoints(points);\r\n\t        this.sides = cag.sides;\r\n\t    };\r\n\t    CSG.Polygon2D.prototype = CAG.prototype;\r\n\t\r\n\t\r\n\t\r\n\t    module.CSG = CSG;\r\n\t    module.CAG = CAG;\r\n\t})(this); //module to export to\r\n\n\n/***/ },\n/* 59 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 60 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar asap = __webpack_require__(85);\n\t\n\tfunction noop() {}\n\t\n\t// States:\n\t//\n\t// 0 - pending\n\t// 1 - fulfilled with _value\n\t// 2 - rejected with _value\n\t// 3 - adopted the state of another promise, _value\n\t//\n\t// once the state is no longer pending (0) it is immutable\n\t\n\t// All `_` prefixed properties will be reduced to `_{random number}`\n\t// at build time to obfuscate them and discourage their use.\n\t// We don't use symbols or Object.defineProperty to fully hide them\n\t// because the performance isn't good enough.\n\t\n\t\n\t// to avoid using try/catch inside critical functions, we\n\t// extract them to here.\n\tvar LAST_ERROR = null;\n\tvar IS_ERROR = {};\n\tfunction getThen(obj) {\n\t  try {\n\t    return obj.then;\n\t  } catch (ex) {\n\t    LAST_ERROR = ex;\n\t    return IS_ERROR;\n\t  }\n\t}\n\t\n\tfunction tryCallOne(fn, a) {\n\t  try {\n\t    return fn(a);\n\t  } catch (ex) {\n\t    LAST_ERROR = ex;\n\t    return IS_ERROR;\n\t  }\n\t}\n\tfunction tryCallTwo(fn, a, b) {\n\t  try {\n\t    fn(a, b);\n\t  } catch (ex) {\n\t    LAST_ERROR = ex;\n\t    return IS_ERROR;\n\t  }\n\t}\n\t\n\tmodule.exports = Promise;\n\t\n\tfunction Promise(fn) {\n\t  if (typeof this !== 'object') {\n\t    throw new TypeError('Promises must be constructed via new');\n\t  }\n\t  if (typeof fn !== 'function') {\n\t    throw new TypeError('not a function');\n\t  }\n\t  this._45 = 0;\n\t  this._81 = 0;\n\t  this._65 = null;\n\t  this._54 = null;\n\t  if (fn === noop) return;\n\t  doResolve(fn, this);\n\t}\n\tPromise._10 = null;\n\tPromise._97 = null;\n\tPromise._61 = noop;\n\t\n\tPromise.prototype.then = function(onFulfilled, onRejected) {\n\t  if (this.constructor !== Promise) {\n\t    return safeThen(this, onFulfilled, onRejected);\n\t  }\n\t  var res = new Promise(noop);\n\t  handle(this, new Handler(onFulfilled, onRejected, res));\n\t  return res;\n\t};\n\t\n\tfunction safeThen(self, onFulfilled, onRejected) {\n\t  return new self.constructor(function (resolve, reject) {\n\t    var res = new Promise(noop);\n\t    res.then(resolve, reject);\n\t    handle(self, new Handler(onFulfilled, onRejected, res));\n\t  });\n\t};\n\tfunction handle(self, deferred) {\n\t  while (self._81 === 3) {\n\t    self = self._65;\n\t  }\n\t  if (Promise._10) {\n\t    Promise._10(self);\n\t  }\n\t  if (self._81 === 0) {\n\t    if (self._45 === 0) {\n\t      self._45 = 1;\n\t      self._54 = deferred;\n\t      return;\n\t    }\n\t    if (self._45 === 1) {\n\t      self._45 = 2;\n\t      self._54 = [self._54, deferred];\n\t      return;\n\t    }\n\t    self._54.push(deferred);\n\t    return;\n\t  }\n\t  handleResolved(self, deferred);\n\t}\n\t\n\tfunction handleResolved(self, deferred) {\n\t  asap(function() {\n\t    var cb = self._81 === 1 ? deferred.onFulfilled : deferred.onRejected;\n\t    if (cb === null) {\n\t      if (self._81 === 1) {\n\t        resolve(deferred.promise, self._65);\n\t      } else {\n\t        reject(deferred.promise, self._65);\n\t      }\n\t      return;\n\t    }\n\t    var ret = tryCallOne(cb, self._65);\n\t    if (ret === IS_ERROR) {\n\t      reject(deferred.promise, LAST_ERROR);\n\t    } else {\n\t      resolve(deferred.promise, ret);\n\t    }\n\t  });\n\t}\n\tfunction resolve(self, newValue) {\n\t  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n\t  if (newValue === self) {\n\t    return reject(\n\t      self,\n\t      new TypeError('A promise cannot be resolved with itself.')\n\t    );\n\t  }\n\t  if (\n\t    newValue &&\n\t    (typeof newValue === 'object' || typeof newValue === 'function')\n\t  ) {\n\t    var then = getThen(newValue);\n\t    if (then === IS_ERROR) {\n\t      return reject(self, LAST_ERROR);\n\t    }\n\t    if (\n\t      then === self.then &&\n\t      newValue instanceof Promise\n\t    ) {\n\t      self._81 = 3;\n\t      self._65 = newValue;\n\t      finale(self);\n\t      return;\n\t    } else if (typeof then === 'function') {\n\t      doResolve(then.bind(newValue), self);\n\t      return;\n\t    }\n\t  }\n\t  self._81 = 1;\n\t  self._65 = newValue;\n\t  finale(self);\n\t}\n\t\n\tfunction reject(self, newValue) {\n\t  self._81 = 2;\n\t  self._65 = newValue;\n\t  if (Promise._97) {\n\t    Promise._97(self, newValue);\n\t  }\n\t  finale(self);\n\t}\n\tfunction finale(self) {\n\t  if (self._45 === 1) {\n\t    handle(self, self._54);\n\t    self._54 = null;\n\t  }\n\t  if (self._45 === 2) {\n\t    for (var i = 0; i < self._54.length; i++) {\n\t      handle(self, self._54[i]);\n\t    }\n\t    self._54 = null;\n\t  }\n\t}\n\t\n\tfunction Handler(onFulfilled, onRejected, promise){\n\t  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n\t  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n\t  this.promise = promise;\n\t}\n\t\n\t/**\n\t * Take a potentially misbehaving resolver function and make sure\n\t * onFulfilled and onRejected are only called once.\n\t *\n\t * Makes no guarantees about asynchrony.\n\t */\n\tfunction doResolve(fn, promise) {\n\t  var done = false;\n\t  var res = tryCallTwo(fn, function (value) {\n\t    if (done) return;\n\t    done = true;\n\t    resolve(promise, value);\n\t  }, function (reason) {\n\t    if (done) return;\n\t    done = true;\n\t    reject(promise, reason);\n\t  })\n\t  if (!done && res === IS_ERROR) {\n\t    done = true;\n\t    reject(promise, LAST_ERROR);\n\t  }\n\t}\n\n\n/***/ },\n/* 61 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t */\n\t\n\t'use strict';\n\t\n\t// React 15.5 references this module, and assumes PropTypes are still callable in production.\n\t// Therefore we re-export development-only version with all the PropTypes checks here.\n\t// However if one is migrating to the `prop-types` npm library, they will go through the\n\t// `index.js` entry point, and it will branch depending on the environment.\n\tvar factory = __webpack_require__(116);\n\tmodule.exports = function(isValidElement) {\n\t  // It is still allowed in 15.5.\n\t  var throwOnDirectAccess = false;\n\t  return factory(isValidElement, throwOnDirectAccess);\n\t};\n\n\n/***/ },\n/* 62 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * CSS properties which accept numbers but are not in units of \"px\".\n\t */\n\t\n\tvar isUnitlessNumber = {\n\t  animationIterationCount: true,\n\t  borderImageOutset: true,\n\t  borderImageSlice: true,\n\t  borderImageWidth: true,\n\t  boxFlex: true,\n\t  boxFlexGroup: true,\n\t  boxOrdinalGroup: true,\n\t  columnCount: true,\n\t  flex: true,\n\t  flexGrow: true,\n\t  flexPositive: true,\n\t  flexShrink: true,\n\t  flexNegative: true,\n\t  flexOrder: true,\n\t  gridRow: true,\n\t  gridColumn: true,\n\t  fontWeight: true,\n\t  lineClamp: true,\n\t  lineHeight: true,\n\t  opacity: true,\n\t  order: true,\n\t  orphans: true,\n\t  tabSize: true,\n\t  widows: true,\n\t  zIndex: true,\n\t  zoom: true,\n\t\n\t  // SVG-related properties\n\t  fillOpacity: true,\n\t  floodOpacity: true,\n\t  stopOpacity: true,\n\t  strokeDasharray: true,\n\t  strokeDashoffset: true,\n\t  strokeMiterlimit: true,\n\t  strokeOpacity: true,\n\t  strokeWidth: true\n\t};\n\t\n\t/**\n\t * @param {string} prefix vendor-specific prefix, eg: Webkit\n\t * @param {string} key style name, eg: transitionDuration\n\t * @return {string} style name prefixed with `prefix`, properly camelCased, eg:\n\t * WebkitTransitionDuration\n\t */\n\tfunction prefixKey(prefix, key) {\n\t  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n\t}\n\t\n\t/**\n\t * Support style names that may come passed in prefixed by adding permutations\n\t * of vendor prefixes.\n\t */\n\tvar prefixes = ['Webkit', 'ms', 'Moz', 'O'];\n\t\n\t// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an\n\t// infinite loop, because it iterates over the newly added props too.\n\tObject.keys(isUnitlessNumber).forEach(function (prop) {\n\t  prefixes.forEach(function (prefix) {\n\t    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];\n\t  });\n\t});\n\t\n\t/**\n\t * Most style properties can be unset by doing .style[prop] = '' but IE8\n\t * doesn't like doing that with shorthand properties so for the properties that\n\t * IE8 breaks on, which are listed here, we instead unset each of the\n\t * individual properties. See http://bugs.jquery.com/ticket/12385.\n\t * The 4-value 'clock' properties like margin, padding, border-width seem to\n\t * behave without any problems. Curiously, list-style works too without any\n\t * special prodding.\n\t */\n\tvar shorthandPropertyExpansions = {\n\t  background: {\n\t    backgroundAttachment: true,\n\t    backgroundColor: true,\n\t    backgroundImage: true,\n\t    backgroundPositionX: true,\n\t    backgroundPositionY: true,\n\t    backgroundRepeat: true\n\t  },\n\t  backgroundPosition: {\n\t    backgroundPositionX: true,\n\t    backgroundPositionY: true\n\t  },\n\t  border: {\n\t    borderWidth: true,\n\t    borderStyle: true,\n\t    borderColor: true\n\t  },\n\t  borderBottom: {\n\t    borderBottomWidth: true,\n\t    borderBottomStyle: true,\n\t    borderBottomColor: true\n\t  },\n\t  borderLeft: {\n\t    borderLeftWidth: true,\n\t    borderLeftStyle: true,\n\t    borderLeftColor: true\n\t  },\n\t  borderRight: {\n\t    borderRightWidth: true,\n\t    borderRightStyle: true,\n\t    borderRightColor: true\n\t  },\n\t  borderTop: {\n\t    borderTopWidth: true,\n\t    borderTopStyle: true,\n\t    borderTopColor: true\n\t  },\n\t  font: {\n\t    fontStyle: true,\n\t    fontVariant: true,\n\t    fontWeight: true,\n\t    fontSize: true,\n\t    lineHeight: true,\n\t    fontFamily: true\n\t  },\n\t  outline: {\n\t    outlineWidth: true,\n\t    outlineStyle: true,\n\t    outlineColor: true\n\t  }\n\t};\n\t\n\tvar CSSProperty = {\n\t  isUnitlessNumber: isUnitlessNumber,\n\t  shorthandPropertyExpansions: shorthandPropertyExpansions\n\t};\n\t\n\tmodule.exports = CSSProperty;\n\n/***/ },\n/* 63 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(3);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar PooledClass = __webpack_require__(13);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * A specialized pseudo-event module to help keep track of components waiting to\n\t * be notified when their DOM representations are available for use.\n\t *\n\t * This implements `PooledClass`, so you should never need to instantiate this.\n\t * Instead, use `CallbackQueue.getPooled()`.\n\t *\n\t * @class ReactMountReady\n\t * @implements PooledClass\n\t * @internal\n\t */\n\t\n\tvar CallbackQueue = function () {\n\t  function CallbackQueue(arg) {\n\t    _classCallCheck(this, CallbackQueue);\n\t\n\t    this._callbacks = null;\n\t    this._contexts = null;\n\t    this._arg = arg;\n\t  }\n\t\n\t  /**\n\t   * Enqueues a callback to be invoked when `notifyAll` is invoked.\n\t   *\n\t   * @param {function} callback Invoked when `notifyAll` is invoked.\n\t   * @param {?object} context Context to call `callback` with.\n\t   * @internal\n\t   */\n\t\n\t\n\t  CallbackQueue.prototype.enqueue = function enqueue(callback, context) {\n\t    this._callbacks = this._callbacks || [];\n\t    this._callbacks.push(callback);\n\t    this._contexts = this._contexts || [];\n\t    this._contexts.push(context);\n\t  };\n\t\n\t  /**\n\t   * Invokes all enqueued callbacks and clears the queue. This is invoked after\n\t   * the DOM representation of a component has been created or updated.\n\t   *\n\t   * @internal\n\t   */\n\t\n\t\n\t  CallbackQueue.prototype.notifyAll = function notifyAll() {\n\t    var callbacks = this._callbacks;\n\t    var contexts = this._contexts;\n\t    var arg = this._arg;\n\t    if (callbacks && contexts) {\n\t      !(callbacks.length === contexts.length) ?  false ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;\n\t      this._callbacks = null;\n\t      this._contexts = null;\n\t      for (var i = 0; i < callbacks.length; i++) {\n\t        callbacks[i].call(contexts[i], arg);\n\t      }\n\t      callbacks.length = 0;\n\t      contexts.length = 0;\n\t    }\n\t  };\n\t\n\t  CallbackQueue.prototype.checkpoint = function checkpoint() {\n\t    return this._callbacks ? this._callbacks.length : 0;\n\t  };\n\t\n\t  CallbackQueue.prototype.rollback = function rollback(len) {\n\t    if (this._callbacks && this._contexts) {\n\t      this._callbacks.length = len;\n\t      this._contexts.length = len;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Resets the internal queue.\n\t   *\n\t   * @internal\n\t   */\n\t\n\t\n\t  CallbackQueue.prototype.reset = function reset() {\n\t    this._callbacks = null;\n\t    this._contexts = null;\n\t  };\n\t\n\t  /**\n\t   * `PooledClass` looks for this.\n\t   */\n\t\n\t\n\t  CallbackQueue.prototype.destructor = function destructor() {\n\t    this.reset();\n\t  };\n\t\n\t  return CallbackQueue;\n\t}();\n\t\n\tmodule.exports = PooledClass.addPoolingTo(CallbackQueue);\n\n/***/ },\n/* 64 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar DOMProperty = __webpack_require__(15);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar ReactInstrumentation = __webpack_require__(9);\n\t\n\tvar quoteAttributeValueForBrowser = __webpack_require__(180);\n\tvar warning = __webpack_require__(2);\n\t\n\tvar VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');\n\tvar illegalAttributeNameCache = {};\n\tvar validatedAttributeNameCache = {};\n\t\n\tfunction isAttributeNameSafe(attributeName) {\n\t  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {\n\t    return true;\n\t  }\n\t  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {\n\t    return false;\n\t  }\n\t  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {\n\t    validatedAttributeNameCache[attributeName] = true;\n\t    return true;\n\t  }\n\t  illegalAttributeNameCache[attributeName] = true;\n\t   false ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;\n\t  return false;\n\t}\n\t\n\tfunction shouldIgnoreValue(propertyInfo, value) {\n\t  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;\n\t}\n\t\n\t/**\n\t * Operations for dealing with DOM properties.\n\t */\n\tvar DOMPropertyOperations = {\n\t\n\t  /**\n\t   * Creates markup for the ID property.\n\t   *\n\t   * @param {string} id Unescaped ID.\n\t   * @return {string} Markup string.\n\t   */\n\t  createMarkupForID: function (id) {\n\t    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);\n\t  },\n\t\n\t  setAttributeForID: function (node, id) {\n\t    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);\n\t  },\n\t\n\t  createMarkupForRoot: function () {\n\t    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=\"\"';\n\t  },\n\t\n\t  setAttributeForRoot: function (node) {\n\t    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');\n\t  },\n\t\n\t  /**\n\t   * Creates markup for a property.\n\t   *\n\t   * @param {string} name\n\t   * @param {*} value\n\t   * @return {?string} Markup string, or null if the property was invalid.\n\t   */\n\t  createMarkupForProperty: function (name, value) {\n\t    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n\t    if (propertyInfo) {\n\t      if (shouldIgnoreValue(propertyInfo, value)) {\n\t        return '';\n\t      }\n\t      var attributeName = propertyInfo.attributeName;\n\t      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {\n\t        return attributeName + '=\"\"';\n\t      }\n\t      return attributeName + '=' + quoteAttributeValueForBrowser(value);\n\t    } else if (DOMProperty.isCustomAttribute(name)) {\n\t      if (value == null) {\n\t        return '';\n\t      }\n\t      return name + '=' + quoteAttributeValueForBrowser(value);\n\t    }\n\t    return null;\n\t  },\n\t\n\t  /**\n\t   * Creates markup for a custom property.\n\t   *\n\t   * @param {string} name\n\t   * @param {*} value\n\t   * @return {string} Markup string, or empty string if the property was invalid.\n\t   */\n\t  createMarkupForCustomAttribute: function (name, value) {\n\t    if (!isAttributeNameSafe(name) || value == null) {\n\t      return '';\n\t    }\n\t    return name + '=' + quoteAttributeValueForBrowser(value);\n\t  },\n\t\n\t  /**\n\t   * Sets the value for a property on a node.\n\t   *\n\t   * @param {DOMElement} node\n\t   * @param {string} name\n\t   * @param {*} value\n\t   */\n\t  setValueForProperty: function (node, name, value) {\n\t    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n\t    if (propertyInfo) {\n\t      var mutationMethod = propertyInfo.mutationMethod;\n\t      if (mutationMethod) {\n\t        mutationMethod(node, value);\n\t      } else if (shouldIgnoreValue(propertyInfo, value)) {\n\t        this.deleteValueForProperty(node, name);\n\t        return;\n\t      } else if (propertyInfo.mustUseProperty) {\n\t        // Contrary to `setAttribute`, object properties are properly\n\t        // `toString`ed by IE8/9.\n\t        node[propertyInfo.propertyName] = value;\n\t      } else {\n\t        var attributeName = propertyInfo.attributeName;\n\t        var namespace = propertyInfo.attributeNamespace;\n\t        // `setAttribute` with objects becomes only `[object]` in IE8/9,\n\t        // ('' + value) makes it output the correct toString()-value.\n\t        if (namespace) {\n\t          node.setAttributeNS(namespace, attributeName, '' + value);\n\t        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {\n\t          node.setAttribute(attributeName, '');\n\t        } else {\n\t          node.setAttribute(attributeName, '' + value);\n\t        }\n\t      }\n\t    } else if (DOMProperty.isCustomAttribute(name)) {\n\t      DOMPropertyOperations.setValueForAttribute(node, name, value);\n\t      return;\n\t    }\n\t\n\t    if (false) {\n\t      var payload = {};\n\t      payload[name] = value;\n\t      ReactInstrumentation.debugTool.onHostOperation({\n\t        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,\n\t        type: 'update attribute',\n\t        payload: payload\n\t      });\n\t    }\n\t  },\n\t\n\t  setValueForAttribute: function (node, name, value) {\n\t    if (!isAttributeNameSafe(name)) {\n\t      return;\n\t    }\n\t    if (value == null) {\n\t      node.removeAttribute(name);\n\t    } else {\n\t      node.setAttribute(name, '' + value);\n\t    }\n\t\n\t    if (false) {\n\t      var payload = {};\n\t      payload[name] = value;\n\t      ReactInstrumentation.debugTool.onHostOperation({\n\t        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,\n\t        type: 'update attribute',\n\t        payload: payload\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Deletes an attributes from a node.\n\t   *\n\t   * @param {DOMElement} node\n\t   * @param {string} name\n\t   */\n\t  deleteValueForAttribute: function (node, name) {\n\t    node.removeAttribute(name);\n\t    if (false) {\n\t      ReactInstrumentation.debugTool.onHostOperation({\n\t        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,\n\t        type: 'remove attribute',\n\t        payload: name\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Deletes the value for a property on a node.\n\t   *\n\t   * @param {DOMElement} node\n\t   * @param {string} name\n\t   */\n\t  deleteValueForProperty: function (node, name) {\n\t    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n\t    if (propertyInfo) {\n\t      var mutationMethod = propertyInfo.mutationMethod;\n\t      if (mutationMethod) {\n\t        mutationMethod(node, undefined);\n\t      } else if (propertyInfo.mustUseProperty) {\n\t        var propName = propertyInfo.propertyName;\n\t        if (propertyInfo.hasBooleanValue) {\n\t          node[propName] = false;\n\t        } else {\n\t          node[propName] = '';\n\t        }\n\t      } else {\n\t        node.removeAttribute(propertyInfo.attributeName);\n\t      }\n\t    } else if (DOMProperty.isCustomAttribute(name)) {\n\t      node.removeAttribute(name);\n\t    }\n\t\n\t    if (false) {\n\t      ReactInstrumentation.debugTool.onHostOperation({\n\t        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,\n\t        type: 'remove attribute',\n\t        payload: name\n\t      });\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = DOMPropertyOperations;\n\n/***/ },\n/* 65 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2015-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactDOMComponentFlags = {\n\t  hasCachedChildNodes: 1 << 0\n\t};\n\t\n\tmodule.exports = ReactDOMComponentFlags;\n\n/***/ },\n/* 66 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(4);\n\t\n\tvar LinkedValueUtils = __webpack_require__(38);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar ReactUpdates = __webpack_require__(10);\n\t\n\tvar warning = __webpack_require__(2);\n\t\n\tvar didWarnValueLink = false;\n\tvar didWarnValueDefaultValue = false;\n\t\n\tfunction updateOptionsIfPendingUpdateAndMounted() {\n\t  if (this._rootNodeID && this._wrapperState.pendingUpdate) {\n\t    this._wrapperState.pendingUpdate = false;\n\t\n\t    var props = this._currentElement.props;\n\t    var value = LinkedValueUtils.getValue(props);\n\t\n\t    if (value != null) {\n\t      updateOptions(this, Boolean(props.multiple), value);\n\t    }\n\t  }\n\t}\n\t\n\tfunction getDeclarationErrorAddendum(owner) {\n\t  if (owner) {\n\t    var name = owner.getName();\n\t    if (name) {\n\t      return ' Check the render method of `' + name + '`.';\n\t    }\n\t  }\n\t  return '';\n\t}\n\t\n\tvar valuePropNames = ['value', 'defaultValue'];\n\t\n\t/**\n\t * Validation function for `value` and `defaultValue`.\n\t * @private\n\t */\n\tfunction checkSelectPropTypes(inst, props) {\n\t  var owner = inst._currentElement._owner;\n\t  LinkedValueUtils.checkPropTypes('select', props, owner);\n\t\n\t  if (props.valueLink !== undefined && !didWarnValueLink) {\n\t     false ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;\n\t    didWarnValueLink = true;\n\t  }\n\t\n\t  for (var i = 0; i < valuePropNames.length; i++) {\n\t    var propName = valuePropNames[i];\n\t    if (props[propName] == null) {\n\t      continue;\n\t    }\n\t    var isArray = Array.isArray(props[propName]);\n\t    if (props.multiple && !isArray) {\n\t       false ? warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;\n\t    } else if (!props.multiple && isArray) {\n\t       false ? warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * @param {ReactDOMComponent} inst\n\t * @param {boolean} multiple\n\t * @param {*} propValue A stringable (with `multiple`, a list of stringables).\n\t * @private\n\t */\n\tfunction updateOptions(inst, multiple, propValue) {\n\t  var selectedValue, i;\n\t  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;\n\t\n\t  if (multiple) {\n\t    selectedValue = {};\n\t    for (i = 0; i < propValue.length; i++) {\n\t      selectedValue['' + propValue[i]] = true;\n\t    }\n\t    for (i = 0; i < options.length; i++) {\n\t      var selected = selectedValue.hasOwnProperty(options[i].value);\n\t      if (options[i].selected !== selected) {\n\t        options[i].selected = selected;\n\t      }\n\t    }\n\t  } else {\n\t    // Do not set `select.value` as exact behavior isn't consistent across all\n\t    // browsers for all cases.\n\t    selectedValue = '' + propValue;\n\t    for (i = 0; i < options.length; i++) {\n\t      if (options[i].value === selectedValue) {\n\t        options[i].selected = true;\n\t        return;\n\t      }\n\t    }\n\t    if (options.length) {\n\t      options[0].selected = true;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Implements a <select> host component that allows optionally setting the\n\t * props `value` and `defaultValue`. If `multiple` is false, the prop must be a\n\t * stringable. If `multiple` is true, the prop must be an array of stringables.\n\t *\n\t * If `value` is not supplied (or null/undefined), user actions that change the\n\t * selected option will trigger updates to the rendered options.\n\t *\n\t * If it is supplied (and not null/undefined), the rendered options will not\n\t * update in response to user actions. Instead, the `value` prop must change in\n\t * order for the rendered options to update.\n\t *\n\t * If `defaultValue` is provided, any options with the supplied values will be\n\t * selected.\n\t */\n\tvar ReactDOMSelect = {\n\t  getHostProps: function (inst, props) {\n\t    return _assign({}, props, {\n\t      onChange: inst._wrapperState.onChange,\n\t      value: undefined\n\t    });\n\t  },\n\t\n\t  mountWrapper: function (inst, props) {\n\t    if (false) {\n\t      checkSelectPropTypes(inst, props);\n\t    }\n\t\n\t    var value = LinkedValueUtils.getValue(props);\n\t    inst._wrapperState = {\n\t      pendingUpdate: false,\n\t      initialValue: value != null ? value : props.defaultValue,\n\t      listeners: null,\n\t      onChange: _handleChange.bind(inst),\n\t      wasMultiple: Boolean(props.multiple)\n\t    };\n\t\n\t    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {\n\t       false ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;\n\t      didWarnValueDefaultValue = true;\n\t    }\n\t  },\n\t\n\t  getSelectValueContext: function (inst) {\n\t    // ReactDOMOption looks at this initial value so the initial generated\n\t    // markup has correct `selected` attributes\n\t    return inst._wrapperState.initialValue;\n\t  },\n\t\n\t  postUpdateWrapper: function (inst) {\n\t    var props = inst._currentElement.props;\n\t\n\t    // After the initial mount, we control selected-ness manually so don't pass\n\t    // this value down\n\t    inst._wrapperState.initialValue = undefined;\n\t\n\t    var wasMultiple = inst._wrapperState.wasMultiple;\n\t    inst._wrapperState.wasMultiple = Boolean(props.multiple);\n\t\n\t    var value = LinkedValueUtils.getValue(props);\n\t    if (value != null) {\n\t      inst._wrapperState.pendingUpdate = false;\n\t      updateOptions(inst, Boolean(props.multiple), value);\n\t    } else if (wasMultiple !== Boolean(props.multiple)) {\n\t      // For simplicity, reapply `defaultValue` if `multiple` is toggled.\n\t      if (props.defaultValue != null) {\n\t        updateOptions(inst, Boolean(props.multiple), props.defaultValue);\n\t      } else {\n\t        // Revert the select back to its default unselected state.\n\t        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tfunction _handleChange(event) {\n\t  var props = this._currentElement.props;\n\t  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n\t\n\t  if (this._rootNodeID) {\n\t    this._wrapperState.pendingUpdate = true;\n\t  }\n\t  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);\n\t  return returnValue;\n\t}\n\t\n\tmodule.exports = ReactDOMSelect;\n\n/***/ },\n/* 67 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2014-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar emptyComponentFactory;\n\t\n\tvar ReactEmptyComponentInjection = {\n\t  injectEmptyComponentFactory: function (factory) {\n\t    emptyComponentFactory = factory;\n\t  }\n\t};\n\t\n\tvar ReactEmptyComponent = {\n\t  create: function (instantiate) {\n\t    return emptyComponentFactory(instantiate);\n\t  }\n\t};\n\t\n\tReactEmptyComponent.injection = ReactEmptyComponentInjection;\n\t\n\tmodule.exports = ReactEmptyComponent;\n\n/***/ },\n/* 68 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactFeatureFlags = {\n\t  // When true, call console.time() before and .timeEnd() after each top-level\n\t  // render (both initial renders and updates). Useful when looking at prod-mode\n\t  // timeline profiles in Chrome, for example.\n\t  logTopLevelRenders: false\n\t};\n\t\n\tmodule.exports = ReactFeatureFlags;\n\n/***/ },\n/* 69 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2014-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(3);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\tvar genericComponentClass = null;\n\tvar textComponentClass = null;\n\t\n\tvar ReactHostComponentInjection = {\n\t  // This accepts a class that receives the tag string. This is a catch all\n\t  // that can render any kind of tag.\n\t  injectGenericComponentClass: function (componentClass) {\n\t    genericComponentClass = componentClass;\n\t  },\n\t  // This accepts a text component class that takes the text string to be\n\t  // rendered as props.\n\t  injectTextComponentClass: function (componentClass) {\n\t    textComponentClass = componentClass;\n\t  }\n\t};\n\t\n\t/**\n\t * Get a host internal component class for a specific tag.\n\t *\n\t * @param {ReactElement} element The element to create.\n\t * @return {function} The internal class constructor function.\n\t */\n\tfunction createInternalComponent(element) {\n\t  !genericComponentClass ?  false ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;\n\t  return new genericComponentClass(element);\n\t}\n\t\n\t/**\n\t * @param {ReactText} text\n\t * @return {ReactComponent}\n\t */\n\tfunction createInstanceForText(text) {\n\t  return new textComponentClass(text);\n\t}\n\t\n\t/**\n\t * @param {ReactComponent} component\n\t * @return {boolean}\n\t */\n\tfunction isTextComponent(component) {\n\t  return component instanceof textComponentClass;\n\t}\n\t\n\tvar ReactHostComponent = {\n\t  createInternalComponent: createInternalComponent,\n\t  createInstanceForText: createInstanceForText,\n\t  isTextComponent: isTextComponent,\n\t  injection: ReactHostComponentInjection\n\t};\n\t\n\tmodule.exports = ReactHostComponent;\n\n/***/ },\n/* 70 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactDOMSelection = __webpack_require__(140);\n\t\n\tvar containsNode = __webpack_require__(96);\n\tvar focusNode = __webpack_require__(56);\n\tvar getActiveElement = __webpack_require__(57);\n\t\n\tfunction isInDocument(node) {\n\t  return containsNode(document.documentElement, node);\n\t}\n\t\n\t/**\n\t * @ReactInputSelection: React input selection module. Based on Selection.js,\n\t * but modified to be suitable for react and has a couple of bug fixes (doesn't\n\t * assume buttons have range selections allowed).\n\t * Input selection module for React.\n\t */\n\tvar ReactInputSelection = {\n\t\n\t  hasSelectionCapabilities: function (elem) {\n\t    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n\t    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');\n\t  },\n\t\n\t  getSelectionInformation: function () {\n\t    var focusedElem = getActiveElement();\n\t    return {\n\t      focusedElem: focusedElem,\n\t      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null\n\t    };\n\t  },\n\t\n\t  /**\n\t   * @restoreSelection: If any selection information was potentially lost,\n\t   * restore it. This is useful when performing operations that could remove dom\n\t   * nodes and place them back in, resulting in focus being lost.\n\t   */\n\t  restoreSelection: function (priorSelectionInformation) {\n\t    var curFocusedElem = getActiveElement();\n\t    var priorFocusedElem = priorSelectionInformation.focusedElem;\n\t    var priorSelectionRange = priorSelectionInformation.selectionRange;\n\t    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {\n\t      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {\n\t        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);\n\t      }\n\t      focusNode(priorFocusedElem);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @getSelection: Gets the selection bounds of a focused textarea, input or\n\t   * contentEditable node.\n\t   * -@input: Look up selection bounds of this input\n\t   * -@return {start: selectionStart, end: selectionEnd}\n\t   */\n\t  getSelection: function (input) {\n\t    var selection;\n\t\n\t    if ('selectionStart' in input) {\n\t      // Modern browser with input or textarea.\n\t      selection = {\n\t        start: input.selectionStart,\n\t        end: input.selectionEnd\n\t      };\n\t    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {\n\t      // IE8 input.\n\t      var range = document.selection.createRange();\n\t      // There can only be one selection per document in IE, so it must\n\t      // be in our element.\n\t      if (range.parentElement() === input) {\n\t        selection = {\n\t          start: -range.moveStart('character', -input.value.length),\n\t          end: -range.moveEnd('character', -input.value.length)\n\t        };\n\t      }\n\t    } else {\n\t      // Content editable or old IE textarea.\n\t      selection = ReactDOMSelection.getOffsets(input);\n\t    }\n\t\n\t    return selection || { start: 0, end: 0 };\n\t  },\n\t\n\t  /**\n\t   * @setSelection: Sets the selection bounds of a textarea or input and focuses\n\t   * the input.\n\t   * -@input     Set selection bounds of this input or textarea\n\t   * -@offsets   Object of same form that is returned from get*\n\t   */\n\t  setSelection: function (input, offsets) {\n\t    var start = offsets.start;\n\t    var end = offsets.end;\n\t    if (end === undefined) {\n\t      end = start;\n\t    }\n\t\n\t    if ('selectionStart' in input) {\n\t      input.selectionStart = start;\n\t      input.selectionEnd = Math.min(end, input.value.length);\n\t    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {\n\t      var range = input.createTextRange();\n\t      range.collapse(true);\n\t      range.moveStart('character', start);\n\t      range.moveEnd('character', end - start);\n\t      range.select();\n\t    } else {\n\t      ReactDOMSelection.setOffsets(input, offsets);\n\t    }\n\t  }\n\t};\n\t\n\tmodule.exports = ReactInputSelection;\n\n/***/ },\n/* 71 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(3);\n\t\n\tvar DOMLazyTree = __webpack_require__(14);\n\tvar DOMProperty = __webpack_require__(15);\n\tvar React = __webpack_require__(17);\n\tvar ReactBrowserEventEmitter = __webpack_require__(27);\n\tvar ReactCurrentOwner = __webpack_require__(12);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar ReactDOMContainerInfo = __webpack_require__(134);\n\tvar ReactDOMFeatureFlags = __webpack_require__(136);\n\tvar ReactFeatureFlags = __webpack_require__(68);\n\tvar ReactInstanceMap = __webpack_require__(25);\n\tvar ReactInstrumentation = __webpack_require__(9);\n\tvar ReactMarkupChecksum = __webpack_require__(150);\n\tvar ReactReconciler = __webpack_require__(16);\n\tvar ReactUpdateQueue = __webpack_require__(41);\n\tvar ReactUpdates = __webpack_require__(10);\n\t\n\tvar emptyObject = __webpack_require__(22);\n\tvar instantiateReactComponent = __webpack_require__(78);\n\tvar invariant = __webpack_require__(1);\n\tvar setInnerHTML = __webpack_require__(31);\n\tvar shouldUpdateReactComponent = __webpack_require__(47);\n\tvar warning = __webpack_require__(2);\n\t\n\tvar ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;\n\tvar ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;\n\t\n\tvar ELEMENT_NODE_TYPE = 1;\n\tvar DOC_NODE_TYPE = 9;\n\tvar DOCUMENT_FRAGMENT_NODE_TYPE = 11;\n\t\n\tvar instancesByReactRootID = {};\n\t\n\t/**\n\t * Finds the index of the first character\n\t * that's not common between the two given strings.\n\t *\n\t * @return {number} the index of the character where the strings diverge\n\t */\n\tfunction firstDifferenceIndex(string1, string2) {\n\t  var minLen = Math.min(string1.length, string2.length);\n\t  for (var i = 0; i < minLen; i++) {\n\t    if (string1.charAt(i) !== string2.charAt(i)) {\n\t      return i;\n\t    }\n\t  }\n\t  return string1.length === string2.length ? -1 : minLen;\n\t}\n\t\n\t/**\n\t * @param {DOMElement|DOMDocument} container DOM element that may contain\n\t * a React component\n\t * @return {?*} DOM element that may have the reactRoot ID, or null.\n\t */\n\tfunction getReactRootElementInContainer(container) {\n\t  if (!container) {\n\t    return null;\n\t  }\n\t\n\t  if (container.nodeType === DOC_NODE_TYPE) {\n\t    return container.documentElement;\n\t  } else {\n\t    return container.firstChild;\n\t  }\n\t}\n\t\n\tfunction internalGetID(node) {\n\t  // If node is something like a window, document, or text node, none of\n\t  // which support attributes or a .getAttribute method, gracefully return\n\t  // the empty string, as if the attribute were missing.\n\t  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';\n\t}\n\t\n\t/**\n\t * Mounts this component and inserts it into the DOM.\n\t *\n\t * @param {ReactComponent} componentInstance The instance to mount.\n\t * @param {DOMElement} container DOM element to mount into.\n\t * @param {ReactReconcileTransaction} transaction\n\t * @param {boolean} shouldReuseMarkup If true, do not insert markup\n\t */\n\tfunction mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {\n\t  var markerName;\n\t  if (ReactFeatureFlags.logTopLevelRenders) {\n\t    var wrappedElement = wrapperInstance._currentElement.props.child;\n\t    var type = wrappedElement.type;\n\t    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);\n\t    console.time(markerName);\n\t  }\n\t\n\t  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0 /* parentDebugID */\n\t  );\n\t\n\t  if (markerName) {\n\t    console.timeEnd(markerName);\n\t  }\n\t\n\t  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;\n\t  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);\n\t}\n\t\n\t/**\n\t * Batched mount.\n\t *\n\t * @param {ReactComponent} componentInstance The instance to mount.\n\t * @param {DOMElement} container DOM element to mount into.\n\t * @param {boolean} shouldReuseMarkup If true, do not insert markup\n\t */\n\tfunction batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {\n\t  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(\n\t  /* useCreateElement */\n\t  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);\n\t  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);\n\t  ReactUpdates.ReactReconcileTransaction.release(transaction);\n\t}\n\t\n\t/**\n\t * Unmounts a component and removes it from the DOM.\n\t *\n\t * @param {ReactComponent} instance React component instance.\n\t * @param {DOMElement} container DOM element to unmount from.\n\t * @final\n\t * @internal\n\t * @see {ReactMount.unmountComponentAtNode}\n\t */\n\tfunction unmountComponentFromNode(instance, container, safely) {\n\t  if (false) {\n\t    ReactInstrumentation.debugTool.onBeginFlush();\n\t  }\n\t  ReactReconciler.unmountComponent(instance, safely);\n\t  if (false) {\n\t    ReactInstrumentation.debugTool.onEndFlush();\n\t  }\n\t\n\t  if (container.nodeType === DOC_NODE_TYPE) {\n\t    container = container.documentElement;\n\t  }\n\t\n\t  // http://jsperf.com/emptying-a-node\n\t  while (container.lastChild) {\n\t    container.removeChild(container.lastChild);\n\t  }\n\t}\n\t\n\t/**\n\t * True if the supplied DOM node has a direct React-rendered child that is\n\t * not a React root element. Useful for warning in `render`,\n\t * `unmountComponentAtNode`, etc.\n\t *\n\t * @param {?DOMElement} node The candidate DOM node.\n\t * @return {boolean} True if the DOM element contains a direct child that was\n\t * rendered by React but is not a root element.\n\t * @internal\n\t */\n\tfunction hasNonRootReactChild(container) {\n\t  var rootEl = getReactRootElementInContainer(container);\n\t  if (rootEl) {\n\t    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);\n\t    return !!(inst && inst._hostParent);\n\t  }\n\t}\n\t\n\t/**\n\t * True if the supplied DOM node is a React DOM element and\n\t * it has been rendered by another copy of React.\n\t *\n\t * @param {?DOMElement} node The candidate DOM node.\n\t * @return {boolean} True if the DOM has been rendered by another copy of React\n\t * @internal\n\t */\n\tfunction nodeIsRenderedByOtherInstance(container) {\n\t  var rootEl = getReactRootElementInContainer(container);\n\t  return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));\n\t}\n\t\n\t/**\n\t * True if the supplied DOM node is a valid node element.\n\t *\n\t * @param {?DOMElement} node The candidate DOM node.\n\t * @return {boolean} True if the DOM is a valid DOM node.\n\t * @internal\n\t */\n\tfunction isValidContainer(node) {\n\t  return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));\n\t}\n\t\n\t/**\n\t * True if the supplied DOM node is a valid React node element.\n\t *\n\t * @param {?DOMElement} node The candidate DOM node.\n\t * @return {boolean} True if the DOM is a valid React DOM node.\n\t * @internal\n\t */\n\tfunction isReactNode(node) {\n\t  return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));\n\t}\n\t\n\tfunction getHostRootInstanceInContainer(container) {\n\t  var rootEl = getReactRootElementInContainer(container);\n\t  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);\n\t  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;\n\t}\n\t\n\tfunction getTopLevelWrapperInContainer(container) {\n\t  var root = getHostRootInstanceInContainer(container);\n\t  return root ? root._hostContainerInfo._topLevelWrapper : null;\n\t}\n\t\n\t/**\n\t * Temporary (?) hack so that we can store all top-level pending updates on\n\t * composites instead of having to worry about different types of components\n\t * here.\n\t */\n\tvar topLevelRootCounter = 1;\n\tvar TopLevelWrapper = function () {\n\t  this.rootID = topLevelRootCounter++;\n\t};\n\tTopLevelWrapper.prototype.isReactComponent = {};\n\tif (false) {\n\t  TopLevelWrapper.displayName = 'TopLevelWrapper';\n\t}\n\tTopLevelWrapper.prototype.render = function () {\n\t  return this.props.child;\n\t};\n\tTopLevelWrapper.isReactTopLevelWrapper = true;\n\t\n\t/**\n\t * Mounting is the process of initializing a React component by creating its\n\t * representative DOM elements and inserting them into a supplied `container`.\n\t * Any prior content inside `container` is destroyed in the process.\n\t *\n\t *   ReactMount.render(\n\t *     component,\n\t *     document.getElementById('container')\n\t *   );\n\t *\n\t *   <div id=\"container\">                   <-- Supplied `container`.\n\t *     <div data-reactid=\".3\">              <-- Rendered reactRoot of React\n\t *       // ...                                 component.\n\t *     </div>\n\t *   </div>\n\t *\n\t * Inside of `container`, the first element rendered is the \"reactRoot\".\n\t */\n\tvar ReactMount = {\n\t\n\t  TopLevelWrapper: TopLevelWrapper,\n\t\n\t  /**\n\t   * Used by devtools. The keys are not important.\n\t   */\n\t  _instancesByReactRootID: instancesByReactRootID,\n\t\n\t  /**\n\t   * This is a hook provided to support rendering React components while\n\t   * ensuring that the apparent scroll position of its `container` does not\n\t   * change.\n\t   *\n\t   * @param {DOMElement} container The `container` being rendered into.\n\t   * @param {function} renderCallback This must be called once to do the render.\n\t   */\n\t  scrollMonitor: function (container, renderCallback) {\n\t    renderCallback();\n\t  },\n\t\n\t  /**\n\t   * Take a component that's already mounted into the DOM and replace its props\n\t   * @param {ReactComponent} prevComponent component instance already in the DOM\n\t   * @param {ReactElement} nextElement component instance to render\n\t   * @param {DOMElement} container container to render into\n\t   * @param {?function} callback function triggered on completion\n\t   */\n\t  _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {\n\t    ReactMount.scrollMonitor(container, function () {\n\t      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);\n\t      if (callback) {\n\t        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);\n\t      }\n\t    });\n\t\n\t    return prevComponent;\n\t  },\n\t\n\t  /**\n\t   * Render a new component into the DOM. Hooked by hooks!\n\t   *\n\t   * @param {ReactElement} nextElement element to render\n\t   * @param {DOMElement} container container to render into\n\t   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion\n\t   * @return {ReactComponent} nextComponent\n\t   */\n\t  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {\n\t    // Various parts of our code (such as ReactCompositeComponent's\n\t    // _renderValidatedComponent) assume that calls to render aren't nested;\n\t    // verify that that's the case.\n\t     false ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;\n\t\n\t    !isValidContainer(container) ?  false ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;\n\t\n\t    ReactBrowserEventEmitter.ensureScrollValueMonitoring();\n\t    var componentInstance = instantiateReactComponent(nextElement, false);\n\t\n\t    // The initial render is synchronous but any updates that happen during\n\t    // rendering, in componentWillMount or componentDidMount, will be batched\n\t    // according to the current batching strategy.\n\t\n\t    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);\n\t\n\t    var wrapperID = componentInstance._instance.rootID;\n\t    instancesByReactRootID[wrapperID] = componentInstance;\n\t\n\t    return componentInstance;\n\t  },\n\t\n\t  /**\n\t   * Renders a React component into the DOM in the supplied `container`.\n\t   *\n\t   * If the React component was previously rendered into `container`, this will\n\t   * perform an update on it and only mutate the DOM as necessary to reflect the\n\t   * latest React component.\n\t   *\n\t   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.\n\t   * @param {ReactElement} nextElement Component element to render.\n\t   * @param {DOMElement} container DOM element to render into.\n\t   * @param {?function} callback function triggered on completion\n\t   * @return {ReactComponent} Component instance rendered in `container`.\n\t   */\n\t  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {\n\t    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ?  false ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;\n\t    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);\n\t  },\n\t\n\t  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {\n\t    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');\n\t    !React.isValidElement(nextElement) ?  false ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing a string like \\'div\\', pass ' + 'React.createElement(\\'div\\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' :\n\t    // Check if it quacks like an element\n\t    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? ' Instead of passing a string like \\'div\\', pass ' + 'React.createElement(\\'div\\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;\n\t\n\t     false ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;\n\t\n\t    var nextWrappedElement = React.createElement(TopLevelWrapper, { child: nextElement });\n\t\n\t    var nextContext;\n\t    if (parentComponent) {\n\t      var parentInst = ReactInstanceMap.get(parentComponent);\n\t      nextContext = parentInst._processChildContext(parentInst._context);\n\t    } else {\n\t      nextContext = emptyObject;\n\t    }\n\t\n\t    var prevComponent = getTopLevelWrapperInContainer(container);\n\t\n\t    if (prevComponent) {\n\t      var prevWrappedElement = prevComponent._currentElement;\n\t      var prevElement = prevWrappedElement.props.child;\n\t      if (shouldUpdateReactComponent(prevElement, nextElement)) {\n\t        var publicInst = prevComponent._renderedComponent.getPublicInstance();\n\t        var updatedCallback = callback && function () {\n\t          callback.call(publicInst);\n\t        };\n\t        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);\n\t        return publicInst;\n\t      } else {\n\t        ReactMount.unmountComponentAtNode(container);\n\t      }\n\t    }\n\t\n\t    var reactRootElement = getReactRootElementInContainer(container);\n\t    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);\n\t    var containerHasNonRootReactChild = hasNonRootReactChild(container);\n\t\n\t    if (false) {\n\t      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;\n\t\n\t      if (!containerHasReactMarkup || reactRootElement.nextSibling) {\n\t        var rootElementSibling = reactRootElement;\n\t        while (rootElementSibling) {\n\t          if (internalGetID(rootElementSibling)) {\n\t            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;\n\t            break;\n\t          }\n\t          rootElementSibling = rootElementSibling.nextSibling;\n\t        }\n\t      }\n\t    }\n\t\n\t    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;\n\t    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();\n\t    if (callback) {\n\t      callback.call(component);\n\t    }\n\t    return component;\n\t  },\n\t\n\t  /**\n\t   * Renders a React component into the DOM in the supplied `container`.\n\t   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render\n\t   *\n\t   * If the React component was previously rendered into `container`, this will\n\t   * perform an update on it and only mutate the DOM as necessary to reflect the\n\t   * latest React component.\n\t   *\n\t   * @param {ReactElement} nextElement Component element to render.\n\t   * @param {DOMElement} container DOM element to render into.\n\t   * @param {?function} callback function triggered on completion\n\t   * @return {ReactComponent} Component instance rendered in `container`.\n\t   */\n\t  render: function (nextElement, container, callback) {\n\t    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);\n\t  },\n\t\n\t  /**\n\t   * Unmounts and destroys the React component rendered in the `container`.\n\t   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode\n\t   *\n\t   * @param {DOMElement} container DOM element containing a React component.\n\t   * @return {boolean} True if a component was found in and unmounted from\n\t   *                   `container`\n\t   */\n\t  unmountComponentAtNode: function (container) {\n\t    // Various parts of our code (such as ReactCompositeComponent's\n\t    // _renderValidatedComponent) assume that calls to render aren't nested;\n\t    // verify that that's the case. (Strictly speaking, unmounting won't cause a\n\t    // render but we still don't expect to be in a render call here.)\n\t     false ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;\n\t\n\t    !isValidContainer(container) ?  false ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;\n\t\n\t    if (false) {\n\t      process.env.NODE_ENV !== 'production' ? warning(!nodeIsRenderedByOtherInstance(container), 'unmountComponentAtNode(): The node you\\'re attempting to unmount ' + 'was rendered by another copy of React.') : void 0;\n\t    }\n\t\n\t    var prevComponent = getTopLevelWrapperInContainer(container);\n\t    if (!prevComponent) {\n\t      // Check if the node being unmounted was rendered by React, but isn't a\n\t      // root node.\n\t      var containerHasNonRootReactChild = hasNonRootReactChild(container);\n\t\n\t      // Check if the container itself is a React root node.\n\t      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);\n\t\n\t      if (false) {\n\t        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;\n\t      }\n\t\n\t      return false;\n\t    }\n\t    delete instancesByReactRootID[prevComponent._instance.rootID];\n\t    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);\n\t    return true;\n\t  },\n\t\n\t  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {\n\t    !isValidContainer(container) ?  false ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;\n\t\n\t    if (shouldReuseMarkup) {\n\t      var rootElement = getReactRootElementInContainer(container);\n\t      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {\n\t        ReactDOMComponentTree.precacheNode(instance, rootElement);\n\t        return;\n\t      } else {\n\t        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n\t        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n\t\n\t        var rootMarkup = rootElement.outerHTML;\n\t        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);\n\t\n\t        var normalizedMarkup = markup;\n\t        if (false) {\n\t          // because rootMarkup is retrieved from the DOM, various normalizations\n\t          // will have occurred which will not be present in `markup`. Here,\n\t          // insert markup into a <div> or <iframe> depending on the container\n\t          // type to perform the same normalizations before comparing.\n\t          var normalizer;\n\t          if (container.nodeType === ELEMENT_NODE_TYPE) {\n\t            normalizer = document.createElement('div');\n\t            normalizer.innerHTML = markup;\n\t            normalizedMarkup = normalizer.innerHTML;\n\t          } else {\n\t            normalizer = document.createElement('iframe');\n\t            document.body.appendChild(normalizer);\n\t            normalizer.contentDocument.write(markup);\n\t            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;\n\t            document.body.removeChild(normalizer);\n\t          }\n\t        }\n\t\n\t        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);\n\t        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);\n\t\n\t        !(container.nodeType !== DOC_NODE_TYPE) ?  false ? invariant(false, 'You\\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\\n%s', difference) : _prodInvariant('42', difference) : void 0;\n\t\n\t        if (false) {\n\t          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\\n%s', difference) : void 0;\n\t        }\n\t      }\n\t    }\n\t\n\t    !(container.nodeType !== DOC_NODE_TYPE) ?  false ? invariant(false, 'You\\'re trying to render a component to the document but you didn\\'t use server rendering. We can\\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;\n\t\n\t    if (transaction.useCreateElement) {\n\t      while (container.lastChild) {\n\t        container.removeChild(container.lastChild);\n\t      }\n\t      DOMLazyTree.insertTreeBefore(container, markup, null);\n\t    } else {\n\t      setInnerHTML(container, markup);\n\t      ReactDOMComponentTree.precacheNode(instance, container.firstChild);\n\t    }\n\t\n\t    if (false) {\n\t      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);\n\t      if (hostNode._debugID !== 0) {\n\t        ReactInstrumentation.debugTool.onHostOperation({\n\t          instanceID: hostNode._debugID,\n\t          type: 'mount',\n\t          payload: markup.toString()\n\t        });\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tmodule.exports = ReactMount;\n\n/***/ },\n/* 72 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(3);\n\t\n\tvar React = __webpack_require__(17);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\tvar ReactNodeTypes = {\n\t  HOST: 0,\n\t  COMPOSITE: 1,\n\t  EMPTY: 2,\n\t\n\t  getType: function (node) {\n\t    if (node === null || node === false) {\n\t      return ReactNodeTypes.EMPTY;\n\t    } else if (React.isValidElement(node)) {\n\t      if (typeof node.type === 'function') {\n\t        return ReactNodeTypes.COMPOSITE;\n\t      } else {\n\t        return ReactNodeTypes.HOST;\n\t      }\n\t    }\n\t     true ?  false ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;\n\t  }\n\t};\n\t\n\tmodule.exports = ReactNodeTypes;\n\n/***/ },\n/* 73 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar ViewportMetrics = {\n\t\n\t  currentScrollLeft: 0,\n\t\n\t  currentScrollTop: 0,\n\t\n\t  refreshScrollValues: function (scrollPosition) {\n\t    ViewportMetrics.currentScrollLeft = scrollPosition.x;\n\t    ViewportMetrics.currentScrollTop = scrollPosition.y;\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ViewportMetrics;\n\n/***/ },\n/* 74 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2014-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(3);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Accumulates items that must not be null or undefined into the first one. This\n\t * is used to conserve memory by avoiding array allocations, and thus sacrifices\n\t * API cleanness. Since `current` can be null before being passed in and not\n\t * null after this function, make sure to assign it back to `current`:\n\t *\n\t * `a = accumulateInto(a, b);`\n\t *\n\t * This API should be sparingly used. Try `accumulate` for something cleaner.\n\t *\n\t * @return {*|array<*>} An accumulation of items.\n\t */\n\t\n\tfunction accumulateInto(current, next) {\n\t  !(next != null) ?  false ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;\n\t\n\t  if (current == null) {\n\t    return next;\n\t  }\n\t\n\t  // Both are not empty. Warning: Never call x.concat(y) when you are not\n\t  // certain that x is an Array (x could be a string with concat method).\n\t  if (Array.isArray(current)) {\n\t    if (Array.isArray(next)) {\n\t      current.push.apply(current, next);\n\t      return current;\n\t    }\n\t    current.push(next);\n\t    return current;\n\t  }\n\t\n\t  if (Array.isArray(next)) {\n\t    // A bit too dangerous to mutate `next`.\n\t    return [current].concat(next);\n\t  }\n\t\n\t  return [current, next];\n\t}\n\t\n\tmodule.exports = accumulateInto;\n\n/***/ },\n/* 75 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * @param {array} arr an \"accumulation\" of items which is either an Array or\n\t * a single item. Useful when paired with the `accumulate` module. This is a\n\t * simple utility that allows us to reason about a collection of items, but\n\t * handling the case when there is exactly one item (and we do not need to\n\t * allocate an array).\n\t */\n\t\n\tfunction forEachAccumulated(arr, cb, scope) {\n\t  if (Array.isArray(arr)) {\n\t    arr.forEach(cb, scope);\n\t  } else if (arr) {\n\t    cb.call(scope, arr);\n\t  }\n\t}\n\t\n\tmodule.exports = forEachAccumulated;\n\n/***/ },\n/* 76 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactNodeTypes = __webpack_require__(72);\n\t\n\tfunction getHostComponentFromComposite(inst) {\n\t  var type;\n\t\n\t  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {\n\t    inst = inst._renderedComponent;\n\t  }\n\t\n\t  if (type === ReactNodeTypes.HOST) {\n\t    return inst._renderedComponent;\n\t  } else if (type === ReactNodeTypes.EMPTY) {\n\t    return null;\n\t  }\n\t}\n\t\n\tmodule.exports = getHostComponentFromComposite;\n\n/***/ },\n/* 77 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\t\n\tvar contentKey = null;\n\t\n\t/**\n\t * Gets the key used to access text content on a DOM node.\n\t *\n\t * @return {?string} Key used to access text content.\n\t * @internal\n\t */\n\tfunction getTextContentAccessor() {\n\t  if (!contentKey && ExecutionEnvironment.canUseDOM) {\n\t    // Prefer textContent to innerText because many browsers support both but\n\t    // SVG <text> elements don't support innerText even when <div> does.\n\t    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';\n\t  }\n\t  return contentKey;\n\t}\n\t\n\tmodule.exports = getTextContentAccessor;\n\n/***/ },\n/* 78 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(3),\n\t    _assign = __webpack_require__(4);\n\t\n\tvar ReactCompositeComponent = __webpack_require__(131);\n\tvar ReactEmptyComponent = __webpack_require__(67);\n\tvar ReactHostComponent = __webpack_require__(69);\n\t\n\tvar getNextDebugID = __webpack_require__(194);\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(2);\n\t\n\t// To avoid a cyclic dependency, we create the final class in this module\n\tvar ReactCompositeComponentWrapper = function (element) {\n\t  this.construct(element);\n\t};\n\t\n\tfunction getDeclarationErrorAddendum(owner) {\n\t  if (owner) {\n\t    var name = owner.getName();\n\t    if (name) {\n\t      return ' Check the render method of `' + name + '`.';\n\t    }\n\t  }\n\t  return '';\n\t}\n\t\n\t/**\n\t * Check if the type reference is a known internal type. I.e. not a user\n\t * provided composite type.\n\t *\n\t * @param {function} type\n\t * @return {boolean} Returns true if this is a valid internal type.\n\t */\n\tfunction isInternalComponentType(type) {\n\t  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';\n\t}\n\t\n\t/**\n\t * Given a ReactNode, create an instance that will actually be mounted.\n\t *\n\t * @param {ReactNode} node\n\t * @param {boolean} shouldHaveDebugID\n\t * @return {object} A new instance of the element's constructor.\n\t * @protected\n\t */\n\tfunction instantiateReactComponent(node, shouldHaveDebugID) {\n\t  var instance;\n\t\n\t  if (node === null || node === false) {\n\t    instance = ReactEmptyComponent.create(instantiateReactComponent);\n\t  } else if (typeof node === 'object') {\n\t    var element = node;\n\t    var type = element.type;\n\t    if (typeof type !== 'function' && typeof type !== 'string') {\n\t      var info = '';\n\t      if (false) {\n\t        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n\t          info += ' You likely forgot to export your component from the file ' + 'it\\'s defined in.';\n\t        }\n\t      }\n\t      info += getDeclarationErrorAddendum(element._owner);\n\t       true ?  false ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type, info) : _prodInvariant('130', type == null ? type : typeof type, info) : void 0;\n\t    }\n\t\n\t    // Special case string values\n\t    if (typeof element.type === 'string') {\n\t      instance = ReactHostComponent.createInternalComponent(element);\n\t    } else if (isInternalComponentType(element.type)) {\n\t      // This is temporarily available for custom components that are not string\n\t      // representations. I.e. ART. Once those are updated to use the string\n\t      // representation, we can drop this code path.\n\t      instance = new element.type(element);\n\t\n\t      // We renamed this. Allow the old name for compat. :(\n\t      if (!instance.getHostNode) {\n\t        instance.getHostNode = instance.getNativeNode;\n\t      }\n\t    } else {\n\t      instance = new ReactCompositeComponentWrapper(element);\n\t    }\n\t  } else if (typeof node === 'string' || typeof node === 'number') {\n\t    instance = ReactHostComponent.createInstanceForText(node);\n\t  } else {\n\t     true ?  false ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;\n\t  }\n\t\n\t  if (false) {\n\t    process.env.NODE_ENV !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;\n\t  }\n\t\n\t  // These two fields are used by the DOM and ART diffing algorithms\n\t  // respectively. Instead of using expandos on components, we should be\n\t  // storing the state needed by the diffing algorithms elsewhere.\n\t  instance._mountIndex = 0;\n\t  instance._mountImage = null;\n\t\n\t  if (false) {\n\t    instance._debugID = shouldHaveDebugID ? getNextDebugID() : 0;\n\t  }\n\t\n\t  // Internal instances should fully constructed at this point, so they should\n\t  // not get any new fields added to them at this point.\n\t  if (false) {\n\t    if (Object.preventExtensions) {\n\t      Object.preventExtensions(instance);\n\t    }\n\t  }\n\t\n\t  return instance;\n\t}\n\t\n\t_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent, {\n\t  _instantiateReactComponent: instantiateReactComponent\n\t});\n\t\n\tmodule.exports = instantiateReactComponent;\n\n/***/ },\n/* 79 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary\n\t */\n\t\n\tvar supportedInputTypes = {\n\t  'color': true,\n\t  'date': true,\n\t  'datetime': true,\n\t  'datetime-local': true,\n\t  'email': true,\n\t  'month': true,\n\t  'number': true,\n\t  'password': true,\n\t  'range': true,\n\t  'search': true,\n\t  'tel': true,\n\t  'text': true,\n\t  'time': true,\n\t  'url': true,\n\t  'week': true\n\t};\n\t\n\tfunction isTextInputElement(elem) {\n\t  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n\t\n\t  if (nodeName === 'input') {\n\t    return !!supportedInputTypes[elem.type];\n\t  }\n\t\n\t  if (nodeName === 'textarea') {\n\t    return true;\n\t  }\n\t\n\t  return false;\n\t}\n\t\n\tmodule.exports = isTextInputElement;\n\n/***/ },\n/* 80 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\tvar escapeTextContentForBrowser = __webpack_require__(30);\n\tvar setInnerHTML = __webpack_require__(31);\n\t\n\t/**\n\t * Set the textContent property of a node, ensuring that whitespace is preserved\n\t * even in IE8. innerText is a poor substitute for textContent and, among many\n\t * issues, inserts <br> instead of the literal newline chars. innerHTML behaves\n\t * as it should.\n\t *\n\t * @param {DOMElement} node\n\t * @param {string} text\n\t * @internal\n\t */\n\tvar setTextContent = function (node, text) {\n\t  if (text) {\n\t    var firstChild = node.firstChild;\n\t\n\t    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {\n\t      firstChild.nodeValue = text;\n\t      return;\n\t    }\n\t  }\n\t  node.textContent = text;\n\t};\n\t\n\tif (ExecutionEnvironment.canUseDOM) {\n\t  if (!('textContent' in document.documentElement)) {\n\t    setTextContent = function (node, text) {\n\t      if (node.nodeType === 3) {\n\t        node.nodeValue = text;\n\t        return;\n\t      }\n\t      setInnerHTML(node, escapeTextContentForBrowser(text));\n\t    };\n\t  }\n\t}\n\t\n\tmodule.exports = setTextContent;\n\n/***/ },\n/* 81 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(3);\n\t\n\tvar ReactCurrentOwner = __webpack_require__(12);\n\tvar REACT_ELEMENT_TYPE = __webpack_require__(146);\n\t\n\tvar getIteratorFn = __webpack_require__(177);\n\tvar invariant = __webpack_require__(1);\n\tvar KeyEscapeUtils = __webpack_require__(37);\n\tvar warning = __webpack_require__(2);\n\t\n\tvar SEPARATOR = '.';\n\tvar SUBSEPARATOR = ':';\n\t\n\t/**\n\t * This is inlined from ReactElement since this file is shared between\n\t * isomorphic and renderers. We could extract this to a\n\t *\n\t */\n\t\n\t/**\n\t * TODO: Test that a single child and an array with one item have the same key\n\t * pattern.\n\t */\n\t\n\tvar didWarnAboutMaps = false;\n\t\n\t/**\n\t * Generate a key string that identifies a component within a set.\n\t *\n\t * @param {*} component A component that could contain a manual key.\n\t * @param {number} index Index that is used if a manual key is not provided.\n\t * @return {string}\n\t */\n\tfunction getComponentKey(component, index) {\n\t  // Do some typechecking here since we call this blindly. We want to ensure\n\t  // that we don't block potential future ES APIs.\n\t  if (component && typeof component === 'object' && component.key != null) {\n\t    // Explicit key\n\t    return KeyEscapeUtils.escape(component.key);\n\t  }\n\t  // Implicit key determined by the index in the set\n\t  return index.toString(36);\n\t}\n\t\n\t/**\n\t * @param {?*} children Children tree container.\n\t * @param {!string} nameSoFar Name of the key path so far.\n\t * @param {!function} callback Callback to invoke with each child found.\n\t * @param {?*} traverseContext Used to pass information throughout the traversal\n\t * process.\n\t * @return {!number} The number of children in this subtree.\n\t */\n\tfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n\t  var type = typeof children;\n\t\n\t  if (type === 'undefined' || type === 'boolean') {\n\t    // All of the above are perceived as null.\n\t    children = null;\n\t  }\n\t\n\t  if (children === null || type === 'string' || type === 'number' ||\n\t  // The following is inlined from ReactElement. This means we can optimize\n\t  // some checks. React Fiber also inlines this logic for similar purposes.\n\t  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {\n\t    callback(traverseContext, children,\n\t    // If it's the only child, treat the name as if it was wrapped in an array\n\t    // so that it's consistent if the number of children grows.\n\t    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n\t    return 1;\n\t  }\n\t\n\t  var child;\n\t  var nextName;\n\t  var subtreeCount = 0; // Count of children found in the current subtree.\n\t  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\t\n\t  if (Array.isArray(children)) {\n\t    for (var i = 0; i < children.length; i++) {\n\t      child = children[i];\n\t      nextName = nextNamePrefix + getComponentKey(child, i);\n\t      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n\t    }\n\t  } else {\n\t    var iteratorFn = getIteratorFn(children);\n\t    if (iteratorFn) {\n\t      var iterator = iteratorFn.call(children);\n\t      var step;\n\t      if (iteratorFn !== children.entries) {\n\t        var ii = 0;\n\t        while (!(step = iterator.next()).done) {\n\t          child = step.value;\n\t          nextName = nextNamePrefix + getComponentKey(child, ii++);\n\t          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n\t        }\n\t      } else {\n\t        if (false) {\n\t          var mapsAsChildrenAddendum = '';\n\t          if (ReactCurrentOwner.current) {\n\t            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();\n\t            if (mapsAsChildrenOwnerName) {\n\t              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';\n\t            }\n\t          }\n\t          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;\n\t          didWarnAboutMaps = true;\n\t        }\n\t        // Iterator will provide entry [k,v] tuples rather than values.\n\t        while (!(step = iterator.next()).done) {\n\t          var entry = step.value;\n\t          if (entry) {\n\t            child = entry[1];\n\t            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);\n\t            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n\t          }\n\t        }\n\t      }\n\t    } else if (type === 'object') {\n\t      var addendum = '';\n\t      if (false) {\n\t        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';\n\t        if (children._isReactElement) {\n\t          addendum = ' It looks like you\\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';\n\t        }\n\t        if (ReactCurrentOwner.current) {\n\t          var name = ReactCurrentOwner.current.getName();\n\t          if (name) {\n\t            addendum += ' Check the render method of `' + name + '`.';\n\t          }\n\t        }\n\t      }\n\t      var childrenString = String(children);\n\t       true ?  false ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;\n\t    }\n\t  }\n\t\n\t  return subtreeCount;\n\t}\n\t\n\t/**\n\t * Traverses children that are typically specified as `props.children`, but\n\t * might also be specified through attributes:\n\t *\n\t * - `traverseAllChildren(this.props.children, ...)`\n\t * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n\t *\n\t * The `traverseContext` is an optional argument that is passed through the\n\t * entire traversal. It can be used to store accumulations or anything else that\n\t * the callback might find relevant.\n\t *\n\t * @param {?*} children Children tree object.\n\t * @param {!function} callback To invoke upon traversing each child.\n\t * @param {?*} traverseContext Context for traversal.\n\t * @return {!number} The number of children in this subtree.\n\t */\n\tfunction traverseAllChildren(children, callback, traverseContext) {\n\t  if (children == null) {\n\t    return 0;\n\t  }\n\t\n\t  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n\t}\n\t\n\tmodule.exports = traverseAllChildren;\n\n/***/ },\n/* 82 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2016-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(19);\n\t\n\tvar ReactCurrentOwner = __webpack_require__(12);\n\t\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(2);\n\t\n\tfunction isNative(fn) {\n\t  // Based on isNative() from Lodash\n\t  var funcToString = Function.prototype.toString;\n\t  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\t  var reIsNative = RegExp('^' + funcToString\n\t  // Take an example native function source for comparison\n\t  .call(hasOwnProperty)\n\t  // Strip regex characters so we can use it for regex\n\t  .replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n\t  // Remove hasOwnProperty from the template to make it generic\n\t  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n\t  try {\n\t    var source = funcToString.call(fn);\n\t    return reIsNative.test(source);\n\t  } catch (err) {\n\t    return false;\n\t  }\n\t}\n\t\n\tvar canUseCollections =\n\t// Array.from\n\ttypeof Array.from === 'function' &&\n\t// Map\n\ttypeof Map === 'function' && isNative(Map) &&\n\t// Map.prototype.keys\n\tMap.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) &&\n\t// Set\n\ttypeof Set === 'function' && isNative(Set) &&\n\t// Set.prototype.keys\n\tSet.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);\n\t\n\tvar setItem;\n\tvar getItem;\n\tvar removeItem;\n\tvar getItemIDs;\n\tvar addRoot;\n\tvar removeRoot;\n\tvar getRootIDs;\n\t\n\tif (canUseCollections) {\n\t  var itemMap = new Map();\n\t  var rootIDSet = new Set();\n\t\n\t  setItem = function (id, item) {\n\t    itemMap.set(id, item);\n\t  };\n\t  getItem = function (id) {\n\t    return itemMap.get(id);\n\t  };\n\t  removeItem = function (id) {\n\t    itemMap['delete'](id);\n\t  };\n\t  getItemIDs = function () {\n\t    return Array.from(itemMap.keys());\n\t  };\n\t\n\t  addRoot = function (id) {\n\t    rootIDSet.add(id);\n\t  };\n\t  removeRoot = function (id) {\n\t    rootIDSet['delete'](id);\n\t  };\n\t  getRootIDs = function () {\n\t    return Array.from(rootIDSet.keys());\n\t  };\n\t} else {\n\t  var itemByKey = {};\n\t  var rootByKey = {};\n\t\n\t  // Use non-numeric keys to prevent V8 performance issues:\n\t  // https://github.com/facebook/react/pull/7232\n\t  var getKeyFromID = function (id) {\n\t    return '.' + id;\n\t  };\n\t  var getIDFromKey = function (key) {\n\t    return parseInt(key.substr(1), 10);\n\t  };\n\t\n\t  setItem = function (id, item) {\n\t    var key = getKeyFromID(id);\n\t    itemByKey[key] = item;\n\t  };\n\t  getItem = function (id) {\n\t    var key = getKeyFromID(id);\n\t    return itemByKey[key];\n\t  };\n\t  removeItem = function (id) {\n\t    var key = getKeyFromID(id);\n\t    delete itemByKey[key];\n\t  };\n\t  getItemIDs = function () {\n\t    return Object.keys(itemByKey).map(getIDFromKey);\n\t  };\n\t\n\t  addRoot = function (id) {\n\t    var key = getKeyFromID(id);\n\t    rootByKey[key] = true;\n\t  };\n\t  removeRoot = function (id) {\n\t    var key = getKeyFromID(id);\n\t    delete rootByKey[key];\n\t  };\n\t  getRootIDs = function () {\n\t    return Object.keys(rootByKey).map(getIDFromKey);\n\t  };\n\t}\n\t\n\tvar unmountedIDs = [];\n\t\n\tfunction purgeDeep(id) {\n\t  var item = getItem(id);\n\t  if (item) {\n\t    var childIDs = item.childIDs;\n\t\n\t    removeItem(id);\n\t    childIDs.forEach(purgeDeep);\n\t  }\n\t}\n\t\n\tfunction describeComponentFrame(name, source, ownerName) {\n\t  return '\\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');\n\t}\n\t\n\tfunction getDisplayName(element) {\n\t  if (element == null) {\n\t    return '#empty';\n\t  } else if (typeof element === 'string' || typeof element === 'number') {\n\t    return '#text';\n\t  } else if (typeof element.type === 'string') {\n\t    return element.type;\n\t  } else {\n\t    return element.type.displayName || element.type.name || 'Unknown';\n\t  }\n\t}\n\t\n\tfunction describeID(id) {\n\t  var name = ReactComponentTreeHook.getDisplayName(id);\n\t  var element = ReactComponentTreeHook.getElement(id);\n\t  var ownerID = ReactComponentTreeHook.getOwnerID(id);\n\t  var ownerName;\n\t  if (ownerID) {\n\t    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);\n\t  }\n\t   false ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;\n\t  return describeComponentFrame(name, element && element._source, ownerName);\n\t}\n\t\n\tvar ReactComponentTreeHook = {\n\t  onSetChildren: function (id, nextChildIDs) {\n\t    var item = getItem(id);\n\t    !item ?  false ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;\n\t    item.childIDs = nextChildIDs;\n\t\n\t    for (var i = 0; i < nextChildIDs.length; i++) {\n\t      var nextChildID = nextChildIDs[i];\n\t      var nextChild = getItem(nextChildID);\n\t      !nextChild ?  false ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;\n\t      !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ?  false ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;\n\t      !nextChild.isMounted ?  false ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;\n\t      if (nextChild.parentID == null) {\n\t        nextChild.parentID = id;\n\t        // TODO: This shouldn't be necessary but mounting a new root during in\n\t        // componentWillMount currently causes not-yet-mounted components to\n\t        // be purged from our tree data so their parent id is missing.\n\t      }\n\t      !(nextChild.parentID === id) ?  false ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;\n\t    }\n\t  },\n\t  onBeforeMountComponent: function (id, element, parentID) {\n\t    var item = {\n\t      element: element,\n\t      parentID: parentID,\n\t      text: null,\n\t      childIDs: [],\n\t      isMounted: false,\n\t      updateCount: 0\n\t    };\n\t    setItem(id, item);\n\t  },\n\t  onBeforeUpdateComponent: function (id, element) {\n\t    var item = getItem(id);\n\t    if (!item || !item.isMounted) {\n\t      // We may end up here as a result of setState() in componentWillUnmount().\n\t      // In this case, ignore the element.\n\t      return;\n\t    }\n\t    item.element = element;\n\t  },\n\t  onMountComponent: function (id) {\n\t    var item = getItem(id);\n\t    !item ?  false ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;\n\t    item.isMounted = true;\n\t    var isRoot = item.parentID === 0;\n\t    if (isRoot) {\n\t      addRoot(id);\n\t    }\n\t  },\n\t  onUpdateComponent: function (id) {\n\t    var item = getItem(id);\n\t    if (!item || !item.isMounted) {\n\t      // We may end up here as a result of setState() in componentWillUnmount().\n\t      // In this case, ignore the element.\n\t      return;\n\t    }\n\t    item.updateCount++;\n\t  },\n\t  onUnmountComponent: function (id) {\n\t    var item = getItem(id);\n\t    if (item) {\n\t      // We need to check if it exists.\n\t      // `item` might not exist if it is inside an error boundary, and a sibling\n\t      // error boundary child threw while mounting. Then this instance never\n\t      // got a chance to mount, but it still gets an unmounting event during\n\t      // the error boundary cleanup.\n\t      item.isMounted = false;\n\t      var isRoot = item.parentID === 0;\n\t      if (isRoot) {\n\t        removeRoot(id);\n\t      }\n\t    }\n\t    unmountedIDs.push(id);\n\t  },\n\t  purgeUnmountedComponents: function () {\n\t    if (ReactComponentTreeHook._preventPurging) {\n\t      // Should only be used for testing.\n\t      return;\n\t    }\n\t\n\t    for (var i = 0; i < unmountedIDs.length; i++) {\n\t      var id = unmountedIDs[i];\n\t      purgeDeep(id);\n\t    }\n\t    unmountedIDs.length = 0;\n\t  },\n\t  isMounted: function (id) {\n\t    var item = getItem(id);\n\t    return item ? item.isMounted : false;\n\t  },\n\t  getCurrentStackAddendum: function (topElement) {\n\t    var info = '';\n\t    if (topElement) {\n\t      var name = getDisplayName(topElement);\n\t      var owner = topElement._owner;\n\t      info += describeComponentFrame(name, topElement._source, owner && owner.getName());\n\t    }\n\t\n\t    var currentOwner = ReactCurrentOwner.current;\n\t    var id = currentOwner && currentOwner._debugID;\n\t\n\t    info += ReactComponentTreeHook.getStackAddendumByID(id);\n\t    return info;\n\t  },\n\t  getStackAddendumByID: function (id) {\n\t    var info = '';\n\t    while (id) {\n\t      info += describeID(id);\n\t      id = ReactComponentTreeHook.getParentID(id);\n\t    }\n\t    return info;\n\t  },\n\t  getChildIDs: function (id) {\n\t    var item = getItem(id);\n\t    return item ? item.childIDs : [];\n\t  },\n\t  getDisplayName: function (id) {\n\t    var element = ReactComponentTreeHook.getElement(id);\n\t    if (!element) {\n\t      return null;\n\t    }\n\t    return getDisplayName(element);\n\t  },\n\t  getElement: function (id) {\n\t    var item = getItem(id);\n\t    return item ? item.element : null;\n\t  },\n\t  getOwnerID: function (id) {\n\t    var element = ReactComponentTreeHook.getElement(id);\n\t    if (!element || !element._owner) {\n\t      return null;\n\t    }\n\t    return element._owner._debugID;\n\t  },\n\t  getParentID: function (id) {\n\t    var item = getItem(id);\n\t    return item ? item.parentID : null;\n\t  },\n\t  getSource: function (id) {\n\t    var item = getItem(id);\n\t    var element = item ? item.element : null;\n\t    var source = element != null ? element._source : null;\n\t    return source;\n\t  },\n\t  getText: function (id) {\n\t    var element = ReactComponentTreeHook.getElement(id);\n\t    if (typeof element === 'string') {\n\t      return element;\n\t    } else if (typeof element === 'number') {\n\t      return '' + element;\n\t    } else {\n\t      return null;\n\t    }\n\t  },\n\t  getUpdateCount: function (id) {\n\t    var item = getItem(id);\n\t    return item ? item.updateCount : 0;\n\t  },\n\t\n\t\n\t  getRootIDs: getRootIDs,\n\t  getRegisteredIDs: getItemIDs\n\t};\n\t\n\tmodule.exports = ReactComponentTreeHook;\n\n/***/ },\n/* 83 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2014-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\t// The Symbol used to tag the ReactElement type. If there is no native Symbol\n\t// nor polyfill, then a plain number is used for performance.\n\t\n\tvar REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;\n\t\n\tmodule.exports = REACT_ELEMENT_TYPE;\n\n/***/ },\n/* 84 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar canDefineProperty = false;\n\tif (false) {\n\t  try {\n\t    // $FlowFixMe https://github.com/facebook/flow/issues/285\n\t    Object.defineProperty({}, 'x', { get: function () {} });\n\t    canDefineProperty = true;\n\t  } catch (x) {\n\t    // IE will fail on defineProperty\n\t  }\n\t}\n\t\n\tmodule.exports = canDefineProperty;\n\n/***/ },\n/* 85 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\"use strict\";\n\t\n\t// Use the fastest means possible to execute a task in its own turn, with\n\t// priority over other events including IO, animation, reflow, and redraw\n\t// events in browsers.\n\t//\n\t// An exception thrown by a task will permanently interrupt the processing of\n\t// subsequent tasks. The higher level `asap` function ensures that if an\n\t// exception is thrown by a task, that the task queue will continue flushing as\n\t// soon as possible, but if you use `rawAsap` directly, you are responsible to\n\t// either ensure that no exceptions are thrown from your task, or to manually\n\t// call `rawAsap.requestFlush` if an exception is thrown.\n\tmodule.exports = rawAsap;\n\tfunction rawAsap(task) {\n\t    if (!queue.length) {\n\t        requestFlush();\n\t        flushing = true;\n\t    }\n\t    // Equivalent to push, but avoids a function call.\n\t    queue[queue.length] = task;\n\t}\n\t\n\tvar queue = [];\n\t// Once a flush has been requested, no further calls to `requestFlush` are\n\t// necessary until the next `flush` completes.\n\tvar flushing = false;\n\t// `requestFlush` is an implementation-specific method that attempts to kick\n\t// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n\t// the event queue before yielding to the browser's own event loop.\n\tvar requestFlush;\n\t// The position of the next task to execute in the task queue. This is\n\t// preserved between calls to `flush` so that it can be resumed if\n\t// a task throws an exception.\n\tvar index = 0;\n\t// If a task schedules additional tasks recursively, the task queue can grow\n\t// unbounded. To prevent memory exhaustion, the task queue will periodically\n\t// truncate already-completed tasks.\n\tvar capacity = 1024;\n\t\n\t// The flush function processes all tasks that have been scheduled with\n\t// `rawAsap` unless and until one of those tasks throws an exception.\n\t// If a task throws an exception, `flush` ensures that its state will remain\n\t// consistent and will resume where it left off when called again.\n\t// However, `flush` does not make any arrangements to be called again if an\n\t// exception is thrown.\n\tfunction flush() {\n\t    while (index < queue.length) {\n\t        var currentIndex = index;\n\t        // Advance the index before calling the task. This ensures that we will\n\t        // begin flushing on the next task the task throws an error.\n\t        index = index + 1;\n\t        queue[currentIndex].call();\n\t        // Prevent leaking memory for long chains of recursive calls to `asap`.\n\t        // If we call `asap` within tasks scheduled by `asap`, the queue will\n\t        // grow, but to avoid an O(n) walk for every task we execute, we don't\n\t        // shift tasks off the queue after they have been executed.\n\t        // Instead, we periodically shift 1024 tasks off the queue.\n\t        if (index > capacity) {\n\t            // Manually shift all values starting at the index back to the\n\t            // beginning of the queue.\n\t            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n\t                queue[scan] = queue[scan + index];\n\t            }\n\t            queue.length -= index;\n\t            index = 0;\n\t        }\n\t    }\n\t    queue.length = 0;\n\t    index = 0;\n\t    flushing = false;\n\t}\n\t\n\t// `requestFlush` is implemented using a strategy based on data collected from\n\t// every available SauceLabs Selenium web driver worker at time of writing.\n\t// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\t\n\t// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n\t// have WebKitMutationObserver but not un-prefixed MutationObserver.\n\t// Must use `global` or `self` instead of `window` to work in both frames and web\n\t// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\t\n\t/* globals self */\n\tvar scope = typeof global !== \"undefined\" ? global : self;\n\tvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\t\n\t// MutationObservers are desirable because they have high priority and work\n\t// reliably everywhere they are implemented.\n\t// They are implemented in all modern browsers.\n\t//\n\t// - Android 4-4.3\n\t// - Chrome 26-34\n\t// - Firefox 14-29\n\t// - Internet Explorer 11\n\t// - iPad Safari 6-7.1\n\t// - iPhone Safari 7-7.1\n\t// - Safari 6-7\n\tif (typeof BrowserMutationObserver === \"function\") {\n\t    requestFlush = makeRequestCallFromMutationObserver(flush);\n\t\n\t// MessageChannels are desirable because they give direct access to the HTML\n\t// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n\t// 11-12, and in web workers in many engines.\n\t// Although message channels yield to any queued rendering and IO tasks, they\n\t// would be better than imposing the 4ms delay of timers.\n\t// However, they do not work reliably in Internet Explorer or Safari.\n\t\n\t// Internet Explorer 10 is the only browser that has setImmediate but does\n\t// not have MutationObservers.\n\t// Although setImmediate yields to the browser's renderer, it would be\n\t// preferrable to falling back to setTimeout since it does not have\n\t// the minimum 4ms penalty.\n\t// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n\t// Desktop to a lesser extent) that renders both setImmediate and\n\t// MessageChannel useless for the purposes of ASAP.\n\t// https://github.com/kriskowal/q/issues/396\n\t\n\t// Timers are implemented universally.\n\t// We fall back to timers in workers in most engines, and in foreground\n\t// contexts in the following browsers.\n\t// However, note that even this simple case requires nuances to operate in a\n\t// broad spectrum of browsers.\n\t//\n\t// - Firefox 3-13\n\t// - Internet Explorer 6-9\n\t// - iPad Safari 4.3\n\t// - Lynx 2.8.7\n\t} else {\n\t    requestFlush = makeRequestCallFromTimer(flush);\n\t}\n\t\n\t// `requestFlush` requests that the high priority event queue be flushed as\n\t// soon as possible.\n\t// This is useful to prevent an error thrown in a task from stalling the event\n\t// queue if the exception handled by Node.js’s\n\t// `process.on(\"uncaughtException\")` or by a domain.\n\trawAsap.requestFlush = requestFlush;\n\t\n\t// To request a high priority event, we induce a mutation observer by toggling\n\t// the text of a text node between \"1\" and \"-1\".\n\tfunction makeRequestCallFromMutationObserver(callback) {\n\t    var toggle = 1;\n\t    var observer = new BrowserMutationObserver(callback);\n\t    var node = document.createTextNode(\"\");\n\t    observer.observe(node, {characterData: true});\n\t    return function requestCall() {\n\t        toggle = -toggle;\n\t        node.data = toggle;\n\t    };\n\t}\n\t\n\t// The message channel technique was discovered by Malte Ubl and was the\n\t// original foundation for this library.\n\t// http://www.nonblocking.io/2011/06/windownexttick.html\n\t\n\t// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n\t// page's first load. Thankfully, this version of Safari supports\n\t// MutationObservers, so we don't need to fall back in that case.\n\t\n\t// function makeRequestCallFromMessageChannel(callback) {\n\t//     var channel = new MessageChannel();\n\t//     channel.port1.onmessage = callback;\n\t//     return function requestCall() {\n\t//         channel.port2.postMessage(0);\n\t//     };\n\t// }\n\t\n\t// For reasons explained above, we are also unable to use `setImmediate`\n\t// under any circumstances.\n\t// Even if we were, there is another bug in Internet Explorer 10.\n\t// It is not sufficient to assign `setImmediate` to `requestFlush` because\n\t// `setImmediate` must be called *by name* and therefore must be wrapped in a\n\t// closure.\n\t// Never forget.\n\t\n\t// function makeRequestCallFromSetImmediate(callback) {\n\t//     return function requestCall() {\n\t//         setImmediate(callback);\n\t//     };\n\t// }\n\t\n\t// Safari 6.0 has a problem where timers will get lost while the user is\n\t// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n\t// mutation observers, so that implementation is used instead.\n\t// However, if we ever elect to use timers in Safari, the prevalent work-around\n\t// is to add a scroll event listener that calls for a flush.\n\t\n\t// `setTimeout` does not call the passed callback if the delay is less than\n\t// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n\t// even then.\n\t\n\tfunction makeRequestCallFromTimer(callback) {\n\t    return function requestCall() {\n\t        // We dispatch a timeout with a specified delay of 0 for engines that\n\t        // can reliably accommodate that request. This will usually be snapped\n\t        // to a 4 milisecond delay, but once we're flushing, there's no delay\n\t        // between events.\n\t        var timeoutHandle = setTimeout(handleTimer, 0);\n\t        // However, since this timer gets frequently dropped in Firefox\n\t        // workers, we enlist an interval handle that will try to fire\n\t        // an event 20 times per second until it succeeds.\n\t        var intervalHandle = setInterval(handleTimer, 50);\n\t\n\t        function handleTimer() {\n\t            // Whichever timer succeeds will cancel both timers and\n\t            // execute the callback.\n\t            clearTimeout(timeoutHandle);\n\t            clearInterval(intervalHandle);\n\t            callback();\n\t        }\n\t    };\n\t}\n\t\n\t// This is for `asap.js` only.\n\t// Its name will be periodically randomized to break any code that depends on\n\t// its existence.\n\trawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\t\n\t// ASAP was originally a nextTick shim included in Q. This was factored out\n\t// into this ASAP package. It was later adapted to RSVP which made further\n\t// amendments. These decisions, particularly to marginalize MessageChannel and\n\t// to capture the MutationObserver implementation in a closure, were integrated\n\t// back into ASAP proper.\n\t// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 86 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(51);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _PuzzleSVGBasic = __webpack_require__(87);\n\t\n\tvar _PuzzleSVGBasic2 = _interopRequireDefault(_PuzzleSVGBasic);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar App = function (_Component) {\n\t  _inherits(App, _Component);\n\t\n\t  function App(props) {\n\t    _classCallCheck(this, App);\n\t\n\t    var _this = _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).call(this, props));\n\t\n\t    _this.handleRowDown = function () {\n\t      _this.setState(function (prevState) {\n\t        return { rows: prevState.rows - 1 };\n\t      });\n\t    };\n\t\n\t    _this.handleRowUp = function () {\n\t      _this.setState(function (prevState) {\n\t        return { rows: prevState.rows + 1 };\n\t      });\n\t    };\n\t\n\t    _this.handleColDown = function () {\n\t      _this.setState(function (prevState) {\n\t        return { cols: prevState.cols - 1 };\n\t      });\n\t    };\n\t\n\t    _this.handleColUp = function () {\n\t      _this.setState(function (prevState) {\n\t        return { cols: prevState.cols + 1 };\n\t      });\n\t    };\n\t\n\t    _this.state = {\n\t      rows: 2,\n\t      cols: 2\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  _createClass(App, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _state = this.state,\n\t          rows = _state.rows,\n\t          cols = _state.cols;\n\t\n\t      return _react2.default.createElement(\n\t        'div',\n\t        null,\n\t        _react2.default.createElement(\n\t          'button',\n\t          { onClick: this.handleRowDown },\n\t          '<'\n\t        ),\n\t        ' ',\n\t        rows,\n\t        ' Rows ',\n\t        _react2.default.createElement(\n\t          'button',\n\t          { onClick: this.handleRowUp },\n\t          '>'\n\t        ),\n\t        _react2.default.createElement(\n\t          'button',\n\t          { onClick: this.handleColDown },\n\t          '<'\n\t        ),\n\t        ' ',\n\t        cols,\n\t        ' Cols ',\n\t        _react2.default.createElement(\n\t          'button',\n\t          { onClick: this.handleColUp },\n\t          '>'\n\t        ),\n\t        _react2.default.createElement('br', null),\n\t        _react2.default.createElement(_PuzzleSVGBasic2.default, { cols: cols, rows: rows, seed: '123', piece_width: 25.4, piece_height: 25.4, dpi: 96, margin: .25 * 25.4, kerf: .004 * 25.4, strokeWidth: .001 * 25.4 })\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return App;\n\t}(_react.Component);\n\t\n\texports.default = App;\n\n/***/ },\n/* 87 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _react = __webpack_require__(51);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _seedrandom = __webpack_require__(197);\n\t\n\tvar _seedrandom2 = _interopRequireDefault(_seedrandom);\n\t\n\tvar _makerjs = __webpack_require__(109);\n\t\n\tvar _makerjs2 = _interopRequireDefault(_makerjs);\n\t\n\tvar _clone = __webpack_require__(92);\n\t\n\tvar _clone2 = _interopRequireDefault(_clone);\n\t\n\tvar _Logo3x = __webpack_require__(106);\n\t\n\tvar _Logo3x2 = _interopRequireDefault(_Logo3x);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar pt2str = function pt2str(_ref) {\n\t  var _ref2 = _slicedToArray(_ref, 2),\n\t      x = _ref2[0],\n\t      y = _ref2[1];\n\t\n\t  return x + \" \" + y;\n\t};\n\tvar lerp = function lerp(pt1, pt2, t) {\n\t  return [pt1[0] * (1 - t) + pt2[0] * t, pt1[1] * (1 - t) + pt2[1] * t];\n\t};\n\tvar add = function add(pt1, pt2) {\n\t  return [pt1[0] + pt2[0], pt1[1] + pt2[1]];\n\t};\n\t\n\tvar appendEdge = function appendEdge(pts, edge) {\n\t  if (edge.length === 2) {\n\t    pts.push(\"L \" + pt2str(edge[1]));\n\t  } else {\n\t    pts.push(\"L \" + pt2str(lerp(edge[0], edge[1], .5)));\n\t    pts.push(\"Q \" + pt2str(edge[1]) + \" \" + pt2str(lerp(edge[1], edge[2], .5)));\n\t    pts.push(\"T \" + pt2str(lerp(edge[2], edge[3], .5)));\n\t    pts.push(\"T \" + pt2str(lerp(edge[3], edge[4], .5)));\n\t    pts.push(\"T \" + pt2str(lerp(edge[4], edge[5], .5)));\n\t    pts.push(\"L \" + pt2str(edge[5]));\n\t\n\t    /*\n\t        let e0_5 = lerp(edge[0], edge[1], .5);\n\t        let e1_5 = lerp(edge[1], edge[2], .5);\n\t        let e2_5 = lerp(edge[2], edge[3], .5);\n\t        let e3_5 = lerp(edge[3], edge[4], .5);\n\t        let e4_5 = lerp(edge[4], edge[5], .5);\n\t    \n\t        let bez = quadraticBezierInterp(e0_5, edge[1], e1_5, 10);\n\t        for(let i = 0; i < bez.length-1; i++) {\n\t          pts.push(\"L \" + pt2str(bez[i]));\n\t        }\n\t    \n\t        bez = quadraticBezierInterp(e1_5, edge[2], e2_5, 10);\n\t        for(let i = 0; i < bez.length-1; i++) {\n\t          pts.push(\"L \" + pt2str(bez[i]));\n\t        }\n\t    \n\t        bez = quadraticBezierInterp(e2_5, edge[3], e3_5, 10);\n\t        for(let i = 0; i < bez.length-1; i++) {\n\t          pts.push(\"L \" + pt2str(bez[i]));\n\t        }\n\t    \n\t        bez = quadraticBezierInterp(e3_5, edge[4], e4_5, 10);\n\t        for(let i = 0; i < bez.length; i++) {\n\t          pts.push(\"L \" + pt2str(bez[i]));\n\t        }\n\t        pts.push(\"L \" + pt2str(edge[5]));\n\t        */\n\t\n\t    //    let bez = cubicBezierInterp(edge[1], edge[2], edge[3], edge[4], 30);\n\t    //    for(let i = 0; i < bez.length; i++) {\n\t    //      pts.push(\"L \" + pt2str(bez[i]));\n\t    //    }\n\t    //    pts.push(\"C \" + pt2str(edge[2]) + \" \" + pt2str(edge[3]) + \" \" + pt2str(edge[4]));\n\t\n\t    //    pts.push(\"L \" + pt2str(edge[1]));\n\t    //    pts.push(\"L \" + pt2str(edge[2]));\n\t    //    pts.push(\"L \" + pt2str(edge[3]));\n\t    //    pts.push(\"L \" + pt2str(edge[4]));\n\t    //    pts.push(\"L \" + pt2str(edge[5]));\n\t  }\n\t};\n\t\n\tvar PuzzleSVGBasic = function (_Component) {\n\t  _inherits(PuzzleSVGBasic, _Component);\n\t\n\t  function PuzzleSVGBasic() {\n\t    _classCallCheck(this, PuzzleSVGBasic);\n\t\n\t    return _possibleConstructorReturn(this, (PuzzleSVGBasic.__proto__ || Object.getPrototypeOf(PuzzleSVGBasic)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(PuzzleSVGBasic, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _props = this.props,\n\t          seed = _props.seed,\n\t          piece_width = _props.piece_width,\n\t          piece_height = _props.piece_height,\n\t          strokeWidth = _props.strokeWidth,\n\t          margin = _props.margin,\n\t          cols = _props.cols,\n\t          rows = _props.rows;\n\t\n\t\n\t      var rng = (0, _seedrandom2.default)(seed);\n\t      var crng = function crng(m) {\n\t        return m * (rng() - .5);\n\t      };\n\t\n\t      var w = piece_width;\n\t      var h = piece_height;\n\t\n\t      var points = [];\n\t\n\t      var pointOffsetXMax = .25 * w;\n\t      var pointOffsetYMax = .25 * h;\n\t\n\t      var controlPointOffsetXMax = w * .083;\n\t      var controlPointOffsetYMax = h * .083;\n\t\n\t      var controlT1H = .50;\n\t      var controlT2H = .33;\n\t      var controlT3H = .67;\n\t      var controlT4H = .50;\n\t\n\t      var controlT1V = .5;\n\t      var controlT2V = .33;\n\t      var controlT3V = .67;\n\t      var controlT4V = .5;\n\t\n\t      for (var r = 0; r < rows + 1; r++) {\n\t        var row = [];\n\t        points.push(row);\n\t        for (var c = 0; c < cols + 1; c++) {\n\t          var x = c * piece_width;\n\t          var y = r * piece_height;\n\t          if (r !== 0 && r !== rows) {\n\t            y += crng(pointOffsetYMax);\n\t          }\n\t\n\t          if (c !== 0 && c !== cols) {\n\t            x += crng(pointOffsetXMax);\n\t          }\n\t\n\t          row.push([x, y]);\n\t        }\n\t      }\n\t\n\t      var horizontal_edges = [];\n\t      for (var _r = 0; _r < rows + 1; _r++) {\n\t        var _row = [];\n\t        horizontal_edges.push(_row);\n\t        for (var _c = 0; _c < cols; _c++) {\n\t          var pt1 = points[_r][_c];\n\t          var pt2 = points[_r][_c + 1];\n\t\n\t          if (_r === 0 || _r === rows) {\n\t            _row.push([pt1, pt2]);\n\t          } else {\n\t            var up = 2 * Math.floor(2 * rng()) - 1;\n\t\n\t            _row.push([pt1, add(lerp(pt1, pt2, controlT1H), [crng(controlPointOffsetXMax), crng(controlPointOffsetYMax)]), add(lerp(pt1, pt2, controlT2H), [crng(controlPointOffsetXMax), up * .33 * h + crng(controlPointOffsetYMax)]), add(lerp(pt1, pt2, controlT3H), [crng(controlPointOffsetXMax), up * .33 * h + crng(controlPointOffsetYMax)]), add(lerp(pt1, pt2, controlT4H), [crng(controlPointOffsetXMax), crng(controlPointOffsetYMax)]), pt2]);\n\t          }\n\t        }\n\t      }\n\t\n\t      var vertical_edges = [];\n\t      for (var _r2 = 0; _r2 < rows; _r2++) {\n\t        var _row2 = [];\n\t        vertical_edges.push(_row2);\n\t        for (var _c2 = 0; _c2 < cols + 1; _c2++) {\n\t          var _pt = points[_r2][_c2];\n\t          var _pt2 = points[_r2 + 1][_c2];\n\t\n\t          if (_c2 === 0 || _c2 === cols) {\n\t            _row2.push([_pt, _pt2]);\n\t          } else {\n\t            var left = 2 * Math.floor(2 * rng()) - 1;\n\t            _row2.push([_pt, add(lerp(_pt, _pt2, controlT1V), [crng(controlPointOffsetYMax), crng(controlPointOffsetYMax)]), add(lerp(_pt, _pt2, controlT2V), [left * .33 * h + crng(controlPointOffsetYMax), crng(controlPointOffsetYMax)]), add(lerp(_pt, _pt2, controlT3V), [left * .33 * h + crng(controlPointOffsetYMax), crng(controlPointOffsetYMax)]), add(lerp(_pt, _pt2, controlT4V), [crng(controlPointOffsetYMax), crng(controlPointOffsetYMax)]), _pt2]);\n\t          }\n\t        }\n\t      }\n\t      var puzzle_width = piece_width * cols;\n\t      var puzzle_height = piece_height * rows;\n\t      var width = puzzle_width + strokeWidth + margin * 2 + 10 * cols + 60;\n\t      var height = puzzle_height + strokeWidth + margin * 2 + 60 * rows;\n\t      //let width = 18*25.4;\n\t      //let height = 6*25.4;\n\t      // let height = 10*25.4;\n\t\n\t      var pieces = [];\n\t\n\t      for (var _r3 = 0; _r3 < rows; _r3++) {\n\t        for (var _c3 = 0; _c3 < cols; _c3++) {\n\t          //        if(!(r == 0 && c == 0)) continue;\n\t          var pts = [];\n\t\n\t          var edge1 = horizontal_edges[_r3][_c3];\n\t          var edge2 = vertical_edges[_r3][_c3 + 1];\n\t          var edge3 = horizontal_edges[_r3 + 1][_c3].slice().reverse();\n\t          var edge4 = vertical_edges[_r3][_c3].slice().reverse();\n\t\n\t          pts.push(\"M \" + pt2str(edge1[0]));\n\t          appendEdge(pts, edge1);\n\t          appendEdge(pts, edge2);\n\t          appendEdge(pts, edge3);\n\t          appendEdge(pts, edge4);\n\t          pts[pts.length - 1] = \"Z\";\n\t\n\t          var outline = pts.join(\" \");\n\t          var outline_model = _makerjs2.default.importer.fromSVGPathData(outline, { bezierAccuracy: .001 });\n\t\n\t          var stick_height = 2.875 * 25.4;\n\t          var stick_width = .375 * 25.4;\n\t\n\t          var attachment_width = .7;\n\t          var attachment_height = 13;\n\t          var attachment_spacing = 1;\n\t          var stick_model = {\n\t            models: {\n\t              stick: new _makerjs2.default.models.Oval(stick_width, stick_height)\n\t            }\n\t          };\n\t\n\t          var attachment_model = {\n\t            models: {\n\t              attachment_left: new _makerjs2.default.models.Rectangle(attachment_width, attachment_height),\n\t              attachment_right: new _makerjs2.default.models.Rectangle(attachment_width, attachment_height)\n\t            }\n\t          };\n\t\n\t          attachment_model.models.attachment_left.origin = [attachment_spacing, stick_height - stick_width * .5];\n\t          attachment_model.models.attachment_right.origin = [stick_width - attachment_width - attachment_spacing, stick_height - stick_width * .5];\n\t\n\t          _makerjs2.default.model.rotate(stick_model, -45);\n\t          _makerjs2.default.model.rotate(attachment_model, -45);\n\t\n\t          //        const corner = nrng(4);\n\t          var corner = 0;\n\t          switch (corner) {\n\t            case 0:\n\t              // lower left\n\t              stick_model.origin = [-.5 - .25 * Math.sqrt(2) * stick_width - .5 * Math.sqrt(2) * stick_height + edge4[0][0], -.5 + .25 * Math.sqrt(2) * stick_width - .5 * Math.sqrt(2) * stick_height - edge4[0][1]];\n\t              break;\n\t            case 1:\n\t              // lower right\n\t              _makerjs2.default.model.rotate(stick_model, 90);\n\t              _makerjs2.default.model.rotate(attachment_model, 90);\n\t              stick_model.origin = [.5 - .25 * Math.sqrt(2) * stick_width + .5 * Math.sqrt(2) * stick_height + edge3[0][0], -.5 - .25 * Math.sqrt(2) * stick_width - .5 * Math.sqrt(2) * stick_height - edge3[0][1]];\n\t              break;\n\t            case 2:\n\t              // upper right\n\t              _makerjs2.default.model.rotate(stick_model, 180);\n\t              _makerjs2.default.model.rotate(attachment_model, 180);\n\t              stick_model.origin = [.5 + .25 * Math.sqrt(2) * stick_width + .5 * Math.sqrt(2) * stick_height + edge2[0][0], .5 - .25 * Math.sqrt(2) * stick_width + .5 * Math.sqrt(2) * stick_height - edge2[0][1]];\n\t              break;\n\t            default:\n\t              // upper left\n\t              _makerjs2.default.model.rotate(stick_model, -90);\n\t              _makerjs2.default.model.rotate(attachment_model, -90);\n\t              stick_model.origin = [-.5 + .25 * Math.sqrt(2) * stick_width - .5 * Math.sqrt(2) * stick_height + edge1[0][0], .5 + .25 * Math.sqrt(2) * stick_width + .5 * Math.sqrt(2) * stick_height - edge1[0][1]];\n\t              break;\n\t          }\n\t\n\t          attachment_model.origin = (0, _clone2.default)(stick_model.origin);\n\t\n\t          var outline_output = _makerjs2.default.exporter.toSVGPathData(outline_model, false, [0, 0]);\n\t\n\t          _makerjs2.default.model.combineUnion(outline_model, attachment_model);\n\t          _makerjs2.default.model.combineUnion({ models: [outline_model, attachment_model] }, stick_model);\n\t\n\t          var output = _makerjs2.default.exporter.toSVGPathData({ models: [attachment_model, outline_model, stick_model] }, false, [0, 0]);\n\t\n\t          if (!outline) {\n\t            console.log(\"Couldn't generate outline for \" + _r3 + \", \" + _c3);\n\t            pieces.push(_react2.default.createElement(\n\t              'g',\n\t              { key: _r3 + \",\" + _c3, transform: \"translate(\" + 0 * _c3 + \", \" + 0 * _r3 + \")\" },\n\t              _react2.default.createElement('path', { d: pts.join(\" \"), fill: 'url(#mypattern)', strokeWidth: strokeWidth, stroke: 'black' })\n\t            ));\n\t          }\n\t\n\t          pieces.push(_react2.default.createElement(\n\t            'g',\n\t            { key: _r3 + \",\" + _c3 },\n\t            _react2.default.createElement(\n\t              'g',\n\t              { transform: \"translate(\" + (_c3 * 10 + 60) + \",\" + _r3 * 60 + \")\" },\n\t              _react2.default.createElement('path', { d: outline_output, fill: 'url(#mypattern)' }),\n\t              _react2.default.createElement('path', { d: output, fill: 'none', strokeWidth: strokeWidth, stroke: 'black' })\n\t            )\n\t          ));\n\t        }\n\t      }\n\t\n\t      return _react2.default.createElement(\n\t        'svg',\n\t        { width: '100%', viewBox: \"0 0 \" + width + \" \" + height, xmlns: 'http://www.w3.org/2000/svg' },\n\t        _react2.default.createElement(\n\t          'defs',\n\t          null,\n\t          _react2.default.createElement(\n\t            'pattern',\n\t            { id: 'mypattern', width: puzzle_width, height: puzzle_height, patternUnits: 'userSpaceOnUse' },\n\t            _react2.default.createElement('image', { x: 0, y: 0, width: puzzle_width, height: puzzle_height, xlinkHref: _Logo3x2.default })\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          'g',\n\t          { transform: \"translate(\" + (margin + strokeWidth * .5) + \", \" + (margin + strokeWidth * .5) + \")\" },\n\t          pieces\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return PuzzleSVGBasic;\n\t}(_react.Component);\n\t\n\texports.default = PuzzleSVGBasic;\n\n/***/ },\n/* 88 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _react = __webpack_require__(51);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactDom = __webpack_require__(118);\n\t\n\tvar _reactDom2 = _interopRequireDefault(_reactDom);\n\t\n\tvar _AppBasic = __webpack_require__(86);\n\t\n\tvar _AppBasic2 = _interopRequireDefault(_AppBasic);\n\t\n\t__webpack_require__(93);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_reactDom2.default.render(_react2.default.createElement(_AppBasic2.default, null), document.getElementById('root'));\n\n/***/ },\n/* 89 */\n/***/ function(module, exports) {\n\n\t'use strict'\n\t\n\texports.byteLength = byteLength\n\texports.toByteArray = toByteArray\n\texports.fromByteArray = fromByteArray\n\t\n\tvar lookup = []\n\tvar revLookup = []\n\tvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\t\n\tvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n\tfor (var i = 0, len = code.length; i < len; ++i) {\n\t  lookup[i] = code[i]\n\t  revLookup[code.charCodeAt(i)] = i\n\t}\n\t\n\trevLookup['-'.charCodeAt(0)] = 62\n\trevLookup['_'.charCodeAt(0)] = 63\n\t\n\tfunction placeHoldersCount (b64) {\n\t  var len = b64.length\n\t  if (len % 4 > 0) {\n\t    throw new Error('Invalid string. Length must be a multiple of 4')\n\t  }\n\t\n\t  // the number of equal signs (place holders)\n\t  // if there are two placeholders, than the two characters before it\n\t  // represent one byte\n\t  // if there is only one, then the three characters before it represent 2 bytes\n\t  // this is just a cheap hack to not do indexOf twice\n\t  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n\t}\n\t\n\tfunction byteLength (b64) {\n\t  // base64 is 4/3 + up to two characters of the original data\n\t  return b64.length * 3 / 4 - placeHoldersCount(b64)\n\t}\n\t\n\tfunction toByteArray (b64) {\n\t  var i, j, l, tmp, placeHolders, arr\n\t  var len = b64.length\n\t  placeHolders = placeHoldersCount(b64)\n\t\n\t  arr = new Arr(len * 3 / 4 - placeHolders)\n\t\n\t  // if there are placeholders, only get up to the last complete 4 chars\n\t  l = placeHolders > 0 ? len - 4 : len\n\t\n\t  var L = 0\n\t\n\t  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n\t    arr[L++] = (tmp >> 16) & 0xFF\n\t    arr[L++] = (tmp >> 8) & 0xFF\n\t    arr[L++] = tmp & 0xFF\n\t  }\n\t\n\t  if (placeHolders === 2) {\n\t    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n\t    arr[L++] = tmp & 0xFF\n\t  } else if (placeHolders === 1) {\n\t    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n\t    arr[L++] = (tmp >> 8) & 0xFF\n\t    arr[L++] = tmp & 0xFF\n\t  }\n\t\n\t  return arr\n\t}\n\t\n\tfunction tripletToBase64 (num) {\n\t  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n\t}\n\t\n\tfunction encodeChunk (uint8, start, end) {\n\t  var tmp\n\t  var output = []\n\t  for (var i = start; i < end; i += 3) {\n\t    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t    output.push(tripletToBase64(tmp))\n\t  }\n\t  return output.join('')\n\t}\n\t\n\tfunction fromByteArray (uint8) {\n\t  var tmp\n\t  var len = uint8.length\n\t  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n\t  var output = ''\n\t  var parts = []\n\t  var maxChunkLength = 16383 // must be multiple of 3\n\t\n\t  // go through the array every three bytes, we'll deal with trailing stuff later\n\t  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n\t    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n\t  }\n\t\n\t  // pad the end with zeros, but make sure to not forget the extra bytes\n\t  if (extraBytes === 1) {\n\t    tmp = uint8[len - 1]\n\t    output += lookup[tmp >> 2]\n\t    output += lookup[(tmp << 4) & 0x3F]\n\t    output += '=='\n\t  } else if (extraBytes === 2) {\n\t    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n\t    output += lookup[tmp >> 10]\n\t    output += lookup[(tmp >> 4) & 0x3F]\n\t    output += lookup[(tmp << 2) & 0x3F]\n\t    output += '='\n\t  }\n\t\n\t  parts.push(output)\n\t\n\t  return parts.join('')\n\t}\n\n\n/***/ },\n/* 90 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(52);\n\n\n/***/ },\n/* 91 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function() {\n\t  \"use strict\";\n\t\n\t  var utils = __webpack_require__(53);\n\t\n\t  /**\n\t   * Poly Bezier\n\t   * @param {[type]} curves [description]\n\t   */\n\t  var PolyBezier = function(curves) {\n\t    this.curves = [];\n\t    this._3d = false;\n\t    if(!!curves) {\n\t      this.curves = curves;\n\t      this._3d = this.curves[0]._3d;\n\t    }\n\t  }\n\t\n\t  PolyBezier.prototype = {\n\t    valueOf: function() {\n\t      return this.toString();\n\t    },\n\t    toString: function() {\n\t      return \"[\" + this.curves.map(function(curve) {\n\t        return utils.pointsToString(curve.points);\n\t      }).join(\", \") + \"]\";\n\t    },\n\t    addCurve: function(curve) {\n\t      this.curves.push(curve);\n\t      this._3d = this._3d || curve._3d;\n\t    },\n\t    length: function() {\n\t      return this.curves.map(function(v) { return v.length(); }).reduce(function(a,b) { return a+b; });\n\t    },\n\t    curve: function(idx) {\n\t      return this.curves[idx];\n\t    },\n\t    bbox: function() {\n\t      var c = this.curves;\n\t      var bbox = c[0].bbox();\n\t      for(var i=1; i<c.length; i++) {\n\t        utils.expandbox(bbox, c[i].bbox());\n\t      }\n\t      return bbox;\n\t    },\n\t    offset: function(d) {\n\t      var offset = [];\n\t      this.curves.forEach(function(v) {\n\t        offset = offset.concat(v.offset(d));\n\t      });\n\t      return new PolyBezier(offset);\n\t    }\n\t  };\n\t\n\t  module.exports = PolyBezier;\n\t}());\n\n\n/***/ },\n/* 92 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {var clone = (function() {\n\t'use strict';\n\t\n\tfunction _instanceof(obj, type) {\n\t  return type != null && obj instanceof type;\n\t}\n\t\n\tvar nativeMap;\n\ttry {\n\t  nativeMap = Map;\n\t} catch(_) {\n\t  // maybe a reference error because no `Map`. Give it a dummy value that no\n\t  // value will ever be an instanceof.\n\t  nativeMap = function() {};\n\t}\n\t\n\tvar nativeSet;\n\ttry {\n\t  nativeSet = Set;\n\t} catch(_) {\n\t  nativeSet = function() {};\n\t}\n\t\n\tvar nativePromise;\n\ttry {\n\t  nativePromise = Promise;\n\t} catch(_) {\n\t  nativePromise = function() {};\n\t}\n\t\n\t/**\n\t * Clones (copies) an Object using deep copying.\n\t *\n\t * This function supports circular references by default, but if you are certain\n\t * there are no circular references in your object, you can save some CPU time\n\t * by calling clone(obj, false).\n\t *\n\t * Caution: if `circular` is false and `parent` contains circular references,\n\t * your program may enter an infinite loop and crash.\n\t *\n\t * @param `parent` - the object to be cloned\n\t * @param `circular` - set to true if the object to be cloned may contain\n\t *    circular references. (optional - true by default)\n\t * @param `depth` - set to a number if the object is only to be cloned to\n\t *    a particular depth. (optional - defaults to Infinity)\n\t * @param `prototype` - sets the prototype to be used when cloning an object.\n\t *    (optional - defaults to parent prototype).\n\t * @param `includeNonEnumerable` - set to true if the non-enumerable properties\n\t *    should be cloned as well. Non-enumerable properties on the prototype\n\t *    chain will be ignored. (optional - false by default)\n\t*/\n\tfunction clone(parent, circular, depth, prototype, includeNonEnumerable) {\n\t  if (typeof circular === 'object') {\n\t    depth = circular.depth;\n\t    prototype = circular.prototype;\n\t    includeNonEnumerable = circular.includeNonEnumerable;\n\t    circular = circular.circular;\n\t  }\n\t  // maintain two arrays for circular references, where corresponding parents\n\t  // and children have the same index\n\t  var allParents = [];\n\t  var allChildren = [];\n\t\n\t  var useBuffer = typeof Buffer != 'undefined';\n\t\n\t  if (typeof circular == 'undefined')\n\t    circular = true;\n\t\n\t  if (typeof depth == 'undefined')\n\t    depth = Infinity;\n\t\n\t  // recurse this function so we don't reset allParents and allChildren\n\t  function _clone(parent, depth) {\n\t    // cloning null always returns null\n\t    if (parent === null)\n\t      return null;\n\t\n\t    if (depth === 0)\n\t      return parent;\n\t\n\t    var child;\n\t    var proto;\n\t    if (typeof parent != 'object') {\n\t      return parent;\n\t    }\n\t\n\t    if (_instanceof(parent, nativeMap)) {\n\t      child = new nativeMap();\n\t    } else if (_instanceof(parent, nativeSet)) {\n\t      child = new nativeSet();\n\t    } else if (_instanceof(parent, nativePromise)) {\n\t      child = new nativePromise(function (resolve, reject) {\n\t        parent.then(function(value) {\n\t          resolve(_clone(value, depth - 1));\n\t        }, function(err) {\n\t          reject(_clone(err, depth - 1));\n\t        });\n\t      });\n\t    } else if (clone.__isArray(parent)) {\n\t      child = [];\n\t    } else if (clone.__isRegExp(parent)) {\n\t      child = new RegExp(parent.source, __getRegExpFlags(parent));\n\t      if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n\t    } else if (clone.__isDate(parent)) {\n\t      child = new Date(parent.getTime());\n\t    } else if (useBuffer && Buffer.isBuffer(parent)) {\n\t      child = new Buffer(parent.length);\n\t      parent.copy(child);\n\t      return child;\n\t    } else if (_instanceof(parent, Error)) {\n\t      child = Object.create(parent);\n\t    } else {\n\t      if (typeof prototype == 'undefined') {\n\t        proto = Object.getPrototypeOf(parent);\n\t        child = Object.create(proto);\n\t      }\n\t      else {\n\t        child = Object.create(prototype);\n\t        proto = prototype;\n\t      }\n\t    }\n\t\n\t    if (circular) {\n\t      var index = allParents.indexOf(parent);\n\t\n\t      if (index != -1) {\n\t        return allChildren[index];\n\t      }\n\t      allParents.push(parent);\n\t      allChildren.push(child);\n\t    }\n\t\n\t    if (_instanceof(parent, nativeMap)) {\n\t      parent.forEach(function(value, key) {\n\t        var keyChild = _clone(key, depth - 1);\n\t        var valueChild = _clone(value, depth - 1);\n\t        child.set(keyChild, valueChild);\n\t      });\n\t    }\n\t    if (_instanceof(parent, nativeSet)) {\n\t      parent.forEach(function(value) {\n\t        var entryChild = _clone(value, depth - 1);\n\t        child.add(entryChild);\n\t      });\n\t    }\n\t\n\t    for (var i in parent) {\n\t      var attrs;\n\t      if (proto) {\n\t        attrs = Object.getOwnPropertyDescriptor(proto, i);\n\t      }\n\t\n\t      if (attrs && attrs.set == null) {\n\t        continue;\n\t      }\n\t      child[i] = _clone(parent[i], depth - 1);\n\t    }\n\t\n\t    if (Object.getOwnPropertySymbols) {\n\t      var symbols = Object.getOwnPropertySymbols(parent);\n\t      for (var i = 0; i < symbols.length; i++) {\n\t        // Don't need to worry about cloning a symbol because it is a primitive,\n\t        // like a number or string.\n\t        var symbol = symbols[i];\n\t        var descriptor = Object.getOwnPropertyDescriptor(parent, symbol);\n\t        if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {\n\t          continue;\n\t        }\n\t        child[symbol] = _clone(parent[symbol], depth - 1);\n\t        if (!descriptor.enumerable) {\n\t          Object.defineProperty(child, symbol, {\n\t            enumerable: false\n\t          });\n\t        }\n\t      }\n\t    }\n\t\n\t    if (includeNonEnumerable) {\n\t      var allPropertyNames = Object.getOwnPropertyNames(parent);\n\t      for (var i = 0; i < allPropertyNames.length; i++) {\n\t        var propertyName = allPropertyNames[i];\n\t        var descriptor = Object.getOwnPropertyDescriptor(parent, propertyName);\n\t        if (descriptor && descriptor.enumerable) {\n\t          continue;\n\t        }\n\t        child[propertyName] = _clone(parent[propertyName], depth - 1);\n\t        Object.defineProperty(child, propertyName, {\n\t          enumerable: false\n\t        });\n\t      }\n\t    }\n\t\n\t    return child;\n\t  }\n\t\n\t  return _clone(parent, depth);\n\t}\n\t\n\t/**\n\t * Simple flat clone using prototype, accepts only objects, usefull for property\n\t * override on FLAT configuration object (no nested props).\n\t *\n\t * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n\t * works.\n\t */\n\tclone.clonePrototype = function clonePrototype(parent) {\n\t  if (parent === null)\n\t    return null;\n\t\n\t  var c = function () {};\n\t  c.prototype = parent;\n\t  return new c();\n\t};\n\t\n\t// private utility functions\n\t\n\tfunction __objToStr(o) {\n\t  return Object.prototype.toString.call(o);\n\t}\n\tclone.__objToStr = __objToStr;\n\t\n\tfunction __isDate(o) {\n\t  return typeof o === 'object' && __objToStr(o) === '[object Date]';\n\t}\n\tclone.__isDate = __isDate;\n\t\n\tfunction __isArray(o) {\n\t  return typeof o === 'object' && __objToStr(o) === '[object Array]';\n\t}\n\tclone.__isArray = __isArray;\n\t\n\tfunction __isRegExp(o) {\n\t  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\n\t}\n\tclone.__isRegExp = __isRegExp;\n\t\n\tfunction __getRegExpFlags(re) {\n\t  var flags = '';\n\t  if (re.global) flags += 'g';\n\t  if (re.ignoreCase) flags += 'i';\n\t  if (re.multiline) flags += 'm';\n\t  return flags;\n\t}\n\tclone.__getRegExpFlags = __getRegExpFlags;\n\t\n\treturn clone;\n\t})();\n\t\n\tif (typeof module === 'object' && module.exports) {\n\t  module.exports = clone;\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(54).Buffer))\n\n/***/ },\n/* 93 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 94 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks\n\t */\n\t\n\tvar _hyphenPattern = /-(.)/g;\n\t\n\t/**\n\t * Camelcases a hyphenated string, for example:\n\t *\n\t *   > camelize('background-color')\n\t *   < \"backgroundColor\"\n\t *\n\t * @param {string} string\n\t * @return {string}\n\t */\n\tfunction camelize(string) {\n\t  return string.replace(_hyphenPattern, function (_, character) {\n\t    return character.toUpperCase();\n\t  });\n\t}\n\t\n\tmodule.exports = camelize;\n\n/***/ },\n/* 95 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks\n\t */\n\t\n\t'use strict';\n\t\n\tvar camelize = __webpack_require__(94);\n\t\n\tvar msPattern = /^-ms-/;\n\t\n\t/**\n\t * Camelcases a hyphenated CSS property name, for example:\n\t *\n\t *   > camelizeStyleName('background-color')\n\t *   < \"backgroundColor\"\n\t *   > camelizeStyleName('-moz-transition')\n\t *   < \"MozTransition\"\n\t *   > camelizeStyleName('-ms-transition')\n\t *   < \"msTransition\"\n\t *\n\t * As Andi Smith suggests\n\t * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix\n\t * is converted to lowercase `ms`.\n\t *\n\t * @param {string} string\n\t * @return {string}\n\t */\n\tfunction camelizeStyleName(string) {\n\t  return camelize(string.replace(msPattern, 'ms-'));\n\t}\n\t\n\tmodule.exports = camelizeStyleName;\n\n/***/ },\n/* 96 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\tvar isTextNode = __webpack_require__(104);\n\t\n\t/*eslint-disable no-bitwise */\n\t\n\t/**\n\t * Checks if a given DOM node contains or is another DOM node.\n\t */\n\tfunction containsNode(outerNode, innerNode) {\n\t  if (!outerNode || !innerNode) {\n\t    return false;\n\t  } else if (outerNode === innerNode) {\n\t    return true;\n\t  } else if (isTextNode(outerNode)) {\n\t    return false;\n\t  } else if (isTextNode(innerNode)) {\n\t    return containsNode(outerNode, innerNode.parentNode);\n\t  } else if ('contains' in outerNode) {\n\t    return outerNode.contains(innerNode);\n\t  } else if (outerNode.compareDocumentPosition) {\n\t    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n\t  } else {\n\t    return false;\n\t  }\n\t}\n\t\n\tmodule.exports = containsNode;\n\n/***/ },\n/* 97 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks\n\t */\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Convert array-like objects to arrays.\n\t *\n\t * This API assumes the caller knows the contents of the data type. For less\n\t * well defined inputs use createArrayFromMixed.\n\t *\n\t * @param {object|function|filelist} obj\n\t * @return {array}\n\t */\n\tfunction toArray(obj) {\n\t  var length = obj.length;\n\t\n\t  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList\n\t  // in old versions of Safari).\n\t  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ?  false ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;\n\t\n\t  !(typeof length === 'number') ?  false ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;\n\t\n\t  !(length === 0 || length - 1 in obj) ?  false ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;\n\t\n\t  !(typeof obj.callee !== 'function') ?  false ? invariant(false, 'toArray: Object can\\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;\n\t\n\t  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs\n\t  // without method will throw during the slice call and skip straight to the\n\t  // fallback.\n\t  if (obj.hasOwnProperty) {\n\t    try {\n\t      return Array.prototype.slice.call(obj);\n\t    } catch (e) {\n\t      // IE < 9 does not support Array#slice on collections objects\n\t    }\n\t  }\n\t\n\t  // Fall back to copying key by key. This assumes all keys have a value,\n\t  // so will not preserve sparsely populated inputs.\n\t  var ret = Array(length);\n\t  for (var ii = 0; ii < length; ii++) {\n\t    ret[ii] = obj[ii];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Perform a heuristic test to determine if an object is \"array-like\".\n\t *\n\t *   A monk asked Joshu, a Zen master, \"Has a dog Buddha nature?\"\n\t *   Joshu replied: \"Mu.\"\n\t *\n\t * This function determines if its argument has \"array nature\": it returns\n\t * true if the argument is an actual array, an `arguments' object, or an\n\t * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).\n\t *\n\t * It will return false for other array-like objects like Filelist.\n\t *\n\t * @param {*} obj\n\t * @return {boolean}\n\t */\n\tfunction hasArrayNature(obj) {\n\t  return (\n\t    // not null/false\n\t    !!obj && (\n\t    // arrays are objects, NodeLists are functions in Safari\n\t    typeof obj == 'object' || typeof obj == 'function') &&\n\t    // quacks like an array\n\t    'length' in obj &&\n\t    // not window\n\t    !('setInterval' in obj) &&\n\t    // no DOM node should be considered an array-like\n\t    // a 'select' element has 'length' and 'item' properties on IE8\n\t    typeof obj.nodeType != 'number' && (\n\t    // a real array\n\t    Array.isArray(obj) ||\n\t    // arguments\n\t    'callee' in obj ||\n\t    // HTMLCollection/NodeList\n\t    'item' in obj)\n\t  );\n\t}\n\t\n\t/**\n\t * Ensure that the argument is an array by wrapping it in an array if it is not.\n\t * Creates a copy of the argument if it is already an array.\n\t *\n\t * This is mostly useful idiomatically:\n\t *\n\t *   var createArrayFromMixed = require('createArrayFromMixed');\n\t *\n\t *   function takesOneOrMoreThings(things) {\n\t *     things = createArrayFromMixed(things);\n\t *     ...\n\t *   }\n\t *\n\t * This allows you to treat `things' as an array, but accept scalars in the API.\n\t *\n\t * If you need to convert an array-like object, like `arguments`, into an array\n\t * use toArray instead.\n\t *\n\t * @param {*} obj\n\t * @return {array}\n\t */\n\tfunction createArrayFromMixed(obj) {\n\t  if (!hasArrayNature(obj)) {\n\t    return [obj];\n\t  } else if (Array.isArray(obj)) {\n\t    return obj.slice();\n\t  } else {\n\t    return toArray(obj);\n\t  }\n\t}\n\t\n\tmodule.exports = createArrayFromMixed;\n\n/***/ },\n/* 98 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks\n\t */\n\t\n\t/*eslint-disable fb-www/unsafe-html*/\n\t\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\t\n\tvar createArrayFromMixed = __webpack_require__(97);\n\tvar getMarkupWrap = __webpack_require__(99);\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Dummy container used to render all markup.\n\t */\n\tvar dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\t\n\t/**\n\t * Pattern used by `getNodeName`.\n\t */\n\tvar nodeNamePattern = /^\\s*<(\\w+)/;\n\t\n\t/**\n\t * Extracts the `nodeName` of the first element in a string of markup.\n\t *\n\t * @param {string} markup String of markup.\n\t * @return {?string} Node name of the supplied markup.\n\t */\n\tfunction getNodeName(markup) {\n\t  var nodeNameMatch = markup.match(nodeNamePattern);\n\t  return nodeNameMatch && nodeNameMatch[1].toLowerCase();\n\t}\n\t\n\t/**\n\t * Creates an array containing the nodes rendered from the supplied markup. The\n\t * optionally supplied `handleScript` function will be invoked once for each\n\t * <script> element that is rendered. If no `handleScript` function is supplied,\n\t * an exception is thrown if any <script> elements are rendered.\n\t *\n\t * @param {string} markup A string of valid HTML markup.\n\t * @param {?function} handleScript Invoked once for each rendered <script>.\n\t * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.\n\t */\n\tfunction createNodesFromMarkup(markup, handleScript) {\n\t  var node = dummyNode;\n\t  !!!dummyNode ?  false ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;\n\t  var nodeName = getNodeName(markup);\n\t\n\t  var wrap = nodeName && getMarkupWrap(nodeName);\n\t  if (wrap) {\n\t    node.innerHTML = wrap[1] + markup + wrap[2];\n\t\n\t    var wrapDepth = wrap[0];\n\t    while (wrapDepth--) {\n\t      node = node.lastChild;\n\t    }\n\t  } else {\n\t    node.innerHTML = markup;\n\t  }\n\t\n\t  var scripts = node.getElementsByTagName('script');\n\t  if (scripts.length) {\n\t    !handleScript ?  false ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;\n\t    createArrayFromMixed(scripts).forEach(handleScript);\n\t  }\n\t\n\t  var nodes = Array.from(node.childNodes);\n\t  while (node.lastChild) {\n\t    node.removeChild(node.lastChild);\n\t  }\n\t  return nodes;\n\t}\n\t\n\tmodule.exports = createNodesFromMarkup;\n\n/***/ },\n/* 99 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t/*eslint-disable fb-www/unsafe-html */\n\t\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Dummy container used to detect which wraps are necessary.\n\t */\n\tvar dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\t\n\t/**\n\t * Some browsers cannot use `innerHTML` to render certain elements standalone,\n\t * so we wrap them, render the wrapped nodes, then extract the desired node.\n\t *\n\t * In IE8, certain elements cannot render alone, so wrap all elements ('*').\n\t */\n\t\n\tvar shouldWrap = {};\n\t\n\tvar selectWrap = [1, '<select multiple=\"true\">', '</select>'];\n\tvar tableWrap = [1, '<table>', '</table>'];\n\tvar trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tvar svgWrap = [1, '<svg xmlns=\"http://www.w3.org/2000/svg\">', '</svg>'];\n\t\n\tvar markupWrap = {\n\t  '*': [1, '?<div>', '</div>'],\n\t\n\t  'area': [1, '<map>', '</map>'],\n\t  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n\t  'legend': [1, '<fieldset>', '</fieldset>'],\n\t  'param': [1, '<object>', '</object>'],\n\t  'tr': [2, '<table><tbody>', '</tbody></table>'],\n\t\n\t  'optgroup': selectWrap,\n\t  'option': selectWrap,\n\t\n\t  'caption': tableWrap,\n\t  'colgroup': tableWrap,\n\t  'tbody': tableWrap,\n\t  'tfoot': tableWrap,\n\t  'thead': tableWrap,\n\t\n\t  'td': trWrap,\n\t  'th': trWrap\n\t};\n\t\n\t// Initialize the SVG elements since we know they'll always need to be wrapped\n\t// consistently. If they are created inside a <div> they will be initialized in\n\t// the wrong namespace (and will not display).\n\tvar svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];\n\tsvgElements.forEach(function (nodeName) {\n\t  markupWrap[nodeName] = svgWrap;\n\t  shouldWrap[nodeName] = true;\n\t});\n\t\n\t/**\n\t * Gets the markup wrap configuration for the supplied `nodeName`.\n\t *\n\t * NOTE: This lazily detects which wraps are necessary for the current browser.\n\t *\n\t * @param {string} nodeName Lowercase `nodeName`.\n\t * @return {?array} Markup wrap configuration, if applicable.\n\t */\n\tfunction getMarkupWrap(nodeName) {\n\t  !!!dummyNode ?  false ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;\n\t  if (!markupWrap.hasOwnProperty(nodeName)) {\n\t    nodeName = '*';\n\t  }\n\t  if (!shouldWrap.hasOwnProperty(nodeName)) {\n\t    if (nodeName === '*') {\n\t      dummyNode.innerHTML = '<link />';\n\t    } else {\n\t      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';\n\t    }\n\t    shouldWrap[nodeName] = !dummyNode.firstChild;\n\t  }\n\t  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;\n\t}\n\t\n\tmodule.exports = getMarkupWrap;\n\n/***/ },\n/* 100 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Gets the scroll position of the supplied element or window.\n\t *\n\t * The return values are unbounded, unlike `getScrollPosition`. This means they\n\t * may be negative or exceed the element boundaries (which is possible using\n\t * inertial scrolling).\n\t *\n\t * @param {DOMWindow|DOMElement} scrollable\n\t * @return {object} Map with `x` and `y` keys.\n\t */\n\t\n\tfunction getUnboundedScrollPosition(scrollable) {\n\t  if (scrollable.Window && scrollable instanceof scrollable.Window) {\n\t    return {\n\t      x: scrollable.pageXOffset || scrollable.document.documentElement.scrollLeft,\n\t      y: scrollable.pageYOffset || scrollable.document.documentElement.scrollTop\n\t    };\n\t  }\n\t  return {\n\t    x: scrollable.scrollLeft,\n\t    y: scrollable.scrollTop\n\t  };\n\t}\n\t\n\tmodule.exports = getUnboundedScrollPosition;\n\n/***/ },\n/* 101 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks\n\t */\n\t\n\tvar _uppercasePattern = /([A-Z])/g;\n\t\n\t/**\n\t * Hyphenates a camelcased string, for example:\n\t *\n\t *   > hyphenate('backgroundColor')\n\t *   < \"background-color\"\n\t *\n\t * For CSS style names, use `hyphenateStyleName` instead which works properly\n\t * with all vendor prefixes, including `ms`.\n\t *\n\t * @param {string} string\n\t * @return {string}\n\t */\n\tfunction hyphenate(string) {\n\t  return string.replace(_uppercasePattern, '-$1').toLowerCase();\n\t}\n\t\n\tmodule.exports = hyphenate;\n\n/***/ },\n/* 102 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks\n\t */\n\t\n\t'use strict';\n\t\n\tvar hyphenate = __webpack_require__(101);\n\t\n\tvar msPattern = /^ms-/;\n\t\n\t/**\n\t * Hyphenates a camelcased CSS property name, for example:\n\t *\n\t *   > hyphenateStyleName('backgroundColor')\n\t *   < \"background-color\"\n\t *   > hyphenateStyleName('MozTransition')\n\t *   < \"-moz-transition\"\n\t *   > hyphenateStyleName('msTransition')\n\t *   < \"-ms-transition\"\n\t *\n\t * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix\n\t * is converted to `-ms-`.\n\t *\n\t * @param {string} string\n\t * @return {string}\n\t */\n\tfunction hyphenateStyleName(string) {\n\t  return hyphenate(string).replace(msPattern, '-ms-');\n\t}\n\t\n\tmodule.exports = hyphenateStyleName;\n\n/***/ },\n/* 103 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks\n\t */\n\t\n\t/**\n\t * @param {*} object The object to check.\n\t * @return {boolean} Whether or not the object is a DOM node.\n\t */\n\tfunction isNode(object) {\n\t  var doc = object ? object.ownerDocument || object : document;\n\t  var defaultView = doc.defaultView || window;\n\t  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));\n\t}\n\t\n\tmodule.exports = isNode;\n\n/***/ },\n/* 104 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks\n\t */\n\t\n\tvar isNode = __webpack_require__(103);\n\t\n\t/**\n\t * @param {*} object The object to check.\n\t * @return {boolean} Whether or not the object is a DOM text node.\n\t */\n\tfunction isTextNode(object) {\n\t  return isNode(object) && object.nodeType == 3;\n\t}\n\t\n\tmodule.exports = isTextNode;\n\n/***/ },\n/* 105 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Memoizes the return value of a function that accepts one string argument.\n\t */\n\t\n\tfunction memoizeStringOnly(callback) {\n\t  var cache = {};\n\t  return function (string) {\n\t    if (!cache.hasOwnProperty(string)) {\n\t      cache[string] = callback.call(this, string);\n\t    }\n\t    return cache[string];\n\t  };\n\t}\n\t\n\tmodule.exports = memoizeStringOnly;\n\n/***/ },\n/* 106 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"static/media/Logo3x3.68fddec9.svg\";\n\n/***/ },\n/* 107 */\n/***/ function(module, exports) {\n\n\texports.read = function (buffer, offset, isLE, mLen, nBytes) {\n\t  var e, m\n\t  var eLen = nBytes * 8 - mLen - 1\n\t  var eMax = (1 << eLen) - 1\n\t  var eBias = eMax >> 1\n\t  var nBits = -7\n\t  var i = isLE ? (nBytes - 1) : 0\n\t  var d = isLE ? -1 : 1\n\t  var s = buffer[offset + i]\n\t\n\t  i += d\n\t\n\t  e = s & ((1 << (-nBits)) - 1)\n\t  s >>= (-nBits)\n\t  nBits += eLen\n\t  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\t\n\t  m = e & ((1 << (-nBits)) - 1)\n\t  e >>= (-nBits)\n\t  nBits += mLen\n\t  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\t\n\t  if (e === 0) {\n\t    e = 1 - eBias\n\t  } else if (e === eMax) {\n\t    return m ? NaN : ((s ? -1 : 1) * Infinity)\n\t  } else {\n\t    m = m + Math.pow(2, mLen)\n\t    e = e - eBias\n\t  }\n\t  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n\t}\n\t\n\texports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n\t  var e, m, c\n\t  var eLen = nBytes * 8 - mLen - 1\n\t  var eMax = (1 << eLen) - 1\n\t  var eBias = eMax >> 1\n\t  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n\t  var i = isLE ? 0 : (nBytes - 1)\n\t  var d = isLE ? 1 : -1\n\t  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\t\n\t  value = Math.abs(value)\n\t\n\t  if (isNaN(value) || value === Infinity) {\n\t    m = isNaN(value) ? 1 : 0\n\t    e = eMax\n\t  } else {\n\t    e = Math.floor(Math.log(value) / Math.LN2)\n\t    if (value * (c = Math.pow(2, -e)) < 1) {\n\t      e--\n\t      c *= 2\n\t    }\n\t    if (e + eBias >= 1) {\n\t      value += rt / c\n\t    } else {\n\t      value += rt * Math.pow(2, 1 - eBias)\n\t    }\n\t    if (value * c >= 2) {\n\t      e++\n\t      c /= 2\n\t    }\n\t\n\t    if (e + eBias >= eMax) {\n\t      m = 0\n\t      e = eMax\n\t    } else if (e + eBias >= 1) {\n\t      m = (value * c - 1) * Math.pow(2, mLen)\n\t      e = e + eBias\n\t    } else {\n\t      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n\t      e = 0\n\t    }\n\t  }\n\t\n\t  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\t\n\t  e = (e << mLen) | m\n\t  eLen += mLen\n\t  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\t\n\t  buffer[offset + i - d] |= s * 128\n\t}\n\n\n/***/ },\n/* 108 */\n/***/ function(module, exports) {\n\n\tvar toString = {}.toString;\n\t\n\tmodule.exports = Array.isArray || function (arr) {\n\t  return toString.call(arr) == '[object Array]';\n\t};\n\n\n/***/ },\n/* 109 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\r\n\t__________________________________________________________________________________________________________________________________________            \r\n\t __________________________________________________________________________________________________________________________________________           \r\n\t  ________/\\\\\\\\____________/\\\\\\\\_____/\\\\\\\\\\\\\\\\\\_____/\\\\\\________/\\\\\\__/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\__/\\\\\\\\\\\\\\\\\\\\\\________________________________________          \r\n\t   _______\\/\\\\\\\\\\\\________/\\\\\\\\\\\\___/\\\\\\\\/////\\\\\\\\__\\/\\\\\\_____/\\\\\\//__\\/\\\\\\///////////__\\/\\\\\\///////\\\\\\_______________/\\\\\\___________________         \r\n\t    _______\\/\\\\\\//\\\\\\____/\\\\\\//\\\\\\__/\\\\\\/____\\///\\\\\\_\\/\\\\\\__/\\\\\\//_____\\/\\\\\\_____________\\/\\\\\\_____\\/\\\\\\______________\\///____________________        \r\n\t     _______\\/\\\\\\\\///\\\\\\/\\\\\\/_\\/\\\\\\_\\/\\\\\\_______\\/\\\\\\_\\/\\\\\\\\\\\\//\\\\\\_____\\/\\\\\\\\\\\\\\\\\\\\\\_____\\/\\\\\\\\\\\\\\\\\\\\\\/________________/\\\\\\__/\\\\\\\\\\\\\\\\\\\\______       \r\n\t      _______\\/\\\\\\__\\///\\\\\\/___\\/\\\\\\_\\/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\_\\/\\\\\\//_\\//\\\\\\____\\/\\\\\\///////______\\/\\\\\\//////\\\\\\_______________\\/\\\\\\_\\/\\\\\\//////_______      \r\n\t       _______\\/\\\\\\____\\///_____\\/\\\\\\_\\/\\\\\\/////////\\\\\\_\\/\\\\\\____\\//\\\\\\___\\/\\\\\\_____________\\/\\\\\\____\\//\\\\\\______________\\/\\\\\\_\\/\\\\\\\\\\\\\\\\\\\\______     \r\n\t        _______\\/\\\\\\_____________\\/\\\\\\_\\/\\\\\\_______\\/\\\\\\_\\/\\\\\\_____\\//\\\\\\__\\/\\\\\\_____________\\/\\\\\\_____\\//\\\\\\_________/\\\\_\\/\\\\\\_\\////////\\\\\\______    \r\n\t         _______\\/\\\\\\_____________\\/\\\\\\_\\/\\\\\\_______\\/\\\\\\_\\/\\\\\\______\\//\\\\\\_\\/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\_\\/\\\\\\______\\//\\\\\\__/\\\\\\_\\//\\\\\\\\\\\\___/\\\\\\\\\\\\\\\\\\\\______   \r\n\t          _______\\///______________\\///__\\///________\\///__\\///________\\///__\\///////////////__\\///________\\///__\\///___\\//////___\\//////////_______  \r\n\t           __________________________________________________________________________________________________________________________________________ \r\n\t            __________________________________________________________________________________________________________________________________________\r\n\t\r\n\tMaker.js\r\n\thttps://github.com/Microsoft/maker.js\r\n\t\r\n\tCopyright (c) Microsoft Corporation. All rights reserved. \r\n\tLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n\tthis file except in compliance with the License. You may obtain a copy of the\r\n\tLicense at http://www.apache.org/licenses/LICENSE-2.0  \r\n\t \r\n\tTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n\tKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n\tWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE, \r\n\tMERCHANTABLITY OR NON-INFRINGEMENT. \r\n\t \r\n\tSee the Apache Version 2.0 License for specific language governing permissions\r\n\tand limitations under the License.\r\n\t\r\n\t*/\r\n\t/**\r\n\t * Root module for Maker.js.\r\n\t *\r\n\t * Example: get a reference to Maker.js\r\n\t * ```\r\n\t * var makerjs = require('makerjs');\r\n\t * ```\r\n\t *\r\n\t */\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    /**\r\n\t     * Version info\r\n\t     */\r\n\t    MakerJs.version = 'debug';\r\n\t    /**\r\n\t     * Enumeration of environment types.\r\n\t     */\r\n\t    MakerJs.environmentTypes = {\r\n\t        BrowserUI: 'browser',\r\n\t        NodeJs: 'node',\r\n\t        WebWorker: 'worker',\r\n\t        Unknown: 'unknown'\r\n\t    };\r\n\t    /**\r\n\t     * @private\r\n\t     */\r\n\t    function tryEval(name) {\r\n\t        try {\r\n\t            var value = eval(name);\r\n\t            return value;\r\n\t        }\r\n\t        catch (e) { }\r\n\t        return;\r\n\t    }\r\n\t    /**\r\n\t     * @private\r\n\t     */\r\n\t    function detectEnvironment() {\r\n\t        if (tryEval('WorkerGlobalScope') && tryEval('self')) {\r\n\t            return MakerJs.environmentTypes.WebWorker;\r\n\t        }\r\n\t        if (tryEval('window') && tryEval('document')) {\r\n\t            return MakerJs.environmentTypes.BrowserUI;\r\n\t        }\r\n\t        //put node last since packagers usually add shims for it\r\n\t        if (tryEval('global') && tryEval('process')) {\r\n\t            return MakerJs.environmentTypes.NodeJs;\r\n\t        }\r\n\t        return MakerJs.environmentTypes.Unknown;\r\n\t    }\r\n\t    /**\r\n\t     * Current execution environment type, should be one of environmentTypes.\r\n\t     */\r\n\t    MakerJs.environment = detectEnvironment();\r\n\t    //units\r\n\t    /**\r\n\t     * String-based enumeration of unit types: imperial, metric or otherwise.\r\n\t     * A model may specify the unit system it is using, if any. When importing a model, it may have different units.\r\n\t     * Unit conversion function is makerjs.units.conversionScale().\r\n\t     * Important: If you add to this, you must also add a corresponding conversion ratio in the unit.ts file!\r\n\t     */\r\n\t    MakerJs.unitType = {\r\n\t        Centimeter: 'cm',\r\n\t        Foot: 'foot',\r\n\t        Inch: 'inch',\r\n\t        Meter: 'm',\r\n\t        Millimeter: 'mm'\r\n\t    };\r\n\t    /**\r\n\t     * Numeric rounding\r\n\t     *\r\n\t     * Example: round to 3 decimal places\r\n\t     * ```\r\n\t     * makerjs.round(3.14159, .001); //returns 3.142\r\n\t     * ```\r\n\t     *\r\n\t     * @param n The number to round off.\r\n\t     * @param accuracy Optional exemplar of number of decimal places.\r\n\t     * @returns Rounded number.\r\n\t     */\r\n\t    function round(n, accuracy) {\r\n\t        if (accuracy === void 0) { accuracy = .0000001; }\r\n\t        var places = 1 / accuracy;\r\n\t        return Math.round(n * places) / places;\r\n\t    }\r\n\t    MakerJs.round = round;\r\n\t    /**\r\n\t     * Create a string representation of a route array.\r\n\t     *\r\n\t     * @param route Array of strings which are segments of a route.\r\n\t     * @returns String of the flattened array.\r\n\t     */\r\n\t    function createRouteKey(route) {\r\n\t        var converted = [];\r\n\t        for (var i = 0; i < route.length; i++) {\r\n\t            var element = route[i];\r\n\t            var newElement;\r\n\t            if (i % 2 === 0) {\r\n\t                newElement = '.' + element;\r\n\t            }\r\n\t            else {\r\n\t                newElement = JSON.stringify([element]);\r\n\t            }\r\n\t            converted.push(newElement);\r\n\t        }\r\n\t        return converted.join('');\r\n\t    }\r\n\t    MakerJs.createRouteKey = createRouteKey;\r\n\t    /**\r\n\t     * Travel along a route inside of a model to extract a specific node in its tree.\r\n\t     *\r\n\t     * @param modelContext Model to travel within.\r\n\t     * @param routeKeyOrRoute String of a flattened route, or a string array of route segments.\r\n\t     * @returns Model or Path object within the modelContext tree.\r\n\t     */\r\n\t    function travel(modelContext, routeKeyOrRoute) {\r\n\t        if (!modelContext || !routeKeyOrRoute)\r\n\t            return null;\r\n\t        var route;\r\n\t        if (Array.isArray(routeKeyOrRoute)) {\r\n\t            route = routeKeyOrRoute;\r\n\t        }\r\n\t        else {\r\n\t            route = JSON.parse(routeKeyOrRoute);\r\n\t        }\r\n\t        var props = route.slice();\r\n\t        var ref = modelContext;\r\n\t        var origin = modelContext.origin || [0, 0];\r\n\t        while (props.length) {\r\n\t            var prop = props.shift();\r\n\t            ref = ref[prop];\r\n\t            if (!ref)\r\n\t                return null;\r\n\t            if (ref.origin && props.length) {\r\n\t                origin = MakerJs.point.add(origin, ref.origin);\r\n\t            }\r\n\t        }\r\n\t        return {\r\n\t            path: ref,\r\n\t            offset: origin\r\n\t        };\r\n\t    }\r\n\t    MakerJs.travel = travel;\r\n\t    /**\r\n\t     * @private\r\n\t     */\r\n\t    var clone = __webpack_require__(110);\r\n\t    /**\r\n\t     * Clone an object.\r\n\t     *\r\n\t     * @param objectToClone The object to clone.\r\n\t     * @returns A new clone of the original object.\r\n\t     */\r\n\t    function cloneObject(objectToClone) {\r\n\t        return clone(objectToClone);\r\n\t    }\r\n\t    MakerJs.cloneObject = cloneObject;\r\n\t    /**\r\n\t     * Copy the properties from one object to another object.\r\n\t     *\r\n\t     * Example:\r\n\t     * ```\r\n\t     * makerjs.extendObject({ abc: 123 }, { xyz: 789 }); //returns { abc: 123, xyz: 789 }\r\n\t     * ```\r\n\t     *\r\n\t     * @param target The object to extend. It will receive the new properties.\r\n\t     * @param other An object containing properties to merge in.\r\n\t     * @returns The original object after merging.\r\n\t     */\r\n\t    function extendObject(target, other) {\r\n\t        if (target && other) {\r\n\t            for (var key in other) {\r\n\t                if (typeof other[key] !== 'undefined') {\r\n\t                    target[key] = other[key];\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        return target;\r\n\t    }\r\n\t    MakerJs.extendObject = extendObject;\r\n\t    /**\r\n\t     * Test to see if a variable is a function.\r\n\t     *\r\n\t     * @param value The object to test.\r\n\t     * @returns True if the object is a function type.\r\n\t     */\r\n\t    function isFunction(value) {\r\n\t        return typeof value === 'function';\r\n\t    }\r\n\t    MakerJs.isFunction = isFunction;\r\n\t    /**\r\n\t     * Test to see if a variable is a number.\r\n\t     *\r\n\t     * @param value The object to test.\r\n\t     * @returns True if the object is a number type.\r\n\t     */\r\n\t    function isNumber(value) {\r\n\t        return !isNaN(value);\r\n\t    }\r\n\t    MakerJs.isNumber = isNumber;\r\n\t    /**\r\n\t     * Test to see if a variable is an object.\r\n\t     *\r\n\t     * @param value The object to test.\r\n\t     * @returns True if the object is an object type.\r\n\t     */\r\n\t    function isObject(value) {\r\n\t        return typeof value === 'object';\r\n\t    }\r\n\t    MakerJs.isObject = isObject;\r\n\t    /**\r\n\t     * @private\r\n\t     */\r\n\t    var x = {};\r\n\t    /**\r\n\t     * @private\r\n\t     */\r\n\t    function reflectName(value) {\r\n\t        for (var prop in x) {\r\n\t            delete x[prop];\r\n\t            return prop;\r\n\t        }\r\n\t    }\r\n\t    /**\r\n\t     * @private\r\n\t     */\r\n\t    function hasNamedProperty(p, value) {\r\n\t        var prop = reflectName();\r\n\t        return (prop in p);\r\n\t    }\r\n\t    //points\r\n\t    /**\r\n\t     * Test to see if an object implements the required properties of a point.\r\n\t     *\r\n\t     * @param item The item to test.\r\n\t     */\r\n\t    function isPoint(item) {\r\n\t        return (Array.isArray(item) && item.length == 2 && !isNaN(item[0]) && !isNaN(item[1]));\r\n\t    }\r\n\t    MakerJs.isPoint = isPoint;\r\n\t    /**\r\n\t     * Test to see if an object implements the required properties of a path.\r\n\t     *\r\n\t     * @param item The item to test.\r\n\t     */\r\n\t    function isPath(item) {\r\n\t        return item && item.type && item.origin;\r\n\t    }\r\n\t    MakerJs.isPath = isPath;\r\n\t    /**\r\n\t     * Test to see if an object implements the required properties of a line.\r\n\t     *\r\n\t     * @param item The item to test.\r\n\t     */\r\n\t    function isPathLine(item) {\r\n\t        return isPath(item) && item.type == MakerJs.pathType.Line && item.end;\r\n\t    }\r\n\t    MakerJs.isPathLine = isPathLine;\r\n\t    /**\r\n\t     * Test to see if an object implements the required properties of a circle.\r\n\t     *\r\n\t     * @param item The item to test.\r\n\t     */\r\n\t    function isPathCircle(item) {\r\n\t        return isPath(item) && item.type == MakerJs.pathType.Circle && hasNamedProperty(item, x.radius = null);\r\n\t    }\r\n\t    MakerJs.isPathCircle = isPathCircle;\r\n\t    /**\r\n\t     * Test to see if an object implements the required properties of an arc.\r\n\t     *\r\n\t     * @param item The item to test.\r\n\t     */\r\n\t    function isPathArc(item) {\r\n\t        return isPath(item) && item.type == MakerJs.pathType.Arc && hasNamedProperty(item, x.radius = null) && hasNamedProperty(item, x.startAngle = null) && hasNamedProperty(item, x.endAngle = null);\r\n\t    }\r\n\t    MakerJs.isPathArc = isPathArc;\r\n\t    /**\r\n\t     * Test to see if an object implements the required properties of an arc in a bezier curve.\r\n\t     *\r\n\t     * @param item The item to test.\r\n\t     */\r\n\t    function isPathArcInBezierCurve(item) {\r\n\t        return isPathArc(item) && hasNamedProperty(item, x.bezierData = null);\r\n\t    }\r\n\t    MakerJs.isPathArcInBezierCurve = isPathArcInBezierCurve;\r\n\t    /**\r\n\t     * String-based enumeration of all paths types.\r\n\t     *\r\n\t     * Examples: use pathType instead of string literal when creating a circle.\r\n\t     * ```\r\n\t     * var circle: IPathCircle = { type: pathType.Circle, origin: [0, 0], radius: 7 };   //typescript\r\n\t     * var circle = { type: pathType.Circle, origin: [0, 0], radius: 7 };   //javascript\r\n\t     * ```\r\n\t     */\r\n\t    MakerJs.pathType = {\r\n\t        Line: \"line\",\r\n\t        Circle: \"circle\",\r\n\t        Arc: \"arc\",\r\n\t        BezierSeed: \"bezier-seed\"\r\n\t    };\r\n\t    /**\r\n\t     * Test to see if an object implements the required properties of a model.\r\n\t     */\r\n\t    function isModel(item) {\r\n\t        return item && (item.paths || item.models);\r\n\t    }\r\n\t    MakerJs.isModel = isModel;\r\n\t    /**\r\n\t     * Test to see if an object implements the required properties of a chain.\r\n\t     *\r\n\t     * @param item The item to test.\r\n\t     */\r\n\t    function isChain(item) {\r\n\t        var x = item;\r\n\t        return x && x.links && Array.isArray(x.links) && isNumber(x.pathLength);\r\n\t    }\r\n\t    MakerJs.isChain = isChain;\r\n\t})(MakerJs || (MakerJs = {}));\r\n\t//CommonJs\r\n\tmodule.exports = MakerJs;\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var angle;\r\n\t    (function (angle) {\r\n\t        /**\r\n\t         * Ensures an angle is not greater than 360\r\n\t         *\r\n\t         * @param angleInDegrees Angle in degrees.\r\n\t         * @retiurns Same polar angle but not greater than 360 degrees.\r\n\t         */\r\n\t        function noRevolutions(angleInDegrees) {\r\n\t            var revolutions = Math.floor(angleInDegrees / 360);\r\n\t            var a = angleInDegrees - (360 * revolutions);\r\n\t            return a < 0 ? a + 360 : a;\r\n\t        }\r\n\t        angle.noRevolutions = noRevolutions;\r\n\t        /**\r\n\t         * Convert an angle from degrees to radians.\r\n\t         *\r\n\t         * @param angleInDegrees Angle in degrees.\r\n\t         * @returns Angle in radians.\r\n\t         */\r\n\t        function toRadians(angleInDegrees) {\r\n\t            return noRevolutions(angleInDegrees) * Math.PI / 180.0;\r\n\t        }\r\n\t        angle.toRadians = toRadians;\r\n\t        /**\r\n\t         * Convert an angle from radians to degrees.\r\n\t         *\r\n\t         * @param angleInRadians Angle in radians.\r\n\t         * @returns Angle in degrees.\r\n\t         */\r\n\t        function toDegrees(angleInRadians) {\r\n\t            return angleInRadians * 180.0 / Math.PI;\r\n\t        }\r\n\t        angle.toDegrees = toDegrees;\r\n\t        /**\r\n\t         * Get an arc's end angle, ensured to be greater than its start angle.\r\n\t         *\r\n\t         * @param arc An arc path object.\r\n\t         * @returns End angle of arc.\r\n\t         */\r\n\t        function ofArcEnd(arc) {\r\n\t            //compensate for values past zero. This allows easy compute of total angle size.\r\n\t            //for example 0 = 360\r\n\t            if (arc.endAngle < arc.startAngle) {\r\n\t                return 360 + arc.endAngle;\r\n\t            }\r\n\t            return arc.endAngle;\r\n\t        }\r\n\t        angle.ofArcEnd = ofArcEnd;\r\n\t        /**\r\n\t         * Get the angle in the middle of an arc's start and end angles.\r\n\t         *\r\n\t         * @param arc An arc path object.\r\n\t         * @param ratio Optional number between 0 and 1 specifying percentage between start and end angles. Default is .5\r\n\t         * @returns Middle angle of arc.\r\n\t         */\r\n\t        function ofArcMiddle(arc, ratio) {\r\n\t            if (ratio === void 0) { ratio = .5; }\r\n\t            return arc.startAngle + ofArcSpan(arc) * ratio;\r\n\t        }\r\n\t        angle.ofArcMiddle = ofArcMiddle;\r\n\t        /**\r\n\t         * Total angle of an arc between its start and end angles.\r\n\t         *\r\n\t         * @param arc The arc to measure.\r\n\t         * @returns Angle of arc.\r\n\t         */\r\n\t        function ofArcSpan(arc) {\r\n\t            var endAngle = angle.ofArcEnd(arc);\r\n\t            var a = MakerJs.round(endAngle - arc.startAngle);\r\n\t            if (a > 360) {\r\n\t                return noRevolutions(a);\r\n\t            }\r\n\t            else {\r\n\t                return a;\r\n\t            }\r\n\t        }\r\n\t        angle.ofArcSpan = ofArcSpan;\r\n\t        /**\r\n\t         * Angle of a line path.\r\n\t         *\r\n\t         * @param line The line path to find the angle of.\r\n\t         * @returns Angle of the line path, in degrees.\r\n\t         */\r\n\t        function ofLineInDegrees(line) {\r\n\t            return noRevolutions(toDegrees(ofPointInRadians(line.origin, line.end)));\r\n\t        }\r\n\t        angle.ofLineInDegrees = ofLineInDegrees;\r\n\t        /**\r\n\t         * Angle of a line through a point, in degrees.\r\n\t         *\r\n\t         * @param pointToFindAngle The point to find the angle.\r\n\t         * @param origin Point of origin of the angle.\r\n\t         * @returns Angle of the line throught the point, in degrees.\r\n\t         */\r\n\t        function ofPointInDegrees(origin, pointToFindAngle) {\r\n\t            return toDegrees(ofPointInRadians(origin, pointToFindAngle));\r\n\t        }\r\n\t        angle.ofPointInDegrees = ofPointInDegrees;\r\n\t        /**\r\n\t         * Angle of a line through a point, in radians.\r\n\t         *\r\n\t         * @param pointToFindAngle The point to find the angle.\r\n\t         * @param origin Point of origin of the angle.\r\n\t         * @returns Angle of the line throught the point, in radians.\r\n\t         */\r\n\t        function ofPointInRadians(origin, pointToFindAngle) {\r\n\t            var d = MakerJs.point.subtract(pointToFindAngle, origin);\r\n\t            var x = d[0];\r\n\t            var y = d[1];\r\n\t            return Math.atan2(-y, -x) + Math.PI;\r\n\t        }\r\n\t        angle.ofPointInRadians = ofPointInRadians;\r\n\t        /**\r\n\t         * Mirror an angle on either or both x and y axes.\r\n\t         *\r\n\t         * @param angleInDegrees The angle to mirror.\r\n\t         * @param mirrorX Boolean to mirror on the x axis.\r\n\t         * @param mirrorY Boolean to mirror on the y axis.\r\n\t         * @returns Mirrored angle.\r\n\t         */\r\n\t        function mirror(angleInDegrees, mirrorX, mirrorY) {\r\n\t            if (mirrorY) {\r\n\t                angleInDegrees = 360 - angleInDegrees;\r\n\t            }\r\n\t            if (mirrorX) {\r\n\t                angleInDegrees = (angleInDegrees < 180 ? 180 : 540) - angleInDegrees;\r\n\t            }\r\n\t            return angleInDegrees;\r\n\t        }\r\n\t        angle.mirror = mirror;\r\n\t    })(angle = MakerJs.angle || (MakerJs.angle = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var point;\r\n\t    (function (point) {\r\n\t        /**\r\n\t         * Add two points together and return the result as a new point object.\r\n\t         *\r\n\t         * @param a First point.\r\n\t         * @param b Second point.\r\n\t         * @param subtract Optional boolean to subtract instead of add.\r\n\t         * @returns A new point object.\r\n\t         */\r\n\t        function add(a, b, subtract) {\r\n\t            var newPoint = clone(a);\r\n\t            if (!b)\r\n\t                return newPoint;\r\n\t            for (var i = 2; i--;) {\r\n\t                if (subtract) {\r\n\t                    newPoint[i] -= b[i];\r\n\t                }\r\n\t                else {\r\n\t                    newPoint[i] += b[i];\r\n\t                }\r\n\t            }\r\n\t            return newPoint;\r\n\t        }\r\n\t        point.add = add;\r\n\t        /**\r\n\t         * Get the average of two points.\r\n\t         *\r\n\t         * @param a First point.\r\n\t         * @param b Second point.\r\n\t         * @returns New point object which is the average of a and b.\r\n\t         */\r\n\t        function average(a, b) {\r\n\t            function avg(i) {\r\n\t                return (a[i] + b[i]) / 2;\r\n\t            }\r\n\t            return [avg(0), avg(1)];\r\n\t        }\r\n\t        point.average = average;\r\n\t        /**\r\n\t         * Clone a point into a new point.\r\n\t         *\r\n\t         * @param pointToClone The point to clone.\r\n\t         * @returns A new point with same values as the original.\r\n\t         */\r\n\t        function clone(pointToClone) {\r\n\t            if (!pointToClone)\r\n\t                return point.zero();\r\n\t            return [pointToClone[0], pointToClone[1]];\r\n\t        }\r\n\t        point.clone = clone;\r\n\t        /**\r\n\t         * From an array of points, find the closest point to a given reference point.\r\n\t         *\r\n\t         * @param referencePoint The reference point.\r\n\t         * @param pointOptions Array of points to choose from.\r\n\t         * @returns The first closest point from the pointOptions.\r\n\t         */\r\n\t        function closest(referencePoint, pointOptions) {\r\n\t            var smallest = {\r\n\t                index: 0,\r\n\t                distance: -1\r\n\t            };\r\n\t            for (var i = 0; i < pointOptions.length; i++) {\r\n\t                var distance = MakerJs.measure.pointDistance(referencePoint, pointOptions[i]);\r\n\t                if (smallest.distance == -1 || distance < smallest.distance) {\r\n\t                    smallest.distance = distance;\r\n\t                    smallest.index = i;\r\n\t                }\r\n\t            }\r\n\t            return pointOptions[smallest.index];\r\n\t        }\r\n\t        point.closest = closest;\r\n\t        /**\r\n\t         * Get a point from its polar coordinates.\r\n\t         *\r\n\t         * @param angleInRadians The angle of the polar coordinate, in radians.\r\n\t         * @param radius The radius of the polar coordinate.\r\n\t         * @returns A new point object.\r\n\t         */\r\n\t        function fromPolar(angleInRadians, radius) {\r\n\t            return [\r\n\t                radius * Math.cos(angleInRadians),\r\n\t                radius * Math.sin(angleInRadians)\r\n\t            ];\r\n\t        }\r\n\t        point.fromPolar = fromPolar;\r\n\t        /**\r\n\t         * Get a point on a circle or arc path, at a given angle.\r\n\t         * @param angleInDegrees The angle at which you want to find the point, in degrees.\r\n\t         * @param circle A circle or arc.\r\n\t         * @returns A new point object.\r\n\t         */\r\n\t        function fromAngleOnCircle(angleInDegrees, circle) {\r\n\t            return add(circle.origin, fromPolar(MakerJs.angle.toRadians(angleInDegrees), circle.radius));\r\n\t        }\r\n\t        point.fromAngleOnCircle = fromAngleOnCircle;\r\n\t        /**\r\n\t         * Get the two end points of an arc path.\r\n\t         *\r\n\t         * @param arc The arc path object.\r\n\t         * @returns Array with 2 elements: [0] is the point object corresponding to the start angle, [1] is the point object corresponding to the end angle.\r\n\t         */\r\n\t        function fromArc(arc) {\r\n\t            return [fromAngleOnCircle(arc.startAngle, arc), fromAngleOnCircle(arc.endAngle, arc)];\r\n\t        }\r\n\t        point.fromArc = fromArc;\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        var pathEndsMap = {};\r\n\t        pathEndsMap[MakerJs.pathType.Arc] = function (arc) {\r\n\t            return point.fromArc(arc);\r\n\t        };\r\n\t        pathEndsMap[MakerJs.pathType.Line] = function (line) {\r\n\t            return [line.origin, line.end];\r\n\t        };\r\n\t        pathEndsMap[MakerJs.pathType.BezierSeed] = pathEndsMap[MakerJs.pathType.Line];\r\n\t        /**\r\n\t         * Get the two end points of a path.\r\n\t         *\r\n\t         * @param pathContext The path object.\r\n\t         * @returns Array with 2 elements: [0] is the point object corresponding to the origin, [1] is the point object corresponding to the end.\r\n\t         */\r\n\t        function fromPathEnds(pathContext, pathOffset) {\r\n\t            var result = null;\r\n\t            var fn = pathEndsMap[pathContext.type];\r\n\t            if (fn) {\r\n\t                result = fn(pathContext);\r\n\t                if (pathOffset) {\r\n\t                    result = result.map(function (p) { return add(p, pathOffset); });\r\n\t                }\r\n\t            }\r\n\t            return result;\r\n\t        }\r\n\t        point.fromPathEnds = fromPathEnds;\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function verticalIntersectionPoint(verticalLine, nonVerticalSlope) {\r\n\t            var x = verticalLine.origin[0];\r\n\t            var y = nonVerticalSlope.slope * x + nonVerticalSlope.yIntercept;\r\n\t            return [x, y];\r\n\t        }\r\n\t        /**\r\n\t         * Calculates the intersection of slopes of two lines.\r\n\t         *\r\n\t         * @param lineA First line to use for slope.\r\n\t         * @param lineB Second line to use for slope.\r\n\t         * @param options Optional IPathIntersectionOptions.\r\n\t         * @returns point of intersection of the two slopes, or null if the slopes did not intersect.\r\n\t         */\r\n\t        function fromSlopeIntersection(lineA, lineB, options) {\r\n\t            if (options === void 0) { options = {}; }\r\n\t            var slopeA = MakerJs.measure.lineSlope(lineA);\r\n\t            var slopeB = MakerJs.measure.lineSlope(lineB);\r\n\t            if (MakerJs.measure.isSlopeEqual(slopeA, slopeB)) {\r\n\t                //check for overlap\r\n\t                options.out_AreOverlapped = MakerJs.measure.isLineOverlapping(lineA, lineB, options.excludeTangents);\r\n\t                return null;\r\n\t            }\r\n\t            var pointOfIntersection;\r\n\t            if (!slopeA.hasSlope) {\r\n\t                pointOfIntersection = verticalIntersectionPoint(lineA, slopeB);\r\n\t            }\r\n\t            else if (!slopeB.hasSlope) {\r\n\t                pointOfIntersection = verticalIntersectionPoint(lineB, slopeA);\r\n\t            }\r\n\t            else {\r\n\t                // find intersection by line equation\r\n\t                var x = (slopeB.yIntercept - slopeA.yIntercept) / (slopeA.slope - slopeB.slope);\r\n\t                var y = slopeA.slope * x + slopeA.yIntercept;\r\n\t                pointOfIntersection = [x, y];\r\n\t            }\r\n\t            return pointOfIntersection;\r\n\t        }\r\n\t        point.fromSlopeIntersection = fromSlopeIntersection;\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function midCircle(circle, midAngle) {\r\n\t            return point.add(circle.origin, point.fromPolar(MakerJs.angle.toRadians(midAngle), circle.radius));\r\n\t        }\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        var middleMap = {};\r\n\t        middleMap[MakerJs.pathType.Arc] = function (arc, ratio) {\r\n\t            var midAngle = MakerJs.angle.ofArcMiddle(arc, ratio);\r\n\t            return midCircle(arc, midAngle);\r\n\t        };\r\n\t        middleMap[MakerJs.pathType.Circle] = function (circle, ratio) {\r\n\t            return midCircle(circle, 360 * ratio);\r\n\t        };\r\n\t        middleMap[MakerJs.pathType.Line] = function (line, ratio) {\r\n\t            function ration(a, b) {\r\n\t                return a + (b - a) * ratio;\r\n\t            }\r\n\t            ;\r\n\t            return [\r\n\t                ration(line.origin[0], line.end[0]),\r\n\t                ration(line.origin[1], line.end[1])\r\n\t            ];\r\n\t        };\r\n\t        middleMap[MakerJs.pathType.BezierSeed] = function (seed, ratio) {\r\n\t            return MakerJs.models.BezierCurve.computePoint(seed, ratio);\r\n\t        };\r\n\t        /**\r\n\t         * Get the middle point of a path.\r\n\t         *\r\n\t         * @param pathContext The path object.\r\n\t         * @param ratio Optional ratio (between 0 and 1) of point along the path. Default is .5 for middle.\r\n\t         * @returns Point on the path, in the middle of the path.\r\n\t         */\r\n\t        function middle(pathContext, ratio) {\r\n\t            if (ratio === void 0) { ratio = .5; }\r\n\t            var midPoint = null;\r\n\t            var fn = middleMap[pathContext.type];\r\n\t            if (fn) {\r\n\t                midPoint = fn(pathContext, ratio);\r\n\t            }\r\n\t            return midPoint;\r\n\t        }\r\n\t        point.middle = middle;\r\n\t        /**\r\n\t         * Create a clone of a point, mirrored on either or both x and y axes.\r\n\t         *\r\n\t         * @param pointToMirror The point to mirror.\r\n\t         * @param mirrorX Boolean to mirror on the x axis.\r\n\t         * @param mirrorY Boolean to mirror on the y axis.\r\n\t         * @returns Mirrored point.\r\n\t         */\r\n\t        function mirror(pointToMirror, mirrorX, mirrorY) {\r\n\t            var p = clone(pointToMirror);\r\n\t            if (mirrorX) {\r\n\t                p[0] = -p[0];\r\n\t            }\r\n\t            if (mirrorY) {\r\n\t                p[1] = -p[1];\r\n\t            }\r\n\t            return p;\r\n\t        }\r\n\t        point.mirror = mirror;\r\n\t        /**\r\n\t         * Round the values of a point.\r\n\t         *\r\n\t         * @param pointContext The point to serialize.\r\n\t         * @param accuracy Optional exemplar number of decimal places.\r\n\t         * @returns A new point with the values rounded.\r\n\t         */\r\n\t        function rounded(pointContext, accuracy) {\r\n\t            return [MakerJs.round(pointContext[0], accuracy), MakerJs.round(pointContext[1], accuracy)];\r\n\t        }\r\n\t        point.rounded = rounded;\r\n\t        /**\r\n\t         * Rotate a point.\r\n\t         *\r\n\t         * @param pointToRotate The point to rotate.\r\n\t         * @param angleInDegrees The amount of rotation, in degrees.\r\n\t         * @param rotationOrigin The center point of rotation.\r\n\t         * @returns A new point.\r\n\t         */\r\n\t        function rotate(pointToRotate, angleInDegrees, rotationOrigin) {\r\n\t            if (rotationOrigin === void 0) { rotationOrigin = [0, 0]; }\r\n\t            var pointAngleInRadians = MakerJs.angle.ofPointInRadians(rotationOrigin, pointToRotate);\r\n\t            var d = MakerJs.measure.pointDistance(rotationOrigin, pointToRotate);\r\n\t            var rotatedPoint = fromPolar(pointAngleInRadians + MakerJs.angle.toRadians(angleInDegrees), d);\r\n\t            return add(rotationOrigin, rotatedPoint);\r\n\t        }\r\n\t        point.rotate = rotate;\r\n\t        /**\r\n\t         * Scale a point's coordinates.\r\n\t         *\r\n\t         * @param pointToScale The point to scale.\r\n\t         * @param scaleValue The amount of scaling.\r\n\t         * @returns A new point.\r\n\t         */\r\n\t        function scale(pointToScale, scaleValue) {\r\n\t            var p = clone(pointToScale);\r\n\t            for (var i = 2; i--;) {\r\n\t                p[i] *= scaleValue;\r\n\t            }\r\n\t            return p;\r\n\t        }\r\n\t        point.scale = scale;\r\n\t        /**\r\n\t         * Distort a point's coordinates.\r\n\t         *\r\n\t         * @param pointToDistort The point to distort.\r\n\t         * @param scaleX The amount of x scaling.\r\n\t         * @param scaleY The amount of y scaling.\r\n\t         * @returns A new point.\r\n\t         */\r\n\t        function distort(pointToDistort, scaleX, scaleY) {\r\n\t            return [pointToDistort[0] * scaleX, pointToDistort[1] * scaleY];\r\n\t        }\r\n\t        point.distort = distort;\r\n\t        /**\r\n\t         * Subtract a point from another point, and return the result as a new point. Shortcut to Add(a, b, subtract = true).\r\n\t         *\r\n\t         * @param a First point.\r\n\t         * @param b Second point.\r\n\t         * @returns A new point object.\r\n\t         */\r\n\t        function subtract(a, b) {\r\n\t            return add(a, b, true);\r\n\t        }\r\n\t        point.subtract = subtract;\r\n\t        /**\r\n\t         * A point at 0,0 coordinates.\r\n\t         * NOTE: It is important to call this as a method, with the empty parentheses.\r\n\t         *\r\n\t         * @returns A new point.\r\n\t         */\r\n\t        function zero() {\r\n\t            return [0, 0];\r\n\t        }\r\n\t        point.zero = zero;\r\n\t    })(point = MakerJs.point || (MakerJs.point = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var path;\r\n\t    (function (path) {\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function copyLayer(pathA, pathB) {\r\n\t            if (pathA && pathB && ('layer' in pathA)) {\r\n\t                pathB.layer = pathA.layer;\r\n\t            }\r\n\t        }\r\n\t        /**\r\n\t         * Create a clone of a path. This is faster than cloneObject.\r\n\t         *\r\n\t         * @param pathToClone The path to clone.\r\n\t         * @returns Cloned path.\r\n\t         */\r\n\t        function clone(pathToClone) {\r\n\t            var result = null;\r\n\t            switch (pathToClone.type) {\r\n\t                case MakerJs.pathType.Arc:\r\n\t                    var arc = pathToClone;\r\n\t                    result = new MakerJs.paths.Arc(MakerJs.point.clone(arc.origin), arc.radius, arc.startAngle, arc.endAngle);\r\n\t                    //carry extra props if this is an IPathArcInBezierCurve\r\n\t                    if (MakerJs.isPathArcInBezierCurve(arc)) {\r\n\t                        result.bezierData = arc.bezierData;\r\n\t                    }\r\n\t                    break;\r\n\t                case MakerJs.pathType.Circle:\r\n\t                    var circle = pathToClone;\r\n\t                    result = new MakerJs.paths.Circle(MakerJs.point.clone(circle.origin), circle.radius);\r\n\t                    break;\r\n\t                case MakerJs.pathType.Line:\r\n\t                    var line = pathToClone;\r\n\t                    result = new MakerJs.paths.Line(MakerJs.point.clone(line.origin), MakerJs.point.clone(line.end));\r\n\t                    break;\r\n\t            }\r\n\t            copyLayer(pathToClone, result);\r\n\t            return result;\r\n\t        }\r\n\t        path.clone = clone;\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        var mirrorMap = {};\r\n\t        mirrorMap[MakerJs.pathType.Line] = function (line, origin, mirrorX, mirrorY) {\r\n\t            return new MakerJs.paths.Line(origin, MakerJs.point.mirror(line.end, mirrorX, mirrorY));\r\n\t        };\r\n\t        mirrorMap[MakerJs.pathType.Circle] = function (circle, origin, mirrorX, mirrorY) {\r\n\t            return new MakerJs.paths.Circle(origin, circle.radius);\r\n\t        };\r\n\t        mirrorMap[MakerJs.pathType.Arc] = function (arc, origin, mirrorX, mirrorY) {\r\n\t            var startAngle = MakerJs.angle.mirror(arc.startAngle, mirrorX, mirrorY);\r\n\t            var endAngle = MakerJs.angle.mirror(MakerJs.angle.ofArcEnd(arc), mirrorX, mirrorY);\r\n\t            var xor = mirrorX != mirrorY;\r\n\t            return new MakerJs.paths.Arc(origin, arc.radius, xor ? endAngle : startAngle, xor ? startAngle : endAngle);\r\n\t        };\r\n\t        mirrorMap[MakerJs.pathType.BezierSeed] = function (seed, origin, mirrorX, mirrorY) {\r\n\t            var mirrored = mirrorMap[MakerJs.pathType.Line](seed, origin, mirrorX, mirrorY);\r\n\t            mirrored.type = MakerJs.pathType.BezierSeed;\r\n\t            mirrored.controls = seed.controls.map(function (c) { return MakerJs.point.mirror(c, mirrorX, mirrorY); });\r\n\t            return mirrored;\r\n\t        };\r\n\t        /**\r\n\t         * Create a clone of a path, mirrored on either or both x and y axes.\r\n\t         *\r\n\t         * @param pathToMirror The path to mirror.\r\n\t         * @param mirrorX Boolean to mirror on the x axis.\r\n\t         * @param mirrorY Boolean to mirror on the y axis.\r\n\t         * @returns Mirrored path.\r\n\t         */\r\n\t        function mirror(pathToMirror, mirrorX, mirrorY) {\r\n\t            var newPath = null;\r\n\t            if (pathToMirror) {\r\n\t                var origin = MakerJs.point.mirror(pathToMirror.origin, mirrorX, mirrorY);\r\n\t                var fn = mirrorMap[pathToMirror.type];\r\n\t                if (fn) {\r\n\t                    newPath = fn(pathToMirror, origin, mirrorX, mirrorY);\r\n\t                }\r\n\t            }\r\n\t            copyLayer(pathToMirror, newPath);\r\n\t            return newPath;\r\n\t        }\r\n\t        path.mirror = mirror;\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        var moveMap = {};\r\n\t        moveMap[MakerJs.pathType.Line] = function (line, origin) {\r\n\t            var delta = MakerJs.point.subtract(line.end, line.origin);\r\n\t            line.end = MakerJs.point.add(origin, delta);\r\n\t        };\r\n\t        /**\r\n\t         * Move a path to an absolute point.\r\n\t         *\r\n\t         * @param pathToMove The path to move.\r\n\t         * @param origin The new origin for the path.\r\n\t         * @returns The original path (for cascading).\r\n\t         */\r\n\t        function move(pathToMove, origin) {\r\n\t            if (pathToMove) {\r\n\t                var fn = moveMap[pathToMove.type];\r\n\t                if (fn) {\r\n\t                    fn(pathToMove, origin);\r\n\t                }\r\n\t                pathToMove.origin = origin;\r\n\t            }\r\n\t            return pathToMove;\r\n\t        }\r\n\t        path.move = move;\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        var moveRelativeMap = {};\r\n\t        moveRelativeMap[MakerJs.pathType.Line] = function (line, delta, subtract) {\r\n\t            line.end = MakerJs.point.add(line.end, delta, subtract);\r\n\t        };\r\n\t        moveRelativeMap[MakerJs.pathType.BezierSeed] = function (seed, delta, subtract) {\r\n\t            moveRelativeMap[MakerJs.pathType.Line](seed, delta, subtract);\r\n\t            seed.controls = seed.controls.map(function (c) { return MakerJs.point.add(c, delta, subtract); });\r\n\t        };\r\n\t        /**\r\n\t         * Move a path's origin by a relative amount.\r\n\t         *\r\n\t         * @param pathToMove The path to move.\r\n\t         * @param delta The x & y adjustments as a point object.\r\n\t         * @param subtract Optional boolean to subtract instead of add.\r\n\t         * @returns The original path (for cascading).\r\n\t         */\r\n\t        function moveRelative(pathToMove, delta, subtract) {\r\n\t            if (pathToMove && delta) {\r\n\t                pathToMove.origin = MakerJs.point.add(pathToMove.origin, delta, subtract);\r\n\t                var fn = moveRelativeMap[pathToMove.type];\r\n\t                if (fn) {\r\n\t                    fn(pathToMove, delta, subtract);\r\n\t                }\r\n\t            }\r\n\t            return pathToMove;\r\n\t        }\r\n\t        path.moveRelative = moveRelative;\r\n\t        /**\r\n\t         * Move some paths relatively during a task execution, then unmove them.\r\n\t         *\r\n\t         * @param pathsToMove The paths to move.\r\n\t         * @param deltas The x & y adjustments as a point object array.\r\n\t         * @param task The function to call while the paths are temporarily moved.\r\n\t         */\r\n\t        function moveTemporary(pathsToMove, deltas, task) {\r\n\t            var subtract = false;\r\n\t            function move(pathToOffset, i) {\r\n\t                if (deltas[i]) {\r\n\t                    moveRelative(pathToOffset, deltas[i], subtract);\r\n\t                }\r\n\t            }\r\n\t            pathsToMove.map(move);\r\n\t            task();\r\n\t            subtract = true;\r\n\t            pathsToMove.map(move);\r\n\t        }\r\n\t        path.moveTemporary = moveTemporary;\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        var rotateMap = {};\r\n\t        rotateMap[MakerJs.pathType.Line] = function (line, angleInDegrees, rotationOrigin) {\r\n\t            line.end = MakerJs.point.rotate(line.end, angleInDegrees, rotationOrigin);\r\n\t        };\r\n\t        rotateMap[MakerJs.pathType.Arc] = function (arc, angleInDegrees, rotationOrigin) {\r\n\t            arc.startAngle = MakerJs.angle.noRevolutions(arc.startAngle + angleInDegrees);\r\n\t            arc.endAngle = MakerJs.angle.noRevolutions(arc.endAngle + angleInDegrees);\r\n\t        };\r\n\t        rotateMap[MakerJs.pathType.BezierSeed] = function (seed, angleInDegrees, rotationOrigin) {\r\n\t            rotateMap[MakerJs.pathType.Line](seed, angleInDegrees, rotationOrigin);\r\n\t            seed.controls = seed.controls.map(function (c) { return MakerJs.point.rotate(c, angleInDegrees, rotationOrigin); });\r\n\t        };\r\n\t        /**\r\n\t         * Rotate a path.\r\n\t         *\r\n\t         * @param pathToRotate The path to rotate.\r\n\t         * @param angleInDegrees The amount of rotation, in degrees.\r\n\t         * @param rotationOrigin The center point of rotation.\r\n\t         * @returns The original path (for cascading).\r\n\t         */\r\n\t        function rotate(pathToRotate, angleInDegrees, rotationOrigin) {\r\n\t            if (rotationOrigin === void 0) { rotationOrigin = [0, 0]; }\r\n\t            if (!pathToRotate || !angleInDegrees)\r\n\t                return pathToRotate;\r\n\t            pathToRotate.origin = MakerJs.point.rotate(pathToRotate.origin, angleInDegrees, rotationOrigin);\r\n\t            var fn = rotateMap[pathToRotate.type];\r\n\t            if (fn) {\r\n\t                fn(pathToRotate, angleInDegrees, rotationOrigin);\r\n\t            }\r\n\t            return pathToRotate;\r\n\t        }\r\n\t        path.rotate = rotate;\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        var scaleMap = {};\r\n\t        scaleMap[MakerJs.pathType.Line] = function (line, scaleValue) {\r\n\t            line.end = MakerJs.point.scale(line.end, scaleValue);\r\n\t        };\r\n\t        scaleMap[MakerJs.pathType.BezierSeed] = function (seed, scaleValue) {\r\n\t            scaleMap[MakerJs.pathType.Line](seed, scaleValue);\r\n\t            seed.controls = seed.controls.map(function (c) { return MakerJs.point.scale(c, scaleValue); });\r\n\t        };\r\n\t        scaleMap[MakerJs.pathType.Circle] = function (circle, scaleValue) {\r\n\t            circle.radius *= scaleValue;\r\n\t        };\r\n\t        scaleMap[MakerJs.pathType.Arc] = scaleMap[MakerJs.pathType.Circle];\r\n\t        /**\r\n\t         * Scale a path.\r\n\t         *\r\n\t         * @param pathToScale The path to scale.\r\n\t         * @param scaleValue The amount of scaling.\r\n\t         * @returns The original path (for cascading).\r\n\t         */\r\n\t        function scale(pathToScale, scaleValue) {\r\n\t            if (!pathToScale || scaleValue == 1)\r\n\t                return pathToScale;\r\n\t            pathToScale.origin = MakerJs.point.scale(pathToScale.origin, scaleValue);\r\n\t            var fn = scaleMap[pathToScale.type];\r\n\t            if (fn) {\r\n\t                fn(pathToScale, scaleValue);\r\n\t            }\r\n\t            return pathToScale;\r\n\t        }\r\n\t        path.scale = scale;\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        var distortMap = {};\r\n\t        distortMap[MakerJs.pathType.Arc] = function (arc, scaleX, scaleY) {\r\n\t            return new MakerJs.models.EllipticArc(arc, scaleX, scaleY);\r\n\t        };\r\n\t        distortMap[MakerJs.pathType.Circle] = function (circle, scaleX, scaleY) {\r\n\t            var ellipse = new MakerJs.models.Ellipse(circle.radius * scaleX, circle.radius * scaleY);\r\n\t            ellipse.origin = MakerJs.point.distort(circle.origin, scaleX, scaleY);\r\n\t            return ellipse;\r\n\t        };\r\n\t        distortMap[MakerJs.pathType.Line] = function (line, scaleX, scaleY) {\r\n\t            return new MakerJs.paths.Line([line.origin, line.end].map(function (p) { return MakerJs.point.distort(p, scaleX, scaleY); }));\r\n\t        };\r\n\t        distortMap[MakerJs.pathType.BezierSeed] = function (seed, scaleX, scaleY) {\r\n\t            var d = MakerJs.point.distort;\r\n\t            return {\r\n\t                type: MakerJs.pathType.BezierSeed,\r\n\t                origin: d(seed.origin, scaleX, scaleY),\r\n\t                controls: seed.controls.map(function (c) { return d(c, scaleX, scaleY); }),\r\n\t                end: d(seed.end, scaleX, scaleY)\r\n\t            };\r\n\t        };\r\n\t        /**\r\n\t         * Distort a path - scale x and y individually.\r\n\t         *\r\n\t         * @param pathToDistort The path to distort.\r\n\t         * @param scaleX The amount of x scaling.\r\n\t         * @param scaleY The amount of y scaling.\r\n\t         * @returns A new IModel (for circles and arcs) or IPath (for lines and bezier seeds).\r\n\t         */\r\n\t        function distort(pathToDistort, scaleX, scaleY) {\r\n\t            if (!pathToDistort)\r\n\t                return null;\r\n\t            var fn = distortMap[pathToDistort.type];\r\n\t            if (fn) {\r\n\t                return fn(pathToDistort, scaleX, scaleY);\r\n\t            }\r\n\t            return null;\r\n\t        }\r\n\t        path.distort = distort;\r\n\t        /**\r\n\t         * Connect 2 lines at their slope intersection point.\r\n\t         *\r\n\t         * @param lineA First line to converge.\r\n\t         * @param lineB Second line to converge.\r\n\t         * @param useOriginA Optional flag to converge the origin point of lineA instead of the end point.\r\n\t         * @param useOriginB Optional flag to converge the origin point of lineB instead of the end point.\r\n\t         */\r\n\t        function converge(lineA, lineB, useOriginA, useOriginB) {\r\n\t            var p = MakerJs.point.fromSlopeIntersection(lineA, lineB);\r\n\t            if (p) {\r\n\t                var lines = [lineA, lineB];\r\n\t                var useOrigin = [useOriginA, useOriginB];\r\n\t                if (arguments.length === 2) {\r\n\t                    //converge to closest\r\n\t                    lines.forEach(function (line, i) {\r\n\t                        useOrigin[i] = (MakerJs.point.closest(p, [line.origin, line.end]) === line.origin);\r\n\t                    });\r\n\t                }\r\n\t                function setPoint(line, useOrigin) {\r\n\t                    var setP;\r\n\t                    if (useOrigin) {\r\n\t                        setP = line.origin;\r\n\t                    }\r\n\t                    else {\r\n\t                        setP = line.end;\r\n\t                    }\r\n\t                    setP[0] = p[0];\r\n\t                    setP[1] = p[1];\r\n\t                }\r\n\t                lines.forEach(function (line, i) {\r\n\t                    setPoint(line, useOrigin[i]);\r\n\t                });\r\n\t            }\r\n\t            return p;\r\n\t        }\r\n\t        path.converge = converge;\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        var alterMap = {};\r\n\t        alterMap[MakerJs.pathType.Arc] = function (arc, pathLength, distance, useOrigin) {\r\n\t            var span = MakerJs.angle.ofArcSpan(arc);\r\n\t            var delta = ((pathLength + distance) * span / pathLength) - span;\r\n\t            if (useOrigin) {\r\n\t                arc.startAngle -= delta;\r\n\t            }\r\n\t            else {\r\n\t                arc.endAngle += delta;\r\n\t            }\r\n\t        };\r\n\t        alterMap[MakerJs.pathType.Circle] = function (circle, pathLength, distance, useOrigin) {\r\n\t            circle.radius *= (pathLength + distance) / pathLength;\r\n\t        };\r\n\t        alterMap[MakerJs.pathType.Line] = function (line, pathLength, distance, useOrigin) {\r\n\t            var delta = MakerJs.point.scale(MakerJs.point.subtract(line.end, line.origin), distance / pathLength);\r\n\t            if (useOrigin) {\r\n\t                line.origin = MakerJs.point.subtract(line.origin, delta);\r\n\t            }\r\n\t            else {\r\n\t                line.end = MakerJs.point.add(line.end, delta);\r\n\t            }\r\n\t        };\r\n\t        /**\r\n\t         * Alter a path by lengthening or shortening it.\r\n\t         *\r\n\t         * @param pathToAlter Path to alter.\r\n\t         * @param distance Numeric amount of length to add or remove from the path. Use a positive number to lengthen, negative to shorten. When shortening: this function will not alter the path and will return null if the resulting path length is less than or equal to zero.\r\n\t         * @param useOrigin Optional flag to alter from the origin instead of the end of the path.\r\n\t         * @returns The original path, or null if the path could not be altered.\r\n\t         */\r\n\t        function alterLength(pathToAlter, distance, useOrigin) {\r\n\t            if (useOrigin === void 0) { useOrigin = false; }\r\n\t            if (!pathToAlter || !distance)\r\n\t                return null;\r\n\t            var fn = alterMap[pathToAlter.type];\r\n\t            if (fn) {\r\n\t                var pathLength = MakerJs.measure.pathLength(pathToAlter);\r\n\t                if (!pathLength || -distance >= pathLength)\r\n\t                    return null;\r\n\t                fn(pathToAlter, pathLength, distance, useOrigin);\r\n\t                return pathToAlter;\r\n\t            }\r\n\t            return null;\r\n\t        }\r\n\t        path.alterLength = alterLength;\r\n\t        /**\r\n\t         * Get points along a path.\r\n\t         *\r\n\t         * @param pathContext Path to get points from.\r\n\t         * @param numberOfPoints Number of points to divide the path.\r\n\t         * @returns Array of points which are on the path spread at a uniform interval.\r\n\t         */\r\n\t        function toPoints(pathContext, numberOfPoints) {\r\n\t            //avoid division by zero when there is only one point\r\n\t            if (numberOfPoints == 1) {\r\n\t                return [MakerJs.point.middle(pathContext)];\r\n\t            }\r\n\t            var points = [];\r\n\t            var base = numberOfPoints;\r\n\t            if (pathContext.type != MakerJs.pathType.Circle)\r\n\t                base--;\r\n\t            for (var i = 0; i < numberOfPoints; i++) {\r\n\t                points.push(MakerJs.point.middle(pathContext, i / base));\r\n\t            }\r\n\t            return points;\r\n\t        }\r\n\t        path.toPoints = toPoints;\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        var numberOfKeyPointsMap = {};\r\n\t        numberOfKeyPointsMap[MakerJs.pathType.Line] = function (line) {\r\n\t            return 2;\r\n\t        };\r\n\t        numberOfKeyPointsMap[MakerJs.pathType.Circle] = function (circle, maxPointDistance) {\r\n\t            var len = MakerJs.measure.pathLength(circle);\r\n\t            if (!len)\r\n\t                return 0;\r\n\t            maxPointDistance = maxPointDistance || len;\r\n\t            return Math.max(8, Math.ceil(len / (maxPointDistance || len)));\r\n\t        };\r\n\t        numberOfKeyPointsMap[MakerJs.pathType.Arc] = function (arc, maxPointDistance) {\r\n\t            var len = MakerJs.measure.pathLength(arc);\r\n\t            if (!len)\r\n\t                return 0;\r\n\t            var minPoints = Math.ceil(MakerJs.angle.ofArcSpan(arc) / 45) + 1;\r\n\t            return Math.max(minPoints, Math.ceil(len / (maxPointDistance || len)));\r\n\t        };\r\n\t        /**\r\n\t         * Get key points (a minimal a number of points) along a path.\r\n\t         *\r\n\t         * @param pathContext Path to get points from.\r\n\t         * @param maxArcFacet Optional maximum length between points on an arc or circle.\r\n\t         * @returns Array of points which are on the path.\r\n\t         */\r\n\t        function toKeyPoints(pathContext, maxArcFacet) {\r\n\t            var fn = numberOfKeyPointsMap[pathContext.type];\r\n\t            if (fn) {\r\n\t                var numberOfKeyPoints = fn(pathContext, maxArcFacet);\r\n\t                if (numberOfKeyPoints) {\r\n\t                    return toPoints(pathContext, numberOfKeyPoints);\r\n\t                }\r\n\t            }\r\n\t            return [];\r\n\t        }\r\n\t        path.toKeyPoints = toKeyPoints;\r\n\t        /**\r\n\t         * Center a path at [0, 0].\r\n\t         *\r\n\t         * @param pathToCenter The path to center.\r\n\t         */\r\n\t        function center(pathToCenter) {\r\n\t            var m = MakerJs.measure.pathExtents(pathToCenter);\r\n\t            var c = MakerJs.point.average(m.high, m.low);\r\n\t            var o = MakerJs.point.subtract(pathToCenter.origin || [0, 0], c);\r\n\t            move(pathToCenter, o);\r\n\t            return pathToCenter;\r\n\t        }\r\n\t        path.center = center;\r\n\t        /**\r\n\t         * Move a path so its bounding box begins at [0, 0].\r\n\t         *\r\n\t         * @param pathToZero The path to zero.\r\n\t         */\r\n\t        function zero(pathToZero) {\r\n\t            var m = MakerJs.measure.pathExtents(pathToZero);\r\n\t            var z = MakerJs.point.subtract(pathToZero.origin || [0, 0], m.low);\r\n\t            move(pathToZero, z);\r\n\t            return pathToZero;\r\n\t        }\r\n\t        path.zero = zero;\r\n\t    })(path = MakerJs.path || (MakerJs.path = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var path;\r\n\t    (function (path_1) {\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        var breakPathFunctionMap = {};\r\n\t        breakPathFunctionMap[MakerJs.pathType.Arc] = function (arc, pointOfBreak) {\r\n\t            var angleAtBreakPoint = MakerJs.angle.ofPointInDegrees(arc.origin, pointOfBreak);\r\n\t            if (MakerJs.measure.isAngleEqual(angleAtBreakPoint, arc.startAngle) || MakerJs.measure.isAngleEqual(angleAtBreakPoint, arc.endAngle)) {\r\n\t                return null;\r\n\t            }\r\n\t            function getAngleStrictlyBetweenArcAngles() {\r\n\t                var startAngle = MakerJs.angle.noRevolutions(arc.startAngle);\r\n\t                var endAngle = startAngle + MakerJs.angle.ofArcEnd(arc) - arc.startAngle;\r\n\t                var tries = [0, 1, -1];\r\n\t                for (var i = 0; i < tries.length; i++) {\r\n\t                    var add = +360 * tries[i];\r\n\t                    if (MakerJs.measure.isBetween(angleAtBreakPoint + add, startAngle, endAngle, true)) {\r\n\t                        return arc.startAngle + angleAtBreakPoint + add - startAngle;\r\n\t                    }\r\n\t                }\r\n\t                return null;\r\n\t            }\r\n\t            var angleAtBreakPointBetween = getAngleStrictlyBetweenArcAngles();\r\n\t            if (angleAtBreakPointBetween == null) {\r\n\t                return null;\r\n\t            }\r\n\t            var savedEndAngle = arc.endAngle;\r\n\t            arc.endAngle = angleAtBreakPointBetween;\r\n\t            //clone the original to carry other properties\r\n\t            var copy = MakerJs.cloneObject(arc);\r\n\t            copy.startAngle = angleAtBreakPointBetween;\r\n\t            copy.endAngle = savedEndAngle;\r\n\t            return copy;\r\n\t        };\r\n\t        breakPathFunctionMap[MakerJs.pathType.Circle] = function (circle, pointOfBreak) {\r\n\t            //breaking a circle turns it into an arc\r\n\t            circle.type = MakerJs.pathType.Arc;\r\n\t            var arc = circle;\r\n\t            var angleAtBreakPoint = MakerJs.angle.ofPointInDegrees(circle.origin, pointOfBreak);\r\n\t            arc.startAngle = angleAtBreakPoint;\r\n\t            arc.endAngle = angleAtBreakPoint + 360;\r\n\t            return null;\r\n\t        };\r\n\t        breakPathFunctionMap[MakerJs.pathType.Line] = function (line, pointOfBreak) {\r\n\t            if (!MakerJs.measure.isBetweenPoints(pointOfBreak, line, true)) {\r\n\t                return null;\r\n\t            }\r\n\t            var savedEndPoint = line.end;\r\n\t            line.end = pointOfBreak;\r\n\t            //clone the original to carry other properties\r\n\t            var copy = MakerJs.cloneObject(line);\r\n\t            copy.origin = pointOfBreak;\r\n\t            copy.end = savedEndPoint;\r\n\t            return copy;\r\n\t        };\r\n\t        /**\r\n\t         * Breaks a path in two. The supplied path will end at the supplied pointOfBreak,\r\n\t         * a new path is returned which begins at the pointOfBreak and ends at the supplied path's initial end point.\r\n\t         * For Circle, the original path will be converted in place to an Arc, and null is returned.\r\n\t         *\r\n\t         * @param pathToBreak The path to break.\r\n\t         * @param pointOfBreak The point at which to break the path.\r\n\t         * @returns A new path of the same type, when path type is line or arc. Returns null for circle.\r\n\t         */\r\n\t        function breakAtPoint(pathToBreak, pointOfBreak) {\r\n\t            if (pathToBreak && pointOfBreak) {\r\n\t                var fn = breakPathFunctionMap[pathToBreak.type];\r\n\t                if (fn) {\r\n\t                    var result = fn(pathToBreak, pointOfBreak);\r\n\t                    if (result && ('layer' in pathToBreak)) {\r\n\t                        result.layer = pathToBreak.layer;\r\n\t                    }\r\n\t                    return result;\r\n\t                }\r\n\t            }\r\n\t            return null;\r\n\t        }\r\n\t        path_1.breakAtPoint = breakAtPoint;\r\n\t    })(path = MakerJs.path || (MakerJs.path = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var paths;\r\n\t    (function (paths) {\r\n\t        /**\r\n\t         * Class for arc path.\r\n\t         */\r\n\t        var Arc = (function () {\r\n\t            function Arc() {\r\n\t                var args = [];\r\n\t                for (var _i = 0; _i < arguments.length; _i++) {\r\n\t                    args[_i] = arguments[_i];\r\n\t                }\r\n\t                function getSpan(origin) {\r\n\t                    var startAngle = MakerJs.angle.ofPointInDegrees(origin, args[clockwise ? 1 : 0]);\r\n\t                    var endAngle = MakerJs.angle.ofPointInDegrees(origin, args[clockwise ? 0 : 1]);\r\n\t                    if (endAngle < startAngle) {\r\n\t                        endAngle += 360;\r\n\t                    }\r\n\t                    return {\r\n\t                        origin: origin,\r\n\t                        startAngle: startAngle,\r\n\t                        endAngle: endAngle,\r\n\t                        size: endAngle - startAngle\r\n\t                    };\r\n\t                }\r\n\t                switch (args.length) {\r\n\t                    case 5:\r\n\t                        //SVG style arc designation\r\n\t                        var pointA = args[0];\r\n\t                        var pointB = args[1];\r\n\t                        this.radius = args[2];\r\n\t                        var largeArc = args[3];\r\n\t                        var clockwise = args[4];\r\n\t                        var span;\r\n\t                        //make sure arc can reach. if not, scale up.\r\n\t                        var smallestRadius = MakerJs.measure.pointDistance(pointA, pointB) / 2;\r\n\t                        if (MakerJs.round(this.radius - smallestRadius) <= 0) {\r\n\t                            this.radius = smallestRadius;\r\n\t                            span = getSpan(MakerJs.point.average(pointA, pointB));\r\n\t                        }\r\n\t                        else {\r\n\t                            //find the 2 potential origins\r\n\t                            var origins = MakerJs.path.intersection(new Circle(pointA, this.radius), new Circle(pointB, this.radius));\r\n\t                            var spans = [];\r\n\t                            for (var i = origins.intersectionPoints.length; i--;) {\r\n\t                                span = getSpan(origins.intersectionPoints[i]);\r\n\t                                //insert sorted by size ascending\r\n\t                                if (spans.length == 0 || span.size > spans[0].size) {\r\n\t                                    spans.push(span);\r\n\t                                }\r\n\t                                else {\r\n\t                                    spans.unshift(span);\r\n\t                                }\r\n\t                            }\r\n\t                            var index = largeArc ? 1 : 0;\r\n\t                            span = spans[index];\r\n\t                        }\r\n\t                        this.origin = span.origin;\r\n\t                        this.startAngle = span.startAngle;\r\n\t                        this.endAngle = span.endAngle;\r\n\t                        break;\r\n\t                    case 4:\r\n\t                        this.origin = args[0];\r\n\t                        this.radius = args[1];\r\n\t                        this.startAngle = args[2];\r\n\t                        this.endAngle = args[3];\r\n\t                        break;\r\n\t                    case 3:\r\n\t                        if (MakerJs.isPoint(args[2])) {\r\n\t                            //from 3 points\r\n\t                            Circle.apply(this, args);\r\n\t                            var angles = [];\r\n\t                            for (var i = 0; i < 3; i++) {\r\n\t                                angles.push(MakerJs.angle.ofPointInDegrees(this.origin, args[i]));\r\n\t                            }\r\n\t                            this.startAngle = angles[0];\r\n\t                            this.endAngle = angles[2];\r\n\t                            //swap start and end angles if this arc does not contain the midpoint\r\n\t                            if (!MakerJs.measure.isBetweenArcAngles(angles[1], this, false)) {\r\n\t                                this.startAngle = angles[2];\r\n\t                                this.endAngle = angles[0];\r\n\t                            }\r\n\t                            //do not fall through if this was 3 points\r\n\t                            break;\r\n\t                        }\r\n\t                    //fall through to below if 2 points\r\n\t                    case 2:\r\n\t                        //from 2 points (and optional clockwise flag)\r\n\t                        var clockwise = args[2];\r\n\t                        Circle.call(this, args[0], args[1]);\r\n\t                        this.startAngle = MakerJs.angle.ofPointInDegrees(this.origin, args[clockwise ? 1 : 0]);\r\n\t                        this.endAngle = MakerJs.angle.ofPointInDegrees(this.origin, args[clockwise ? 0 : 1]);\r\n\t                        break;\r\n\t                }\r\n\t                //do this after Circle.apply / Circle.call to make sure this is an arc\r\n\t                this.type = MakerJs.pathType.Arc;\r\n\t            }\r\n\t            return Arc;\r\n\t        }());\r\n\t        paths.Arc = Arc;\r\n\t        /**\r\n\t         * Class for circle path.\r\n\t         */\r\n\t        var Circle = (function () {\r\n\t            function Circle() {\r\n\t                var args = [];\r\n\t                for (var _i = 0; _i < arguments.length; _i++) {\r\n\t                    args[_i] = arguments[_i];\r\n\t                }\r\n\t                this.type = MakerJs.pathType.Circle;\r\n\t                switch (args.length) {\r\n\t                    case 1:\r\n\t                        this.origin = [0, 0];\r\n\t                        this.radius = args[0];\r\n\t                        break;\r\n\t                    case 2:\r\n\t                        if (MakerJs.isNumber(args[1])) {\r\n\t                            this.origin = args[0];\r\n\t                            this.radius = args[1];\r\n\t                        }\r\n\t                        else {\r\n\t                            //Circle from 2 points\r\n\t                            this.origin = MakerJs.point.average(args[0], args[1]);\r\n\t                            this.radius = MakerJs.measure.pointDistance(this.origin, args[0]);\r\n\t                        }\r\n\t                        break;\r\n\t                    default:\r\n\t                        //Circle from 3 points\r\n\t                        //create 2 lines with 2nd point in common\r\n\t                        var lines = [\r\n\t                            new Line(args[0], args[1]),\r\n\t                            new Line(args[1], args[2])\r\n\t                        ];\r\n\t                        //create perpendicular lines\r\n\t                        var perpendiculars = [];\r\n\t                        for (var i = 2; i--;) {\r\n\t                            var midpoint = MakerJs.point.middle(lines[i]);\r\n\t                            perpendiculars.push(MakerJs.path.rotate(lines[i], 90, midpoint));\r\n\t                        }\r\n\t                        //find intersection of slopes of perpendiculars\r\n\t                        this.origin = MakerJs.point.fromSlopeIntersection(perpendiculars[0], perpendiculars[1]);\r\n\t                        //radius is distance to any of the 3 points\r\n\t                        this.radius = MakerJs.measure.pointDistance(this.origin, args[0]);\r\n\t                        break;\r\n\t                }\r\n\t            }\r\n\t            return Circle;\r\n\t        }());\r\n\t        paths.Circle = Circle;\r\n\t        /**\r\n\t         * Class for line path.\r\n\t         */\r\n\t        var Line = (function () {\r\n\t            function Line() {\r\n\t                var args = [];\r\n\t                for (var _i = 0; _i < arguments.length; _i++) {\r\n\t                    args[_i] = arguments[_i];\r\n\t                }\r\n\t                this.type = MakerJs.pathType.Line;\r\n\t                switch (args.length) {\r\n\t                    case 1:\r\n\t                        var points = args[0];\r\n\t                        this.origin = points[0];\r\n\t                        this.end = points[1];\r\n\t                        break;\r\n\t                    case 2:\r\n\t                        this.origin = args[0];\r\n\t                        this.end = args[1];\r\n\t                        break;\r\n\t                }\r\n\t            }\r\n\t            return Line;\r\n\t        }());\r\n\t        paths.Line = Line;\r\n\t        /**\r\n\t         * Class for chord, which is simply a line path that connects the endpoints of an arc.\r\n\t         *\r\n\t         * @param arc Arc to use as the basic for the chord.\r\n\t         */\r\n\t        var Chord = (function () {\r\n\t            function Chord(arc) {\r\n\t                var arcPoints = MakerJs.point.fromArc(arc);\r\n\t                this.type = MakerJs.pathType.Line;\r\n\t                this.origin = arcPoints[0];\r\n\t                this.end = arcPoints[1];\r\n\t            }\r\n\t            return Chord;\r\n\t        }());\r\n\t        paths.Chord = Chord;\r\n\t        /**\r\n\t         * Class for a parallel line path.\r\n\t         *\r\n\t         * @param toLine A line to be parallel to.\r\n\t         * @param distance Distance between parallel and original line.\r\n\t         * @param nearPoint Any point to determine which side of the line to place the parallel.\r\n\t         */\r\n\t        var Parallel = (function () {\r\n\t            function Parallel(toLine, distance, nearPoint) {\r\n\t                this.type = MakerJs.pathType.Line;\r\n\t                this.origin = MakerJs.point.clone(toLine.origin);\r\n\t                this.end = MakerJs.point.clone(toLine.end);\r\n\t                var angleOfLine = MakerJs.angle.ofLineInDegrees(this);\r\n\t                function getNewOrigin(offsetAngle) {\r\n\t                    var origin = MakerJs.point.add(toLine.origin, MakerJs.point.fromPolar(MakerJs.angle.toRadians(angleOfLine + offsetAngle), distance));\r\n\t                    return {\r\n\t                        origin: origin,\r\n\t                        nearness: MakerJs.measure.pointDistance(origin, nearPoint)\r\n\t                    };\r\n\t                }\r\n\t                var newOrigins = [getNewOrigin(-90), getNewOrigin(90)];\r\n\t                var newOrigin = (newOrigins[0].nearness < newOrigins[1].nearness) ? newOrigins[0].origin : newOrigins[1].origin;\r\n\t                MakerJs.path.move(this, newOrigin);\r\n\t            }\r\n\t            return Parallel;\r\n\t        }());\r\n\t        paths.Parallel = Parallel;\r\n\t    })(paths = MakerJs.paths || (MakerJs.paths = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var model;\r\n\t    (function (model) {\r\n\t        /**\r\n\t         * Count the number of child models within a given model.\r\n\t         *\r\n\t         * @param modelContext The model containing other models.\r\n\t         * @returns Number of child models.\r\n\t         */\r\n\t        function countChildModels(modelContext) {\r\n\t            var count = 0;\r\n\t            if (modelContext.models) {\r\n\t                for (var id in modelContext.models) {\r\n\t                    count++;\r\n\t                }\r\n\t            }\r\n\t            return count;\r\n\t        }\r\n\t        model.countChildModels = countChildModels;\r\n\t        /**\r\n\t         * Get an unused id in the models map with the same prefix.\r\n\t         *\r\n\t         * @param modelContext The model containing the models map.\r\n\t         * @param modelId The id to use directly (if unused), or as a prefix.\r\n\t         */\r\n\t        function getSimilarModelId(modelContext, modelId) {\r\n\t            if (!modelContext.models)\r\n\t                return modelId;\r\n\t            var i = 0;\r\n\t            var newModelId = modelId;\r\n\t            while (newModelId in modelContext.models) {\r\n\t                i++;\r\n\t                newModelId = modelId + '_' + i;\r\n\t            }\r\n\t            return newModelId;\r\n\t        }\r\n\t        model.getSimilarModelId = getSimilarModelId;\r\n\t        /**\r\n\t         * Get an unused id in the paths map with the same prefix.\r\n\t         *\r\n\t         * @param modelContext The model containing the paths map.\r\n\t         * @param pathId The id to use directly (if unused), or as a prefix.\r\n\t         */\r\n\t        function getSimilarPathId(modelContext, pathId) {\r\n\t            if (!modelContext.paths)\r\n\t                return pathId;\r\n\t            var i = 0;\r\n\t            var newPathId = pathId;\r\n\t            while (newPathId in modelContext.paths) {\r\n\t                i++;\r\n\t                newPathId = pathId + '_' + i;\r\n\t            }\r\n\t            return newPathId;\r\n\t        }\r\n\t        model.getSimilarPathId = getSimilarPathId;\r\n\t        /**\r\n\t         * Moves all of a model's children (models and paths, recursively) in reference to a single common origin. Useful when points between children need to connect to each other.\r\n\t         *\r\n\t         * @param modelToOriginate The model to originate.\r\n\t         * @param origin Optional offset reference point.\r\n\t         */\r\n\t        function originate(modelToOriginate, origin) {\r\n\t            function innerOriginate(m, o) {\r\n\t                if (!m)\r\n\t                    return;\r\n\t                var newOrigin = MakerJs.point.add(m.origin, o);\r\n\t                if (m.type === MakerJs.models.BezierCurve.typeName) {\r\n\t                    MakerJs.path.moveRelative(m.seed, newOrigin);\r\n\t                }\r\n\t                if (m.paths) {\r\n\t                    for (var id in m.paths) {\r\n\t                        MakerJs.path.moveRelative(m.paths[id], newOrigin);\r\n\t                    }\r\n\t                }\r\n\t                if (m.models) {\r\n\t                    for (var id in m.models) {\r\n\t                        innerOriginate(m.models[id], newOrigin);\r\n\t                    }\r\n\t                }\r\n\t                m.origin = MakerJs.point.zero();\r\n\t            }\r\n\t            innerOriginate(modelToOriginate, origin ? MakerJs.point.subtract([0, 0], origin) : [0, 0]);\r\n\t            if (origin) {\r\n\t                modelToOriginate.origin = origin;\r\n\t            }\r\n\t            return modelToOriginate;\r\n\t        }\r\n\t        model.originate = originate;\r\n\t        /**\r\n\t         * Center a model at [0, 0].\r\n\t         *\r\n\t         * @param modelToCenter The model to center.\r\n\t         * @param centerX Boolean to center on the x axis. Default is true.\r\n\t         * @param centerY Boolean to center on the y axis. Default is true.\r\n\t         * @returns The original model (for cascading).\r\n\t         */\r\n\t        function center(modelToCenter, centerX, centerY) {\r\n\t            if (centerX === void 0) { centerX = true; }\r\n\t            if (centerY === void 0) { centerY = true; }\r\n\t            var m = MakerJs.measure.modelExtents(modelToCenter);\r\n\t            var o = modelToCenter.origin || [0, 0];\r\n\t            if (centerX)\r\n\t                o[0] -= m.center[0];\r\n\t            if (centerY)\r\n\t                o[1] -= m.center[1];\r\n\t            modelToCenter.origin = o;\r\n\t            return modelToCenter;\r\n\t        }\r\n\t        model.center = center;\r\n\t        /**\r\n\t         * Create a clone of a model, mirrored on either or both x and y axes.\r\n\t         *\r\n\t         * @param modelToMirror The model to mirror.\r\n\t         * @param mirrorX Boolean to mirror on the x axis.\r\n\t         * @param mirrorY Boolean to mirror on the y axis.\r\n\t         * @returns Mirrored model.\r\n\t         */\r\n\t        function mirror(modelToMirror, mirrorX, mirrorY) {\r\n\t            var newModel = {};\r\n\t            if (!modelToMirror)\r\n\t                return null;\r\n\t            if (modelToMirror.origin) {\r\n\t                newModel.origin = MakerJs.point.mirror(modelToMirror.origin, mirrorX, mirrorY);\r\n\t            }\r\n\t            if (modelToMirror.type) {\r\n\t                newModel.type = modelToMirror.type;\r\n\t            }\r\n\t            if (modelToMirror.units) {\r\n\t                newModel.units = modelToMirror.units;\r\n\t            }\r\n\t            if (modelToMirror.type === MakerJs.models.BezierCurve.typeName) {\r\n\t                newModel.type = MakerJs.models.BezierCurve.typeName;\r\n\t                newModel.seed = MakerJs.path.mirror(modelToMirror.seed, mirrorX, mirrorY);\r\n\t            }\r\n\t            if (modelToMirror.paths) {\r\n\t                newModel.paths = {};\r\n\t                for (var id in modelToMirror.paths) {\r\n\t                    var pathToMirror = modelToMirror.paths[id];\r\n\t                    if (!pathToMirror)\r\n\t                        continue;\r\n\t                    var pathMirrored = MakerJs.path.mirror(pathToMirror, mirrorX, mirrorY);\r\n\t                    if (!pathMirrored)\r\n\t                        continue;\r\n\t                    newModel.paths[id] = pathMirrored;\r\n\t                }\r\n\t            }\r\n\t            if (modelToMirror.models) {\r\n\t                newModel.models = {};\r\n\t                for (var id in modelToMirror.models) {\r\n\t                    var childModelToMirror = modelToMirror.models[id];\r\n\t                    if (!childModelToMirror)\r\n\t                        continue;\r\n\t                    var childModelMirrored = mirror(childModelToMirror, mirrorX, mirrorY);\r\n\t                    if (!childModelMirrored)\r\n\t                        continue;\r\n\t                    newModel.models[id] = childModelMirrored;\r\n\t                }\r\n\t            }\r\n\t            return newModel;\r\n\t        }\r\n\t        model.mirror = mirror;\r\n\t        /**\r\n\t         * Move a model to an absolute point. Note that this is also accomplished by directly setting the origin property. This function exists for cascading.\r\n\t         *\r\n\t         * @param modelToMove The model to move.\r\n\t         * @param origin The new position of the model.\r\n\t         * @returns The original model (for cascading).\r\n\t         */\r\n\t        function move(modelToMove, origin) {\r\n\t            modelToMove.origin = MakerJs.point.clone(origin);\r\n\t            return modelToMove;\r\n\t        }\r\n\t        model.move = move;\r\n\t        /**\r\n\t         * Move a model's origin by a relative amount.\r\n\t         *\r\n\t         * @param modelToMove The model to move.\r\n\t         * @param delta The x & y adjustments as a point object.\r\n\t         * @returns The original model (for cascading).\r\n\t         */\r\n\t        function moveRelative(modelToMove, delta) {\r\n\t            if (modelToMove) {\r\n\t                modelToMove.origin = MakerJs.point.add(modelToMove.origin || MakerJs.point.zero(), delta);\r\n\t            }\r\n\t            return modelToMove;\r\n\t        }\r\n\t        model.moveRelative = moveRelative;\r\n\t        /**\r\n\t         * Prefix the ids of paths in a model.\r\n\t         *\r\n\t         * @param modelToPrefix The model to prefix.\r\n\t         * @param prefix The prefix to prepend on paths ids.\r\n\t         * @returns The original model (for cascading).\r\n\t         */\r\n\t        function prefixPathIds(modelToPrefix, prefix) {\r\n\t            var walkedPaths = [];\r\n\t            //first collect the paths because we don't want to modify keys during an iteration on keys\r\n\t            walk(modelToPrefix, {\r\n\t                onPath: function (walkedPath) {\r\n\t                    walkedPaths.push(walkedPath);\r\n\t                }\r\n\t            });\r\n\t            //now modify the ids in our own iteration\r\n\t            for (var i = 0; i < walkedPaths.length; i++) {\r\n\t                var walkedPath = walkedPaths[i];\r\n\t                delete walkedPath.modelContext.paths[walkedPath.pathId];\r\n\t                walkedPath.modelContext.paths[prefix + walkedPath.pathId] = walkedPath.pathContext;\r\n\t            }\r\n\t            return modelToPrefix;\r\n\t        }\r\n\t        model.prefixPathIds = prefixPathIds;\r\n\t        /**\r\n\t         * Rotate a model.\r\n\t         *\r\n\t         * @param modelToRotate The model to rotate.\r\n\t         * @param angleInDegrees The amount of rotation, in degrees.\r\n\t         * @param rotationOrigin The center point of rotation.\r\n\t         * @returns The original model (for cascading).\r\n\t         */\r\n\t        function rotate(modelToRotate, angleInDegrees, rotationOrigin) {\r\n\t            if (rotationOrigin === void 0) { rotationOrigin = [0, 0]; }\r\n\t            if (!modelToRotate || !angleInDegrees)\r\n\t                return modelToRotate;\r\n\t            var offsetOrigin = MakerJs.point.subtract(rotationOrigin, modelToRotate.origin);\r\n\t            if (modelToRotate.type === MakerJs.models.BezierCurve.typeName) {\r\n\t                MakerJs.path.rotate(modelToRotate.seed, angleInDegrees, offsetOrigin);\r\n\t            }\r\n\t            if (modelToRotate.paths) {\r\n\t                for (var id in modelToRotate.paths) {\r\n\t                    MakerJs.path.rotate(modelToRotate.paths[id], angleInDegrees, offsetOrigin);\r\n\t                }\r\n\t            }\r\n\t            if (modelToRotate.models) {\r\n\t                for (var id in modelToRotate.models) {\r\n\t                    rotate(modelToRotate.models[id], angleInDegrees, offsetOrigin);\r\n\t                }\r\n\t            }\r\n\t            return modelToRotate;\r\n\t        }\r\n\t        model.rotate = rotate;\r\n\t        /**\r\n\t         * Scale a model.\r\n\t         *\r\n\t         * @param modelToScale The model to scale.\r\n\t         * @param scaleValue The amount of scaling.\r\n\t         * @param scaleOrigin Optional boolean to scale the origin point. Typically false for the root model.\r\n\t         * @returns The original model (for cascading).\r\n\t         */\r\n\t        function scale(modelToScale, scaleValue, scaleOrigin) {\r\n\t            if (scaleOrigin === void 0) { scaleOrigin = false; }\r\n\t            if (scaleOrigin && modelToScale.origin) {\r\n\t                modelToScale.origin = MakerJs.point.scale(modelToScale.origin, scaleValue);\r\n\t            }\r\n\t            if (modelToScale.type === MakerJs.models.BezierCurve.typeName) {\r\n\t                MakerJs.path.scale(modelToScale.seed, scaleValue);\r\n\t            }\r\n\t            if (modelToScale.paths) {\r\n\t                for (var id in modelToScale.paths) {\r\n\t                    MakerJs.path.scale(modelToScale.paths[id], scaleValue);\r\n\t                }\r\n\t            }\r\n\t            if (modelToScale.models) {\r\n\t                for (var id in modelToScale.models) {\r\n\t                    scale(modelToScale.models[id], scaleValue, true);\r\n\t                }\r\n\t            }\r\n\t            return modelToScale;\r\n\t        }\r\n\t        model.scale = scale;\r\n\t        /**\r\n\t         * Convert a model to match a different unit system.\r\n\t         *\r\n\t         * @param modeltoConvert The model to convert.\r\n\t         * @param destUnitType The unit system.\r\n\t         * @returns The scaled model (for cascading).\r\n\t         */\r\n\t        function convertUnits(modeltoConvert, destUnitType) {\r\n\t            var validUnitType = false;\r\n\t            for (var id in MakerJs.unitType) {\r\n\t                if (MakerJs.unitType[id] == destUnitType) {\r\n\t                    validUnitType = true;\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\t            if (modeltoConvert.units && validUnitType) {\r\n\t                var ratio = MakerJs.units.conversionScale(modeltoConvert.units, destUnitType);\r\n\t                if (ratio != 1) {\r\n\t                    scale(modeltoConvert, ratio);\r\n\t                    //update the model with its new unit type\r\n\t                    modeltoConvert.units = destUnitType;\r\n\t                }\r\n\t            }\r\n\t            return modeltoConvert;\r\n\t        }\r\n\t        model.convertUnits = convertUnits;\r\n\t        /**\r\n\t         * Recursively walk through all paths for a given model.\r\n\t         *\r\n\t         * @param modelContext The model to walk.\r\n\t         * @param callback Callback for each path.\r\n\t         */\r\n\t        function walkPaths(modelContext, callback) {\r\n\t            if (modelContext.paths) {\r\n\t                for (var pathId in modelContext.paths) {\r\n\t                    if (!modelContext.paths[pathId])\r\n\t                        continue;\r\n\t                    callback(modelContext, pathId, modelContext.paths[pathId]);\r\n\t                }\r\n\t            }\r\n\t            if (modelContext.models) {\r\n\t                for (var id in modelContext.models) {\r\n\t                    if (!modelContext.models[id])\r\n\t                        continue;\r\n\t                    walkPaths(modelContext.models[id], callback);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        model.walkPaths = walkPaths;\r\n\t        /**\r\n\t         * Recursively walk through all paths for a given model.\r\n\t         *\r\n\t         * @param modelContext The model to walk.\r\n\t         * @param pathCallback Callback for each path.\r\n\t         * @param modelCallbackBeforeWalk Callback for each model prior to recursion, which can cancel the recursion if it returns false.\r\n\t         * @param modelCallbackAfterWalk Callback for each model after recursion.\r\n\t         */\r\n\t        function walk(modelContext, options) {\r\n\t            if (!modelContext)\r\n\t                return;\r\n\t            function walkRecursive(modelContext, layer, offset, route, routeKey) {\r\n\t                var newOffset = MakerJs.point.add(modelContext.origin, offset);\r\n\t                layer = layer || '';\r\n\t                if (modelContext.paths) {\r\n\t                    for (var pathId in modelContext.paths) {\r\n\t                        var pathContext = modelContext.paths[pathId];\r\n\t                        if (!pathContext)\r\n\t                            continue;\r\n\t                        var walkedPath = {\r\n\t                            modelContext: modelContext,\r\n\t                            layer: pathContext.layer || layer,\r\n\t                            offset: newOffset,\r\n\t                            pathContext: pathContext,\r\n\t                            pathId: pathId,\r\n\t                            route: route.concat(['paths', pathId]),\r\n\t                            routeKey: routeKey + '.paths' + JSON.stringify([pathId])\r\n\t                        };\r\n\t                        if (options.onPath)\r\n\t                            options.onPath(walkedPath);\r\n\t                    }\r\n\t                }\r\n\t                if (modelContext.models) {\r\n\t                    for (var modelId in modelContext.models) {\r\n\t                        var childModel = modelContext.models[modelId];\r\n\t                        if (!childModel)\r\n\t                            continue;\r\n\t                        var walkedModel = {\r\n\t                            parentModel: modelContext,\r\n\t                            layer: childModel.layer || layer,\r\n\t                            offset: newOffset,\r\n\t                            route: route.concat(['models', modelId]),\r\n\t                            routeKey: routeKey + '.models' + JSON.stringify([modelId]),\r\n\t                            childId: modelId,\r\n\t                            childModel: childModel\r\n\t                        };\r\n\t                        if (options.beforeChildWalk) {\r\n\t                            if (!options.beforeChildWalk(walkedModel))\r\n\t                                continue;\r\n\t                        }\r\n\t                        walkRecursive(walkedModel.childModel, walkedModel.layer, newOffset, walkedModel.route, walkedModel.routeKey);\r\n\t                        if (options.afterChildWalk) {\r\n\t                            options.afterChildWalk(walkedModel);\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            walkRecursive(modelContext, modelContext.layer, [0, 0], [], '');\r\n\t        }\r\n\t        model.walk = walk;\r\n\t        /**\r\n\t         * Move a model so its bounding box begins at [0, 0].\r\n\t         *\r\n\t         * @param modelToZero The model to zero.\r\n\t         * @param zeroX Boolean to zero on the x axis. Default is true.\r\n\t         * @param zeroY Boolean to zero on the y axis. Default is true.\r\n\t         * @returns The original model (for cascading).\r\n\t         */\r\n\t        function zero(modelToZero, zeroX, zeroY) {\r\n\t            if (zeroX === void 0) { zeroX = true; }\r\n\t            if (zeroY === void 0) { zeroY = true; }\r\n\t            var m = MakerJs.measure.modelExtents(modelToZero);\r\n\t            var z = modelToZero.origin || [0, 0];\r\n\t            if (zeroX)\r\n\t                z[0] -= m.low[0];\r\n\t            if (zeroY)\r\n\t                z[1] -= m.low[1];\r\n\t            modelToZero.origin = z;\r\n\t            return modelToZero;\r\n\t        }\r\n\t        model.zero = zero;\r\n\t    })(model = MakerJs.model || (MakerJs.model = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var model;\r\n\t    (function (model) {\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function getNonZeroSegments(pathToSegment, breakPoint) {\r\n\t            var segment1 = MakerJs.cloneObject(pathToSegment);\r\n\t            if (!segment1)\r\n\t                return null;\r\n\t            var segment2 = MakerJs.path.breakAtPoint(segment1, breakPoint);\r\n\t            if (segment2) {\r\n\t                var segments = [segment1, segment2];\r\n\t                for (var i = 2; i--;) {\r\n\t                    if (MakerJs.round(MakerJs.measure.pathLength(segments[i]), .0001) == 0) {\r\n\t                        return null;\r\n\t                    }\r\n\t                }\r\n\t                return segments;\r\n\t            }\r\n\t            else if (pathToSegment.type == MakerJs.pathType.Circle) {\r\n\t                return [segment1];\r\n\t            }\r\n\t            return null;\r\n\t        }\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function breakAlongForeignPath(crossedPath, overlappedSegments, foreignWalkedPath) {\r\n\t            var foreignPath = foreignWalkedPath.pathContext;\r\n\t            var segments = crossedPath.segments;\r\n\t            if (MakerJs.measure.isPathEqual(segments[0].path, foreignPath, .0001, crossedPath.offset, foreignWalkedPath.offset)) {\r\n\t                segments[0].overlapped = true;\r\n\t                segments[0].duplicate = true;\r\n\t                overlappedSegments.push(segments[0]);\r\n\t                return;\r\n\t            }\r\n\t            var foreignPathEndPoints;\r\n\t            for (var i = 0; i < segments.length; i++) {\r\n\t                var pointsToCheck;\r\n\t                var options = { path1Offset: crossedPath.offset, path2Offset: foreignWalkedPath.offset };\r\n\t                var foreignIntersection = MakerJs.path.intersection(segments[i].path, foreignPath, options);\r\n\t                if (foreignIntersection) {\r\n\t                    pointsToCheck = foreignIntersection.intersectionPoints;\r\n\t                }\r\n\t                else if (options.out_AreOverlapped) {\r\n\t                    segments[i].overlapped = true;\r\n\t                    overlappedSegments.push(segments[i]);\r\n\t                    if (!foreignPathEndPoints) {\r\n\t                        //make sure endpoints are in absolute coords\r\n\t                        foreignPathEndPoints = MakerJs.point.fromPathEnds(foreignPath, foreignWalkedPath.offset);\r\n\t                    }\r\n\t                    pointsToCheck = foreignPathEndPoints;\r\n\t                }\r\n\t                if (pointsToCheck) {\r\n\t                    //break the path which intersected, and add the shard to the end of the array so it can also be checked in this loop for further sharding.\r\n\t                    var subSegments = null;\r\n\t                    var p = 0;\r\n\t                    while (!subSegments && p < pointsToCheck.length) {\r\n\t                        //cast absolute points to path relative space\r\n\t                        subSegments = getNonZeroSegments(segments[i].path, MakerJs.point.subtract(pointsToCheck[p], crossedPath.offset));\r\n\t                        p++;\r\n\t                    }\r\n\t                    if (subSegments) {\r\n\t                        crossedPath.broken = true;\r\n\t                        segments[i].path = subSegments[0];\r\n\t                        if (subSegments[1]) {\r\n\t                            var newSegment = {\r\n\t                                path: subSegments[1],\r\n\t                                pathId: segments[0].pathId,\r\n\t                                overlapped: segments[i].overlapped,\r\n\t                                uniqueForeignIntersectionPoints: [],\r\n\t                                offset: crossedPath.offset\r\n\t                            };\r\n\t                            if (segments[i].overlapped) {\r\n\t                                overlappedSegments.push(newSegment);\r\n\t                            }\r\n\t                            segments.push(newSegment);\r\n\t                        }\r\n\t                        //re-check this segment for another deep intersection\r\n\t                        i--;\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function addUniquePoints(pointArray, pointsToAdd) {\r\n\t            var added = 0;\r\n\t            function addUniquePoint(pointToAdd) {\r\n\t                for (var i = 0; i < pointArray.length; i++) {\r\n\t                    if (MakerJs.measure.isPointEqual(pointArray[i], pointToAdd, .000000001)) {\r\n\t                        return;\r\n\t                    }\r\n\t                }\r\n\t                pointArray.push(pointToAdd);\r\n\t                added++;\r\n\t            }\r\n\t            for (var i = 0; i < pointsToAdd.length; i++) {\r\n\t                addUniquePoint(pointsToAdd[i]);\r\n\t            }\r\n\t            return added;\r\n\t        }\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function checkInsideForeignModel(segment, segmentOffset, modelToIntersect, modelToIntersectAtlas, farPoint) {\r\n\t            if (farPoint === void 0) { farPoint = [7654321, 1234567]; }\r\n\t            var origin = MakerJs.point.add(MakerJs.point.middle(segment.path), segmentOffset);\r\n\t            var lineToFarPoint = new MakerJs.paths.Line(origin, farPoint);\r\n\t            var measureFarPoint = MakerJs.measure.pathExtents(lineToFarPoint);\r\n\t            var walkOptions = {\r\n\t                onPath: function (walkedPath) {\r\n\t                    if (modelToIntersectAtlas && !MakerJs.measure.isMeasurementOverlapping(measureFarPoint, modelToIntersectAtlas.pathMap[walkedPath.routeKey])) {\r\n\t                        return;\r\n\t                    }\r\n\t                    var options = { path2Offset: walkedPath.offset };\r\n\t                    var farInt = MakerJs.path.intersection(lineToFarPoint, walkedPath.pathContext, options);\r\n\t                    if (farInt) {\r\n\t                        var added = addUniquePoints(segment.uniqueForeignIntersectionPoints, farInt.intersectionPoints);\r\n\t                        //if number of intersections is an odd number, flip the flag.\r\n\t                        if (added % 2 == 1) {\r\n\t                            segment.isInside = !!!segment.isInside;\r\n\t                        }\r\n\t                    }\r\n\t                },\r\n\t                beforeChildWalk: function (innerWalkedModel) {\r\n\t                    if (!modelToIntersectAtlas) {\r\n\t                        return true;\r\n\t                    }\r\n\t                    //see if there is a model measurement. if not, it is because the model does not contain paths.\r\n\t                    var innerModelMeasurement = modelToIntersectAtlas.modelMap[innerWalkedModel.routeKey];\r\n\t                    return innerModelMeasurement && MakerJs.measure.isMeasurementOverlapping(measureFarPoint, innerModelMeasurement);\r\n\t                }\r\n\t            };\r\n\t            model.walk(modelToIntersect, walkOptions);\r\n\t        }\r\n\t        /**\r\n\t         * Check to see if a path is inside of a model.\r\n\t         *\r\n\t         * @param pathContext The path to check.\r\n\t         * @param modelContext The model to check against.\r\n\t         * @param farPoint Optional point of reference which is outside the bounds of the modelContext.\r\n\t         * @returns Boolean true if the path is inside of the modelContext.\r\n\t         */\r\n\t        function isPathInsideModel(pathContext, modelContext, pathOffset, farPoint, measureAtlas) {\r\n\t            var segment = {\r\n\t                path: pathContext,\r\n\t                isInside: false,\r\n\t                uniqueForeignIntersectionPoints: []\r\n\t            };\r\n\t            checkInsideForeignModel(segment, pathOffset, modelContext, measureAtlas, farPoint);\r\n\t            return !!segment.isInside;\r\n\t        }\r\n\t        model.isPathInsideModel = isPathInsideModel;\r\n\t        /**\r\n\t         * Break a model's paths everywhere they intersect with another path.\r\n\t         *\r\n\t         * @param modelToBreak The model containing paths to be broken.\r\n\t         * @param modelToIntersect Optional model containing paths to look for intersection, or else the modelToBreak will be used.\r\n\t         */\r\n\t        function breakPathsAtIntersections(modelToBreak, modelToIntersect) {\r\n\t            var modelToBreakAtlas = new MakerJs.measure.Atlas(modelToBreak);\r\n\t            modelToBreakAtlas.measureModels();\r\n\t            var modelToIntersectAtlas;\r\n\t            if (!modelToIntersect) {\r\n\t                modelToIntersect = modelToBreak;\r\n\t                modelToIntersectAtlas = modelToBreakAtlas;\r\n\t            }\r\n\t            else {\r\n\t                modelToIntersectAtlas = new MakerJs.measure.Atlas(modelToIntersect);\r\n\t                modelToIntersectAtlas.measureModels();\r\n\t            }\r\n\t            ;\r\n\t            breakAllPathsAtIntersections(modelToBreak, modelToIntersect || modelToBreak, false, modelToBreakAtlas, modelToIntersectAtlas);\r\n\t        }\r\n\t        model.breakPathsAtIntersections = breakPathsAtIntersections;\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function breakAllPathsAtIntersections(modelToBreak, modelToIntersect, checkIsInside, modelToBreakAtlas, modelToIntersectAtlas, farPoint) {\r\n\t            var crossedPaths = [];\r\n\t            var overlappedSegments = [];\r\n\t            var walkModelToBreakOptions = {\r\n\t                onPath: function (outerWalkedPath) {\r\n\t                    //clone this path and make it the first segment\r\n\t                    var segment = {\r\n\t                        path: MakerJs.cloneObject(outerWalkedPath.pathContext),\r\n\t                        pathId: outerWalkedPath.pathId,\r\n\t                        overlapped: false,\r\n\t                        uniqueForeignIntersectionPoints: [],\r\n\t                        offset: outerWalkedPath.offset\r\n\t                    };\r\n\t                    var thisPath = outerWalkedPath;\r\n\t                    thisPath.broken = false;\r\n\t                    thisPath.segments = [segment];\r\n\t                    var walkModelToIntersectOptions = {\r\n\t                        onPath: function (innerWalkedPath) {\r\n\t                            if (outerWalkedPath.pathContext !== innerWalkedPath.pathContext && MakerJs.measure.isMeasurementOverlapping(modelToBreakAtlas.pathMap[outerWalkedPath.routeKey], modelToIntersectAtlas.pathMap[innerWalkedPath.routeKey])) {\r\n\t                                breakAlongForeignPath(thisPath, overlappedSegments, innerWalkedPath);\r\n\t                            }\r\n\t                        },\r\n\t                        beforeChildWalk: function (innerWalkedModel) {\r\n\t                            //see if there is a model measurement. if not, it is because the model does not contain paths.\r\n\t                            var innerModelMeasurement = modelToIntersectAtlas.modelMap[innerWalkedModel.routeKey];\r\n\t                            return innerModelMeasurement && MakerJs.measure.isMeasurementOverlapping(modelToBreakAtlas.pathMap[outerWalkedPath.routeKey], innerModelMeasurement);\r\n\t                        }\r\n\t                    };\r\n\t                    //keep breaking the segments anywhere they intersect with paths of the other model\r\n\t                    model.walk(modelToIntersect, walkModelToIntersectOptions);\r\n\t                    if (checkIsInside) {\r\n\t                        //check each segment whether it is inside or outside\r\n\t                        for (var i = 0; i < thisPath.segments.length; i++) {\r\n\t                            checkInsideForeignModel(thisPath.segments[i], thisPath.offset, modelToIntersect, modelToIntersectAtlas, farPoint);\r\n\t                        }\r\n\t                    }\r\n\t                    crossedPaths.push(thisPath);\r\n\t                }\r\n\t            };\r\n\t            model.walk(modelToBreak, walkModelToBreakOptions);\r\n\t            return { crossedPaths: crossedPaths, overlappedSegments: overlappedSegments };\r\n\t        }\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function checkForEqualOverlaps(crossedPathsA, crossedPathsB, pointMatchingDistance) {\r\n\t            function compareSegments(segment1, segment2) {\r\n\t                if (MakerJs.measure.isPathEqual(segment1.path, segment2.path, pointMatchingDistance, segment1.offset, segment2.offset)) {\r\n\t                    segment1.duplicate = segment2.duplicate = true;\r\n\t                }\r\n\t            }\r\n\t            function compareAll(segment) {\r\n\t                for (var i = 0; i < crossedPathsB.length; i++) {\r\n\t                    compareSegments(crossedPathsB[i], segment);\r\n\t                }\r\n\t            }\r\n\t            for (var i = 0; i < crossedPathsA.length; i++) {\r\n\t                compareAll(crossedPathsA[i]);\r\n\t            }\r\n\t        }\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function addOrDeleteSegments(crossedPath, includeInside, includeOutside, keepDuplicates, atlas, trackDeleted) {\r\n\t            function addSegment(modelContext, pathIdBase, segment) {\r\n\t                var id = model.getSimilarPathId(modelContext, pathIdBase);\r\n\t                var newRouteKey = (id == pathIdBase) ? crossedPath.routeKey : MakerJs.createRouteKey(crossedPath.route.slice(0, -1).concat([id]));\r\n\t                modelContext.paths[id] = segment.path;\r\n\t                if (crossedPath.broken) {\r\n\t                    //save the new segment's measurement\r\n\t                    var measurement = MakerJs.measure.pathExtents(segment.path, crossedPath.offset);\r\n\t                    atlas.pathMap[newRouteKey] = measurement;\r\n\t                    atlas.modelsMeasured = false;\r\n\t                }\r\n\t                else {\r\n\t                    //keep the original measurement\r\n\t                    atlas.pathMap[newRouteKey] = savedMeasurement;\r\n\t                }\r\n\t            }\r\n\t            function checkAddSegment(modelContext, pathIdBase, segment) {\r\n\t                if (segment.isInside && includeInside || !segment.isInside && includeOutside) {\r\n\t                    addSegment(modelContext, pathIdBase, segment);\r\n\t                }\r\n\t                else {\r\n\t                    atlas.modelsMeasured = false;\r\n\t                    trackDeleted(segment.path, crossedPath.routeKey, segment.offset, 'segment is ' + (segment.isInside ? 'inside' : 'outside') + ' intersectionPoints=' + JSON.stringify(segment.uniqueForeignIntersectionPoints));\r\n\t                }\r\n\t            }\r\n\t            //save the original measurement\r\n\t            var savedMeasurement = atlas.pathMap[crossedPath.routeKey];\r\n\t            //delete the original, its segments will be added\r\n\t            delete crossedPath.modelContext.paths[crossedPath.pathId];\r\n\t            delete atlas.pathMap[crossedPath.routeKey];\r\n\t            for (var i = 0; i < crossedPath.segments.length; i++) {\r\n\t                if (crossedPath.segments[i].duplicate) {\r\n\t                    if (keepDuplicates) {\r\n\t                        addSegment(crossedPath.modelContext, crossedPath.pathId, crossedPath.segments[i]);\r\n\t                    }\r\n\t                    else {\r\n\t                        trackDeleted(crossedPath.segments[i].path, crossedPath.routeKey, crossedPath.offset, 'segment is duplicate');\r\n\t                    }\r\n\t                }\r\n\t                else {\r\n\t                    checkAddSegment(crossedPath.modelContext, crossedPath.pathId, crossedPath.segments[i]);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        /**\r\n\t         * Combine 2 models.\r\n\t         *\r\n\t         * @param modelA First model to combine.\r\n\t         * @param modelB Second model to combine.\r\n\t         * @param includeAInsideB Flag to include paths from modelA which are inside of modelB.\r\n\t         * @param includeAOutsideB Flag to include paths from modelA which are outside of modelB.\r\n\t         * @param includeBInsideA Flag to include paths from modelB which are inside of modelA.\r\n\t         * @param includeBOutsideA Flag to include paths from modelB which are outside of modelA.\r\n\t         * @param keepDuplicates Flag to include paths which are duplicate in both models.\r\n\t         * @param farPoint Optional point of reference which is outside the bounds of both models.\r\n\t         */\r\n\t        function combine(modelA, modelB, includeAInsideB, includeAOutsideB, includeBInsideA, includeBOutsideA, options) {\r\n\t            if (includeAInsideB === void 0) { includeAInsideB = false; }\r\n\t            if (includeAOutsideB === void 0) { includeAOutsideB = true; }\r\n\t            if (includeBInsideA === void 0) { includeBInsideA = false; }\r\n\t            if (includeBOutsideA === void 0) { includeBOutsideA = true; }\r\n\t            var opts = {\r\n\t                trimDeadEnds: true,\r\n\t                pointMatchingDistance: .005,\r\n\t                out_deleted: [{ paths: {} }, { paths: {} }]\r\n\t            };\r\n\t            MakerJs.extendObject(opts, options);\r\n\t            opts.measureA = opts.measureA || new MakerJs.measure.Atlas(modelA);\r\n\t            opts.measureB = opts.measureB || new MakerJs.measure.Atlas(modelB);\r\n\t            //make sure model measurements capture all paths\r\n\t            opts.measureA.measureModels();\r\n\t            opts.measureB.measureModels();\r\n\t            var pathsA = breakAllPathsAtIntersections(modelA, modelB, true, opts.measureA, opts.measureB, opts.farPoint);\r\n\t            var pathsB = breakAllPathsAtIntersections(modelB, modelA, true, opts.measureB, opts.measureA, opts.farPoint);\r\n\t            checkForEqualOverlaps(pathsA.overlappedSegments, pathsB.overlappedSegments, opts.pointMatchingDistance);\r\n\t            function trackDeleted(which, deletedPath, routeKey, offset, reason) {\r\n\t                opts.out_deleted[which].paths[counts[which]++] = deletedPath;\r\n\t                MakerJs.path.moveRelative(deletedPath, offset);\r\n\t                var p = deletedPath;\r\n\t                p.reason = reason;\r\n\t                p.routeKey = routeKey;\r\n\t            }\r\n\t            var counts = [0, 0];\r\n\t            for (var i = 0; i < pathsA.crossedPaths.length; i++) {\r\n\t                addOrDeleteSegments(pathsA.crossedPaths[i], includeAInsideB, includeAOutsideB, true, opts.measureA, function (p, id, o, reason) { return trackDeleted(0, p, id, o, reason); });\r\n\t            }\r\n\t            for (var i = 0; i < pathsB.crossedPaths.length; i++) {\r\n\t                addOrDeleteSegments(pathsB.crossedPaths[i], includeBInsideA, includeBOutsideA, false, opts.measureB, function (p, id, o, reason) { return trackDeleted(1, p, id, o, reason); });\r\n\t            }\r\n\t            if (opts.trimDeadEnds) {\r\n\t                var shouldKeep;\r\n\t                //union\r\n\t                if (!includeAInsideB && !includeBInsideA) {\r\n\t                    shouldKeep = function (walkedPath) {\r\n\t                        //When A and B share an outer contour, the segments marked as duplicate will not pass the \"inside\" test on either A or B.\r\n\t                        //Duplicates were discarded from B but kept in A\r\n\t                        for (var i = 0; i < pathsA.overlappedSegments.length; i++) {\r\n\t                            if (pathsA.overlappedSegments[i].duplicate && walkedPath.pathContext === pathsA.overlappedSegments[i].path) {\r\n\t                                return false;\r\n\t                            }\r\n\t                        }\r\n\t                        //default - keep the path\r\n\t                        return true;\r\n\t                    };\r\n\t                }\r\n\t                model.removeDeadEnds({ models: { 0: modelA, 1: modelB } }, null, shouldKeep, function (wp, reason) { trackDeleted(parseInt(wp.route[1]), wp.pathContext, wp.routeKey, wp.offset, reason); });\r\n\t            }\r\n\t            //pass options back to caller\r\n\t            MakerJs.extendObject(options, opts);\r\n\t        }\r\n\t        model.combine = combine;\r\n\t        /**\r\n\t         * Combine 2 models, resulting in a intersection.\r\n\t         *\r\n\t         * @param modelA First model to combine.\r\n\t         * @param modelB Second model to combine.\r\n\t         */\r\n\t        function combineIntersection(modelA, modelB) {\r\n\t            return combine(modelA, modelB, true, false, true, false);\r\n\t        }\r\n\t        model.combineIntersection = combineIntersection;\r\n\t        /**\r\n\t         * Combine 2 models, resulting in a subtraction of B from A.\r\n\t         *\r\n\t         * @param modelA First model to combine.\r\n\t         * @param modelB Second model to combine.\r\n\t         */\r\n\t        function combineSubtraction(modelA, modelB) {\r\n\t            return combine(modelA, modelB, false, true, true, false);\r\n\t        }\r\n\t        model.combineSubtraction = combineSubtraction;\r\n\t        /**\r\n\t         * Combine 2 models, resulting in a union.\r\n\t         *\r\n\t         * @param modelA First model to combine.\r\n\t         * @param modelB Second model to combine.\r\n\t         */\r\n\t        function combineUnion(modelA, modelB) {\r\n\t            return combine(modelA, modelB, false, true, false, true);\r\n\t        }\r\n\t        model.combineUnion = combineUnion;\r\n\t    })(model = MakerJs.model || (MakerJs.model = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    /**\r\n\t     * Collects items that share a common key.\r\n\t     */\r\n\t    var Collector = (function () {\r\n\t        function Collector(comparer) {\r\n\t            this.comparer = comparer;\r\n\t            this.collections = [];\r\n\t        }\r\n\t        Collector.prototype.addItemToCollection = function (key, item) {\r\n\t            var found = this.findCollection(key);\r\n\t            if (found) {\r\n\t                found.push(item);\r\n\t            }\r\n\t            else {\r\n\t                var collection = { key: key, items: [item] };\r\n\t                this.collections.push(collection);\r\n\t            }\r\n\t        };\r\n\t        Collector.prototype.findCollection = function (key, action) {\r\n\t            for (var i = 0; i < this.collections.length; i++) {\r\n\t                var collection = this.collections[i];\r\n\t                if (this.comparer(key, collection.key)) {\r\n\t                    if (action) {\r\n\t                        action(i);\r\n\t                    }\r\n\t                    return collection.items;\r\n\t                }\r\n\t            }\r\n\t            return null;\r\n\t        };\r\n\t        Collector.prototype.removeCollection = function (key) {\r\n\t            var _this = this;\r\n\t            if (this.findCollection(key, function (index) { _this.collections.splice(index, 1); })) {\r\n\t                return true;\r\n\t            }\r\n\t            return false;\r\n\t        };\r\n\t        Collector.prototype.removeItemFromCollection = function (key, item) {\r\n\t            var collection = this.findCollection(key);\r\n\t            if (!collection)\r\n\t                return;\r\n\t            for (var i = 0; i < collection.length; i++) {\r\n\t                if (collection[i] === item) {\r\n\t                    collection.splice(i, 1);\r\n\t                    return true;\r\n\t                }\r\n\t            }\r\n\t            return false;\r\n\t        };\r\n\t        Collector.prototype.getCollectionsOfMultiple = function (cb) {\r\n\t            for (var i = 0; i < this.collections.length; i++) {\r\n\t                var collection = this.collections[i];\r\n\t                if (collection.items.length > 1) {\r\n\t                    cb(collection.key, collection.items);\r\n\t                }\r\n\t            }\r\n\t        };\r\n\t        return Collector;\r\n\t    }());\r\n\t    MakerJs.Collector = Collector;\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var model;\r\n\t    (function (model) {\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function checkForOverlaps(refPaths, isOverlapping, overlapUnion) {\r\n\t            var currIndex = 0;\r\n\t            do {\r\n\t                var root = refPaths[currIndex];\r\n\t                do {\r\n\t                    var overlaps = false;\r\n\t                    for (var i = currIndex + 1; i < refPaths.length; i++) {\r\n\t                        var arcRef = refPaths[i];\r\n\t                        overlaps = isOverlapping(root.pathContext, arcRef.pathContext, false);\r\n\t                        if (overlaps) {\r\n\t                            overlapUnion(root.pathContext, arcRef.pathContext);\r\n\t                            delete arcRef.modelContext.paths[arcRef.pathId];\r\n\t                            refPaths.splice(i, 1);\r\n\t                            break;\r\n\t                        }\r\n\t                    }\r\n\t                } while (overlaps);\r\n\t                currIndex++;\r\n\t            } while (currIndex < refPaths.length);\r\n\t        }\r\n\t        /**\r\n\t         * Simplify a model's paths by reducing redundancy: combine multiple overlapping paths into a single path. The model must be originated.\r\n\t         *\r\n\t         * @param modelContext The originated model to search for similar paths.\r\n\t         * @param options Optional options object.\r\n\t         * @returns The simplified model (for cascading).\r\n\t         */\r\n\t        function simplify(modelToSimplify, options) {\r\n\t            function compareCircles(circleA, circleB) {\r\n\t                if (Math.abs(circleA.radius - circleB.radius) <= opts.scalarMatchingDistance) {\r\n\t                    var distance = MakerJs.measure.pointDistance(circleA.origin, circleB.origin);\r\n\t                    return distance <= opts.pointMatchingDistance;\r\n\t                }\r\n\t                return false;\r\n\t            }\r\n\t            var similarArcs = new MakerJs.Collector(compareCircles);\r\n\t            var similarCircles = new MakerJs.Collector(compareCircles);\r\n\t            var similarLines = new MakerJs.Collector(MakerJs.measure.isSlopeEqual);\r\n\t            var map = {};\r\n\t            map[MakerJs.pathType.Arc] = function (arcRef) {\r\n\t                similarArcs.addItemToCollection(arcRef.pathContext, arcRef);\r\n\t            };\r\n\t            map[MakerJs.pathType.Circle] = function (circleRef) {\r\n\t                similarCircles.addItemToCollection(circleRef.pathContext, circleRef);\r\n\t            };\r\n\t            map[MakerJs.pathType.Line] = function (lineRef) {\r\n\t                var slope = MakerJs.measure.lineSlope(lineRef.pathContext);\r\n\t                similarLines.addItemToCollection(slope, lineRef);\r\n\t            };\r\n\t            var opts = {\r\n\t                scalarMatchingDistance: .001,\r\n\t                pointMatchingDistance: .005\r\n\t            };\r\n\t            MakerJs.extendObject(opts, options);\r\n\t            //walk the model and collect: arcs on same center / radius, circles on same center / radius, lines on same y-intercept / slope.\r\n\t            var walkOptions = {\r\n\t                onPath: function (walkedPath) {\r\n\t                    var fn = map[walkedPath.pathContext.type];\r\n\t                    if (fn) {\r\n\t                        fn(walkedPath);\r\n\t                    }\r\n\t                }\r\n\t            };\r\n\t            model.walk(modelToSimplify, walkOptions);\r\n\t            //for all arcs that are similar, see if they overlap.\r\n\t            //combine overlapping arcs into the first one and delete the second.\r\n\t            similarArcs.getCollectionsOfMultiple(function (key, arcRefs) {\r\n\t                checkForOverlaps(arcRefs, MakerJs.measure.isArcOverlapping, function (arcA, arcB) {\r\n\t                    //find ends within the other\r\n\t                    var aEndsInB = MakerJs.measure.isBetweenArcAngles(arcA.endAngle, arcB, false);\r\n\t                    var bEndsInA = MakerJs.measure.isBetweenArcAngles(arcB.endAngle, arcA, false);\r\n\t                    //check for complete circle\r\n\t                    if (aEndsInB && bEndsInA) {\r\n\t                        arcA.endAngle = arcA.startAngle + 360;\r\n\t                        return;\r\n\t                    }\r\n\t                    //find the leader, in polar terms\r\n\t                    var ordered = aEndsInB ? [arcA, arcB] : [arcB, arcA];\r\n\t                    //save in arcA\r\n\t                    arcA.startAngle = MakerJs.angle.noRevolutions(ordered[0].startAngle);\r\n\t                    arcA.endAngle = ordered[1].endAngle;\r\n\t                });\r\n\t            });\r\n\t            //for all circles that are similar, delete all but the first.\r\n\t            similarCircles.getCollectionsOfMultiple(function (key, circleRefs) {\r\n\t                for (var i = 1; i < circleRefs.length; i++) {\r\n\t                    var circleRef = circleRefs[i];\r\n\t                    delete circleRef.modelContext.paths[circleRef.pathId];\r\n\t                }\r\n\t            });\r\n\t            //for all lines that are similar, see if they overlap.\r\n\t            //combine overlapping lines into the first one and delete the second.\r\n\t            similarLines.getCollectionsOfMultiple(function (slope, arcRefs) {\r\n\t                checkForOverlaps(arcRefs, MakerJs.measure.isLineOverlapping, function (lineA, lineB) {\r\n\t                    var box = { paths: { lineA: lineA, lineB: lineB } };\r\n\t                    var m = MakerJs.measure.modelExtents(box);\r\n\t                    if (!slope.hasSlope) {\r\n\t                        //vertical\r\n\t                        lineA.origin[1] = m.low[1];\r\n\t                        lineA.end[1] = m.high[1];\r\n\t                    }\r\n\t                    else {\r\n\t                        //non-vertical\r\n\t                        if (slope.slope < 0) {\r\n\t                            //downward\r\n\t                            lineA.origin = [m.low[0], m.high[1]];\r\n\t                            lineA.end = [m.high[0], m.low[1]];\r\n\t                        }\r\n\t                        else if (slope.slope > 0) {\r\n\t                            //upward\r\n\t                            lineA.origin = m.low;\r\n\t                            lineA.end = m.high;\r\n\t                        }\r\n\t                        else {\r\n\t                            //horizontal\r\n\t                            lineA.origin[0] = m.low[0];\r\n\t                            lineA.end[0] = m.high[0];\r\n\t                        }\r\n\t                    }\r\n\t                });\r\n\t            });\r\n\t            return modelToSimplify;\r\n\t        }\r\n\t        model.simplify = simplify;\r\n\t    })(model = MakerJs.model || (MakerJs.model = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var path;\r\n\t    (function (path) {\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        var map = {};\r\n\t        map[MakerJs.pathType.Arc] = function (arc, expansion, isolateCaps) {\r\n\t            return new MakerJs.models.OvalArc(arc.startAngle, arc.endAngle, arc.radius, expansion, false, isolateCaps);\r\n\t        };\r\n\t        map[MakerJs.pathType.Circle] = function (circle, expansion, isolateCaps) {\r\n\t            return new MakerJs.models.Ring(circle.radius + expansion, circle.radius - expansion);\r\n\t        };\r\n\t        map[MakerJs.pathType.Line] = function (line, expansion, isolateCaps) {\r\n\t            return new MakerJs.models.Slot(line.origin, line.end, expansion, isolateCaps);\r\n\t        };\r\n\t        /**\r\n\t         * Expand path by creating a model which surrounds it.\r\n\t         *\r\n\t         * @param pathToExpand Path to expand.\r\n\t         * @param expansion Distance to expand.\r\n\t         * @param isolateCaps Optional flag to put the end caps into a separate model named \"caps\".\r\n\t         * @returns Model which surrounds the path.\r\n\t         */\r\n\t        function expand(pathToExpand, expansion, isolateCaps) {\r\n\t            if (!pathToExpand)\r\n\t                return null;\r\n\t            var result = null;\r\n\t            var fn = map[pathToExpand.type];\r\n\t            if (fn) {\r\n\t                result = fn(pathToExpand, expansion, isolateCaps);\r\n\t                result.origin = pathToExpand.origin;\r\n\t            }\r\n\t            return result;\r\n\t        }\r\n\t        path.expand = expand;\r\n\t        /**\r\n\t         * Represent an arc using straight lines.\r\n\t         *\r\n\t         * @param arc Arc to straighten.\r\n\t         * @param bevel Optional flag to bevel the angle to prevent it from being too sharp.\r\n\t         * @param prefix Optional string prefix to apply to path ids.\r\n\t         * @param close Optional flag to make a closed geometry by connecting the endpoints.\r\n\t         * @returns Model of straight lines with same endpoints as the arc.\r\n\t         */\r\n\t        function straighten(arc, bevel, prefix, close) {\r\n\t            var arcSpan = MakerJs.angle.ofArcSpan(arc);\r\n\t            var joints = 1;\r\n\t            if (arcSpan >= 270) {\r\n\t                joints = 4;\r\n\t            }\r\n\t            else if (arcSpan > 180) {\r\n\t                joints = 3;\r\n\t            }\r\n\t            else if (arcSpan > 150 || bevel) {\r\n\t                joints = 2;\r\n\t            }\r\n\t            var jointAngleInRadians = MakerJs.angle.toRadians(arcSpan / joints);\r\n\t            var circumscribedRadius = MakerJs.models.Polygon.circumscribedRadius(arc.radius, jointAngleInRadians);\r\n\t            var ends = MakerJs.point.fromArc(arc);\r\n\t            var points = [MakerJs.point.subtract(ends[0], arc.origin)];\r\n\t            var a = MakerJs.angle.toRadians(arc.startAngle) + jointAngleInRadians / 2;\r\n\t            for (var i = 0; i < joints; i++) {\r\n\t                points.push(MakerJs.point.fromPolar(a, circumscribedRadius));\r\n\t                a += jointAngleInRadians;\r\n\t            }\r\n\t            points.push(MakerJs.point.subtract(ends[1], arc.origin));\r\n\t            var result = new MakerJs.models.ConnectTheDots(close, points);\r\n\t            result.origin = arc.origin;\r\n\t            if (typeof prefix === 'string' && prefix.length) {\r\n\t                MakerJs.model.prefixPathIds(result, prefix);\r\n\t            }\r\n\t            return result;\r\n\t        }\r\n\t        path.straighten = straighten;\r\n\t    })(path = MakerJs.path || (MakerJs.path = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\t(function (MakerJs) {\r\n\t    var model;\r\n\t    (function (model) {\r\n\t        /**\r\n\t         * Expand all paths in a model, then combine the resulting expansions.\r\n\t         *\r\n\t         * @param modelToExpand Model to expand.\r\n\t         * @param distance Distance to expand.\r\n\t         * @param joints Number of points at a joint between paths. Use 0 for round joints, 1 for pointed joints, 2 for beveled joints.\r\n\t         * @returns Model which surrounds the paths of the original model.\r\n\t         */\r\n\t        function expandPaths(modelToExpand, distance, joints, combineOptions) {\r\n\t            if (joints === void 0) { joints = 0; }\r\n\t            if (combineOptions === void 0) { combineOptions = {}; }\r\n\t            if (distance <= 0)\r\n\t                return null;\r\n\t            var result = {\r\n\t                models: {\r\n\t                    expansions: { models: {} },\r\n\t                    caps: { models: {} }\r\n\t                }\r\n\t            };\r\n\t            var first = true;\r\n\t            var walkOptions = {\r\n\t                onPath: function (walkedPath) {\r\n\t                    //don't expand paths shorter than the tolerance for combine operations\r\n\t                    if (combineOptions.pointMatchingDistance && MakerJs.measure.pathLength(walkedPath.pathContext) < combineOptions.pointMatchingDistance)\r\n\t                        return;\r\n\t                    var expandedPathModel = MakerJs.path.expand(walkedPath.pathContext, distance, true);\r\n\t                    if (expandedPathModel) {\r\n\t                        model.moveRelative(expandedPathModel, walkedPath.offset);\r\n\t                        var newId = model.getSimilarModelId(result.models['expansions'], walkedPath.pathId);\r\n\t                        model.prefixPathIds(expandedPathModel, walkedPath.pathId + '_');\r\n\t                        model.originate(expandedPathModel);\r\n\t                        if (!first) {\r\n\t                            model.combine(result, expandedPathModel, false, true, false, true, combineOptions);\r\n\t                            combineOptions.measureA.modelsMeasured = false;\r\n\t                            delete combineOptions.measureB;\r\n\t                        }\r\n\t                        result.models['expansions'].models[newId] = expandedPathModel;\r\n\t                        if (expandedPathModel.models) {\r\n\t                            var caps = expandedPathModel.models['Caps'];\r\n\t                            if (caps) {\r\n\t                                delete expandedPathModel.models['Caps'];\r\n\t                                result.models['caps'].models[newId] = caps;\r\n\t                            }\r\n\t                        }\r\n\t                        first = false;\r\n\t                    }\r\n\t                }\r\n\t            };\r\n\t            model.walk(modelToExpand, walkOptions);\r\n\t            if (joints) {\r\n\t                var roundCaps = result.models['caps'];\r\n\t                var straightCaps = { models: {} };\r\n\t                result.models['straightcaps'] = straightCaps;\r\n\t                model.simplify(roundCaps);\r\n\t                //straighten each cap, optionally beveling\r\n\t                for (var id in roundCaps.models) {\r\n\t                    //add a model container to the straight caps\r\n\t                    straightCaps.models[id] = { models: {} };\r\n\t                    model.walk(roundCaps.models[id], {\r\n\t                        onPath: function (walkedPath) {\r\n\t                            var arc = walkedPath.pathContext;\r\n\t                            //make a small closed shape using the straightened arc\r\n\t                            var straightened = MakerJs.path.straighten(arc, joints == 2, walkedPath.pathId + '_', true);\r\n\t                            //union this little pointy shape with the rest of the result\r\n\t                            model.combine(result, straightened, false, true, false, true, combineOptions);\r\n\t                            combineOptions.measureA.modelsMeasured = false;\r\n\t                            delete combineOptions.measureB;\r\n\t                            //replace the rounded path with the straightened model\r\n\t                            straightCaps.models[id].models[walkedPath.pathId] = straightened;\r\n\t                            //delete all the paths in the model containing this path\r\n\t                            delete walkedPath.modelContext.paths;\r\n\t                        }\r\n\t                    });\r\n\t                }\r\n\t                //delete the round caps\r\n\t                delete result.models['caps'];\r\n\t            }\r\n\t            return result;\r\n\t        }\r\n\t        model.expandPaths = expandPaths;\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function getEndlessChains(modelContext) {\r\n\t            var endlessChains = [];\r\n\t            model.findChains(modelContext, function (chains, loose, layer) {\r\n\t                endlessChains = chains.filter(function (chain) { return chain.endless; });\r\n\t            });\r\n\t            return endlessChains;\r\n\t        }\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function getClosedGeometries(modelContext) {\r\n\t            //get endless chains from the model\r\n\t            var endlessChains = getEndlessChains(modelContext);\r\n\t            if (endlessChains.length == 0)\r\n\t                return null;\r\n\t            //make a new model with only closed geometries\r\n\t            var closed = { models: {} };\r\n\t            endlessChains.forEach(function (c, i) {\r\n\t                closed.models[i] = MakerJs.chain.toNewModel(c);\r\n\t            });\r\n\t            return closed;\r\n\t        }\r\n\t        /**\r\n\t         * Outline a model by a specified distance. Useful for accommodating for kerf.\r\n\t         *\r\n\t         * @param modelToOutline Model to outline.\r\n\t         * @param distance Distance to outline.\r\n\t         * @param joints Number of points at a joint between paths. Use 0 for round joints, 1 for pointed joints, 2 for beveled joints.\r\n\t         * @param inside Optional boolean to draw lines inside the model instead of outside.\r\n\t         * @param options Options to send to combine() function.\r\n\t         * @returns Model which surrounds the paths outside of the original model.\r\n\t         */\r\n\t        function outline(modelToOutline, distance, joints, inside, options) {\r\n\t            if (joints === void 0) { joints = 0; }\r\n\t            if (inside === void 0) { inside = false; }\r\n\t            if (options === void 0) { options = {}; }\r\n\t            var expanded = expandPaths(modelToOutline, distance, joints, options);\r\n\t            if (!expanded)\r\n\t                return null;\r\n\t            //get closed geometries from the model\r\n\t            var closed = getClosedGeometries(modelToOutline);\r\n\t            if (closed) {\r\n\t                var childCount = 0;\r\n\t                var result = { models: {} };\r\n\t                //get closed geometries from the expansion\r\n\t                var chains = getEndlessChains(expanded);\r\n\t                chains.forEach(function (c) {\r\n\t                    //sample one link from the chain\r\n\t                    var wp = c.links[0].walkedPath;\r\n\t                    //see if it is inside the original model\r\n\t                    var isInside = model.isPathInsideModel(wp.pathContext, closed, wp.offset);\r\n\t                    //save the ones we want\r\n\t                    if (inside && isInside || !inside && !isInside) {\r\n\t                        result.models[childCount++] = MakerJs.chain.toNewModel(c);\r\n\t                    }\r\n\t                    ;\r\n\t                });\r\n\t                return result;\r\n\t            }\r\n\t            else {\r\n\t                return expanded;\r\n\t            }\r\n\t        }\r\n\t        model.outline = outline;\r\n\t    })(model = MakerJs.model || (MakerJs.model = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var units;\r\n\t    (function (units) {\r\n\t        /**\r\n\t         * The base type is arbitrary. Other conversions are then based off of this.\r\n\t         * @private\r\n\t         */\r\n\t        var base = MakerJs.unitType.Millimeter;\r\n\t        /**\r\n\t         * Initialize all known conversions here.\r\n\t         * @private\r\n\t         */\r\n\t        function init() {\r\n\t            addBaseConversion(MakerJs.unitType.Centimeter, 10);\r\n\t            addBaseConversion(MakerJs.unitType.Meter, 1000);\r\n\t            addBaseConversion(MakerJs.unitType.Inch, 25.4);\r\n\t            addBaseConversion(MakerJs.unitType.Foot, 25.4 * 12);\r\n\t        }\r\n\t        /**\r\n\t         * Table of conversions. Lazy load upon first conversion.\r\n\t         * @private\r\n\t         */\r\n\t        var table;\r\n\t        /**\r\n\t         * Add a conversion, and its inversion.\r\n\t         * @private\r\n\t         */\r\n\t        function addConversion(srcUnitType, destUnitType, value) {\r\n\t            function row(unitType) {\r\n\t                if (!table[unitType]) {\r\n\t                    table[unitType] = {};\r\n\t                }\r\n\t                return table[unitType];\r\n\t            }\r\n\t            row(srcUnitType)[destUnitType] = value;\r\n\t            row(destUnitType)[srcUnitType] = 1 / value;\r\n\t        }\r\n\t        /**\r\n\t         * Add a conversion of the base unit.\r\n\t         * @private\r\n\t         */\r\n\t        function addBaseConversion(destUnitType, value) {\r\n\t            addConversion(destUnitType, base, value);\r\n\t        }\r\n\t        /**\r\n\t         * Get a conversion ratio between a source unit and a destination unit.\r\n\t         *\r\n\t         * @param srcUnitType unitType converting from.\r\n\t         * @param destUnitType unitType converting to.\r\n\t         * @returns Numeric ratio of the conversion.\r\n\t         */\r\n\t        function conversionScale(srcUnitType, destUnitType) {\r\n\t            if (srcUnitType == destUnitType) {\r\n\t                return 1;\r\n\t            }\r\n\t            //This will lazy load the table with initial conversions.\r\n\t            if (!table) {\r\n\t                table = {};\r\n\t                init();\r\n\t            }\r\n\t            //look for a cached conversion in the table.\r\n\t            if (!table[srcUnitType][destUnitType]) {\r\n\t                //create a new conversionsand cache it in the table.\r\n\t                addConversion(srcUnitType, destUnitType, table[srcUnitType][base] * table[base][destUnitType]);\r\n\t            }\r\n\t            return table[srcUnitType][destUnitType];\r\n\t        }\r\n\t        units.conversionScale = conversionScale;\r\n\t    })(units = MakerJs.units || (MakerJs.units = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var measure;\r\n\t    (function (measure) {\r\n\t        /**\r\n\t         * Find out if two angles are equal.\r\n\t         *\r\n\t         * @param angleA First angle.\r\n\t         * @param angleB Second angle.\r\n\t         * @returns true if angles are the same, false if they are not\r\n\t         */\r\n\t        function isAngleEqual(angleA, angleB, accuracy) {\r\n\t            if (accuracy === void 0) { accuracy = .0001; }\r\n\t            var a = MakerJs.angle.noRevolutions(angleA);\r\n\t            var b = MakerJs.angle.noRevolutions(angleB);\r\n\t            var d = MakerJs.angle.noRevolutions(MakerJs.round(b - a, accuracy));\r\n\t            return d == 0;\r\n\t        }\r\n\t        measure.isAngleEqual = isAngleEqual;\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        var pathAreEqualMap = {};\r\n\t        pathAreEqualMap[MakerJs.pathType.Line] = function (lineA, lineB, withinPointDistance) {\r\n\t            return (isPointEqual(lineA.origin, lineB.origin, withinPointDistance) && isPointEqual(lineA.end, lineB.end, withinPointDistance))\r\n\t                || (isPointEqual(lineA.origin, lineB.end, withinPointDistance) && isPointEqual(lineA.end, lineB.origin, withinPointDistance));\r\n\t        };\r\n\t        pathAreEqualMap[MakerJs.pathType.Circle] = function (circleA, circleB, withinPointDistance) {\r\n\t            return isPointEqual(circleA.origin, circleB.origin, withinPointDistance) && circleA.radius == circleB.radius;\r\n\t        };\r\n\t        pathAreEqualMap[MakerJs.pathType.Arc] = function (arcA, arcB, withinPointDistance) {\r\n\t            return pathAreEqualMap[MakerJs.pathType.Circle](arcA, arcB, withinPointDistance) && isAngleEqual(arcA.startAngle, arcB.startAngle) && isAngleEqual(arcA.endAngle, arcB.endAngle);\r\n\t        };\r\n\t        /**\r\n\t         * Find out if two paths are equal.\r\n\t         *\r\n\t         * @param pathA First path.\r\n\t         * @param pathB Second path.\r\n\t         * @returns true if paths are the same, false if they are not\r\n\t         */\r\n\t        function isPathEqual(pathA, pathB, withinPointDistance, pathAOffset, pathBOffset) {\r\n\t            var result = false;\r\n\t            if (pathA.type == pathB.type) {\r\n\t                var fn = pathAreEqualMap[pathA.type];\r\n\t                if (fn) {\r\n\t                    function getResult() {\r\n\t                        result = fn(pathA, pathB, withinPointDistance);\r\n\t                    }\r\n\t                    if (pathAOffset || pathBOffset) {\r\n\t                        MakerJs.path.moveTemporary([pathA, pathB], [pathAOffset, pathBOffset], getResult);\r\n\t                    }\r\n\t                    else {\r\n\t                        getResult();\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            return result;\r\n\t        }\r\n\t        measure.isPathEqual = isPathEqual;\r\n\t        /**\r\n\t         * Find out if two points are equal.\r\n\t         *\r\n\t         * @param a First point.\r\n\t         * @param b Second point.\r\n\t         * @returns true if points are the same, false if they are not\r\n\t         */\r\n\t        function isPointEqual(a, b, withinDistance) {\r\n\t            if (!withinDistance) {\r\n\t                return a[0] == b[0] && a[1] == b[1];\r\n\t            }\r\n\t            else {\r\n\t                if (!a || !b)\r\n\t                    return false;\r\n\t                var distance = measure.pointDistance(a, b);\r\n\t                return distance <= withinDistance;\r\n\t            }\r\n\t        }\r\n\t        measure.isPointEqual = isPointEqual;\r\n\t        /**\r\n\t         * Find out if point is on a slope.\r\n\t         *\r\n\t         * @param p Point to check.\r\n\t         * @param b Slope.\r\n\t         * @returns true if point is on the slope\r\n\t         */\r\n\t        function isPointOnSlope(p, slope, withinDistance) {\r\n\t            if (slope.hasSlope) {\r\n\t                // y = mx * b\r\n\t                return MakerJs.round(p[1] - (slope.slope * p[0] + slope.yIntercept)) === 0;\r\n\t            }\r\n\t            else {\r\n\t                //vertical slope\r\n\t                return MakerJs.round(p[0] - slope.line.origin[0]) === 0;\r\n\t            }\r\n\t        }\r\n\t        measure.isPointOnSlope = isPointOnSlope;\r\n\t        /**\r\n\t         * Check for slope equality.\r\n\t         *\r\n\t         * @param slopeA The ISlope to test.\r\n\t         * @param slopeB The ISlope to check for equality.\r\n\t         * @returns Boolean true if slopes are equal.\r\n\t         */\r\n\t        function isSlopeEqual(slopeA, slopeB) {\r\n\t            if (!slopeA.hasSlope && !slopeB.hasSlope) {\r\n\t                //lines are both vertical, see if x are the same\r\n\t                return MakerJs.round(slopeA.line.origin[0] - slopeB.line.origin[0]) == 0;\r\n\t            }\r\n\t            if (slopeA.hasSlope && slopeB.hasSlope && (MakerJs.round(slopeA.slope - slopeB.slope, .00001) == 0)) {\r\n\t                //lines are parallel, but not vertical, see if y-intercept is the same\r\n\t                return MakerJs.round(slopeA.yIntercept - slopeB.yIntercept, .00001) == 0;\r\n\t            }\r\n\t            return false;\r\n\t        }\r\n\t        measure.isSlopeEqual = isSlopeEqual;\r\n\t    })(measure = MakerJs.measure || (MakerJs.measure = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var measure;\r\n\t    (function (measure) {\r\n\t        /**\r\n\t         * Increase a measurement by an additional measurement.\r\n\t         *\r\n\t         * @param baseMeasure The measurement to increase.\r\n\t         * @param addMeasure The additional measurement.\r\n\t         * @param addOffset Optional offset point of the additional measurement.\r\n\t         * @returns The increased original measurement (for cascading).\r\n\t         */\r\n\t        function increase(baseMeasure, addMeasure) {\r\n\t            function getExtreme(basePoint, newPoint, fn) {\r\n\t                if (!newPoint)\r\n\t                    return;\r\n\t                for (var i = 2; i--;) {\r\n\t                    if (newPoint[i] == null)\r\n\t                        continue;\r\n\t                    if (basePoint[i] == null) {\r\n\t                        basePoint[i] = newPoint[i];\r\n\t                    }\r\n\t                    else {\r\n\t                        basePoint[i] = fn(basePoint[i], newPoint[i]);\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            if (addMeasure) {\r\n\t                getExtreme(baseMeasure.low, addMeasure.low, Math.min);\r\n\t                getExtreme(baseMeasure.high, addMeasure.high, Math.max);\r\n\t            }\r\n\t            return baseMeasure;\r\n\t        }\r\n\t        measure.increase = increase;\r\n\t        /**\r\n\t         * Check for arc being concave or convex towards a given point.\r\n\t         *\r\n\t         * @param arc The arc to test.\r\n\t         * @param towardsPoint The point to test.\r\n\t         * @returns Boolean true if arc is concave towards point.\r\n\t         */\r\n\t        function isArcConcaveTowardsPoint(arc, towardsPoint) {\r\n\t            if (pointDistance(arc.origin, towardsPoint) <= arc.radius) {\r\n\t                return true;\r\n\t            }\r\n\t            var midPointToNearPoint = new MakerJs.paths.Line(MakerJs.point.middle(arc), towardsPoint);\r\n\t            var options = {};\r\n\t            var intersectionPoint = MakerJs.path.intersection(midPointToNearPoint, new MakerJs.paths.Chord(arc), options);\r\n\t            if (intersectionPoint || options.out_AreOverlapped) {\r\n\t                return true;\r\n\t            }\r\n\t            return false;\r\n\t        }\r\n\t        measure.isArcConcaveTowardsPoint = isArcConcaveTowardsPoint;\r\n\t        /**\r\n\t         * Check for arc overlapping another arc.\r\n\t         *\r\n\t         * @param arcA The arc to test.\r\n\t         * @param arcB The arc to check for overlap.\r\n\t         * @param excludeTangents Boolean to exclude exact endpoints and only look for deep overlaps.\r\n\t         * @returns Boolean true if arcA is overlapped with arcB.\r\n\t         */\r\n\t        function isArcOverlapping(arcA, arcB, excludeTangents) {\r\n\t            var pointsOfIntersection = [];\r\n\t            function checkAngles(a, b) {\r\n\t                function checkAngle(n) {\r\n\t                    return measure.isBetweenArcAngles(n, a, excludeTangents);\r\n\t                }\r\n\t                return checkAngle(b.startAngle) || checkAngle(b.endAngle);\r\n\t            }\r\n\t            return checkAngles(arcA, arcB) || checkAngles(arcB, arcA) || (arcA.startAngle == arcB.startAngle && arcA.endAngle == arcB.endAngle);\r\n\t        }\r\n\t        measure.isArcOverlapping = isArcOverlapping;\r\n\t        /**\r\n\t         * Check if a given number is between two given limits.\r\n\t         *\r\n\t         * @param valueInQuestion The number to test.\r\n\t         * @param limitA First limit.\r\n\t         * @param limitB Second limit.\r\n\t         * @param exclusive Flag to exclude equaling the limits.\r\n\t         * @returns Boolean true if value is between (or equal to) the limits.\r\n\t         */\r\n\t        function isBetween(valueInQuestion, limitA, limitB, exclusive) {\r\n\t            if (exclusive) {\r\n\t                return Math.min(limitA, limitB) < valueInQuestion && valueInQuestion < Math.max(limitA, limitB);\r\n\t            }\r\n\t            else {\r\n\t                return Math.min(limitA, limitB) <= valueInQuestion && valueInQuestion <= Math.max(limitA, limitB);\r\n\t            }\r\n\t        }\r\n\t        measure.isBetween = isBetween;\r\n\t        /**\r\n\t         * Check if a given angle is between an arc's start and end angles.\r\n\t         *\r\n\t         * @param angleInQuestion The angle to test.\r\n\t         * @param arc Arc to test against.\r\n\t         * @param exclusive Flag to exclude equaling the start or end angles.\r\n\t         * @returns Boolean true if angle is between (or equal to) the arc's start and end angles.\r\n\t         */\r\n\t        function isBetweenArcAngles(angleInQuestion, arc, exclusive) {\r\n\t            var startAngle = MakerJs.angle.noRevolutions(arc.startAngle);\r\n\t            var span = MakerJs.angle.ofArcSpan(arc);\r\n\t            var endAngle = startAngle + span;\r\n\t            angleInQuestion = MakerJs.angle.noRevolutions(angleInQuestion);\r\n\t            //computed angles will not be negative, but the arc may have specified a negative angle, so check against one revolution forward and backward\r\n\t            return (isBetween(angleInQuestion, startAngle, endAngle, exclusive) || isBetween(angleInQuestion, startAngle + 360, endAngle + 360, exclusive) || isBetween(angleInQuestion, startAngle - 360, endAngle - 360, exclusive));\r\n\t        }\r\n\t        measure.isBetweenArcAngles = isBetweenArcAngles;\r\n\t        /**\r\n\t         * Check if a given point is between a line's end points.\r\n\t         *\r\n\t         * @param pointInQuestion The point to test.\r\n\t         * @param line Line to test against.\r\n\t         * @param exclusive Flag to exclude equaling the origin or end points.\r\n\t         * @returns Boolean true if point is between (or equal to) the line's origin and end points.\r\n\t         */\r\n\t        function isBetweenPoints(pointInQuestion, line, exclusive) {\r\n\t            var oneDimension = false;\r\n\t            for (var i = 2; i--;) {\r\n\t                if (MakerJs.round(line.origin[i] - line.end[i], .000001) == 0) {\r\n\t                    if (oneDimension)\r\n\t                        return false;\r\n\t                    oneDimension = true;\r\n\t                    continue;\r\n\t                }\r\n\t                var origin_value = MakerJs.round(line.origin[i]);\r\n\t                var end_value = MakerJs.round(line.end[i]);\r\n\t                if (!isBetween(MakerJs.round(pointInQuestion[i]), origin_value, end_value, exclusive))\r\n\t                    return false;\r\n\t            }\r\n\t            return true;\r\n\t        }\r\n\t        measure.isBetweenPoints = isBetweenPoints;\r\n\t        /**\r\n\t         * Check if a given bezier seed is simply a line.\r\n\t         *\r\n\t         * @param seed The bezier seed to test.\r\n\t         * @returns Boolean true if bezier seed has control points on the line slope and between the line endpoints.\r\n\t         */\r\n\t        function isBezierSeedLinear(seed) {\r\n\t            //create a slope from the endpoints\r\n\t            var slope = lineSlope(seed);\r\n\t            for (var i = 0; i < seed.controls.length; i++) {\r\n\t                if (!(measure.isPointOnSlope(seed.controls[i], slope) && isBetweenPoints(seed.controls[i], seed, false))) {\r\n\t                    return false;\r\n\t                }\r\n\t            }\r\n\t            return true;\r\n\t        }\r\n\t        measure.isBezierSeedLinear = isBezierSeedLinear;\r\n\t        /**\r\n\t         * Check for line overlapping another line.\r\n\t         *\r\n\t         * @param lineA The line to test.\r\n\t         * @param lineB The line to check for overlap.\r\n\t         * @param excludeTangents Boolean to exclude exact endpoints and only look for deep overlaps.\r\n\t         * @returns Boolean true if lineA is overlapped with lineB.\r\n\t         */\r\n\t        function isLineOverlapping(lineA, lineB, excludeTangents) {\r\n\t            var pointsOfIntersection = [];\r\n\t            function checkPoints(index, a, b) {\r\n\t                function checkPoint(p) {\r\n\t                    return measure.isBetweenPoints(p, a, excludeTangents);\r\n\t                }\r\n\t                return checkPoint(b.origin) || checkPoint(b.end);\r\n\t            }\r\n\t            return checkPoints(0, lineA, lineB) || checkPoints(1, lineB, lineA);\r\n\t        }\r\n\t        measure.isLineOverlapping = isLineOverlapping;\r\n\t        /**\r\n\t         * Check for measurement overlapping another measurement.\r\n\t         *\r\n\t         * @param measureA The measurement to test.\r\n\t         * @param measureB The measurement to check for overlap.\r\n\t         * @returns Boolean true if measureA is overlapped with measureB.\r\n\t         */\r\n\t        function isMeasurementOverlapping(measureA, measureB) {\r\n\t            for (var i = 2; i--;) {\r\n\t                if (!(MakerJs.round(measureA.low[i] - measureB.high[i]) <= 0 && MakerJs.round(measureA.high[i] - measureB.low[i]) >= 0))\r\n\t                    return false;\r\n\t            }\r\n\t            return true;\r\n\t        }\r\n\t        measure.isMeasurementOverlapping = isMeasurementOverlapping;\r\n\t        /**\r\n\t         * Gets the slope of a line.\r\n\t         */\r\n\t        function lineSlope(line) {\r\n\t            var dx = line.end[0] - line.origin[0];\r\n\t            if (MakerJs.round(dx) == 0) {\r\n\t                return {\r\n\t                    line: line,\r\n\t                    hasSlope: false\r\n\t                };\r\n\t            }\r\n\t            var dy = line.end[1] - line.origin[1];\r\n\t            var slope = dy / dx;\r\n\t            var yIntercept = line.origin[1] - slope * line.origin[0];\r\n\t            return {\r\n\t                line: line,\r\n\t                hasSlope: true,\r\n\t                slope: slope,\r\n\t                yIntercept: yIntercept\r\n\t            };\r\n\t        }\r\n\t        measure.lineSlope = lineSlope;\r\n\t        /**\r\n\t         * Calculates the distance between two points.\r\n\t         *\r\n\t         * @param a First point.\r\n\t         * @param b Second point.\r\n\t         * @returns Distance between points.\r\n\t         */\r\n\t        function pointDistance(a, b) {\r\n\t            var dx = b[0] - a[0];\r\n\t            var dy = b[1] - a[1];\r\n\t            return Math.sqrt(dx * dx + dy * dy);\r\n\t        }\r\n\t        measure.pointDistance = pointDistance;\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function getExtremePoint(a, b, fn) {\r\n\t            return [\r\n\t                fn(a[0], b[0]),\r\n\t                fn(a[1], b[1])\r\n\t            ];\r\n\t        }\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        var pathExtentsMap = {};\r\n\t        pathExtentsMap[MakerJs.pathType.Line] = function (line) {\r\n\t            return {\r\n\t                low: getExtremePoint(line.origin, line.end, Math.min),\r\n\t                high: getExtremePoint(line.origin, line.end, Math.max)\r\n\t            };\r\n\t        };\r\n\t        pathExtentsMap[MakerJs.pathType.Circle] = function (circle) {\r\n\t            var r = circle.radius;\r\n\t            return {\r\n\t                low: MakerJs.point.add(circle.origin, [-r, -r]),\r\n\t                high: MakerJs.point.add(circle.origin, [r, r])\r\n\t            };\r\n\t        };\r\n\t        pathExtentsMap[MakerJs.pathType.Arc] = function (arc) {\r\n\t            var r = arc.radius;\r\n\t            var arcPoints = MakerJs.point.fromArc(arc);\r\n\t            function extremeAngle(xyAngle, value, fn) {\r\n\t                var extremePoint = getExtremePoint(arcPoints[0], arcPoints[1], fn);\r\n\t                for (var i = 2; i--;) {\r\n\t                    if (isBetweenArcAngles(xyAngle[i], arc, false)) {\r\n\t                        extremePoint[i] = value + arc.origin[i];\r\n\t                    }\r\n\t                }\r\n\t                return extremePoint;\r\n\t            }\r\n\t            return {\r\n\t                low: extremeAngle([180, 270], -r, Math.min),\r\n\t                high: extremeAngle([360, 90], r, Math.max)\r\n\t            };\r\n\t        };\r\n\t        /**\r\n\t         * Calculates the smallest rectangle which contains a path.\r\n\t         *\r\n\t         * @param pathToMeasure The path to measure.\r\n\t         * @returns object with low and high points.\r\n\t         */\r\n\t        function pathExtents(pathToMeasure, addOffset) {\r\n\t            if (pathToMeasure) {\r\n\t                var fn = pathExtentsMap[pathToMeasure.type];\r\n\t                if (fn) {\r\n\t                    var m = fn(pathToMeasure);\r\n\t                    if (addOffset) {\r\n\t                        m.high = MakerJs.point.add(m.high, addOffset);\r\n\t                        m.low = MakerJs.point.add(m.low, addOffset);\r\n\t                    }\r\n\t                    return m;\r\n\t                }\r\n\t            }\r\n\t            return { low: null, high: null };\r\n\t        }\r\n\t        measure.pathExtents = pathExtents;\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        var pathLengthMap = {};\r\n\t        pathLengthMap[MakerJs.pathType.Line] = function (line) {\r\n\t            return pointDistance(line.origin, line.end);\r\n\t        };\r\n\t        pathLengthMap[MakerJs.pathType.Circle] = function (circle) {\r\n\t            return 2 * Math.PI * circle.radius;\r\n\t        };\r\n\t        pathLengthMap[MakerJs.pathType.Arc] = function (arc) {\r\n\t            var value = pathLengthMap[MakerJs.pathType.Circle](arc);\r\n\t            var pct = MakerJs.angle.ofArcSpan(arc) / 360;\r\n\t            value *= pct;\r\n\t            return value;\r\n\t        };\r\n\t        pathLengthMap[MakerJs.pathType.BezierSeed] = function (seed) {\r\n\t            return MakerJs.models.BezierCurve.computeLength(seed);\r\n\t        };\r\n\t        /**\r\n\t         * Measures the length of a path.\r\n\t         *\r\n\t         * @param pathToMeasure The path to measure.\r\n\t         * @returns Length of the path.\r\n\t         */\r\n\t        function pathLength(pathToMeasure) {\r\n\t            if (pathToMeasure) {\r\n\t                var fn = pathLengthMap[pathToMeasure.type];\r\n\t                if (fn) {\r\n\t                    return fn(pathToMeasure);\r\n\t                }\r\n\t            }\r\n\t            return 0;\r\n\t        }\r\n\t        measure.pathLength = pathLength;\r\n\t        /**\r\n\t         * Measures the length of all paths in a model.\r\n\t         *\r\n\t         * @param modelToMeasure The model containing paths to measure.\r\n\t         * @returns Length of all paths in the model.\r\n\t         */\r\n\t        function modelPathLength(modelToMeasure) {\r\n\t            var total = 0;\r\n\t            MakerJs.model.walk(modelToMeasure, {\r\n\t                onPath: function (walkedPath) {\r\n\t                    total += pathLength(walkedPath.pathContext);\r\n\t                }\r\n\t            });\r\n\t            return total;\r\n\t        }\r\n\t        measure.modelPathLength = modelPathLength;\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function cloneMeasure(measureToclone) {\r\n\t            return {\r\n\t                high: MakerJs.point.clone(measureToclone.high),\r\n\t                low: MakerJs.point.clone(measureToclone.low)\r\n\t            };\r\n\t        }\r\n\t        /**\r\n\t         * Measures the smallest rectangle which contains a model.\r\n\t         *\r\n\t         * @param modelToMeasure The model to measure.\r\n\t         * @param atlas Optional atlas to save measurements.\r\n\t         * @returns object with low and high points.\r\n\t         */\r\n\t        function modelExtents(modelToMeasure, atlas) {\r\n\t            function increaseParentModel(childRoute, childMeasurement) {\r\n\t                if (!childMeasurement)\r\n\t                    return;\r\n\t                //to get the parent route, just traverse backwards 2 to remove id and 'paths' / 'models'\r\n\t                var parentRoute = childRoute.slice(0, -2);\r\n\t                var parentRouteKey = MakerJs.createRouteKey(parentRoute);\r\n\t                if (!(parentRouteKey in atlas.modelMap)) {\r\n\t                    //just start with the known size\r\n\t                    atlas.modelMap[parentRouteKey] = cloneMeasure(childMeasurement);\r\n\t                }\r\n\t                else {\r\n\t                    measure.increase(atlas.modelMap[parentRouteKey], childMeasurement);\r\n\t                }\r\n\t            }\r\n\t            if (!atlas)\r\n\t                atlas = new measure.Atlas(modelToMeasure);\r\n\t            var walkOptions = {\r\n\t                onPath: function (walkedPath) {\r\n\t                    //trust that the path measurement is good\r\n\t                    if (!(walkedPath.routeKey in atlas.pathMap)) {\r\n\t                        atlas.pathMap[walkedPath.routeKey] = measure.pathExtents(walkedPath.pathContext, walkedPath.offset);\r\n\t                    }\r\n\t                    increaseParentModel(walkedPath.route, atlas.pathMap[walkedPath.routeKey]);\r\n\t                },\r\n\t                afterChildWalk: function (walkedModel) {\r\n\t                    //model has been updated by all its children, update parent\r\n\t                    increaseParentModel(walkedModel.route, atlas.modelMap[walkedModel.routeKey]);\r\n\t                }\r\n\t            };\r\n\t            MakerJs.model.walk(modelToMeasure, walkOptions);\r\n\t            atlas.modelsMeasured = true;\r\n\t            var m = atlas.modelMap[''];\r\n\t            if (m) {\r\n\t                return augment(m);\r\n\t            }\r\n\t            return m;\r\n\t        }\r\n\t        measure.modelExtents = modelExtents;\r\n\t        /**\r\n\t         * Augment a measurement - add more properties such as center point, height and width.\r\n\t         *\r\n\t         * @param measureToAugment The measurement to augment.\r\n\t         * @returns Measurement object with augmented properties.\r\n\t         */\r\n\t        function augment(measureToAugment) {\r\n\t            var m = measureToAugment;\r\n\t            m.center = MakerJs.point.average(m.high, m.low);\r\n\t            m.width = m.high[0] - m.low[0];\r\n\t            m.height = m.high[1] - m.low[1];\r\n\t            return m;\r\n\t        }\r\n\t        measure.augment = augment;\r\n\t        /**\r\n\t         * A list of maps of measurements.\r\n\t         *\r\n\t         * @param modelToMeasure The model to measure.\r\n\t         * @param atlas Optional atlas to save measurements.\r\n\t         * @returns object with low and high points.\r\n\t         */\r\n\t        var Atlas = (function () {\r\n\t            /**\r\n\t             * Constructor.\r\n\t             * @param modelContext The model to measure.\r\n\t             */\r\n\t            function Atlas(modelContext) {\r\n\t                this.modelContext = modelContext;\r\n\t                /**\r\n\t                 * Flag that models have been measured.\r\n\t                 */\r\n\t                this.modelsMeasured = false;\r\n\t                /**\r\n\t                 * Map of model measurements, mapped by routeKey.\r\n\t                 */\r\n\t                this.modelMap = {};\r\n\t                /**\r\n\t                 * Map of path measurements, mapped by routeKey.\r\n\t                 */\r\n\t                this.pathMap = {};\r\n\t            }\r\n\t            Atlas.prototype.measureModels = function () {\r\n\t                if (!this.modelsMeasured) {\r\n\t                    modelExtents(this.modelContext, this);\r\n\t                }\r\n\t            };\r\n\t            return Atlas;\r\n\t        }());\r\n\t        measure.Atlas = Atlas;\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function loopIndex(base, i) {\r\n\t            if (i >= base)\r\n\t                return i - base;\r\n\t            if (i < 0)\r\n\t                return i + base;\r\n\t            return i;\r\n\t        }\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function yAtX(slope, x) {\r\n\t            return slope.slope * x + slope.yIntercept;\r\n\t        }\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function pointOnSlopeAtX(line, x) {\r\n\t            var slope = lineSlope(line);\r\n\t            return [x, yAtX(slope, x)];\r\n\t        }\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function isCircular(bounds) {\r\n\t            for (var i = 1; i < 3; i++) {\r\n\t                if (!measure.isPointEqual(bounds[0].center, bounds[i].center, .000001) || !(MakerJs.round(bounds[0].width - bounds[i].width) === 0)) {\r\n\t                    return false;\r\n\t                }\r\n\t            }\r\n\t            return true;\r\n\t        }\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function getAngledBounds(index, modelToMeasure, rotateModel, rotatePaths) {\r\n\t            MakerJs.model.rotate(modelToMeasure, rotateModel);\r\n\t            var m = modelExtents(modelToMeasure);\r\n\t            var result = {\r\n\t                index: index,\r\n\t                rotation: rotatePaths,\r\n\t                center: MakerJs.point.rotate(m.center, rotatePaths),\r\n\t                //model is sideways, so width is based on Y, height is based on X\r\n\t                width: m.height,\r\n\t                height: m.width,\r\n\t                bottom: new MakerJs.paths.Line(m.low, [m.high[0], m.low[1]]),\r\n\t                middle: new MakerJs.paths.Line([m.low[0], m.center[1]], [m.high[0], m.center[1]]),\r\n\t                top: new MakerJs.paths.Line(m.high, [m.low[0], m.high[1]])\r\n\t            };\r\n\t            [result.top, result.middle, result.bottom].forEach(function (line) { return MakerJs.path.rotate(line, rotatePaths); });\r\n\t            return result;\r\n\t        }\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function hexSolution(lines, bounds) {\r\n\t            var tip = lines[1].origin;\r\n\t            var tipX = tip[0];\r\n\t            var left = lines[3].origin[0];\r\n\t            var right = lines[0].origin[0];\r\n\t            //see if left edge is in bounds if right edge is on the hex boundary\r\n\t            var altRight = tipX - right;\r\n\t            if ((right - left) > 2 * altRight)\r\n\t                return null;\r\n\t            //see if right edge is in bounds if left edge is on the hex boundary\r\n\t            var altLeft = (tipX - left) / 3;\r\n\t            if (altRight < altLeft)\r\n\t                return null;\r\n\t            var altitudeViaSide = Math.min(altLeft, altRight);\r\n\t            var radiusViaSide = MakerJs.solvers.equilateralSide(altitudeViaSide);\r\n\t            //find peaks, then find highest peak\r\n\t            var peakPoints = [MakerJs.point.fromSlopeIntersection(lines[1], lines[2]), MakerJs.point.fromSlopeIntersection(lines[4], lines[5])];\r\n\t            var peakRadii = peakPoints.map(function (p) { return Math.abs(p[1] - tip[1]); });\r\n\t            var peakNum = (peakRadii[0] > peakRadii[1]) ? 0 : 1; //top = 0, bottom = 1\r\n\t            var radiusViaPeak = peakRadii[peakNum];\r\n\t            if (radiusViaPeak > radiusViaSide) {\r\n\t                var altitudeViaPeak = MakerJs.solvers.equilateralAltitude(radiusViaPeak);\r\n\t                var peakX = tipX - 2 * altitudeViaPeak;\r\n\t                //see if it will contain right side\r\n\t                if (right > peakX + altitudeViaPeak)\r\n\t                    return null;\r\n\t                //see if it will contain left side\r\n\t                if (left < peakX - altitudeViaPeak)\r\n\t                    return null;\r\n\t                //at this point, [tipX - 2 * altitudeViaPeak, tip[1]] is a solution for origin.\r\n\t                //but we want to best center the result by sliding along the boundary middle, balancing the smallest gap\r\n\t                var leftGap = left - peakX + altitudeViaPeak;\r\n\t                var peakGap = 2 * altitudeViaPeak - bounds[peakNum + 1].width;\r\n\t                var minHalfGap = Math.min(leftGap, peakGap) / 2;\r\n\t                return {\r\n\t                    origin: pointOnSlopeAtX(bounds[2 - peakNum].middle, peakX + minHalfGap),\r\n\t                    radius: radiusViaPeak,\r\n\t                    type: 'peak ' + peakNum\r\n\t                };\r\n\t            }\r\n\t            else {\r\n\t                return {\r\n\t                    origin: [tipX - 2 * altitudeViaSide, tip[1]],\r\n\t                    radius: radiusViaSide,\r\n\t                    type: 'side'\r\n\t                };\r\n\t            }\r\n\t        }\r\n\t        /**\r\n\t         * Measures the minimum bounding hexagon surrounding a model. The hexagon is oriented such that the right and left sides are vertical, and the top and bottom are pointed.\r\n\t         *\r\n\t         * @param modelToMeasure The model to measure.\r\n\t         * @returns IBoundingHex object which is a hexagon model, with an additional radius property.\r\n\t         */\r\n\t        function boundingHexagon(modelToMeasure) {\r\n\t            var originalMeasure = modelExtents(modelToMeasure);\r\n\t            var clone = MakerJs.cloneObject(modelToMeasure);\r\n\t            var bounds = [];\r\n\t            var scratch = { paths: {} };\r\n\t            MakerJs.model.center(clone);\r\n\t            function result(radius, origin1, notes) {\r\n\t                return {\r\n\t                    radius: radius,\r\n\t                    paths: new MakerJs.models.Polygon(6, radius, 30).paths,\r\n\t                    origin: MakerJs.point.add(origin1, MakerJs.point.subtract(originalMeasure.center, modelToMeasure.origin)),\r\n\t                    //models: { scratch: scratch },\r\n\t                    notes: notes\r\n\t                };\r\n\t            }\r\n\t            var boundRotations = [[90, -90], [-60, -30], [-60, 30]];\r\n\t            while (boundRotations.length) {\r\n\t                var rotation = boundRotations.shift();\r\n\t                var bound = getAngledBounds(bounds.length, clone, rotation[0], rotation[1]);\r\n\t                var side = MakerJs.solvers.equilateralSide(bound.width / 2);\r\n\t                if (side >= bound.height) {\r\n\t                    return result(side, bound.center, 'solved by bound ' + bounds.length);\r\n\t                }\r\n\t                bounds.push(bound);\r\n\t            }\r\n\t            //model.rotate(clone, 30);\r\n\t            //scratch.models = { clone: clone };\r\n\t            //check for a circular solution\r\n\t            if (isCircular(bounds)) {\r\n\t                return result(MakerJs.solvers.equilateralSide(bounds[0].width / 2), bounds[0].center, 'solved as circular');\r\n\t            }\r\n\t            var perimeters = bounds.map(function (b) { return b.top; }).concat(bounds.map(function (b) { return b.bottom; }));\r\n\t            perimeters.forEach(function (p, i) {\r\n\t                scratch.paths[i] = p;\r\n\t                //converge alternate lines to form two triangles\r\n\t                MakerJs.path.converge(perimeters[loopIndex(6, i + 2)], p, true);\r\n\t            });\r\n\t            bounds.forEach(function (b, i) {\r\n\t                scratch.paths['m' + i] = b.middle;\r\n\t            });\r\n\t            var boundCopy = bounds.slice();\r\n\t            var solution;\r\n\t            //solve a hexagon for every tip, keeping the smallest one\r\n\t            for (var i = 0; i < 6; i++) {\r\n\t                //rotate the scratch area so that we always reference the tip at polar 0\r\n\t                if (i > 0) {\r\n\t                    perimeters.push(perimeters.shift());\r\n\t                    boundCopy.push(boundCopy.shift());\r\n\t                    MakerJs.model.rotate(scratch, -60);\r\n\t                }\r\n\t                var s = hexSolution(perimeters, boundCopy);\r\n\t                if (s) {\r\n\t                    if (!solution || s.radius < solution.radius) {\r\n\t                        solution = s;\r\n\t                        solution.index = i;\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            var p = MakerJs.point.rotate(solution.origin, solution.index * 60);\r\n\t            return result(solution.radius, p, 'solved by ' + solution.index + ' as ' + solution.type);\r\n\t        }\r\n\t        measure.boundingHexagon = boundingHexagon;\r\n\t    })(measure = MakerJs.measure || (MakerJs.measure = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var exporter;\r\n\t    (function (exporter) {\r\n\t        /**\r\n\t         * Try to get the unit system from a model\r\n\t         * @private\r\n\t         */\r\n\t        function tryGetModelUnits(itemToExport) {\r\n\t            if (MakerJs.isModel(itemToExport)) {\r\n\t                return itemToExport.units;\r\n\t            }\r\n\t        }\r\n\t        exporter.tryGetModelUnits = tryGetModelUnits;\r\n\t        /**\r\n\t         * Class to traverse an item 's models or paths and ultimately render each path.\r\n\t         * @private\r\n\t         */\r\n\t        var Exporter = (function () {\r\n\t            /**\r\n\t             * @param map Object containing properties: property name is the type of path, e.g. \"line\", \"circle\"; property value\r\n\t             * is a function to render a path. Function parameters are path and point.\r\n\t             * @param fixPoint Optional function to modify a point prior to export. Function parameter is a point; function must return a point.\r\n\t             * @param fixPath Optional function to modify a path prior to output. Function parameters are path and offset point; function must return a path.\r\n\t             */\r\n\t            function Exporter(map, fixPoint, fixPath, beginModel, endModel) {\r\n\t                this.map = map;\r\n\t                this.fixPoint = fixPoint;\r\n\t                this.fixPath = fixPath;\r\n\t                this.beginModel = beginModel;\r\n\t                this.endModel = endModel;\r\n\t            }\r\n\t            /**\r\n\t             * Export a path.\r\n\t             *\r\n\t             * @param pathToExport The path to export.\r\n\t             * @param offset The offset position of the path.\r\n\t             */\r\n\t            Exporter.prototype.exportPath = function (id, pathToExport, offset, layer) {\r\n\t                if (pathToExport) {\r\n\t                    var fn = this.map[pathToExport.type];\r\n\t                    if (fn) {\r\n\t                        fn(id, this.fixPath ? this.fixPath(pathToExport, offset) : pathToExport, offset, layer);\r\n\t                    }\r\n\t                }\r\n\t            };\r\n\t            /**\r\n\t             * Export a model.\r\n\t             *\r\n\t             * @param modelToExport The model to export.\r\n\t             * @param offset The offset position of the model.\r\n\t             */\r\n\t            Exporter.prototype.exportModel = function (modelId, modelToExport, offset) {\r\n\t                if (this.beginModel) {\r\n\t                    this.beginModel(modelId, modelToExport);\r\n\t                }\r\n\t                var newOffset = MakerJs.point.add((this.fixPoint ? this.fixPoint(modelToExport.origin) : modelToExport.origin), offset);\r\n\t                if (modelToExport.paths) {\r\n\t                    for (var id in modelToExport.paths) {\r\n\t                        var currPath = modelToExport.paths[id];\r\n\t                        if (!currPath)\r\n\t                            continue;\r\n\t                        this.exportPath(id, currPath, newOffset, currPath.layer || modelToExport.layer);\r\n\t                    }\r\n\t                }\r\n\t                if (modelToExport.models) {\r\n\t                    for (var id in modelToExport.models) {\r\n\t                        var currModel = modelToExport.models[id];\r\n\t                        if (!currModel)\r\n\t                            continue;\r\n\t                        this.exportModel(id, currModel, newOffset);\r\n\t                    }\r\n\t                }\r\n\t                if (this.endModel) {\r\n\t                    this.endModel(modelToExport);\r\n\t                }\r\n\t            };\r\n\t            /**\r\n\t             * Export an object.\r\n\t             *\r\n\t             * @param item The object to export. May be a path, an array of paths, a model, or an array of models.\r\n\t             * @param offset The offset position of the object.\r\n\t             */\r\n\t            Exporter.prototype.exportItem = function (itemId, itemToExport, origin) {\r\n\t                if (MakerJs.isModel(itemToExport)) {\r\n\t                    this.exportModel(itemId, itemToExport, origin);\r\n\t                }\r\n\t                else if (MakerJs.isPath(itemToExport)) {\r\n\t                    this.exportPath(itemId, itemToExport, origin, null);\r\n\t                }\r\n\t                else {\r\n\t                    for (var id in itemToExport) {\r\n\t                        this.exportItem(id, itemToExport[id], origin);\r\n\t                    }\r\n\t                }\r\n\t            };\r\n\t            return Exporter;\r\n\t        }());\r\n\t        exporter.Exporter = Exporter;\r\n\t    })(exporter = MakerJs.exporter || (MakerJs.exporter = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var importer;\r\n\t    (function (importer) {\r\n\t        /**\r\n\t         * Create a numeric array from a string of numbers. The numbers may be delimited by anything non-numeric.\r\n\t         *\r\n\t         * Example:\r\n\t         * ```\r\n\t         * var n = makerjs.importer.parseNumericList('5, 10, 15.20 25-30-35 4e1 .5');\r\n\t         * ```\r\n\t         *\r\n\t         * @param s The string of numbers.\r\n\t         * @returns Array of numbers.\r\n\t         */\r\n\t        function parseNumericList(s) {\r\n\t            var result = [];\r\n\t            //http://stackoverflow.com/questions/638565/parsing-scientific-notation-sensibly\r\n\t            var re = /[\\.-]?(?:0|[1-9]\\d*)(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\r\n\t            var matches;\r\n\t            while ((matches = re.exec(s)) !== null) {\r\n\t                if (matches.index === re.lastIndex) {\r\n\t                    re.lastIndex++;\r\n\t                }\r\n\t                result.push(parseFloat(matches[0]));\r\n\t            }\r\n\t            return result;\r\n\t        }\r\n\t        importer.parseNumericList = parseNumericList;\r\n\t    })(importer = MakerJs.importer || (MakerJs.importer = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var exporter;\r\n\t    (function (exporter_1) {\r\n\t        /**\r\n\t         * Renders an item in AutoDesk DFX file format.\r\n\t         *\r\n\t         * @param itemToExport Item to render: may be a path, an array of paths, or a model object.\r\n\t         * @param options Rendering options object.\r\n\t         * @param options.units String of the unit system. May be omitted. See makerjs.unitType for possible values.\r\n\t         * @returns String of DXF content.\r\n\t         */\r\n\t        function toDXF(itemToExport, options) {\r\n\t            //DXF format documentation:\r\n\t            //http://images.autodesk.com/adsk/files/acad_dxf0.pdf\r\n\t            if (options === void 0) { options = {}; }\r\n\t            var opts = {};\r\n\t            MakerJs.extendObject(opts, options);\r\n\t            if (MakerJs.isModel(itemToExport)) {\r\n\t                var modelToExport = itemToExport;\r\n\t                if (modelToExport.exporterOptions) {\r\n\t                    MakerJs.extendObject(opts, modelToExport.exporterOptions['toDXF']);\r\n\t                }\r\n\t            }\r\n\t            var dxf = [];\r\n\t            function append(value) {\r\n\t                dxf.push(value);\r\n\t            }\r\n\t            function defaultLayer(pathContext, layer) {\r\n\t                return pathContext.layer || layer || 0;\r\n\t            }\r\n\t            var map = {};\r\n\t            map[MakerJs.pathType.Line] = function (id, line, origin, layer) {\r\n\t                append(\"0\");\r\n\t                append(\"LINE\");\r\n\t                append(\"8\");\r\n\t                append(defaultLayer(line, layer));\r\n\t                append(\"10\");\r\n\t                append(line.origin[0] + origin[0]);\r\n\t                append(\"20\");\r\n\t                append(line.origin[1] + origin[1]);\r\n\t                append(\"11\");\r\n\t                append(line.end[0] + origin[0]);\r\n\t                append(\"21\");\r\n\t                append(line.end[1] + origin[1]);\r\n\t            };\r\n\t            map[MakerJs.pathType.Circle] = function (id, circle, origin, layer) {\r\n\t                append(\"0\");\r\n\t                append(\"CIRCLE\");\r\n\t                append(\"8\");\r\n\t                append(defaultLayer(circle, layer));\r\n\t                append(\"10\");\r\n\t                append(circle.origin[0] + origin[0]);\r\n\t                append(\"20\");\r\n\t                append(circle.origin[1] + origin[1]);\r\n\t                append(\"40\");\r\n\t                append(circle.radius);\r\n\t            };\r\n\t            map[MakerJs.pathType.Arc] = function (id, arc, origin, layer) {\r\n\t                append(\"0\");\r\n\t                append(\"ARC\");\r\n\t                append(\"8\");\r\n\t                append(defaultLayer(arc, layer));\r\n\t                append(\"10\");\r\n\t                append(arc.origin[0] + origin[0]);\r\n\t                append(\"20\");\r\n\t                append(arc.origin[1] + origin[1]);\r\n\t                append(\"40\");\r\n\t                append(arc.radius);\r\n\t                append(\"50\");\r\n\t                append(arc.startAngle);\r\n\t                append(\"51\");\r\n\t                append(arc.endAngle);\r\n\t            };\r\n\t            //TODO - handle scenario if any bezier seeds get passed\r\n\t            //map[pathType.BezierSeed]\r\n\t            function section(sectionFn) {\r\n\t                append(\"0\");\r\n\t                append(\"SECTION\");\r\n\t                sectionFn();\r\n\t                append(\"0\");\r\n\t                append(\"ENDSEC\");\r\n\t            }\r\n\t            function header() {\r\n\t                var units = dxfUnit[opts.units];\r\n\t                append(\"2\");\r\n\t                append(\"HEADER\");\r\n\t                append(\"9\");\r\n\t                append(\"$INSUNITS\");\r\n\t                append(\"70\");\r\n\t                append(units);\r\n\t            }\r\n\t            function entities() {\r\n\t                append(\"2\");\r\n\t                append(\"ENTITIES\");\r\n\t                var exporter = new exporter_1.Exporter(map);\r\n\t                exporter.exportItem('entities', itemToExport, MakerJs.point.zero());\r\n\t            }\r\n\t            //fixup options\r\n\t            if (!opts.units) {\r\n\t                var units = exporter_1.tryGetModelUnits(itemToExport);\r\n\t                if (units) {\r\n\t                    opts.units = units;\r\n\t                }\r\n\t            }\r\n\t            //also pass back to options parameter\r\n\t            MakerJs.extendObject(options, opts);\r\n\t            //begin dxf output\r\n\t            if (opts.units) {\r\n\t                section(header);\r\n\t            }\r\n\t            section(entities);\r\n\t            append(\"0\");\r\n\t            append(\"EOF\");\r\n\t            return dxf.join('\\n');\r\n\t        }\r\n\t        exporter_1.toDXF = toDXF;\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        var dxfUnit = {};\r\n\t        //DXF format documentation:\r\n\t        //http://images.autodesk.com/adsk/files/acad_dxf0.pdf\r\n\t        //Default drawing units for AutoCAD DesignCenter blocks:\r\n\t        //0 = Unitless; 1 = Inches; 2 = Feet; 3 = Miles; 4 = Millimeters; 5 = Centimeters; 6 = Meters; 7 = Kilometers; 8 = Microinches;\r\n\t        dxfUnit[''] = 0;\r\n\t        dxfUnit[MakerJs.unitType.Inch] = 1;\r\n\t        dxfUnit[MakerJs.unitType.Foot] = 2;\r\n\t        dxfUnit[MakerJs.unitType.Millimeter] = 4;\r\n\t        dxfUnit[MakerJs.unitType.Centimeter] = 5;\r\n\t        dxfUnit[MakerJs.unitType.Meter] = 6;\r\n\t    })(exporter = MakerJs.exporter || (MakerJs.exporter = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var solvers;\r\n\t    (function (solvers) {\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        var equilateral = Math.sqrt(3) / 2;\r\n\t        /**\r\n\t         * Solves for the altitude of an equilateral triangle when you know its side length.\r\n\t         *\r\n\t         * @param sideLength Length of a side of the equilateral triangle (all 3 sides are equal).\r\n\t         * @returns Altitude of the equilateral triangle.\r\n\t         */\r\n\t        function equilateralAltitude(sideLength) {\r\n\t            return sideLength * equilateral;\r\n\t        }\r\n\t        solvers.equilateralAltitude = equilateralAltitude;\r\n\t        /**\r\n\t         * Solves for the side length of an equilateral triangle when you know its altitude.\r\n\t         *\r\n\t         * @param altitude Altitude of the equilateral triangle.\r\n\t         * @returns Length of the side of the equilateral triangle (all 3 sides are equal).\r\n\t         */\r\n\t        function equilateralSide(altitude) {\r\n\t            return altitude / equilateral;\r\n\t        }\r\n\t        solvers.equilateralSide = equilateralSide;\r\n\t        /**\r\n\t         * Solves for the angle of a triangle when you know lengths of 3 sides.\r\n\t         *\r\n\t         * @param lengthA Length of side of triangle, opposite of the angle you are trying to find.\r\n\t         * @param lengthB Length of any other side of the triangle.\r\n\t         * @param lengthC Length of the remaining side of the triangle.\r\n\t         * @returns Angle opposite of the side represented by the first parameter.\r\n\t         */\r\n\t        function solveTriangleSSS(lengthA, lengthB, lengthC) {\r\n\t            return MakerJs.angle.toDegrees(Math.acos((lengthB * lengthB + lengthC * lengthC - lengthA * lengthA) / (2 * lengthB * lengthC)));\r\n\t        }\r\n\t        solvers.solveTriangleSSS = solveTriangleSSS;\r\n\t        /**\r\n\t         * Solves for the length of a side of a triangle when you know length of one side and 2 angles.\r\n\t         *\r\n\t         * @param oppositeAngleInDegrees Angle which is opposite of the side you are trying to find.\r\n\t         * @param lengthOfSideBetweenAngles Length of one side of the triangle which is between the provided angles.\r\n\t         * @param otherAngleInDegrees An other angle of the triangle.\r\n\t         * @returns Length of the side of the triangle which is opposite of the first angle parameter.\r\n\t         */\r\n\t        function solveTriangleASA(oppositeAngleInDegrees, lengthOfSideBetweenAngles, otherAngleInDegrees) {\r\n\t            var angleOppositeSide = 180 - oppositeAngleInDegrees - otherAngleInDegrees;\r\n\t            return (lengthOfSideBetweenAngles * Math.sin(MakerJs.angle.toRadians(oppositeAngleInDegrees))) / Math.sin(MakerJs.angle.toRadians(angleOppositeSide));\r\n\t        }\r\n\t        solvers.solveTriangleASA = solveTriangleASA;\r\n\t        /**\r\n\t         * Solves for the angles of the tangent lines between 2 circles.\r\n\t         *\r\n\t         * @param a First circle.\r\n\t         * @param b Second circle.\r\n\t         * @param inner Boolean to use inner tangents instead of outer tangents.\r\n\t         * @returns Array of angles in degrees where 2 lines between the circles will be tangent to both circles.\r\n\t         */\r\n\t        function circleTangentAngles(a, b, inner) {\r\n\t            if (inner === void 0) { inner = false; }\r\n\t            var connect = new MakerJs.paths.Line(a.origin, b.origin);\r\n\t            var distance = MakerJs.measure.pointDistance(a.origin, b.origin);\r\n\t            //no tangents if either circle encompasses the other\r\n\t            if (a.radius >= distance + b.radius || b.radius >= distance + a.radius)\r\n\t                return null;\r\n\t            //no inner tangents when circles touch or overlap\r\n\t            if (inner && (a.radius + b.radius >= distance))\r\n\t                return null;\r\n\t            var tangentAngles;\r\n\t            if (!inner && MakerJs.round(a.radius - b.radius) == 0) {\r\n\t                tangentAngles = [90, 270];\r\n\t            }\r\n\t            else {\r\n\t                //solve for circles on the x axis at the distance\r\n\t                var d2 = distance / 2;\r\n\t                var between = new MakerJs.paths.Circle([d2, 0], d2);\r\n\t                var diff = new MakerJs.paths.Circle(((a.radius > b.radius) ? a : b).origin, inner ? (a.radius + b.radius) : Math.abs(a.radius - b.radius));\r\n\t                var int = MakerJs.path.intersection(diff, between);\r\n\t                if (!int || !int.path1Angles)\r\n\t                    return null;\r\n\t                tangentAngles = int.path1Angles;\r\n\t            }\r\n\t            var connectAngle = MakerJs.angle.ofLineInDegrees(connect);\r\n\t            //add the line's angle to the result\r\n\t            return tangentAngles.map(function (a) { return MakerJs.angle.noRevolutions(a + connectAngle); });\r\n\t        }\r\n\t        solvers.circleTangentAngles = circleTangentAngles;\r\n\t    })(solvers = MakerJs.solvers || (MakerJs.solvers = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var path;\r\n\t    (function (path) {\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        var map = {};\r\n\t        map[MakerJs.pathType.Arc] = {};\r\n\t        map[MakerJs.pathType.Circle] = {};\r\n\t        map[MakerJs.pathType.Line] = {};\r\n\t        map[MakerJs.pathType.Arc][MakerJs.pathType.Arc] = function (arc1, arc2, options, swapOffsets) {\r\n\t            var result = null;\r\n\t            moveTemp([arc1, arc2], options, swapOffsets, function () {\r\n\t                var angles = circleToCircle(arc1, arc2, options);\r\n\t                if (angles) {\r\n\t                    var arc1Angles = getAnglesWithinArc(angles[0], arc1, options);\r\n\t                    var arc2Angles = getAnglesWithinArc(angles[1], arc2, options);\r\n\t                    if (arc1Angles && arc2Angles) {\r\n\t                        //must correspond to the same angle indexes\r\n\t                        if (arc1Angles.length === 1 || arc2Angles.length === 1) {\r\n\t                            for (var i1 = 0; i1 < arc1Angles.length; i1++) {\r\n\t                                for (var i2 = 0; i2 < arc2Angles.length; i2++) {\r\n\t                                    var p1 = MakerJs.point.fromAngleOnCircle(arc1Angles[i1], arc1);\r\n\t                                    var p2 = MakerJs.point.fromAngleOnCircle(arc2Angles[i2], arc2);\r\n\t                                    //if they do not correspond then they don't intersect\r\n\t                                    if (MakerJs.measure.isPointEqual(p1, p2, .0001)) {\r\n\t                                        result = {\r\n\t                                            intersectionPoints: [p1],\r\n\t                                            path1Angles: [arc1Angles[i1]],\r\n\t                                            path2Angles: [arc2Angles[i2]]\r\n\t                                        };\r\n\t                                        return;\r\n\t                                    }\r\n\t                                }\r\n\t                            }\r\n\t                        }\r\n\t                        else {\r\n\t                            result = {\r\n\t                                intersectionPoints: pointsFromAnglesOnCircle(arc1Angles, arc1),\r\n\t                                path1Angles: arc1Angles,\r\n\t                                path2Angles: arc2Angles\r\n\t                            };\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t                else {\r\n\t                    if (options.out_AreOverlapped) {\r\n\t                        //overlapped for circle, reset and see if arcs actually overlap.\r\n\t                        options.out_AreOverlapped = MakerJs.measure.isArcOverlapping(arc1, arc2, options.excludeTangents);\r\n\t                    }\r\n\t                }\r\n\t            });\r\n\t            return result;\r\n\t        };\r\n\t        map[MakerJs.pathType.Arc][MakerJs.pathType.Circle] = function (arc, circle, options, swapOffsets) {\r\n\t            var result = null;\r\n\t            moveTemp([arc, circle], options, swapOffsets, function () {\r\n\t                var angles = circleToCircle(arc, circle, options);\r\n\t                if (angles) {\r\n\t                    var arcAngles = getAnglesWithinArc(angles[0], arc, options);\r\n\t                    if (arcAngles) {\r\n\t                        var circleAngles;\r\n\t                        //if both point are on arc, use both on circle\r\n\t                        if (arcAngles.length == 2) {\r\n\t                            circleAngles = angles[1];\r\n\t                        }\r\n\t                        else {\r\n\t                            //use the corresponding point on circle \r\n\t                            var index = findCorrespondingAngleIndex(angles, arcAngles);\r\n\t                            circleAngles = [angles[1][index]];\r\n\t                        }\r\n\t                        result = {\r\n\t                            intersectionPoints: pointsFromAnglesOnCircle(arcAngles, arc),\r\n\t                            path1Angles: arcAngles,\r\n\t                            path2Angles: circleAngles\r\n\t                        };\r\n\t                    }\r\n\t                }\r\n\t            });\r\n\t            return result;\r\n\t        };\r\n\t        map[MakerJs.pathType.Arc][MakerJs.pathType.Line] = function (arc, line, options, swapOffsets) {\r\n\t            var result = null;\r\n\t            moveTemp([arc, line], options, swapOffsets, function () {\r\n\t                var angles = lineToCircle(line, arc, options);\r\n\t                if (angles) {\r\n\t                    var arcAngles = getAnglesWithinArc(angles, arc, options);\r\n\t                    if (arcAngles) {\r\n\t                        result = {\r\n\t                            intersectionPoints: pointsFromAnglesOnCircle(arcAngles, arc),\r\n\t                            path1Angles: arcAngles\r\n\t                        };\r\n\t                    }\r\n\t                }\r\n\t            });\r\n\t            return result;\r\n\t        };\r\n\t        map[MakerJs.pathType.Circle][MakerJs.pathType.Arc] = function (circle, arc, options) {\r\n\t            var result = map[MakerJs.pathType.Arc][MakerJs.pathType.Circle](arc, circle, options, true);\r\n\t            if (result) {\r\n\t                return swapAngles(result);\r\n\t            }\r\n\t            return null;\r\n\t        };\r\n\t        map[MakerJs.pathType.Circle][MakerJs.pathType.Circle] = function (circle1, circle2, options, swapOffsets) {\r\n\t            var result = null;\r\n\t            moveTemp([circle1, circle2], options, swapOffsets, function () {\r\n\t                var angles = circleToCircle(circle1, circle2, options);\r\n\t                if (angles) {\r\n\t                    result = {\r\n\t                        intersectionPoints: pointsFromAnglesOnCircle(angles[0], circle1),\r\n\t                        path1Angles: angles[0],\r\n\t                        path2Angles: angles[1]\r\n\t                    };\r\n\t                }\r\n\t            });\r\n\t            return result;\r\n\t        };\r\n\t        map[MakerJs.pathType.Circle][MakerJs.pathType.Line] = function (circle, line, options, swapOffsets) {\r\n\t            var result = null;\r\n\t            moveTemp([circle, line], options, swapOffsets, function () {\r\n\t                var angles = lineToCircle(line, circle, options);\r\n\t                if (angles) {\r\n\t                    result = {\r\n\t                        intersectionPoints: pointsFromAnglesOnCircle(angles, circle),\r\n\t                        path1Angles: angles\r\n\t                    };\r\n\t                }\r\n\t            });\r\n\t            return result;\r\n\t        };\r\n\t        map[MakerJs.pathType.Line][MakerJs.pathType.Arc] = function (line, arc, options) {\r\n\t            var result = map[MakerJs.pathType.Arc][MakerJs.pathType.Line](arc, line, options, true);\r\n\t            if (result) {\r\n\t                return swapAngles(result);\r\n\t            }\r\n\t            return null;\r\n\t        };\r\n\t        map[MakerJs.pathType.Line][MakerJs.pathType.Circle] = function (line, circle, options) {\r\n\t            var result = map[MakerJs.pathType.Circle][MakerJs.pathType.Line](circle, line, options, true);\r\n\t            if (result) {\r\n\t                return swapAngles(result);\r\n\t            }\r\n\t            return null;\r\n\t        };\r\n\t        map[MakerJs.pathType.Line][MakerJs.pathType.Line] = function (line1, line2, options, swapOffsets) {\r\n\t            var result = null;\r\n\t            moveTemp([line1, line2], options, swapOffsets, function () {\r\n\t                var intersectionPoint = MakerJs.point.fromSlopeIntersection(line1, line2, options);\r\n\t                if (intersectionPoint) {\r\n\t                    //we have the point of intersection of endless lines, now check to see if the point is between both segemnts\r\n\t                    if (MakerJs.measure.isBetweenPoints(intersectionPoint, line1, options.excludeTangents) && MakerJs.measure.isBetweenPoints(intersectionPoint, line2, options.excludeTangents)) {\r\n\t                        result = {\r\n\t                            intersectionPoints: [intersectionPoint]\r\n\t                        };\r\n\t                    }\r\n\t                }\r\n\t            });\r\n\t            return result;\r\n\t        };\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function moveTemp(pathsToOffset, options, swapOffsets, task) {\r\n\t            var offsets = swapOffsets ? [options.path2Offset, options.path1Offset] : [options.path1Offset, options.path2Offset];\r\n\t            path.moveTemporary(pathsToOffset, offsets, task);\r\n\t        }\r\n\t        ;\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function swapAngles(result) {\r\n\t            var temp = result.path1Angles;\r\n\t            if (result.path2Angles) {\r\n\t                result.path1Angles = result.path2Angles;\r\n\t            }\r\n\t            else {\r\n\t                delete result.path1Angles;\r\n\t            }\r\n\t            if (temp) {\r\n\t                result.path2Angles = temp;\r\n\t            }\r\n\t            return result;\r\n\t        }\r\n\t        /**\r\n\t         * Find the point(s) where 2 paths intersect.\r\n\t         *\r\n\t         * @param path1 First path to find intersection.\r\n\t         * @param path2 Second path to find intersection.\r\n\t         * @param options Optional IPathIntersectionOptions.\r\n\t         * @returns IPathIntersection object, with points(s) of intersection (and angles, when a path is an arc or circle); or null if the paths did not intersect.\r\n\t         */\r\n\t        function intersection(path1, path2, options) {\r\n\t            if (options === void 0) { options = {}; }\r\n\t            if (path1 && path2) {\r\n\t                var fn = map[path1.type][path2.type];\r\n\t                if (fn) {\r\n\t                    return fn(path1, path2, options);\r\n\t                }\r\n\t            }\r\n\t            return null;\r\n\t        }\r\n\t        path.intersection = intersection;\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function findCorrespondingAngleIndex(circleAngles, arcAngle) {\r\n\t            for (var i = 0; i < circleAngles.length; i++) {\r\n\t                if (circleAngles[i][0] == arcAngle[0])\r\n\t                    return i;\r\n\t            }\r\n\t        }\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function pointsFromAnglesOnCircle(anglesInDegrees, circle) {\r\n\t            var result = [];\r\n\t            for (var i = 0; i < anglesInDegrees.length; i++) {\r\n\t                result.push(MakerJs.point.fromAngleOnCircle(anglesInDegrees[i], circle));\r\n\t            }\r\n\t            return result;\r\n\t        }\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function getAnglesWithinArc(angles, arc, options) {\r\n\t            if (!angles)\r\n\t                return null;\r\n\t            var anglesWithinArc = [];\r\n\t            for (var i = 0; i < angles.length; i++) {\r\n\t                if (MakerJs.measure.isBetweenArcAngles(angles[i], arc, options.excludeTangents)) {\r\n\t                    anglesWithinArc.push(angles[i]);\r\n\t                }\r\n\t            }\r\n\t            if (anglesWithinArc.length == 0)\r\n\t                return null;\r\n\t            return anglesWithinArc;\r\n\t        }\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function lineToCircle(line, circle, options) {\r\n\t            var radius = MakerJs.round(circle.radius);\r\n\t            //no-op for degenerate circle\r\n\t            if (circle.radius <= 0) {\r\n\t                return null;\r\n\t            }\r\n\t            //clone the line\r\n\t            var clonedLine = new MakerJs.paths.Line(MakerJs.point.subtract(line.origin, circle.origin), MakerJs.point.subtract(line.end, circle.origin));\r\n\t            //get angle of line\r\n\t            var lineAngleNormal = MakerJs.angle.ofLineInDegrees(line);\r\n\t            //use the positive horizontal angle\r\n\t            var lineAngle = (lineAngleNormal >= 180) ? lineAngleNormal - 360 : lineAngleNormal;\r\n\t            //rotate the line to horizontal\r\n\t            path.rotate(clonedLine, -lineAngle, MakerJs.point.zero());\r\n\t            //remember how to undo the rotation we just did\r\n\t            function unRotate(resultAngle) {\r\n\t                var unrotated = resultAngle + lineAngle;\r\n\t                return MakerJs.round(MakerJs.angle.noRevolutions(unrotated));\r\n\t            }\r\n\t            //line is horizontal, get the y value from any point\r\n\t            var lineY = MakerJs.round(clonedLine.origin[1]);\r\n\t            var lineYabs = Math.abs(lineY);\r\n\t            //if y is greater than radius, there is no intersection\r\n\t            if (lineYabs > radius) {\r\n\t                return null;\r\n\t            }\r\n\t            var anglesOfIntersection = [];\r\n\t            //if horizontal Y is the same as the radius, we know it's 90 degrees\r\n\t            if (lineYabs == radius) {\r\n\t                if (options.excludeTangents) {\r\n\t                    return null;\r\n\t                }\r\n\t                anglesOfIntersection.push(unRotate(lineY > 0 ? 90 : 270));\r\n\t            }\r\n\t            else {\r\n\t                function intersectionBetweenEndpoints(x, angleOfX) {\r\n\t                    if (MakerJs.measure.isBetween(MakerJs.round(x), MakerJs.round(clonedLine.origin[0]), MakerJs.round(clonedLine.end[0]), options.excludeTangents)) {\r\n\t                        anglesOfIntersection.push(unRotate(angleOfX));\r\n\t                    }\r\n\t                }\r\n\t                //find angle where line intersects\r\n\t                var intersectRadians = Math.asin(lineY / radius);\r\n\t                var intersectDegrees = MakerJs.angle.toDegrees(intersectRadians);\r\n\t                //line may intersect in 2 places\r\n\t                var intersectX = Math.cos(intersectRadians) * radius;\r\n\t                intersectionBetweenEndpoints(-intersectX, 180 - intersectDegrees);\r\n\t                intersectionBetweenEndpoints(intersectX, intersectDegrees);\r\n\t            }\r\n\t            if (anglesOfIntersection.length > 0) {\r\n\t                return anglesOfIntersection;\r\n\t            }\r\n\t            return null;\r\n\t        }\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function circleToCircle(circle1, circle2, options) {\r\n\t            //no-op if either circle is degenerate\r\n\t            if (circle1.radius <= 0 || circle2.radius <= 0) {\r\n\t                return null;\r\n\t            }\r\n\t            //see if circles are the same\r\n\t            if (circle1.radius == circle2.radius && MakerJs.measure.isPointEqual(circle1.origin, circle2.origin, .0001)) {\r\n\t                options.out_AreOverlapped = true;\r\n\t                return null;\r\n\t            }\r\n\t            //get offset from origin\r\n\t            var offset = MakerJs.point.subtract(MakerJs.point.zero(), circle1.origin);\r\n\t            //clone circle1 and move to origin\r\n\t            var c1 = new MakerJs.paths.Circle(MakerJs.point.zero(), circle1.radius);\r\n\t            //clone circle2 and move relative to circle1\r\n\t            var c2 = new MakerJs.paths.Circle(MakerJs.point.subtract(circle2.origin, circle1.origin), circle2.radius);\r\n\t            //rotate circle2 to horizontal, c2 will be to the right of the origin.\r\n\t            var c2Angle = MakerJs.angle.ofPointInDegrees(MakerJs.point.zero(), c2.origin);\r\n\t            path.rotate(c2, -c2Angle, MakerJs.point.zero());\r\n\t            function unRotate(resultAngle) {\r\n\t                var unrotated = resultAngle + c2Angle;\r\n\t                return MakerJs.angle.noRevolutions(unrotated);\r\n\t            }\r\n\t            //get X of c2 origin\r\n\t            var x = c2.origin[0];\r\n\t            //see if c2 is outside of c1\r\n\t            if (MakerJs.round(x - c2.radius) > c1.radius) {\r\n\t                return null;\r\n\t            }\r\n\t            //see if c2 is within c1\r\n\t            if (MakerJs.round(x + c2.radius) < c1.radius) {\r\n\t                return null;\r\n\t            }\r\n\t            //see if c1 is within c2\r\n\t            if (MakerJs.round(x - c2.radius) < -c1.radius) {\r\n\t                return null;\r\n\t            }\r\n\t            //see if circles are tangent interior\r\n\t            if (MakerJs.round(c2.radius - x - c1.radius) == 0) {\r\n\t                if (options.excludeTangents) {\r\n\t                    return null;\r\n\t                }\r\n\t                return [[unRotate(180)], [unRotate(180)]];\r\n\t            }\r\n\t            //see if circles are tangent exterior\r\n\t            if (MakerJs.round(x - c2.radius - c1.radius) == 0) {\r\n\t                if (options.excludeTangents) {\r\n\t                    return null;\r\n\t                }\r\n\t                return [[unRotate(0)], [unRotate(180)]];\r\n\t            }\r\n\t            function bothAngles(oneAngle) {\r\n\t                return [unRotate(oneAngle), unRotate(MakerJs.angle.mirror(oneAngle, false, true))];\r\n\t            }\r\n\t            var c1IntersectionAngle = MakerJs.solvers.solveTriangleSSS(c2.radius, c1.radius, x);\r\n\t            var c2IntersectionAngle = MakerJs.solvers.solveTriangleSSS(c1.radius, x, c2.radius);\r\n\t            return [bothAngles(c1IntersectionAngle), bothAngles(180 - c2IntersectionAngle)];\r\n\t        }\r\n\t    })(path = MakerJs.path || (MakerJs.path = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var path;\r\n\t    (function (path) {\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        var propertyNamesMap = {};\r\n\t        propertyNamesMap[MakerJs.pathType.Arc] = function (arc) {\r\n\t            return ['startAngle', 'endAngle'];\r\n\t        };\r\n\t        propertyNamesMap[MakerJs.pathType.Line] = function (line) {\r\n\t            return ['origin', 'end'];\r\n\t        };\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function getPointProperties(pathToInspect) {\r\n\t            var points = MakerJs.point.fromPathEnds(pathToInspect);\r\n\t            if (points) {\r\n\t                function pointProperty(index) {\r\n\t                    return { point: points[index], propertyName: propertyNames[index] };\r\n\t                }\r\n\t                var propertyNames = null;\r\n\t                var fn = propertyNamesMap[pathToInspect.type];\r\n\t                if (fn) {\r\n\t                    propertyNames = fn(pathToInspect);\r\n\t                    return [pointProperty(0), pointProperty(1)];\r\n\t                }\r\n\t            }\r\n\t            return null;\r\n\t        }\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function getMatchingPointProperties(pathA, pathB, options) {\r\n\t            var pathAProperties = getPointProperties(pathA);\r\n\t            var pathBProperties = getPointProperties(pathB);\r\n\t            var result = null;\r\n\t            function makeMatch(pathContext, pointProperties, index) {\r\n\t                return {\r\n\t                    path: pathContext,\r\n\t                    isStart: index == 0,\r\n\t                    propertyName: pointProperties[index].propertyName,\r\n\t                    point: pointProperties[index].point,\r\n\t                    oppositePoint: pointProperties[1 - index].point\r\n\t                };\r\n\t            }\r\n\t            function check(iA, iB) {\r\n\t                if (MakerJs.measure.isPointEqual(pathAProperties[iA].point, pathBProperties[iB].point, .0001)) {\r\n\t                    result = [\r\n\t                        makeMatch(pathA, pathAProperties, iA),\r\n\t                        makeMatch(pathB, pathBProperties, iB)\r\n\t                    ];\r\n\t                    return true;\r\n\t                }\r\n\t                return false;\r\n\t            }\r\n\t            check(0, 0) || check(0, 1) || check(1, 0) || check(1, 1);\r\n\t            return result;\r\n\t        }\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function populateShardPointsFromReferenceCircle(filletRadius, center, properties, options) {\r\n\t            var referenceCircle = new MakerJs.paths.Circle(center, filletRadius);\r\n\t            //get reference circle intersection points\r\n\t            for (var i = 0; i < 2; i++) {\r\n\t                var circleIntersection = path.intersection(referenceCircle, properties[i].path);\r\n\t                if (!circleIntersection) {\r\n\t                    return false;\r\n\t                }\r\n\t                properties[i].shardPoint = circleIntersection.intersectionPoints[0];\r\n\t                if (MakerJs.measure.isPointEqual(properties[i].point, circleIntersection.intersectionPoints[0], .0001)) {\r\n\t                    if (circleIntersection.intersectionPoints.length > 1) {\r\n\t                        properties[i].shardPoint = circleIntersection.intersectionPoints[1];\r\n\t                    }\r\n\t                    else {\r\n\t                        return false;\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            return true;\r\n\t        }\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function cloneAndBreakPath(pathToShard, shardPoint) {\r\n\t            var shardStart = path.clone(pathToShard);\r\n\t            var shardEnd = path.breakAtPoint(shardStart, shardPoint);\r\n\t            return [shardStart, shardEnd];\r\n\t        }\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        var guidePathMap = {};\r\n\t        guidePathMap[MakerJs.pathType.Arc] = function (arc, filletRadius, nearPoint, shardPoint, isStart) {\r\n\t            var guideRadius = arc.radius;\r\n\t            //see if the guideline should be external or internal to the context arc.\r\n\t            var guideArcShard = cloneAndBreakPath(arc, shardPoint)[isStart ? 0 : 1];\r\n\t            if (guideArcShard) {\r\n\t                if (MakerJs.measure.isArcConcaveTowardsPoint(guideArcShard, nearPoint)) {\r\n\t                    guideRadius -= filletRadius;\r\n\t                }\r\n\t                else {\r\n\t                    guideRadius += filletRadius;\r\n\t                }\r\n\t                if (MakerJs.round(guideRadius) <= 0)\r\n\t                    return null;\r\n\t                return new MakerJs.paths.Arc(arc.origin, guideRadius, arc.startAngle, arc.endAngle);\r\n\t            }\r\n\t            return null;\r\n\t        };\r\n\t        guidePathMap[MakerJs.pathType.Line] = function (line, filletRadius, nearPoint, shardPoint, isStart) {\r\n\t            return new MakerJs.paths.Parallel(line, filletRadius, nearPoint);\r\n\t        };\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function getGuidePath(context, filletRadius, nearPoint) {\r\n\t            var result = null;\r\n\t            var fn = guidePathMap[context.path.type];\r\n\t            if (fn) {\r\n\t                result = fn(context.path, filletRadius, nearPoint, context.shardPoint, context.isStart);\r\n\t            }\r\n\t            return result;\r\n\t        }\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        var filletResultMap = {};\r\n\t        filletResultMap[MakerJs.pathType.Arc] = function (arc, propertyName, filletRadius, filletCenter) {\r\n\t            var guideLine = new MakerJs.paths.Line(arc.origin, filletCenter);\r\n\t            var guideLineAngle = MakerJs.angle.ofLineInDegrees(guideLine);\r\n\t            var filletAngle = guideLineAngle;\r\n\t            //the context is an arc and the fillet is an arc so they will be tangent. If the fillet is external to the arc then the tangent is opposite.\r\n\t            if (!MakerJs.measure.isArcConcaveTowardsPoint(arc, filletCenter)) {\r\n\t                filletAngle += 180;\r\n\t            }\r\n\t            return {\r\n\t                filletAngle: MakerJs.angle.noRevolutions(filletAngle),\r\n\t                clipPath: function () {\r\n\t                    arc[propertyName] = guideLineAngle;\r\n\t                }\r\n\t            };\r\n\t        };\r\n\t        filletResultMap[MakerJs.pathType.Line] = function (line, propertyName, filletRadius, filletCenter) {\r\n\t            //make a small vertical line\r\n\t            var guideLine = new MakerJs.paths.Line([0, 0], [0, 1]);\r\n\t            //rotate this vertical line the same angle as the line context. It will be perpendicular.\r\n\t            var lineAngle = MakerJs.angle.ofLineInDegrees(line);\r\n\t            path.rotate(guideLine, lineAngle, [0, 0]);\r\n\t            path.moveRelative(guideLine, filletCenter);\r\n\t            //get the intersection point of the slopes of the context line and the perpendicular line. This is where the fillet meets the line.\r\n\t            var intersectionPoint = MakerJs.point.fromSlopeIntersection(line, guideLine);\r\n\t            if (intersectionPoint) {\r\n\t                return {\r\n\t                    filletAngle: MakerJs.angle.ofPointInDegrees(filletCenter, intersectionPoint),\r\n\t                    clipPath: function () {\r\n\t                        line[propertyName] = intersectionPoint;\r\n\t                    }\r\n\t                };\r\n\t            }\r\n\t            return null;\r\n\t        };\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function getFilletResult(context, filletRadius, filletCenter) {\r\n\t            var result = null;\r\n\t            var fn = filletResultMap[context.path.type];\r\n\t            if (fn) {\r\n\t                result = fn(context.path, context.propertyName, filletRadius, filletCenter);\r\n\t            }\r\n\t            if (!testFilletResult(context, result)) {\r\n\t                result = null;\r\n\t            }\r\n\t            return result;\r\n\t        }\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function getDogboneResult(context, filletCenter) {\r\n\t            var result = {\r\n\t                filletAngle: MakerJs.angle.ofPointInDegrees(filletCenter, context.shardPoint),\r\n\t                clipPath: function () {\r\n\t                    context.path[context.propertyName] = context.shardPoint;\r\n\t                }\r\n\t            };\r\n\t            if (!testFilletResult(context, result)) {\r\n\t                result = null;\r\n\t            }\r\n\t            return result;\r\n\t        }\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function testFilletResult(context, result) {\r\n\t            var test = false;\r\n\t            if (result) {\r\n\t                //temporarily clip the path.\r\n\t                var originalValue = context.path[context.propertyName];\r\n\t                result.clipPath();\r\n\t                //don't allow a fillet which effectivly eliminates the path.\r\n\t                if (MakerJs.measure.pathLength(context.path) > 0) {\r\n\t                    test = true;\r\n\t                }\r\n\t                //revert the clipping we just did.\r\n\t                context.path[context.propertyName] = originalValue;\r\n\t            }\r\n\t            return test;\r\n\t        }\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function getLineRatio(lines) {\r\n\t            var totalLength = 0;\r\n\t            var lengths = [];\r\n\t            for (var i = 0; i < lines.length; i++) {\r\n\t                var length = MakerJs.measure.pathLength(lines[i]);\r\n\t                lengths.push(length);\r\n\t                totalLength += length;\r\n\t            }\r\n\t            return lengths[0] / totalLength;\r\n\t        }\r\n\t        /**\r\n\t         * Adds a round corner to the outside angle between 2 lines. The lines must meet at one point.\r\n\t         *\r\n\t         * @param lineA First line to fillet, which will be modified to fit the fillet.\r\n\t         * @param lineB Second line to fillet, which will be modified to fit the fillet.\r\n\t         * @returns Arc path object of the new fillet.\r\n\t         */\r\n\t        function dogbone(lineA, lineB, filletRadius, options) {\r\n\t            if (MakerJs.isPathLine(lineA) && MakerJs.isPathLine(lineB) && filletRadius && filletRadius > 0) {\r\n\t                var opts = {\r\n\t                    pointMatchingDistance: .005\r\n\t                };\r\n\t                MakerJs.extendObject(opts, options);\r\n\t                //first find the common point\r\n\t                var commonProperty = getMatchingPointProperties(lineA, lineB, options);\r\n\t                if (commonProperty) {\r\n\t                    //get the ratio comparison of the two lines\r\n\t                    var ratio = getLineRatio([lineA, lineB]);\r\n\t                    //draw a line between the two endpoints, and get the bisection point at the ratio\r\n\t                    var span = new MakerJs.paths.Line(commonProperty[0].oppositePoint, commonProperty[1].oppositePoint);\r\n\t                    var midRatioPoint = MakerJs.point.middle(span, ratio);\r\n\t                    //use the bisection theorem to get the angle bisecting the lines\r\n\t                    var bisectionAngle = MakerJs.angle.ofPointInDegrees(commonProperty[0].point, midRatioPoint);\r\n\t                    var center = MakerJs.point.add(commonProperty[0].point, MakerJs.point.fromPolar(MakerJs.angle.toRadians(bisectionAngle), filletRadius));\r\n\t                    if (!populateShardPointsFromReferenceCircle(filletRadius, center, commonProperty, opts)) {\r\n\t                        return null;\r\n\t                    }\r\n\t                    //get the angles of the fillet and a function which clips the path to the fillet.\r\n\t                    var results = [];\r\n\t                    for (var i = 0; i < 2; i++) {\r\n\t                        var result = getDogboneResult(commonProperty[i], center);\r\n\t                        if (!result) {\r\n\t                            return null;\r\n\t                        }\r\n\t                        results.push(result);\r\n\t                    }\r\n\t                    var filletArc = new MakerJs.paths.Arc(center, filletRadius, results[0].filletAngle, results[1].filletAngle);\r\n\t                    //make sure midpoint of fillet is outside of the angle\r\n\t                    if (MakerJs.round(MakerJs.angle.noRevolutions(MakerJs.angle.ofArcMiddle(filletArc))) == MakerJs.round(bisectionAngle)) {\r\n\t                        filletArc.startAngle = results[1].filletAngle;\r\n\t                        filletArc.endAngle = results[0].filletAngle;\r\n\t                    }\r\n\t                    //clip the paths and return the fillet arc.\r\n\t                    results[0].clipPath();\r\n\t                    results[1].clipPath();\r\n\t                    return filletArc;\r\n\t                }\r\n\t            }\r\n\t            return null;\r\n\t        }\r\n\t        path.dogbone = dogbone;\r\n\t        /**\r\n\t         * Adds a round corner to the inside angle between 2 paths. The paths must meet at one point.\r\n\t         *\r\n\t         * @param pathA First path to fillet, which will be modified to fit the fillet.\r\n\t         * @param pathB Second path to fillet, which will be modified to fit the fillet.\r\n\t         * @param filletRadius Radius of the fillet.\r\n\t         * @param options Optional IPointMatchOptions object to specify pointMatchingDistance.\r\n\t         * @returns Arc path object of the new fillet.\r\n\t         */\r\n\t        function fillet(pathA, pathB, filletRadius, options) {\r\n\t            if (pathA && pathB && filletRadius && filletRadius > 0) {\r\n\t                var opts = {\r\n\t                    pointMatchingDistance: .005\r\n\t                };\r\n\t                MakerJs.extendObject(opts, options);\r\n\t                //first find the common point\r\n\t                var commonProperty = getMatchingPointProperties(pathA, pathB, options);\r\n\t                if (commonProperty) {\r\n\t                    //since arcs can curl beyond, we need a local reference point. \r\n\t                    //An intersection with a circle of the same radius as the desired fillet should suffice.\r\n\t                    if (!populateShardPointsFromReferenceCircle(filletRadius, commonProperty[0].point, commonProperty, opts)) {\r\n\t                        return null;\r\n\t                    }\r\n\t                    //get \"parallel\" guidelines\r\n\t                    var guidePaths = [];\r\n\t                    for (var i = 0; i < 2; i++) {\r\n\t                        var otherPathShardPoint = commonProperty[1 - i].shardPoint;\r\n\t                        if (!otherPathShardPoint) {\r\n\t                            return null;\r\n\t                        }\r\n\t                        var guidePath = getGuidePath(commonProperty[i], filletRadius, otherPathShardPoint);\r\n\t                        guidePaths.push(guidePath);\r\n\t                    }\r\n\t                    //the center of the fillet is the point where the guidelines intersect.\r\n\t                    var intersectionPoint = path.intersection(guidePaths[0], guidePaths[1]);\r\n\t                    if (intersectionPoint) {\r\n\t                        var center;\r\n\t                        //if guidelines intersect in more than one place, choose the closest one.\r\n\t                        if (intersectionPoint.intersectionPoints.length == 1) {\r\n\t                            center = intersectionPoint.intersectionPoints[0];\r\n\t                        }\r\n\t                        else {\r\n\t                            center = MakerJs.point.closest(commonProperty[0].point, intersectionPoint.intersectionPoints);\r\n\t                        }\r\n\t                        //get the angles of the fillet and a function which clips the path to the fillet.\r\n\t                        var results = [];\r\n\t                        for (var i = 0; i < 2; i++) {\r\n\t                            var result = getFilletResult(commonProperty[i], filletRadius, center);\r\n\t                            if (!result) {\r\n\t                                return null;\r\n\t                            }\r\n\t                            results.push(result);\r\n\t                        }\r\n\t                        //the two paths may actually be on the same line\r\n\t                        if (MakerJs.round(results[0].filletAngle - results[1].filletAngle) == 0)\r\n\t                            return null;\r\n\t                        var filletArc = new MakerJs.paths.Arc(center, filletRadius, results[0].filletAngle, results[1].filletAngle);\r\n\t                        var filletSpan = MakerJs.angle.ofArcSpan(filletArc);\r\n\t                        //the algorithm is only valid for fillet less than 180 degrees\r\n\t                        if (filletSpan == 180) {\r\n\t                            return null;\r\n\t                        }\r\n\t                        if (filletSpan > 180) {\r\n\t                            //swap to make smallest angle\r\n\t                            filletArc.startAngle = results[1].filletAngle;\r\n\t                            filletArc.endAngle = results[0].filletAngle;\r\n\t                        }\r\n\t                        //clip the paths and return the fillet arc.\r\n\t                        results[0].clipPath();\r\n\t                        results[1].clipPath();\r\n\t                        return filletArc;\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            return null;\r\n\t        }\r\n\t        path.fillet = fillet;\r\n\t    })(path = MakerJs.path || (MakerJs.path = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\t(function (MakerJs) {\r\n\t    var chain;\r\n\t    (function (chain) {\r\n\t        /**\r\n\t         * Adds a fillet between each link in a chain. Each path will be cropped to fit a fillet, and all fillets will be returned as paths in a returned model object.\r\n\t         *\r\n\t         * @param chainToFillet The chain to add fillets to.\r\n\t         * @param filletRadius Radius of the fillet.\r\n\t         * @returns Model object containing paths which fillet the joints in the chain.\r\n\t         */\r\n\t        function fillet(chainToFillet, filletRadius) {\r\n\t            var result = { paths: {} };\r\n\t            var added = 0;\r\n\t            var links = chainToFillet.links;\r\n\t            function add(i1, i2) {\r\n\t                var f = MakerJs.path.fillet(links[i1].walkedPath.pathContext, links[i2].walkedPath.pathContext, filletRadius);\r\n\t                if (f) {\r\n\t                    result.paths['fillet' + added] = f;\r\n\t                    added++;\r\n\t                }\r\n\t            }\r\n\t            for (var i = 1; i < links.length; i++) {\r\n\t                add(i - 1, i);\r\n\t            }\r\n\t            if (chainToFillet.endless) {\r\n\t                add(i - 1, 0);\r\n\t            }\r\n\t            if (!added)\r\n\t                return null;\r\n\t            return result;\r\n\t        }\r\n\t        chain.fillet = fillet;\r\n\t    })(chain = MakerJs.chain || (MakerJs.chain = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var kit;\r\n\t    (function (kit) {\r\n\t        //construct a model\r\n\t        /**\r\n\t         * Helper function to use the JavaScript \"apply\" function in conjunction with the \"new\" keyword.\r\n\t         *\r\n\t         * @param ctor The constructor for the class which is an IKit.\r\n\t         * @param args The array of parameters passed to the constructor.\r\n\t         * @returns A new instance of the class, which implements the IModel interface.\r\n\t         */\r\n\t        function construct(ctor, args) {\r\n\t            function F() {\r\n\t                return ctor.apply(this, args);\r\n\t            }\r\n\t            F.prototype = ctor.prototype;\r\n\t            return new F();\r\n\t        }\r\n\t        kit.construct = construct;\r\n\t        /**\r\n\t         * Extract just the initial sample values from a kit.\r\n\t         *\r\n\t         * @param ctor The constructor for the class which is an IKit.\r\n\t         * @returns Array of the inital sample values provided in the metaParameters array.\r\n\t         */\r\n\t        function getParameterValues(ctor) {\r\n\t            var parameters = [];\r\n\t            var metaParams = ctor.metaParameters;\r\n\t            if (metaParams) {\r\n\t                for (var i = 0; i < metaParams.length; i++) {\r\n\t                    var value = metaParams[i].value;\r\n\t                    if (Array.isArray(value)) {\r\n\t                        value = value[0];\r\n\t                    }\r\n\t                    parameters.push(value);\r\n\t                }\r\n\t            }\r\n\t            return parameters;\r\n\t        }\r\n\t        kit.getParameterValues = getParameterValues;\r\n\t    })(kit = MakerJs.kit || (MakerJs.kit = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var model;\r\n\t    (function (model) {\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function getOpposedLink(linkedPaths, pathContext) {\r\n\t            if (linkedPaths[0].walkedPath.pathContext === pathContext) {\r\n\t                return linkedPaths[1];\r\n\t            }\r\n\t            return linkedPaths[0];\r\n\t        }\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function followLinks(connections, chainFound, chainNotFound) {\r\n\t            function followLink(currLink, chain, firstLink) {\r\n\t                while (currLink) {\r\n\t                    chain.links.push(currLink);\r\n\t                    chain.pathLength += currLink.pathLength;\r\n\t                    var next = currLink.reversed ? 0 : 1;\r\n\t                    var nextPoint = currLink.endPoints[next];\r\n\t                    var items = connections.findCollection(nextPoint);\r\n\t                    if (!items || items.length === 0) {\r\n\t                        break;\r\n\t                    }\r\n\t                    var nextLink = getOpposedLink(items, currLink.walkedPath.pathContext);\r\n\t                    //remove the first 2 items, which should be currlink and nextlink\r\n\t                    items.splice(0, 2);\r\n\t                    if (!nextLink) {\r\n\t                        break;\r\n\t                    }\r\n\t                    if (nextLink.walkedPath.pathContext === firstLink.walkedPath.pathContext) {\r\n\t                        chain.endless = true;\r\n\t                        break;\r\n\t                    }\r\n\t                    currLink = nextLink;\r\n\t                }\r\n\t            }\r\n\t            for (var i = 0; i < connections.collections.length; i++) {\r\n\t                var linkedPaths = connections.collections[i].items;\r\n\t                if (linkedPaths && linkedPaths.length > 0) {\r\n\t                    var chain = {\r\n\t                        links: [],\r\n\t                        pathLength: 0\r\n\t                    };\r\n\t                    followLink(linkedPaths[0], chain, linkedPaths[0]);\r\n\t                    if (chain.endless) {\r\n\t                        chainFound(chain);\r\n\t                    }\r\n\t                    else {\r\n\t                        //need to go in reverse\r\n\t                        chain.links.reverse();\r\n\t                        var firstLink = chain.links[0];\r\n\t                        chain.links.map(function (link) { link.reversed = !link.reversed; });\r\n\t                        //remove the last link, it will be added in the call\r\n\t                        chain.pathLength -= chain.links[chain.links.length - 1].pathLength;\r\n\t                        var currLink = chain.links.pop();\r\n\t                        followLink(currLink, chain, firstLink);\r\n\t                        if (chain.links.length > 1) {\r\n\t                            chainFound(chain);\r\n\t                        }\r\n\t                        else {\r\n\t                            chainNotFound(chain.links[0].walkedPath);\r\n\t                        }\r\n\t                    }\r\n\t                    //if there were more than 2 paths on this point, follow those too.\r\n\t                    if (linkedPaths.length > 0) {\r\n\t                        i--;\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        /**\r\n\t         * Find a single chain within a model, across all layers. Shorthand of findChains; useful when you know there is only one chain to find in your model.\r\n\t         *\r\n\t         * @param modelContext The model to search for a chain.\r\n\t         * @returns A chain object or null if chains were not found.\r\n\t         */\r\n\t        function findSingleChain(modelContext) {\r\n\t            var singleChain = null;\r\n\t            findChains(modelContext, function (chains, loose, layer) {\r\n\t                singleChain = chains[0];\r\n\t            }, { byLayers: false });\r\n\t            return singleChain;\r\n\t        }\r\n\t        model.findSingleChain = findSingleChain;\r\n\t        /**\r\n\t         * Find paths that have common endpoints and form chains.\r\n\t         *\r\n\t         * @param modelContext The model to search for chains.\r\n\t         * @param options Optional options object.\r\n\t         */\r\n\t        function findChains(modelContext, callback, options) {\r\n\t            var opts = {\r\n\t                pointMatchingDistance: .005\r\n\t            };\r\n\t            MakerJs.extendObject(opts, options);\r\n\t            function comparePoint(pointA, pointB) {\r\n\t                var distance = MakerJs.measure.pointDistance(pointA, pointB);\r\n\t                return distance <= opts.pointMatchingDistance;\r\n\t            }\r\n\t            var connectionMap = {};\r\n\t            var chainsByLayer = {};\r\n\t            var ignored = {};\r\n\t            var walkOptions = {\r\n\t                onPath: function (walkedPath) {\r\n\t                    var layer = opts.byLayers ? walkedPath.layer : '';\r\n\t                    if (!connectionMap[layer]) {\r\n\t                        connectionMap[layer] = new MakerJs.Collector(comparePoint);\r\n\t                    }\r\n\t                    var connections = connectionMap[layer];\r\n\t                    var pathLength = MakerJs.measure.pathLength(walkedPath.pathContext);\r\n\t                    //circles are loops by nature\r\n\t                    if (walkedPath.pathContext.type === MakerJs.pathType.Circle ||\r\n\t                        (walkedPath.pathContext.type === MakerJs.pathType.Arc && MakerJs.round(MakerJs.angle.ofArcSpan(walkedPath.pathContext) - 360) === 0) ||\r\n\t                        (walkedPath.pathContext.type === MakerJs.pathType.BezierSeed && MakerJs.measure.isPointEqual(walkedPath.pathContext.origin, walkedPath.pathContext.end, opts.pointMatchingDistance))) {\r\n\t                        var chain = {\r\n\t                            links: [{\r\n\t                                    walkedPath: walkedPath,\r\n\t                                    reversed: null,\r\n\t                                    endPoints: null,\r\n\t                                    pathLength: pathLength\r\n\t                                }],\r\n\t                            endless: true,\r\n\t                            pathLength: pathLength\r\n\t                        };\r\n\t                        //store circles so that layers fire grouped\r\n\t                        if (!chainsByLayer[layer]) {\r\n\t                            chainsByLayer[layer] = [];\r\n\t                        }\r\n\t                        chainsByLayer[layer].push(chain);\r\n\t                    }\r\n\t                    else {\r\n\t                        //don't add lines which are shorter than the tolerance\r\n\t                        if (pathLength < opts.pointMatchingDistance) {\r\n\t                            if (!ignored[layer]) {\r\n\t                                ignored[layer] = [];\r\n\t                            }\r\n\t                            ignored[layer].push(walkedPath);\r\n\t                            return;\r\n\t                        }\r\n\t                        //gather both endpoints from all non-circle segments\r\n\t                        var endPoints = MakerJs.point.fromPathEnds(walkedPath.pathContext, walkedPath.offset);\r\n\t                        for (var i = 0; i < 2; i++) {\r\n\t                            var link = {\r\n\t                                walkedPath: walkedPath,\r\n\t                                endPoints: endPoints,\r\n\t                                reversed: i != 0,\r\n\t                                pathLength: pathLength\r\n\t                            };\r\n\t                            connections.addItemToCollection(endPoints[i], link);\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t            };\r\n\t            if (opts.shallow) {\r\n\t                walkOptions.beforeChildWalk = function () { return false; };\r\n\t            }\r\n\t            model.walk(modelContext, walkOptions);\r\n\t            for (var layer in connectionMap) {\r\n\t                var connections = connectionMap[layer];\r\n\t                var loose = [];\r\n\t                if (!chainsByLayer[layer]) {\r\n\t                    chainsByLayer[layer] = [];\r\n\t                }\r\n\t                //follow paths to find loops\r\n\t                followLinks(connections, function (chain) {\r\n\t                    chainsByLayer[layer].push(chain);\r\n\t                }, function (walkedPath) {\r\n\t                    loose.push(walkedPath);\r\n\t                });\r\n\t                //sort to return largest chains first\r\n\t                chainsByLayer[layer].sort(function (a, b) { return b.pathLength - a.pathLength; });\r\n\t                callback(chainsByLayer[layer], loose, layer, ignored[layer]);\r\n\t            }\r\n\t        }\r\n\t        model.findChains = findChains;\r\n\t    })(model = MakerJs.model || (MakerJs.model = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\t(function (MakerJs) {\r\n\t    var chain;\r\n\t    (function (chain) {\r\n\t        /**\r\n\t         * Shift the links of an endless chain.\r\n\t         *\r\n\t         * @param chainContext Chain to cycle through. Must be endless.\r\n\t         * @param amount Optional number of links to shift. May be negative to cycle backwards.\r\n\t         * @returns The chainContext for cascading.\r\n\t         */\r\n\t        function cycle(chainContext, amount) {\r\n\t            if (amount === void 0) { amount = 1; }\r\n\t            if (!chainContext.endless)\r\n\t                return;\r\n\t            var n = Math.abs(amount);\r\n\t            for (var i = 0; i < n; i++) {\r\n\t                if (amount < 0) {\r\n\t                    //remove from beginning, add to end\r\n\t                    chainContext.links.push(chainContext.links.shift());\r\n\t                }\r\n\t                else {\r\n\t                    //remove from end, add to beginning\r\n\t                    chainContext.links.unshift(chainContext.links.pop());\r\n\t                }\r\n\t            }\r\n\t            return chainContext;\r\n\t        }\r\n\t        chain.cycle = cycle;\r\n\t        /**\r\n\t         * Reverse the links of a chain.\r\n\t         *\r\n\t         * @param chainContext Chain to reverse.\r\n\t         * @returns The chainContext for cascading.\r\n\t         */\r\n\t        function reverse(chainContext) {\r\n\t            chainContext.links.reverse();\r\n\t            chainContext.links.forEach(function (link) { return link.reversed = !link.reversed; });\r\n\t            return chainContext;\r\n\t        }\r\n\t        chain.reverse = reverse;\r\n\t        /**\r\n\t         * Set the beginning of an endless chain to a known routeKey of a path.\r\n\t         *\r\n\t         * @param chainContext Chain to cycle through. Must be endless.\r\n\t         * @param routeKey RouteKey of the desired path to start the chain with.\r\n\t         * @returns The chainContext for cascading.\r\n\t         */\r\n\t        function startAt(chainContext, routeKey) {\r\n\t            if (!chainContext.endless)\r\n\t                return;\r\n\t            var index = -1;\r\n\t            for (var i = 0; i < chainContext.links.length; i++) {\r\n\t                if (chainContext.links[i].walkedPath.routeKey == routeKey) {\r\n\t                    index = i;\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\t            if (index > 0) {\r\n\t                cycle(chainContext, index);\r\n\t            }\r\n\t            return chainContext;\r\n\t        }\r\n\t        chain.startAt = startAt;\r\n\t        /**\r\n\t         * Convert a chain to a new model, independent of any model from where the chain was found.\r\n\t         *\r\n\t         * @param chainContext Chain to convert to a model.\r\n\t         * @param detachFromOldModel Flag to remove the chain's paths from their current parent model. If false, each path will be cloned. If true, the original path will be re-parented into the resulting new model. Default is false.\r\n\t         * @returns A new model containing paths from the chain.\r\n\t         */\r\n\t        function toNewModel(chainContext, detachFromOldModel) {\r\n\t            if (detachFromOldModel === void 0) { detachFromOldModel = false; }\r\n\t            var result = { paths: {} };\r\n\t            for (var i = 0; i < chainContext.links.length; i++) {\r\n\t                var wp = chainContext.links[i].walkedPath;\r\n\t                var id = MakerJs.model.getSimilarPathId(result, wp.pathId);\r\n\t                var newPath;\r\n\t                if (detachFromOldModel) {\r\n\t                    newPath = wp.pathContext;\r\n\t                    delete wp.modelContext.paths[wp.pathId];\r\n\t                }\r\n\t                else {\r\n\t                    newPath = MakerJs.path.clone(wp.pathContext);\r\n\t                }\r\n\t                result.paths[id] = MakerJs.path.moveRelative(newPath, wp.offset);\r\n\t            }\r\n\t            return result;\r\n\t        }\r\n\t        chain.toNewModel = toNewModel;\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function removeDuplicateEnds(endless, points) {\r\n\t            if (!endless || points.length < 2)\r\n\t                return;\r\n\t            if (MakerJs.measure.isPointEqual(points[0], points[points.length - 1], .00001)) {\r\n\t                points.pop();\r\n\t            }\r\n\t        }\r\n\t        /**\r\n\t         * Get points along a chain of paths.\r\n\t         *\r\n\t         * @param chainContext Chain of paths to get points from.\r\n\t         * @param distance Numeric distance along the chain between points, or numeric array of distances along the chain between each point.\r\n\t         * @param maxPoints Maximum number of points to retrieve.\r\n\t         * @returns Array of points which are on the chain spread at a uniform interval.\r\n\t         */\r\n\t        function toPoints(chainContext, distanceOrDistances, maxPoints) {\r\n\t            var result = [];\r\n\t            var di = 0;\r\n\t            var t = 0;\r\n\t            var distanceArray;\r\n\t            if (Array.isArray(distanceOrDistances)) {\r\n\t                distanceArray = distanceOrDistances;\r\n\t            }\r\n\t            for (var i = 0; i < chainContext.links.length; i++) {\r\n\t                var link = chainContext.links[i];\r\n\t                var wp = link.walkedPath;\r\n\t                var len = link.pathLength;\r\n\t                while (MakerJs.round(len - t) > 0) {\r\n\t                    var r = t / len;\r\n\t                    if (link.reversed) {\r\n\t                        r = 1 - r;\r\n\t                    }\r\n\t                    result.push(MakerJs.point.add(MakerJs.point.middle(wp.pathContext, r), wp.offset));\r\n\t                    if (maxPoints && result.length >= maxPoints)\r\n\t                        return result;\r\n\t                    var distance;\r\n\t                    if (distanceArray) {\r\n\t                        distance = distanceArray[di];\r\n\t                        di++;\r\n\t                        if (di > distanceArray.length) {\r\n\t                            return result;\r\n\t                        }\r\n\t                    }\r\n\t                    else {\r\n\t                        distance = distanceOrDistances;\r\n\t                    }\r\n\t                    t += distance;\r\n\t                }\r\n\t                t -= len;\r\n\t            }\r\n\t            removeDuplicateEnds(chainContext.endless, result);\r\n\t            return result;\r\n\t        }\r\n\t        chain.toPoints = toPoints;\r\n\t        /**\r\n\t         * Get key points (a minimal a number of points) along a chain of paths.\r\n\t         *\r\n\t         * @param chainContext Chain of paths to get points from.\r\n\t         * @param maxArcFacet The maximum length between points on an arc or circle.\r\n\t         * @returns Array of points which are on the chain.\r\n\t         */\r\n\t        function toKeyPoints(chainContext, maxArcFacet) {\r\n\t            var result = [];\r\n\t            for (var i = 0; i < chainContext.links.length; i++) {\r\n\t                var link = chainContext.links[i];\r\n\t                var wp = link.walkedPath;\r\n\t                var keyPoints = MakerJs.path.toKeyPoints(wp.pathContext, maxArcFacet);\r\n\t                if (keyPoints.length > 0) {\r\n\t                    if (link.reversed) {\r\n\t                        keyPoints.reverse();\r\n\t                    }\r\n\t                    if (i > 0) {\r\n\t                        keyPoints.shift();\r\n\t                    }\r\n\t                    var offsetPathPoints = keyPoints.map(function (p) { return MakerJs.point.add(p, wp.offset); });\r\n\t                    result.push.apply(result, offsetPathPoints);\r\n\t                }\r\n\t            }\r\n\t            removeDuplicateEnds(chainContext.endless, result);\r\n\t            return result;\r\n\t        }\r\n\t        chain.toKeyPoints = toKeyPoints;\r\n\t    })(chain = MakerJs.chain || (MakerJs.chain = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var model;\r\n\t    (function (model) {\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function getOpposedLink(linkedPaths, pathContext) {\r\n\t            if (linkedPaths[0].path === pathContext) {\r\n\t                return linkedPaths[1];\r\n\t            }\r\n\t            return linkedPaths[0];\r\n\t        }\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function getFirstPathFromModel(modelContext) {\r\n\t            if (!modelContext.paths)\r\n\t                return null;\r\n\t            for (var pathId in modelContext.paths) {\r\n\t                return modelContext.paths[pathId];\r\n\t            }\r\n\t            return null;\r\n\t        }\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function collectLoop(loop, loops, detach) {\r\n\t            loops.push(loop);\r\n\t            if (detach) {\r\n\t                detachLoop(loop);\r\n\t            }\r\n\t        }\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function follow(connections, loops, detach) {\r\n\t            //for a given point, follow the paths that connect to each other to form loops\r\n\t            for (var i = 0; i < connections.collections.length; i++) {\r\n\t                var linkedPaths = connections.collections[i].items;\r\n\t                if (linkedPaths && linkedPaths.length > 0) {\r\n\t                    var loopModel = {\r\n\t                        paths: {},\r\n\t                        insideCount: 0\r\n\t                    };\r\n\t                    var firstLink = linkedPaths[0];\r\n\t                    var currLink = firstLink;\r\n\t                    while (true) {\r\n\t                        var currPath = currLink.path;\r\n\t                        currPath.reversed = currLink.reversed;\r\n\t                        var id = model.getSimilarPathId(loopModel, currPath.pathId);\r\n\t                        loopModel.paths[id] = currPath;\r\n\t                        var items = connections.findCollection(currLink.nextConnection);\r\n\t                        if (!items || items.length == 0)\r\n\t                            break;\r\n\t                        var nextLink = getOpposedLink(items, currLink.path);\r\n\t                        //remove the first 2 items, which should be currlink and nextlink\r\n\t                        items.splice(0, 2);\r\n\t                        if (!nextLink)\r\n\t                            break;\r\n\t                        currLink = nextLink;\r\n\t                        if (currLink.path === firstLink.path) {\r\n\t                            //loop is closed\r\n\t                            collectLoop(loopModel, loops, detach);\r\n\t                            break;\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        /**\r\n\t         * Find paths that have common endpoints and form loops.\r\n\t         *\r\n\t         * @param modelContext The model to search for loops.\r\n\t         * @param options Optional options object.\r\n\t         * @returns A new model with child models ranked according to their containment within other found loops. The paths of models will be IPathDirectionalWithPrimeContext.\r\n\t         */\r\n\t        function findLoops(modelContext, options) {\r\n\t            var loops = [];\r\n\t            var result = { models: {} };\r\n\t            var opts = {\r\n\t                pointMatchingDistance: .005\r\n\t            };\r\n\t            MakerJs.extendObject(opts, options);\r\n\t            function spin(callback) {\r\n\t                for (var i = 0; i < loops.length; i++) {\r\n\t                    callback(loops[i]);\r\n\t                }\r\n\t            }\r\n\t            function getModelByDepth(depth) {\r\n\t                var id = depth.toString();\r\n\t                if (!(id in result.models)) {\r\n\t                    var newModel = { models: {} };\r\n\t                    result.models[id] = newModel;\r\n\t                }\r\n\t                return result.models[id];\r\n\t            }\r\n\t            function comparePoint(pointA, pointB) {\r\n\t                var distance = MakerJs.measure.pointDistance(pointA, pointB);\r\n\t                return distance <= opts.pointMatchingDistance;\r\n\t            }\r\n\t            var connections = new MakerJs.Collector(comparePoint);\r\n\t            //todo: remove dead ends first\r\n\t            model.originate(modelContext);\r\n\t            //find loops by looking at all paths in this model\r\n\t            var walkOptions = {\r\n\t                onPath: function (walkedPath) {\r\n\t                    var safePath = MakerJs.path.clone(walkedPath.pathContext);\r\n\t                    safePath.pathId = walkedPath.pathId;\r\n\t                    safePath.modelContext = modelContext;\r\n\t                    //circles are loops by nature\r\n\t                    if (safePath.type == MakerJs.pathType.Circle || (safePath.type == MakerJs.pathType.Arc && MakerJs.angle.ofArcSpan(walkedPath.pathContext) == 360)) {\r\n\t                        var loopModel = {\r\n\t                            paths: {},\r\n\t                            insideCount: 0\r\n\t                        };\r\n\t                        loopModel.paths[walkedPath.pathId] = safePath;\r\n\t                        collectLoop(loopModel, loops, opts.removeFromOriginal);\r\n\t                    }\r\n\t                    else {\r\n\t                        //gather both endpoints from all non-circle segments\r\n\t                        safePath.endPoints = MakerJs.point.fromPathEnds(safePath);\r\n\t                        //don't add lines which are shorter than the tolerance\r\n\t                        if (safePath.type == MakerJs.pathType.Line) {\r\n\t                            var distance = MakerJs.measure.pointDistance(safePath.endPoints[0], safePath.endPoints[1]);\r\n\t                            if (distance < opts.pointMatchingDistance) {\r\n\t                                return;\r\n\t                            }\r\n\t                        }\r\n\t                        for (var i = 2; i--;) {\r\n\t                            var linkedPath = {\r\n\t                                path: safePath,\r\n\t                                nextConnection: safePath.endPoints[1 - i],\r\n\t                                reversed: i != 0\r\n\t                            };\r\n\t                            connections.addItemToCollection(safePath.endPoints[i], linkedPath);\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t            };\r\n\t            model.walk(modelContext, walkOptions);\r\n\t            //follow paths to find loops\r\n\t            follow(connections, loops, opts.removeFromOriginal);\r\n\t            //now we have all loops, we need to see which are inside of each other\r\n\t            spin(function (firstLoop) {\r\n\t                var firstPath = getFirstPathFromModel(firstLoop);\r\n\t                if (!firstPath)\r\n\t                    return;\r\n\t                spin(function (secondLoop) {\r\n\t                    if (firstLoop === secondLoop)\r\n\t                        return;\r\n\t                    if (model.isPathInsideModel(firstPath, secondLoop)) {\r\n\t                        firstLoop.insideCount++;\r\n\t                    }\r\n\t                });\r\n\t            });\r\n\t            //now we can group similar loops by their nested level\r\n\t            spin(function (loop) {\r\n\t                var depthModel = getModelByDepth(loop.insideCount);\r\n\t                var id = model.countChildModels(depthModel).toString();\r\n\t                delete loop.insideCount;\r\n\t                depthModel.models[id] = loop;\r\n\t            });\r\n\t            return result;\r\n\t        }\r\n\t        model.findLoops = findLoops;\r\n\t        /**\r\n\t         * Remove all paths in a loop model from the model(s) which contained them.\r\n\t         *\r\n\t         * @param loopToDetach The model to search for loops.\r\n\t         */\r\n\t        function detachLoop(loopToDetach) {\r\n\t            for (var id in loopToDetach.paths) {\r\n\t                var pathDirectionalWithOriginalContext = loopToDetach.paths[id];\r\n\t                var primeModel = pathDirectionalWithOriginalContext.modelContext;\r\n\t                if (primeModel && primeModel.paths && pathDirectionalWithOriginalContext.pathId) {\r\n\t                    delete primeModel.paths[pathDirectionalWithOriginalContext.pathId];\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        model.detachLoop = detachLoop;\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        var DeadEndFinder = (function () {\r\n\t            function DeadEndFinder(pointMatchingDistance, keep, trackDeleted) {\r\n\t                this.pointMatchingDistance = pointMatchingDistance;\r\n\t                this.keep = keep;\r\n\t                this.trackDeleted = trackDeleted;\r\n\t                pointMatchingDistance = pointMatchingDistance || .005;\r\n\t                function comparePoint(pointA, pointB) {\r\n\t                    var distance = MakerJs.measure.pointDistance(pointA, pointB);\r\n\t                    return distance <= pointMatchingDistance;\r\n\t                }\r\n\t                this.pointMap = new MakerJs.Collector(comparePoint);\r\n\t            }\r\n\t            DeadEndFinder.prototype.removePathRef = function (pathRef, reason) {\r\n\t                var _this = this;\r\n\t                var removePath = function (p) {\r\n\t                    var pathRefs = _this.pointMap.findCollection(p);\r\n\t                    for (var i = 0; i < pathRefs.length; i++) {\r\n\t                        if (pathRefs[i] === pathRef) {\r\n\t                            pathRefs.splice(i, 1);\r\n\t                            return;\r\n\t                        }\r\n\t                    }\r\n\t                };\r\n\t                for (var i = 2; i--;) {\r\n\t                    removePath(pathRef.endPoints[i]);\r\n\t                }\r\n\t                delete pathRef.modelContext.paths[pathRef.pathId];\r\n\t                if (this.trackDeleted) {\r\n\t                    this.trackDeleted(pathRef, reason);\r\n\t                }\r\n\t            };\r\n\t            DeadEndFinder.prototype.removeDeadEnd = function (baseCount) {\r\n\t                var _this = this;\r\n\t                var found = 0;\r\n\t                for (var i = 0; i < this.pointMap.collections.length; i++) {\r\n\t                    var pathRefs = this.pointMap.collections[i].items;\r\n\t                    if (pathRefs.length % 2 == 0)\r\n\t                        continue;\r\n\t                    if (pathRefs.length == 1) {\r\n\t                        this.removePathRef(pathRefs[0], \"dead end \" + (baseCount + found));\r\n\t                        found++;\r\n\t                    }\r\n\t                    else if (this.keep) {\r\n\t                        //allow caller to decide to keep each path\r\n\t                        pathRefs.forEach(function (pathRef) {\r\n\t                            if (!_this.keep(pathRef)) {\r\n\t                                _this.removePathRef(pathRef, \"not keeping\");\r\n\t                                found++;\r\n\t                            }\r\n\t                        });\r\n\t                    }\r\n\t                }\r\n\t                return found;\r\n\t            };\r\n\t            return DeadEndFinder;\r\n\t        }());\r\n\t        /**\r\n\t         * Remove paths from a model which have endpoints that do not connect to other paths.\r\n\t         *\r\n\t         * @param modelContext The model to search for dead ends.\r\n\t         * @param options Optional options object.\r\n\t         * @returns The input model (for cascading).\r\n\t         */\r\n\t        function removeDeadEnds(modelContext, pointMatchingDistance, keep, trackDeleted) {\r\n\t            var deadEndFinder = new DeadEndFinder(pointMatchingDistance, keep, trackDeleted);\r\n\t            var walkOptions = {\r\n\t                onPath: function (walkedPath) {\r\n\t                    var endPoints = MakerJs.point.fromPathEnds(walkedPath.pathContext, walkedPath.offset);\r\n\t                    if (!endPoints)\r\n\t                        return;\r\n\t                    var pathRef = walkedPath;\r\n\t                    pathRef.endPoints = endPoints;\r\n\t                    for (var i = 2; i--;) {\r\n\t                        deadEndFinder.pointMap.addItemToCollection(endPoints[i], pathRef);\r\n\t                    }\r\n\t                }\r\n\t            };\r\n\t            model.walk(modelContext, walkOptions);\r\n\t            var total = 0;\r\n\t            var pass = 0;\r\n\t            while (pass = deadEndFinder.removeDeadEnd(total)) {\r\n\t                total += pass;\r\n\t            }\r\n\t            return modelContext;\r\n\t        }\r\n\t        model.removeDeadEnds = removeDeadEnds;\r\n\t    })(model = MakerJs.model || (MakerJs.model = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var exporter;\r\n\t    (function (exporter) {\r\n\t        /**\r\n\t         * Class for an XML tag.\r\n\t         * @private\r\n\t         */\r\n\t        var XmlTag = (function () {\r\n\t            /**\r\n\t             * @param name Name of the XML tag.\r\n\t             * @param attrs Optional attributes for the tag.\r\n\t             */\r\n\t            function XmlTag(name, attrs) {\r\n\t                this.name = name;\r\n\t                this.attrs = attrs;\r\n\t                /**\r\n\t                 * Text between the opening and closing tags.\r\n\t                 */\r\n\t                this.innerText = '';\r\n\t            }\r\n\t            /**\r\n\t             * Escapes certain characters within a string so that it can appear in a tag or its attribute.\r\n\t             *\r\n\t             * @returns Escaped string.\r\n\t             */\r\n\t            XmlTag.escapeString = function (value) {\r\n\t                var escape = {\r\n\t                    '&': '&amp;',\r\n\t                    '<': '&lt;',\r\n\t                    '>': '&gt;',\r\n\t                    '\"': '&quot;'\r\n\t                };\r\n\t                for (var code in escape) {\r\n\t                    //.split then .join is a 'replace'\r\n\t                    value = value.split(code).join(escape[code]);\r\n\t                }\r\n\t                return value;\r\n\t            };\r\n\t            /**\r\n\t             * Get the opening tag.\r\n\t             *\r\n\t             * @param selfClose Flag to determine if opening tag should be self closing.\r\n\t             */\r\n\t            XmlTag.prototype.getOpeningTag = function (selfClose) {\r\n\t                var attrs = '';\r\n\t                function outputAttr(attrName, attrValue) {\r\n\t                    if (attrValue == null || typeof attrValue === 'undefined')\r\n\t                        return;\r\n\t                    if (typeof attrValue === 'string') {\r\n\t                        attrValue = XmlTag.escapeString(attrValue);\r\n\t                    }\r\n\t                    attrs += ' ' + attrName + '=\"' + attrValue + '\"';\r\n\t                }\r\n\t                for (var name in this.attrs) {\r\n\t                    outputAttr(name, this.attrs[name]);\r\n\t                }\r\n\t                return '<' + this.name + attrs + (selfClose ? '/' : '') + '>';\r\n\t            };\r\n\t            /**\r\n\t             * Get the inner text.\r\n\t             */\r\n\t            XmlTag.prototype.getInnerText = function () {\r\n\t                if (this.innerTextEscaped) {\r\n\t                    return this.innerText;\r\n\t                }\r\n\t                else {\r\n\t                    return XmlTag.escapeString(this.innerText);\r\n\t                }\r\n\t            };\r\n\t            /**\r\n\t             * Get the closing tag.\r\n\t             */\r\n\t            XmlTag.prototype.getClosingTag = function () {\r\n\t                return '</' + this.name + '>';\r\n\t            };\r\n\t            /**\r\n\t             * Output the entire tag as a string.\r\n\t             */\r\n\t            XmlTag.prototype.toString = function () {\r\n\t                var selfClose = !this.innerText;\r\n\t                if (selfClose) {\r\n\t                    return this.getOpeningTag(true);\r\n\t                }\r\n\t                else {\r\n\t                    return this.getOpeningTag(false) + this.getInnerText() + this.getClosingTag();\r\n\t                }\r\n\t            };\r\n\t            return XmlTag;\r\n\t        }());\r\n\t        exporter.XmlTag = XmlTag;\r\n\t    })(exporter = MakerJs.exporter || (MakerJs.exporter = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var exporter;\r\n\t    (function (exporter) {\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function wrap(prefix, content, condition) {\r\n\t            if (condition) {\r\n\t                return prefix + '(' + content + ')';\r\n\t            }\r\n\t            else {\r\n\t                return content;\r\n\t            }\r\n\t        }\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function facetSizeToResolution(arcOrCircle, facetSize) {\r\n\t            if (!facetSize)\r\n\t                return;\r\n\t            var circle = new MakerJs.paths.Circle([0, 0], arcOrCircle.radius);\r\n\t            var length = MakerJs.measure.pathLength(circle);\r\n\t            if (!length)\r\n\t                return;\r\n\t            return length / facetSize;\r\n\t        }\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function pathsToOpenJsCad(modelContext, facetSize) {\r\n\t            var head = '';\r\n\t            var tail = '';\r\n\t            var first = true;\r\n\t            var exit = false;\r\n\t            var reverseTail = false;\r\n\t            var beginMap = {};\r\n\t            beginMap[MakerJs.pathType.Circle] = function (circle, dirPath) {\r\n\t                var circleOptions = {\r\n\t                    center: MakerJs.point.rounded(circle.origin),\r\n\t                    radius: circle.radius,\r\n\t                    resolution: facetSizeToResolution(circle, facetSize)\r\n\t                };\r\n\t                head = wrap('CAG.circle', JSON.stringify(circleOptions), true);\r\n\t                exit = true;\r\n\t            };\r\n\t            beginMap[MakerJs.pathType.Line] = function (line, dirPath) {\r\n\t                head = wrap('new CSG.Path2D', JSON.stringify(dirPath.reversed ? [dirPath.endPoints[1], dirPath.endPoints[0]] : dirPath.endPoints), true);\r\n\t            };\r\n\t            beginMap[MakerJs.pathType.Arc] = function (arc, dirPath) {\r\n\t                var endAngle = MakerJs.angle.ofArcEnd(arc);\r\n\t                if (dirPath.reversed) {\r\n\t                    reverseTail = true;\r\n\t                }\r\n\t                var arcOptions = {\r\n\t                    center: MakerJs.point.rounded(arc.origin),\r\n\t                    radius: arc.radius,\r\n\t                    startangle: arc.startAngle,\r\n\t                    endangle: endAngle,\r\n\t                    resolution: facetSizeToResolution(arc, facetSize)\r\n\t                };\r\n\t                head = wrap('new CSG.Path2D.arc', JSON.stringify(arcOptions), true);\r\n\t            };\r\n\t            var appendMap = {};\r\n\t            appendMap[MakerJs.pathType.Line] = function (line, dirPath) {\r\n\t                var reverse = (reverseTail != dirPath.reversed);\r\n\t                var endPoint = MakerJs.point.rounded(dirPath.endPoints[reverse ? 0 : 1]);\r\n\t                append(wrap('.appendPoint', JSON.stringify(endPoint), true));\r\n\t            };\r\n\t            appendMap[MakerJs.pathType.Arc] = function (arc, dirPath) {\r\n\t                var reverse = (reverseTail != dirPath.reversed);\r\n\t                var endAngle = MakerJs.angle.ofArcEnd(arc);\r\n\t                var arcOptions = {\r\n\t                    radius: arc.radius,\r\n\t                    clockwise: reverse,\r\n\t                    large: Math.abs(endAngle - arc.startAngle) > 180,\r\n\t                    resolution: facetSizeToResolution(arc, facetSize)\r\n\t                };\r\n\t                var endPoint = MakerJs.point.rounded(dirPath.endPoints[reverse ? 0 : 1]);\r\n\t                append(wrap('.appendArc', JSON.stringify(endPoint) + ',' + JSON.stringify(arcOptions), true));\r\n\t            };\r\n\t            function append(s) {\r\n\t                if (reverseTail) {\r\n\t                    tail = s + tail;\r\n\t                }\r\n\t                else {\r\n\t                    tail += s;\r\n\t                }\r\n\t            }\r\n\t            for (var pathId in modelContext.paths) {\r\n\t                var pathContext = modelContext.paths[pathId];\r\n\t                var fn = first ? beginMap[pathContext.type] : appendMap[pathContext.type];\r\n\t                if (fn) {\r\n\t                    fn(pathContext, pathContext);\r\n\t                }\r\n\t                if (exit) {\r\n\t                    return head;\r\n\t                }\r\n\t                first = false;\r\n\t            }\r\n\t            return head + tail + '.close().innerToCAG()';\r\n\t        }\r\n\t        /**\r\n\t         * Creates a string of JavaScript code for execution with the OpenJsCad engine.\r\n\t         *\r\n\t         * @param modelToExport Model object to export.\r\n\t         * @param options Export options object.\r\n\t         * @param options.extrusion Height of 3D extrusion.\r\n\t         * @param options.resolution Size of facets.\r\n\t         * @returns String of JavaScript containing a main() function for OpenJsCad.\r\n\t         */\r\n\t        function toOpenJsCad(modelToExport, options) {\r\n\t            if (!modelToExport)\r\n\t                return '';\r\n\t            var all = '';\r\n\t            var depth = 0;\r\n\t            var depthModel;\r\n\t            var opts = {\r\n\t                extrusion: 1,\r\n\t                pointMatchingDistance: .005,\r\n\t                functionName: 'main'\r\n\t            };\r\n\t            MakerJs.extendObject(opts, options);\r\n\t            if (modelToExport.exporterOptions) {\r\n\t                MakerJs.extendObject(opts, modelToExport.exporterOptions['toOpenJsCad']);\r\n\t            }\r\n\t            //pass options back into calling object\r\n\t            MakerJs.extendObject(options, opts);\r\n\t            if (opts && opts.modelMap) {\r\n\t                all = exportFromOptionsMap(modelToExport, opts.modelMap);\r\n\t            }\r\n\t            if (!all) {\r\n\t                var result = [];\r\n\t                var loops = MakerJs.model.findLoops(modelToExport, opts);\r\n\t                while (depthModel = loops.models[depth]) {\r\n\t                    var union = '';\r\n\t                    for (var modelId in depthModel.models) {\r\n\t                        var subModel = depthModel.models[modelId];\r\n\t                        union += wrap('.union', pathsToOpenJsCad(subModel, opts.facetSize), union);\r\n\t                    }\r\n\t                    var operator = (depth % 2 == 0) ? '.union' : '.subtract';\r\n\t                    result.push(wrap(operator, union, result.length));\r\n\t                    depth++;\r\n\t                }\r\n\t                var extrudeOptions = { offset: [0, 0, opts.extrusion] };\r\n\t                result.push(wrap('.extrude', JSON.stringify(extrudeOptions), true));\r\n\t                all = 'return ' + result.join('');\r\n\t            }\r\n\t            return 'function ' + opts.functionName + '(){' + all + ';}';\r\n\t        }\r\n\t        exporter.toOpenJsCad = toOpenJsCad;\r\n\t        function exportFromOptionsMap(modelToExport, optionsMap) {\r\n\t            if (!modelToExport.models)\r\n\t                return;\r\n\t            var result = [];\r\n\t            var union = [];\r\n\t            var i = 0;\r\n\t            for (var key in optionsMap) {\r\n\t                var fName = 'f' + i;\r\n\t                var options = optionsMap[key];\r\n\t                options.functionName = fName;\r\n\t                var childModel = modelToExport.models[key];\r\n\t                if (childModel) {\r\n\t                    result.push(toOpenJsCad(childModel, options));\r\n\t                    union.push('(' + fName + '())');\r\n\t                }\r\n\t                i++;\r\n\t            }\r\n\t            if (!result.length)\r\n\t                return;\r\n\t            result.push('return ' + union.join('.union'));\r\n\t            return result.join(' ');\r\n\t        }\r\n\t        /**\r\n\t         * Executes a JavaScript string with the OpenJsCad engine - converts 2D to 3D.\r\n\t         *\r\n\t         * @param modelToExport Model object to export.\r\n\t         * @param options Export options object.\r\n\t         * @param options.extrusion Height of 3D extrusion.\r\n\t         * @param options.resolution Size of facets.\r\n\t         * @returns String of STL format of 3D object.\r\n\t         */\r\n\t        function toSTL(modelToExport, options) {\r\n\t            if (options === void 0) { options = {}; }\r\n\t            if (!modelToExport)\r\n\t                return '';\r\n\t            var container;\r\n\t            switch (MakerJs.environment) {\r\n\t                case MakerJs.environmentTypes.BrowserUI:\r\n\t                    if (!('CAG' in window) || !('CSG' in window)) {\r\n\t                        throw \"OpenJsCad library not found. Download http://microsoft.github.io/maker.js/external/OpenJsCad/csg.js and http://microsoft.github.io/maker.js/external/OpenJsCad/formats.js to your website and add script tags.\";\r\n\t                    }\r\n\t                    container = window;\r\n\t                    break;\r\n\t                case MakerJs.environmentTypes.NodeJs:\r\n\t                    //this can throw if not found\r\n\t                    container = __webpack_require__(111);\r\n\t                    break;\r\n\t                case MakerJs.environmentTypes.WebWorker:\r\n\t                    if (!('CAG' in self) || !('CSG' in self)) {\r\n\t                        throw \"OpenJsCad library not found. Download http://microsoft.github.io/maker.js/external/OpenJsCad/csg.js and http://microsoft.github.io/maker.js/external/OpenJsCad/formats.js to your website and add an importScripts statement.\";\r\n\t                    }\r\n\t                    container = self;\r\n\t                    break;\r\n\t            }\r\n\t            var script = toOpenJsCad(modelToExport, options);\r\n\t            script += 'return ' + options.functionName + '();';\r\n\t            var f = new Function('CAG', 'CSG', script);\r\n\t            var csg = f(container.CAG, container.CSG);\r\n\t            return csg.toStlString();\r\n\t        }\r\n\t        exporter.toSTL = toSTL;\r\n\t    })(exporter = MakerJs.exporter || (MakerJs.exporter = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var exporter;\r\n\t    (function (exporter) {\r\n\t        /**\r\n\t         * Injects drawing into a PDFKit document.\r\n\t         *\r\n\t         * @param modelToExport Model object to export.\r\n\t         * @param options Export options object.\r\n\t         * @returns String of PDF file contents.\r\n\t         */\r\n\t        function toPDF(doc, modelToExport, options) {\r\n\t            if (!modelToExport)\r\n\t                return;\r\n\t            //fixup options\r\n\t            var opts = {\r\n\t                origin: [0, 0],\r\n\t                stroke: \"#000\"\r\n\t            };\r\n\t            MakerJs.extendObject(opts, options);\r\n\t            //try to get the unit system from the itemToExport\r\n\t            var scale = 1;\r\n\t            var exportUnits = opts.units || modelToExport.units;\r\n\t            if (exportUnits) {\r\n\t                //convert to inch\r\n\t                scale = MakerJs.units.conversionScale(exportUnits, MakerJs.unitType.Inch);\r\n\t            }\r\n\t            else {\r\n\t                //assume pixels, convert to inch\r\n\t                scale = 1 / 100;\r\n\t            }\r\n\t            //from inch to PDF PPI\r\n\t            scale *= 72;\r\n\t            //TODO scale each element without a whole clone\r\n\t            var scaledModel = MakerJs.model.scale(MakerJs.cloneObject(modelToExport), scale);\r\n\t            var size = MakerJs.measure.modelExtents(scaledModel);\r\n\t            var left = -size.low[0];\r\n\t            var offset = [left, size.high[1]];\r\n\t            offset = MakerJs.point.add(offset, options.origin);\r\n\t            MakerJs.model.findChains(scaledModel, function (chains, loose, layer) {\r\n\t                function single(walkedPath) {\r\n\t                    var pathData = exporter.pathToSVGPathData(walkedPath.pathContext, walkedPath.offset, offset);\r\n\t                    doc.path(pathData).stroke(opts.stroke);\r\n\t                }\r\n\t                chains.map(function (chain) {\r\n\t                    if (chain.links.length > 1) {\r\n\t                        var pathData = exporter.chainToSVGPathData(chain, offset);\r\n\t                        doc.path(pathData).stroke(opts.stroke);\r\n\t                    }\r\n\t                    else {\r\n\t                        var walkedPath = chain.links[0].walkedPath;\r\n\t                        if (walkedPath.pathContext.type === MakerJs.pathType.Circle) {\r\n\t                            var fixedPath;\r\n\t                            MakerJs.path.moveTemporary([walkedPath.pathContext], [walkedPath.offset], function () {\r\n\t                                fixedPath = MakerJs.path.mirror(walkedPath.pathContext, false, true);\r\n\t                            });\r\n\t                            MakerJs.path.moveRelative(fixedPath, offset);\r\n\t                            //TODO use only chainToSVGPathData instead of circle, so that we can use fill\r\n\t                            doc.circle(fixedPath.origin[0], fixedPath.origin[1], walkedPath.pathContext.radius).stroke(opts.stroke);\r\n\t                        }\r\n\t                        else {\r\n\t                            single(walkedPath);\r\n\t                        }\r\n\t                    }\r\n\t                });\r\n\t                loose.map(single);\r\n\t            }, { byLayers: false });\r\n\t        }\r\n\t        exporter.toPDF = toPDF;\r\n\t    })(exporter = MakerJs.exporter || (MakerJs.exporter = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var exporter;\r\n\t    (function (exporter) {\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        var chainLinkToPathDataMap = {};\r\n\t        chainLinkToPathDataMap[MakerJs.pathType.Arc] = function (arc, endPoint, reversed, d) {\r\n\t            d.push('A');\r\n\t            svgArcData(d, arc.radius, endPoint, MakerJs.angle.ofArcSpan(arc) > 180, reversed ? (arc.startAngle > arc.endAngle) : (arc.startAngle < arc.endAngle));\r\n\t        };\r\n\t        chainLinkToPathDataMap[MakerJs.pathType.Line] = function (line, endPoint, reversed, d) {\r\n\t            d.push('L', MakerJs.round(endPoint[0]), MakerJs.round(endPoint[1]));\r\n\t        };\r\n\t        chainLinkToPathDataMap[MakerJs.pathType.BezierSeed] = function (seed, endPoint, reversed, d) {\r\n\t            svgBezierData(d, seed, reversed);\r\n\t        };\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function svgCoords(p) {\r\n\t            return MakerJs.point.mirror(p, false, true);\r\n\t        }\r\n\t        /**\r\n\t         * Convert a chain to SVG path data.\r\n\t         */\r\n\t        function chainToSVGPathData(chain, offset) {\r\n\t            function offsetPoint(p) {\r\n\t                return MakerJs.point.add(p, offset);\r\n\t            }\r\n\t            var first = chain.links[0];\r\n\t            var firstPoint = offsetPoint(svgCoords(first.endPoints[first.reversed ? 1 : 0]));\r\n\t            var d = ['M', MakerJs.round(firstPoint[0]), MakerJs.round(firstPoint[1])];\r\n\t            for (var i = 0; i < chain.links.length; i++) {\r\n\t                var link = chain.links[i];\r\n\t                var pathContext = link.walkedPath.pathContext;\r\n\t                var fn = chainLinkToPathDataMap[pathContext.type];\r\n\t                if (fn) {\r\n\t                    var fixedPath;\r\n\t                    MakerJs.path.moveTemporary([pathContext], [link.walkedPath.offset], function () {\r\n\t                        fixedPath = MakerJs.path.mirror(pathContext, false, true);\r\n\t                    });\r\n\t                    MakerJs.path.moveRelative(fixedPath, offset);\r\n\t                    fn(fixedPath, offsetPoint(svgCoords(link.endPoints[link.reversed ? 0 : 1])), link.reversed, d);\r\n\t                }\r\n\t            }\r\n\t            if (chain.endless) {\r\n\t                d.push('Z');\r\n\t            }\r\n\t            return d.join(' ');\r\n\t        }\r\n\t        exporter.chainToSVGPathData = chainToSVGPathData;\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function startSvgPathData(start, d) {\r\n\t            return [\"M\", MakerJs.round(start[0]), MakerJs.round(start[1])].concat(d);\r\n\t        }\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        var svgPathDataMap = {};\r\n\t        svgPathDataMap[MakerJs.pathType.Line] = function (line) {\r\n\t            return startSvgPathData(line.origin, MakerJs.point.rounded(line.end));\r\n\t        };\r\n\t        svgPathDataMap[MakerJs.pathType.Circle] = function (circle) {\r\n\t            return startSvgPathData(circle.origin, svgCircleData(circle.radius));\r\n\t        };\r\n\t        svgPathDataMap[MakerJs.pathType.Arc] = function (arc) {\r\n\t            var arcPoints = MakerJs.point.fromArc(arc);\r\n\t            if (MakerJs.measure.isPointEqual(arcPoints[0], arcPoints[1])) {\r\n\t                return svgPathDataMap[MakerJs.pathType.Circle](arc);\r\n\t            }\r\n\t            else {\r\n\t                var r = MakerJs.round(arc.radius);\r\n\t                var d = ['A'];\r\n\t                svgArcData(d, r, arcPoints[1], MakerJs.angle.ofArcSpan(arc) > 180, arc.startAngle > arc.endAngle);\r\n\t                return startSvgPathData(arcPoints[0], d);\r\n\t            }\r\n\t        };\r\n\t        svgPathDataMap[MakerJs.pathType.BezierSeed] = function (seed) {\r\n\t            var d = [];\r\n\t            svgBezierData(d, seed);\r\n\t            return startSvgPathData(seed.origin, d);\r\n\t        };\r\n\t        /**\r\n\t         * Convert a path to SVG path data.\r\n\t         */\r\n\t        function pathToSVGPathData(pathToExport, offset, offset2) {\r\n\t            var fn = svgPathDataMap[pathToExport.type];\r\n\t            if (fn) {\r\n\t                var fixedPath;\r\n\t                MakerJs.path.moveTemporary([pathToExport], [offset], function () {\r\n\t                    fixedPath = MakerJs.path.mirror(pathToExport, false, true);\r\n\t                });\r\n\t                MakerJs.path.moveRelative(fixedPath, offset2);\r\n\t                var d = fn(fixedPath);\r\n\t                return d.join(' ');\r\n\t            }\r\n\t            return '';\r\n\t        }\r\n\t        exporter.pathToSVGPathData = pathToSVGPathData;\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function getBezierModelsWithPaths(modelToExport) {\r\n\t            var beziers = [];\r\n\t            function checkIsBezierWithPaths(walkedModel) {\r\n\t                var b = walkedModel.childModel;\r\n\t                if (b.type && b.type === MakerJs.models.BezierCurve.typeName && b.paths) {\r\n\t                    beziers.push(walkedModel);\r\n\t                }\r\n\t            }\r\n\t            var options = {\r\n\t                beforeChildWalk: function (walkedModel) {\r\n\t                    checkIsBezierWithPaths(walkedModel);\r\n\t                    return true;\r\n\t                }\r\n\t            };\r\n\t            var rootModel = {\r\n\t                childId: '',\r\n\t                childModel: modelToExport,\r\n\t                layer: '',\r\n\t                offset: modelToExport.origin,\r\n\t                parentModel: null,\r\n\t                route: [],\r\n\t                routeKey: ''\r\n\t            };\r\n\t            checkIsBezierWithPaths(rootModel);\r\n\t            MakerJs.model.walk(modelToExport, options);\r\n\t            return beziers;\r\n\t        }\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function getPathDataByLayer(modelToExport, offset, options) {\r\n\t            var pathDataByLayer = {};\r\n\t            var beziers = getBezierModelsWithPaths(modelToExport);\r\n\t            var tempKey = 'tempPaths';\r\n\t            beziers.forEach(function (walkedModel) {\r\n\t                var b = walkedModel.childModel;\r\n\t                //use seeds as path, hide the arc paths from findChains()\r\n\t                var bezierSeeds = MakerJs.models.BezierCurve.getBezierSeeds(b);\r\n\t                if (bezierSeeds.length > 0) {\r\n\t                    b[tempKey] = b.paths;\r\n\t                    var newPaths = {};\r\n\t                    bezierSeeds.forEach(function (seed, i) {\r\n\t                        newPaths['seed_' + i] = seed;\r\n\t                    });\r\n\t                    b.paths = newPaths;\r\n\t                }\r\n\t            });\r\n\t            MakerJs.model.findChains(modelToExport, function (chains, loose, layer) {\r\n\t                function single(walkedPath) {\r\n\t                    var pathData = pathToSVGPathData(walkedPath.pathContext, walkedPath.offset, offset);\r\n\t                    pathDataByLayer[layer].push(pathData);\r\n\t                }\r\n\t                pathDataByLayer[layer] = [];\r\n\t                chains.map(function (chain) {\r\n\t                    if (chain.links.length > 1) {\r\n\t                        var pathData = chainToSVGPathData(chain, offset);\r\n\t                        pathDataByLayer[layer].push(pathData);\r\n\t                    }\r\n\t                    else {\r\n\t                        single(chain.links[0].walkedPath);\r\n\t                    }\r\n\t                });\r\n\t                loose.map(single);\r\n\t            }, options);\r\n\t            //revert\r\n\t            beziers.forEach(function (walkedModel) {\r\n\t                var b = walkedModel.childModel;\r\n\t                if (tempKey in b) {\r\n\t                    b.paths = b[tempKey];\r\n\t                    delete b[tempKey];\r\n\t                }\r\n\t            });\r\n\t            return pathDataByLayer;\r\n\t        }\r\n\t        /**\r\n\t         * Convert a model to SVG path data.\r\n\t         *\r\n\t         * @param modelToExport Model to export.\r\n\t         * @param byLayers Boolean flag (default true) to return a map of path data by layer.\r\n\t         * @param origin Optional reference origin.\r\n\t         * @returns String of SVG path data (if byLayers is false) or an object map of path data by layer .\r\n\t         */\r\n\t        function toSVGPathData(modelToExport, byLayers, origin) {\r\n\t            if (byLayers === void 0) { byLayers = true; }\r\n\t            var size = MakerJs.measure.modelExtents(modelToExport);\r\n\t            if (!origin) {\r\n\t                origin = [-size.low[0], size.high[1]];\r\n\t            }\r\n\t            var pathDataArrayByLayer = getPathDataByLayer(modelToExport, origin, { byLayers: byLayers });\r\n\t            var pathDataStringByLayer = {};\r\n\t            for (var layer in pathDataArrayByLayer) {\r\n\t                pathDataStringByLayer[layer] = pathDataArrayByLayer[layer].join(' ');\r\n\t            }\r\n\t            return byLayers ? pathDataStringByLayer : pathDataStringByLayer[''];\r\n\t        }\r\n\t        exporter.toSVGPathData = toSVGPathData;\r\n\t        /**\r\n\t         * Renders an item in SVG markup.\r\n\t         *\r\n\t         * @param itemToExport Item to render: may be a path, an array of paths, or a model object.\r\n\t         * @param options Rendering options object.\r\n\t         * @param options.annotate Boolean to indicate that the id's of paths should be rendered as SVG text elements.\r\n\t         * @param options.origin point object for the rendered reference origin.\r\n\t         * @param options.scale Number to scale the SVG rendering.\r\n\t         * @param options.stroke String color of the rendered paths.\r\n\t         * @param options.strokeWidth String numeric width and optional units of the rendered paths.\r\n\t         * @param options.units String of the unit system. May be omitted. See makerjs.unitType for possible values.\r\n\t         * @param options.useSvgPathOnly Boolean to use SVG path elements instead of line, circle etc.\r\n\t         * @returns String of XML / SVG content.\r\n\t         */\r\n\t        function toSVG(itemToExport, options) {\r\n\t            function append(value, layer, forcePush) {\r\n\t                if (forcePush === void 0) { forcePush = false; }\r\n\t                if (!forcePush && typeof layer == \"string\" && layer.length > 0) {\r\n\t                    if (!(layer in layers)) {\r\n\t                        layers[layer] = [];\r\n\t                    }\r\n\t                    layers[layer].push(value);\r\n\t                }\r\n\t                else {\r\n\t                    elements.push(value);\r\n\t                }\r\n\t            }\r\n\t            function createElement(tagname, attrs, layer, innerText, forcePush) {\r\n\t                if (innerText === void 0) { innerText = null; }\r\n\t                if (forcePush === void 0) { forcePush = false; }\r\n\t                attrs['vector-effect'] = 'non-scaling-stroke';\r\n\t                var tag = new exporter.XmlTag(tagname, attrs);\r\n\t                if (innerText) {\r\n\t                    tag.innerText = innerText;\r\n\t                }\r\n\t                append(tag.toString(), layer, forcePush);\r\n\t            }\r\n\t            function fixPoint(pointToFix) {\r\n\t                //in DXF Y increases upward. in SVG, Y increases downward\r\n\t                var pointMirroredY = svgCoords(pointToFix);\r\n\t                return MakerJs.point.scale(pointMirroredY, opts.scale);\r\n\t            }\r\n\t            function fixPath(pathToFix, origin) {\r\n\t                //mirror creates a copy, so we don't modify the original\r\n\t                var mirrorY = MakerJs.path.mirror(pathToFix, false, true);\r\n\t                return MakerJs.path.moveRelative(MakerJs.path.scale(mirrorY, opts.scale), origin);\r\n\t            }\r\n\t            //fixup options\r\n\t            var opts = {\r\n\t                annotate: false,\r\n\t                origin: null,\r\n\t                scale: 1,\r\n\t                stroke: \"#000\",\r\n\t                strokeWidth: '0.25mm',\r\n\t                fill: \"none\",\r\n\t                fontSize: '9pt',\r\n\t                useSvgPathOnly: true,\r\n\t                viewBox: true\r\n\t            };\r\n\t            MakerJs.extendObject(opts, options);\r\n\t            var modelToExport;\r\n\t            var itemToExportIsModel = MakerJs.isModel(itemToExport);\r\n\t            if (itemToExportIsModel) {\r\n\t                modelToExport = itemToExport;\r\n\t                if (modelToExport.exporterOptions) {\r\n\t                    MakerJs.extendObject(opts, modelToExport.exporterOptions['toSVG']);\r\n\t                }\r\n\t            }\r\n\t            var elements = [];\r\n\t            var layers = {};\r\n\t            //measure the item to move it into svg area\r\n\t            if (itemToExportIsModel) {\r\n\t                modelToExport = itemToExport;\r\n\t            }\r\n\t            else if (Array.isArray(itemToExport)) {\r\n\t                //issue: this won't handle an array of models\r\n\t                var paths = {};\r\n\t                itemToExport.forEach(function (p, i) { paths[i] = p; });\r\n\t                modelToExport = { paths: paths };\r\n\t            }\r\n\t            else if (MakerJs.isPath(itemToExport)) {\r\n\t                modelToExport = { paths: { modelToMeasure: itemToExport } };\r\n\t            }\r\n\t            var size = MakerJs.measure.modelExtents(modelToExport);\r\n\t            //try to get the unit system from the itemToExport\r\n\t            if (!opts.units) {\r\n\t                var unitSystem = exporter.tryGetModelUnits(itemToExport);\r\n\t                if (unitSystem) {\r\n\t                    opts.units = unitSystem;\r\n\t                }\r\n\t            }\r\n\t            //convert unit system (if it exists) into SVG's units. scale if necessary.\r\n\t            var useSvgUnit = exporter.svgUnit[opts.units];\r\n\t            if (useSvgUnit && opts.viewBox) {\r\n\t                opts.scale *= useSvgUnit.scaleConversion;\r\n\t            }\r\n\t            if (size && !opts.origin) {\r\n\t                var left = -size.low[0] * opts.scale;\r\n\t                opts.origin = [left, size.high[1] * opts.scale];\r\n\t            }\r\n\t            //also pass back to options parameter\r\n\t            MakerJs.extendObject(options, opts);\r\n\t            //begin svg output\r\n\t            var svgAttrs;\r\n\t            if (size && opts.viewBox) {\r\n\t                var width = MakerJs.round(size.high[0] - size.low[0]) * opts.scale;\r\n\t                var height = MakerJs.round(size.high[1] - size.low[1]) * opts.scale;\r\n\t                var viewBox = [0, 0, width, height];\r\n\t                var unit = useSvgUnit ? useSvgUnit.svgUnitType : '';\r\n\t                svgAttrs = {\r\n\t                    width: width + unit,\r\n\t                    height: height + unit,\r\n\t                    viewBox: viewBox.join(' ')\r\n\t                };\r\n\t            }\r\n\t            var svgTag = new exporter.XmlTag('svg', MakerJs.extendObject(svgAttrs || {}, opts.svgAttrs));\r\n\t            append(svgTag.getOpeningTag(false));\r\n\t            var svgGroup = new exporter.XmlTag('g', {\r\n\t                id: 'svgGroup',\r\n\t                stroke: opts.stroke,\r\n\t                \"stroke-width\": opts.strokeWidth,\r\n\t                \"stroke-linecap\": \"round\",\r\n\t                \"fill\": opts.fill,\r\n\t                \"fill-rule\": \"evenodd\",\r\n\t                \"font-size\": opts.fontSize\r\n\t            });\r\n\t            append(svgGroup.getOpeningTag(false));\r\n\t            if (opts.useSvgPathOnly) {\r\n\t                var pathDataByLayer = getPathDataByLayer(modelToExport, opts.origin, { byLayers: true });\r\n\t                for (var layer in pathDataByLayer) {\r\n\t                    var pathData = pathDataByLayer[layer].join(' ');\r\n\t                    var attrs = { \"d\": pathData };\r\n\t                    if (layer.length > 0) {\r\n\t                        attrs[\"id\"] = layer;\r\n\t                    }\r\n\t                    createElement(\"path\", attrs, layer, null, true);\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                function drawText(id, textPoint) {\r\n\t                    createElement(\"text\", {\r\n\t                        \"id\": id + \"_text\",\r\n\t                        \"x\": textPoint[0],\r\n\t                        \"y\": textPoint[1]\r\n\t                    }, null, id);\r\n\t                }\r\n\t                function drawPath(id, x, y, d, layer, textPoint) {\r\n\t                    createElement(\"path\", {\r\n\t                        \"id\": id,\r\n\t                        \"d\": [\"M\", MakerJs.round(x), MakerJs.round(y)].concat(d).join(\" \")\r\n\t                    }, layer);\r\n\t                    if (opts.annotate) {\r\n\t                        drawText(id, textPoint);\r\n\t                    }\r\n\t                }\r\n\t                function circleInPaths(id, center, radius, layer) {\r\n\t                    var d = svgCircleData(radius);\r\n\t                    drawPath(id, center[0], center[1], d, layer, center);\r\n\t                }\r\n\t                var map = {};\r\n\t                map[MakerJs.pathType.Line] = function (id, line, origin, layer) {\r\n\t                    var start = line.origin;\r\n\t                    var end = line.end;\r\n\t                    createElement(\"line\", {\r\n\t                        \"id\": id,\r\n\t                        \"x1\": MakerJs.round(start[0]),\r\n\t                        \"y1\": MakerJs.round(start[1]),\r\n\t                        \"x2\": MakerJs.round(end[0]),\r\n\t                        \"y2\": MakerJs.round(end[1])\r\n\t                    }, layer);\r\n\t                    if (opts.annotate) {\r\n\t                        drawText(id, MakerJs.point.middle(line));\r\n\t                    }\r\n\t                };\r\n\t                map[MakerJs.pathType.Circle] = function (id, circle, origin, layer) {\r\n\t                    var center = circle.origin;\r\n\t                    createElement(\"circle\", {\r\n\t                        \"id\": id,\r\n\t                        \"r\": circle.radius,\r\n\t                        \"cx\": MakerJs.round(center[0]),\r\n\t                        \"cy\": MakerJs.round(center[1])\r\n\t                    }, layer);\r\n\t                    if (opts.annotate) {\r\n\t                        drawText(id, center);\r\n\t                    }\r\n\t                };\r\n\t                map[MakerJs.pathType.Arc] = function (id, arc, origin, layer) {\r\n\t                    var arcPoints = MakerJs.point.fromArc(arc);\r\n\t                    if (MakerJs.measure.isPointEqual(arcPoints[0], arcPoints[1])) {\r\n\t                        circleInPaths(id, arc.origin, arc.radius, layer);\r\n\t                    }\r\n\t                    else {\r\n\t                        var d = ['A'];\r\n\t                        svgArcData(d, arc.radius, arcPoints[1], MakerJs.angle.ofArcSpan(arc) > 180, arc.startAngle > arc.endAngle);\r\n\t                        drawPath(id, arcPoints[0][0], arcPoints[0][1], d, layer, MakerJs.point.middle(arc));\r\n\t                    }\r\n\t                };\r\n\t                map[MakerJs.pathType.BezierSeed] = function (id, seed, origin, layer) {\r\n\t                    var d = [];\r\n\t                    svgBezierData(d, seed);\r\n\t                    drawPath(id, seed.origin[0], seed.origin[1], d, layer, MakerJs.point.middle(seed));\r\n\t                };\r\n\t                function beginModel(id, modelContext) {\r\n\t                    modelGroup.attrs = { id: id };\r\n\t                    append(modelGroup.getOpeningTag(false), modelContext.layer);\r\n\t                }\r\n\t                function endModel(modelContext) {\r\n\t                    append(modelGroup.getClosingTag(), modelContext.layer);\r\n\t                }\r\n\t                var modelGroup = new exporter.XmlTag('g');\r\n\t                var exp = new exporter.Exporter(map, fixPoint, fixPath, beginModel, endModel);\r\n\t                exp.exportItem('0', itemToExport, opts.origin);\r\n\t                //export layers as groups\r\n\t                for (var layer in layers) {\r\n\t                    var layerGroup = new exporter.XmlTag('g', { id: layer });\r\n\t                    for (var i = 0; i < layers[layer].length; i++) {\r\n\t                        layerGroup.innerText += layers[layer][i];\r\n\t                    }\r\n\t                    layerGroup.innerTextEscaped = true;\r\n\t                    append(layerGroup.toString());\r\n\t                }\r\n\t            }\r\n\t            append(svgGroup.getClosingTag());\r\n\t            append(svgTag.getClosingTag());\r\n\t            return elements.join('');\r\n\t        }\r\n\t        exporter.toSVG = toSVG;\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function svgCircleData(radius) {\r\n\t            var r = MakerJs.round(radius);\r\n\t            var d = ['m', -r, 0];\r\n\t            function halfCircle(sign) {\r\n\t                d.push('a');\r\n\t                svgArcData(d, r, [2 * r * sign, 0]);\r\n\t            }\r\n\t            halfCircle(1);\r\n\t            halfCircle(-1);\r\n\t            d.push('z');\r\n\t            return d;\r\n\t        }\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function svgBezierData(d, seed, reversed) {\r\n\t            if (seed.controls.length === 1) {\r\n\t                d.push('Q', MakerJs.round(seed.controls[0][0]), MakerJs.round(seed.controls[0][1]));\r\n\t            }\r\n\t            else {\r\n\t                var controls = reversed ? [seed.controls[1], seed.controls[0]] : seed.controls;\r\n\t                d.push('C', MakerJs.round(controls[0][0]), MakerJs.round(controls[0][1]), MakerJs.round(controls[1][0]), MakerJs.round(controls[1][1]));\r\n\t            }\r\n\t            var final = reversed ? seed.origin : seed.end;\r\n\t            d.push(MakerJs.round(final[0]), MakerJs.round(final[1]));\r\n\t        }\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function svgArcData(d, radius, endPoint, largeArc, decreasing) {\r\n\t            var r = MakerJs.round(radius);\r\n\t            var end = endPoint;\r\n\t            d.push(r, r);\r\n\t            d.push(0); //0 = x-axis rotation\r\n\t            d.push(largeArc ? 1 : 0); //large arc=1, small arc=0\r\n\t            d.push(decreasing ? 0 : 1); //sweep-flag 0=decreasing, 1=increasing \r\n\t            d.push(MakerJs.round(end[0]), MakerJs.round(end[1]));\r\n\t        }\r\n\t        /**\r\n\t         * Map of MakerJs unit system to SVG unit system\r\n\t         */\r\n\t        exporter.svgUnit = {};\r\n\t        //SVG Coordinate Systems, Transformations and Units documentation:\r\n\t        //http://www.w3.org/TR/SVG/coords.html\r\n\t        //The supported length unit identifiers are: em, ex, px, pt, pc, cm, mm, in, and percentages.\r\n\t        exporter.svgUnit[MakerJs.unitType.Inch] = { svgUnitType: \"in\", scaleConversion: 1 };\r\n\t        exporter.svgUnit[MakerJs.unitType.Millimeter] = { svgUnitType: \"mm\", scaleConversion: 1 };\r\n\t        exporter.svgUnit[MakerJs.unitType.Centimeter] = { svgUnitType: \"cm\", scaleConversion: 1 };\r\n\t        //Add conversions for all unitTypes\r\n\t        exporter.svgUnit[MakerJs.unitType.Foot] = { svgUnitType: \"in\", scaleConversion: 12 };\r\n\t        exporter.svgUnit[MakerJs.unitType.Meter] = { svgUnitType: \"cm\", scaleConversion: 100 };\r\n\t    })(exporter = MakerJs.exporter || (MakerJs.exporter = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\t(function (MakerJs) {\r\n\t    var importer;\r\n\t    (function (importer) {\r\n\t        function fromSVGPathData(pathData, options) {\r\n\t            if (options === void 0) { options = {}; }\r\n\t            var result = {};\r\n\t            function addPath(p) {\r\n\t                if (!result.paths) {\r\n\t                    result.paths = {};\r\n\t                }\r\n\t                result.paths['p_' + ++pathCount] = p;\r\n\t            }\r\n\t            function addModel(m) {\r\n\t                if (!result.models) {\r\n\t                    result.models = {};\r\n\t                }\r\n\t                result.models['p_' + ++pathCount] = m;\r\n\t            }\r\n\t            function getPoint(cmd, offset) {\r\n\t                if (offset === void 0) { offset = 0; }\r\n\t                var p = MakerJs.point.mirror([cmd.data[0 + offset], cmd.data[1 + offset]], false, true);\r\n\t                if (cmd.absolute) {\r\n\t                    return p;\r\n\t                }\r\n\t                else {\r\n\t                    return MakerJs.point.add(p, cmd.from);\r\n\t                }\r\n\t            }\r\n\t            function lineTo(cmd, end) {\r\n\t                if (!MakerJs.measure.isPointEqual(cmd.from, end)) {\r\n\t                    addPath(new MakerJs.paths.Line(cmd.from, end));\r\n\t                }\r\n\t                return end;\r\n\t            }\r\n\t            var map = {};\r\n\t            map['M'] = function (cmd) {\r\n\t                firstPoint = getPoint(cmd);\r\n\t                return firstPoint;\r\n\t            };\r\n\t            map['Z'] = function (cmd) {\r\n\t                return lineTo(cmd, firstPoint);\r\n\t            };\r\n\t            map['H'] = function (cmd) {\r\n\t                var end = MakerJs.point.clone(cmd.from);\r\n\t                if (cmd.absolute) {\r\n\t                    end[0] = cmd.data[0];\r\n\t                }\r\n\t                else {\r\n\t                    end[0] += cmd.data[0];\r\n\t                }\r\n\t                return lineTo(cmd, end);\r\n\t            };\r\n\t            map['V'] = function (cmd) {\r\n\t                var end = MakerJs.point.clone(cmd.from);\r\n\t                //subtract to mirror on y axis: SVG coords\r\n\t                if (cmd.absolute) {\r\n\t                    end[1] = -cmd.data[0];\r\n\t                }\r\n\t                else {\r\n\t                    end[1] -= cmd.data[0];\r\n\t                }\r\n\t                return lineTo(cmd, end);\r\n\t            };\r\n\t            map['L'] = function (cmd) {\r\n\t                var end = getPoint(cmd);\r\n\t                return lineTo(cmd, end);\r\n\t            };\r\n\t            map['A'] = function (cmd) {\r\n\t                var rx = cmd.data[0];\r\n\t                var ry = cmd.data[1];\r\n\t                var rotation = cmd.data[2];\r\n\t                var large = cmd.data[3] === 1;\r\n\t                var decreasing = cmd.data[4] === 1;\r\n\t                var end = getPoint(cmd, 5);\r\n\t                var elliptic = rx !== ry;\r\n\t                //first, rotate so we are dealing with a zero angle x-axis\r\n\t                var xAxis = new MakerJs.paths.Line(cmd.from, MakerJs.point.rotate(end, rotation, cmd.from));\r\n\t                //next, un-distort any ellipse back into a circle in terms of x axis\r\n\t                if (elliptic) {\r\n\t                    xAxis = MakerJs.path.distort(xAxis, 1, rx / ry);\r\n\t                }\r\n\t                //now create an arc, making sure we use the large and decreasing flags\r\n\t                var arc = new MakerJs.paths.Arc(xAxis.origin, xAxis.end, rx, large, decreasing);\r\n\t                if (elliptic) {\r\n\t                    //scale up if radius was insufficient.\r\n\t                    if (rx < arc.radius) {\r\n\t                        var scaleUp = arc.radius / rx;\r\n\t                        rx *= scaleUp;\r\n\t                        ry *= scaleUp;\r\n\t                    }\r\n\t                    //create an elliptical arc, this will re-distort\r\n\t                    var e = new MakerJs.models.EllipticArc(arc, 1, ry / rx, options.bezierAccuracy);\r\n\t                    //un-rotate back to where it should be.\r\n\t                    MakerJs.model.rotate(e, -rotation, cmd.from);\r\n\t                    addModel(e);\r\n\t                }\r\n\t                else {\r\n\t                    //just use the arc\r\n\t                    //un-rotate back to where it should be.\r\n\t                    MakerJs.path.rotate(arc, -rotation, cmd.from);\r\n\t                    addPath(arc);\r\n\t                }\r\n\t                return end;\r\n\t            };\r\n\t            map['C'] = function (cmd) {\r\n\t                var control1 = getPoint(cmd, 0);\r\n\t                var control2 = getPoint(cmd, 2);\r\n\t                var end = getPoint(cmd, 4);\r\n\t                addModel(new MakerJs.models.BezierCurve(cmd.from, control1, control2, end, options.bezierAccuracy));\r\n\t                return end;\r\n\t            };\r\n\t            map['S'] = function (cmd) {\r\n\t                var control1;\r\n\t                var prevControl2;\r\n\t                if (cmd.prev.command === 'C') {\r\n\t                    prevControl2 = getPoint(cmd.prev, 2);\r\n\t                    control1 = MakerJs.point.rotate(prevControl2, 180, cmd.from);\r\n\t                }\r\n\t                else if (cmd.prev.command === 'S') {\r\n\t                    prevControl2 = getPoint(cmd.prev, 0);\r\n\t                    control1 = MakerJs.point.rotate(prevControl2, 180, cmd.from);\r\n\t                }\r\n\t                else {\r\n\t                    control1 = cmd.from;\r\n\t                }\r\n\t                var control2 = getPoint(cmd, 0);\r\n\t                var end = getPoint(cmd, 2);\r\n\t                addModel(new MakerJs.models.BezierCurve(cmd.from, control1, control2, end, options.bezierAccuracy));\r\n\t                return end;\r\n\t            };\r\n\t            map['Q'] = function (cmd) {\r\n\t                var control = getPoint(cmd, 0);\r\n\t                var end = getPoint(cmd, 2);\r\n\t                addModel(new MakerJs.models.BezierCurve(cmd.from, control, end, options.bezierAccuracy));\r\n\t                return end;\r\n\t            };\r\n\t            map['T'] = function (cmd) {\r\n\t                var control;\r\n\t                var prevControl;\r\n\t                if (cmd.prev.command === 'Q') {\r\n\t                    prevControl = getPoint(cmd.prev, 0);\r\n\t                    control = MakerJs.point.rotate(prevControl, 180, cmd.from);\r\n\t                }\r\n\t                else if (cmd.prev.command === 'T') {\r\n\t                    prevControl = getPoint(cmd.prev, 2); //see below *\r\n\t                    control = MakerJs.point.rotate(prevControl, 180, cmd.from);\r\n\t                }\r\n\t                else {\r\n\t                    control = cmd.from;\r\n\t                }\r\n\t                //* save the control point in the data list, will be accessible from index 2\r\n\t                var p = MakerJs.point.mirror(control, false, true);\r\n\t                cmd.data.push.apply(cmd.data, p);\r\n\t                var end = getPoint(cmd, 0);\r\n\t                addModel(new MakerJs.models.BezierCurve(cmd.from, control, end, options.bezierAccuracy));\r\n\t                return end;\r\n\t            };\r\n\t            var firstPoint = [0, 0];\r\n\t            var currPoint = [0, 0];\r\n\t            var pathCount = 0;\r\n\t            var prevCommand;\r\n\t            var regexpCommands = /([achlmqstvz])([0-9e\\.,\\+-\\s]*)/ig;\r\n\t            var commandMatches;\r\n\t            while ((commandMatches = regexpCommands.exec(pathData)) !== null) {\r\n\t                if (commandMatches.index === regexpCommands.lastIndex) {\r\n\t                    regexpCommands.lastIndex++;\r\n\t                }\r\n\t                var command = commandMatches[1]; //0 = command and data, 1 = command, 2 = data\r\n\t                var dataString = commandMatches[2];\r\n\t                var currCmd = {\r\n\t                    command: command.toUpperCase(),\r\n\t                    data: [],\r\n\t                    from: currPoint,\r\n\t                    prev: prevCommand\r\n\t                };\r\n\t                if (command === currCmd.command) {\r\n\t                    currCmd.absolute = true;\r\n\t                }\r\n\t                currCmd.data = importer.parseNumericList(dataString);\r\n\t                var fn = map[currCmd.command];\r\n\t                if (fn) {\r\n\t                    currPoint = fn(currCmd);\r\n\t                }\r\n\t                prevCommand = currCmd;\r\n\t            }\r\n\t            return result;\r\n\t        }\r\n\t        importer.fromSVGPathData = fromSVGPathData;\r\n\t    })(importer = MakerJs.importer || (MakerJs.importer = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var layout;\r\n\t    (function (layout) {\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function getChildPlacement(parentModel, baseline) {\r\n\t            //measure everything and cache the results\r\n\t            var atlas = new MakerJs.measure.Atlas(parentModel);\r\n\t            var measureParent = MakerJs.measure.modelExtents(parentModel, atlas);\r\n\t            //measure height of the model from the baseline 0\r\n\t            var parentTop = measureParent.high[1];\r\n\t            var cpa = [];\r\n\t            var xMap = {};\r\n\t            var walkOptions = {\r\n\t                beforeChildWalk: function (context) {\r\n\t                    var child = context.childModel;\r\n\t                    //get cached measurement of the child\r\n\t                    var m = atlas.modelMap[context.routeKey];\r\n\t                    if (!m)\r\n\t                        return;\r\n\t                    var childMeasure = MakerJs.measure.augment(m);\r\n\t                    //set a new origin at the x-center and y-baseline of the child\r\n\t                    MakerJs.model.originate(child, [childMeasure.center[0], parentTop * baseline]);\r\n\t                    //get the x-center of the child\r\n\t                    var x = child.origin[0] - measureParent.low[0];\r\n\t                    xMap[context.childId] = x;\r\n\t                    //get the x-center of the child as a percentage\r\n\t                    var xRatio = x / measureParent.width;\r\n\t                    cpa.push({ childId: context.childId, xRatio: xRatio });\r\n\t                    //do not walk the grandchildren. This is only for immediate children of the parentModel.\r\n\t                    return false;\r\n\t                }\r\n\t            };\r\n\t            MakerJs.model.walk(parentModel, walkOptions);\r\n\t            cpa.sort(function (a, b) { return a.xRatio - b.xRatio; });\r\n\t            var first = cpa[0];\r\n\t            var last = cpa[cpa.length - 1];\r\n\t            var min = first.xRatio;\r\n\t            var max = last.xRatio;\r\n\t            var span = max - min;\r\n\t            cpa.forEach(function (cp) { return cp.xRatio = (cp.xRatio - min) / span; });\r\n\t            return {\r\n\t                cpa: cpa,\r\n\t                firstX: xMap[first.childId],\r\n\t                lastX: measureParent.width - xMap[last.childId]\r\n\t            };\r\n\t        }\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function moveAndRotate(parentModel, cpa, rotate) {\r\n\t            cpa.forEach(function (cp) {\r\n\t                var child = parentModel.models[cp.childId];\r\n\t                //move the child to the new location\r\n\t                child.origin = cp.origin;\r\n\t                //rotate the child\r\n\t                if (rotate)\r\n\t                    MakerJs.model.rotate(child, cp.angle, cp.origin);\r\n\t            });\r\n\t        }\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        var onPathMap = {};\r\n\t        onPathMap[MakerJs.pathType.Arc] = function (arc, reversed, cpa) {\r\n\t            var arcSpan = MakerJs.angle.ofArcSpan(arc);\r\n\t            cpa.forEach(function (p) { return p.angle = reversed ? arc.endAngle - p.xRatio * arcSpan - 90 : arc.startAngle + p.xRatio * arcSpan + 90; });\r\n\t        };\r\n\t        onPathMap[MakerJs.pathType.Line] = function (line, reversed, cpa) {\r\n\t            var lineAngle = MakerJs.angle.ofLineInDegrees(line);\r\n\t            cpa.forEach(function (p) { return p.angle = lineAngle; });\r\n\t        };\r\n\t        /**\r\n\t         * Layout the children of a model along a path.\r\n\t         * The x-position of each child will be projected onto the path so that the proportion between children is maintained.\r\n\t         * Each child will be rotated such that it will be perpendicular to the path at the child's x-center.\r\n\t         *\r\n\t         * @param parentModel The model containing children to lay out.\r\n\t         * @param onPath The path on which to lay out.\r\n\t         * @param baseline Numeric percentage value of vertical displacement from the path. Default is zero.\r\n\t         * @param reversed Flag to travel along the path in reverse. Default is false.\r\n\t         * @param contain Flag to contain the children layout within the length of the path. Default is false.\r\n\t         * @param rotate Flag to rotate the child to perpendicular. Default is true.\r\n\t         * @returns The parentModel, for cascading.\r\n\t         */\r\n\t        function childrenOnPath(parentModel, onPath, baseline, reversed, contain, rotate) {\r\n\t            if (baseline === void 0) { baseline = 0; }\r\n\t            if (reversed === void 0) { reversed = false; }\r\n\t            if (contain === void 0) { contain = false; }\r\n\t            if (rotate === void 0) { rotate = true; }\r\n\t            var result = getChildPlacement(parentModel, baseline);\r\n\t            var cpa = result.cpa;\r\n\t            var chosenPath = onPath;\r\n\t            if (contain) {\r\n\t                //see if we need to clip\r\n\t                var onPathLength = MakerJs.measure.pathLength(onPath);\r\n\t                if (result.firstX + result.lastX < onPathLength) {\r\n\t                    chosenPath = MakerJs.path.clone(onPath);\r\n\t                    MakerJs.path.alterLength(chosenPath, -result.firstX, true);\r\n\t                    MakerJs.path.alterLength(chosenPath, -result.lastX);\r\n\t                }\r\n\t            }\r\n\t            cpa.forEach(function (p) { return p.origin = MakerJs.point.middle(chosenPath, reversed ? 1 - p.xRatio : p.xRatio); });\r\n\t            var fn = onPathMap[chosenPath.type];\r\n\t            if (fn) {\r\n\t                fn(chosenPath, reversed, cpa);\r\n\t            }\r\n\t            moveAndRotate(parentModel, cpa, rotate);\r\n\t            return parentModel;\r\n\t        }\r\n\t        layout.childrenOnPath = childrenOnPath;\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function miterAngles(points, offsetAngle) {\r\n\t            var arc = new MakerJs.paths.Arc([0, 0], 0, 0, 0);\r\n\t            return points.map(function (p, i) {\r\n\t                var a;\r\n\t                if (i === 0) {\r\n\t                    a = MakerJs.angle.ofPointInDegrees(p, points[i + 1]) + 90;\r\n\t                }\r\n\t                else if (i === points.length - 1) {\r\n\t                    a = MakerJs.angle.ofPointInDegrees(points[i - 1], p) + 90;\r\n\t                }\r\n\t                else {\r\n\t                    arc.origin = p;\r\n\t                    arc.startAngle = MakerJs.angle.ofPointInDegrees(p, points[i + 1]);\r\n\t                    arc.endAngle = MakerJs.angle.ofPointInDegrees(p, points[i - 1]);\r\n\t                    a = MakerJs.angle.ofArcMiddle(arc);\r\n\t                }\r\n\t                return a + offsetAngle;\r\n\t            });\r\n\t        }\r\n\t        /**\r\n\t         * Layout the children of a model along a chain.\r\n\t         * The x-position of each child will be projected onto the chain so that the proportion between children is maintained.\r\n\t         * The projected positions of the children will become an array of points that approximate the chain.\r\n\t         * Each child will be rotated such that it will be mitered according to the vertex angles formed by this series of points.\r\n\t         *\r\n\t         * @param parentModel The model containing children to lay out.\r\n\t         * @param onChain The chain on which to lay out.\r\n\t         * @param baseline Numeric percentage value of vertical displacement from the chain. Default is zero.\r\n\t         * @param reversed Flag to travel along the chain in reverse. Default is false.\r\n\t         * @param contain Flag to contain the children layout within the length of the chain. Default is false.\r\n\t         * @param rotate Flag to rotate the child to mitered angle. Default is true.\r\n\t         * @returns The parentModel, for cascading.\r\n\t         */\r\n\t        function childrenOnChain(parentModel, onChain, baseline, reversed, contain, rotated) {\r\n\t            if (baseline === void 0) { baseline = 0; }\r\n\t            if (reversed === void 0) { reversed = false; }\r\n\t            if (contain === void 0) { contain = false; }\r\n\t            if (rotated === void 0) { rotated = true; }\r\n\t            var result = getChildPlacement(parentModel, baseline);\r\n\t            var cpa = result.cpa;\r\n\t            var chainLength = onChain.pathLength;\r\n\t            if (contain)\r\n\t                chainLength -= result.firstX + result.lastX;\r\n\t            var absolutes = cpa.map(function (cp) { return (reversed ? 1 - cp.xRatio : cp.xRatio) * chainLength; });\r\n\t            var relatives;\r\n\t            if (reversed)\r\n\t                absolutes.reverse();\r\n\t            relatives = absolutes.map(function (ab, i) { return Math.abs(ab - (i == 0 ? 0 : absolutes[i - 1])); });\r\n\t            if (contain) {\r\n\t                relatives[0] += reversed ? result.lastX : result.firstX;\r\n\t            }\r\n\t            else {\r\n\t                relatives.shift();\r\n\t            }\r\n\t            //chain.toPoints always follows the chain in its order, from beginning to end. This is why we needed to contort the points input\r\n\t            var points = MakerJs.chain.toPoints(onChain, relatives);\r\n\t            if (points.length < cpa.length) {\r\n\t                //add last point of chain, since our distances exceeded the chain\r\n\t                var endLink = onChain.links[onChain.links.length - 1];\r\n\t                points.push(endLink.endPoints[endLink.reversed ? 0 : 1]);\r\n\t            }\r\n\t            if (contain)\r\n\t                points.shift(); //delete the first point which is the beginning of the chain\r\n\t            if (reversed)\r\n\t                points.reverse();\r\n\t            var angles = miterAngles(points, -90);\r\n\t            cpa.forEach(function (cp, i) {\r\n\t                cp.angle = angles[i];\r\n\t                cp.origin = points[i];\r\n\t            });\r\n\t            moveAndRotate(parentModel, cpa, rotated);\r\n\t            return parentModel;\r\n\t        }\r\n\t        layout.childrenOnChain = childrenOnChain;\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function cloneTo(dimension, itemToClone, count, margin) {\r\n\t            var result = {};\r\n\t            var add;\r\n\t            var measureFn;\r\n\t            var moveFn;\r\n\t            if (MakerJs.isModel(itemToClone)) {\r\n\t                measureFn = MakerJs.measure.modelExtents;\r\n\t                add = result.models = {};\r\n\t                moveFn = MakerJs.model.move;\r\n\t            }\r\n\t            else {\r\n\t                measureFn = MakerJs.measure.pathExtents;\r\n\t                add = result.paths = {};\r\n\t                moveFn = MakerJs.path.move;\r\n\t            }\r\n\t            var m = measureFn(itemToClone);\r\n\t            var size = m.high[dimension] - m.low[dimension];\r\n\t            for (var i = 0; i < count; i++) {\r\n\t                var origin = [0, 0];\r\n\t                origin[dimension] = i * (size + margin);\r\n\t                add[i] = moveFn(MakerJs.cloneObject(itemToClone), origin);\r\n\t            }\r\n\t            return result;\r\n\t        }\r\n\t        /**\r\n\t         * Layout clones in a column format.\r\n\t         *\r\n\t         * Example:\r\n\t         * ```\r\n\t         * //Grooves for a finger joint\r\n\t         * var m = require('makerjs');\r\n\t         *\r\n\t         * var dogbone = new m.models.Dogbone(50, 20, 2, -1, false);\r\n\t         *\r\n\t         * var grooves = m.layout.cloneToColumn(dogbone, 5, 20);\r\n\t         *\r\n\t         * document.write(m.exporter.toSVG(grooves));\r\n\t         * ```\r\n\t         *\r\n\t         * @param itemToClone: Either a model or a path object.\r\n\t         * @param count Number of clones in the column.\r\n\t         * @param margin Optional distance between each clone.\r\n\t         * @returns A new model with clones in a column.\r\n\t         */\r\n\t        function cloneToColumn(itemToClone, count, margin) {\r\n\t            if (margin === void 0) { margin = 0; }\r\n\t            return cloneTo(1, itemToClone, count, margin);\r\n\t        }\r\n\t        layout.cloneToColumn = cloneToColumn;\r\n\t        /**\r\n\t         * Layout clones in a row format.\r\n\t         *\r\n\t         * Example:\r\n\t         * ```\r\n\t         * //Tongue and grooves for a box joint\r\n\t         * var m = require('makerjs');\r\n\t         * var tongueWidth = 60;\r\n\t         * var grooveWidth = 50;\r\n\t         * var grooveDepth = 30;\r\n\t         * var groove = new m.models.Dogbone(grooveWidth, grooveDepth, 5, 0, true);\r\n\t         *\r\n\t         * groove.paths['leftTongue'] = new m.paths.Line([-tongueWidth / 2, 0], [0, 0]);\r\n\t         * groove.paths['rightTongue'] = new m.paths.Line([grooveWidth, 0], [grooveWidth + tongueWidth / 2, 0]);\r\n\t         *\r\n\t         * var tongueAndGrooves = m.layout.cloneToRow(groove, 3);\r\n\t         *\r\n\t         * document.write(m.exporter.toSVG(tongueAndGrooves));\r\n\t         * ```\r\n\t         *\r\n\t         * @param itemToClone: Either a model or a path object.\r\n\t         * @param count Number of clones in the row.\r\n\t         * @param margin Optional distance between each clone.\r\n\t         * @returns A new model with clones in a row.\r\n\t         */\r\n\t        function cloneToRow(itemToClone, count, margin) {\r\n\t            if (margin === void 0) { margin = 0; }\r\n\t            return cloneTo(0, itemToClone, count, margin);\r\n\t        }\r\n\t        layout.cloneToRow = cloneToRow;\r\n\t        /**\r\n\t         * Layout clones in a grid format.\r\n\t         *\r\n\t         * Example:\r\n\t         * ```\r\n\t         * //Grid of squares\r\n\t         * var m = require('makerjs');\r\n\t         * var square = new m.models.Square(43);\r\n\t         * var grid = m.layout.cloneToGrid(square, 5, 5, 7);\r\n\t         * document.write(m.exporter.toSVG(grid));\r\n\t         * ```\r\n\t         *\r\n\t         * @param itemToClone: Either a model or a path object.\r\n\t         * @param xCount Number of columns in the grid.\r\n\t         * @param yCount Number of rows in the grid.\r\n\t         * @param margin Optional numeric distance between each clone. Can also be a 2 dimensional array of numbers, to specify distances in x and y dimensions.\r\n\t         * @returns A new model with clones in a grid layout.\r\n\t         */\r\n\t        function cloneToGrid(itemToClone, xCount, yCount, margin) {\r\n\t            var margins = getMargins(margin);\r\n\t            return cloneToColumn(cloneToRow(itemToClone, xCount, margins[0]), yCount, margins[1]);\r\n\t        }\r\n\t        layout.cloneToGrid = cloneToGrid;\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function getMargins(margin) {\r\n\t            if (Array.isArray(margin)) {\r\n\t                return margin;\r\n\t            }\r\n\t            else {\r\n\t                return [margin, margin];\r\n\t            }\r\n\t        }\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function cloneToAlternatingRows(itemToClone, xCount, yCount, spacingFn) {\r\n\t            var modelToMeasure;\r\n\t            if (MakerJs.isModel(itemToClone)) {\r\n\t                modelToMeasure = itemToClone;\r\n\t            }\r\n\t            else {\r\n\t                modelToMeasure = { paths: { \"0\": itemToClone } };\r\n\t            }\r\n\t            var spacing = spacingFn(modelToMeasure);\r\n\t            var result = { models: {} };\r\n\t            for (var i = 0; i < yCount; i++) {\r\n\t                var i2 = i % 2;\r\n\t                result.models[i] = MakerJs.model.move(cloneToRow(itemToClone, xCount + i2, spacing.xMargin), [i2 * spacing.x, i * spacing.y]);\r\n\t            }\r\n\t            return result;\r\n\t        }\r\n\t        /**\r\n\t         * Layout clones in a brick format. Alternating rows will have an additional item in each row.\r\n\t         *\r\n\t         * Examples:\r\n\t         * ```\r\n\t         * //Brick wall\r\n\t         * var m = require('makerjs');\r\n\t         * var brick = new m.models.RoundRectangle(50, 30, 4);\r\n\t         * var wall = m.layout.cloneToBrick(brick, 8, 6, 3);\r\n\t         * document.write(m.exporter.toSVG(wall));\r\n\t         * ```\r\n\t         *\r\n\t         * ```\r\n\t         * //Fish scales\r\n\t         * var m = require('makerjs');\r\n\t         * var arc = new m.paths.Arc([0, 0], 50, 20, 160);\r\n\t         * var scales = m.layout.cloneToBrick(arc, 8, 20);\r\n\t         * document.write(m.exporter.toSVG(scales));\r\n\t         * ```\r\n\t         *\r\n\t         * @param itemToClone: Either a model or a path object.\r\n\t         * @param xCount Number of columns in the brick grid.\r\n\t         * @param yCount Number of rows in the brick grid.\r\n\t         * @param margin Optional numeric distance between each clone. Can also be a 2 dimensional array of numbers, to specify distances in x and y dimensions.\r\n\t         * @returns A new model with clones in a brick layout.\r\n\t         */\r\n\t        function cloneToBrick(itemToClone, xCount, yCount, margin) {\r\n\t            var margins = getMargins(margin);\r\n\t            function spacing(modelToMeasure) {\r\n\t                var m = MakerJs.measure.modelExtents(modelToMeasure);\r\n\t                var xMargin = margins[0] || 0;\r\n\t                var yMargin = margins[1] || 0;\r\n\t                return { x: (m.width + xMargin) / -2, y: m.height + yMargin, xMargin: xMargin };\r\n\t            }\r\n\t            return cloneToAlternatingRows(itemToClone, xCount, yCount, spacing);\r\n\t        }\r\n\t        layout.cloneToBrick = cloneToBrick;\r\n\t        /**\r\n\t         * Layout clones in a honeycomb format. Alternating rows will have an additional item in each row.\r\n\t         *\r\n\t         * Examples:\r\n\t         * ```\r\n\t         * //Honeycomb\r\n\t         * var m = require('makerjs');\r\n\t         * var hex = new m.models.Polygon(6, 50, 30);\r\n\t         * var pattern = m.layout.cloneToHoneycomb(hex, 8, 9, 10);\r\n\t         * document.write(m.exporter.toSVG(pattern));\r\n\t         * ```\r\n\t         *\r\n\t         * @param itemToClone: Either a model or a path object.\r\n\t         * @param xCount Number of columns in the honeycomb grid.\r\n\t         * @param yCount Number of rows in the honeycomb grid.\r\n\t         * @param margin Optional distance between each clone.\r\n\t         * @returns A new model with clones in a honeycomb layout.\r\n\t         */\r\n\t        function cloneToHoneycomb(itemToClone, xCount, yCount, margin) {\r\n\t            if (margin === void 0) { margin = 0; }\r\n\t            function spacing(modelToMeasure) {\r\n\t                var hex = MakerJs.measure.boundingHexagon(modelToMeasure);\r\n\t                var width = 2 * MakerJs.solvers.equilateralAltitude(hex.radius);\r\n\t                var s = width + margin;\r\n\t                return { x: s / -2, y: MakerJs.solvers.equilateralAltitude(s), xMargin: margin };\r\n\t            }\r\n\t            return cloneToAlternatingRows(itemToClone, xCount, yCount, spacing);\r\n\t        }\r\n\t        layout.cloneToHoneycomb = cloneToHoneycomb;\r\n\t    })(layout = MakerJs.layout || (MakerJs.layout = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var models;\r\n\t    (function (models) {\r\n\t        var hasLib = false;\r\n\t        function ensureBezierLib() {\r\n\t            if (hasLib)\r\n\t                return;\r\n\t            try {\r\n\t                var lib = Bezier.prototype;\r\n\t                hasLib = true;\r\n\t            }\r\n\t            catch (e) {\r\n\t                throw \"Bezier library not found. If you are using Node, try running 'npm install' or if you are in the browser, download http://pomax.github.io/bezierjs/bezier.js to your website and add a script tag.\";\r\n\t            }\r\n\t        }\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        var scratch;\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function getScratch(seed) {\r\n\t            var points = [seed.origin];\r\n\t            points.push.apply(points, seed.controls);\r\n\t            points.push(seed.end);\r\n\t            var bezierJsPoints = points.map(function (p) {\r\n\t                var bp = {\r\n\t                    x: p[0], y: p[1]\r\n\t                };\r\n\t                return bp;\r\n\t            });\r\n\t            if (!scratch) {\r\n\t                ensureBezierLib();\r\n\t                scratch = new Bezier(bezierJsPoints);\r\n\t            }\r\n\t            else {\r\n\t                scratch.points = bezierJsPoints;\r\n\t                scratch.update();\r\n\t            }\r\n\t            return scratch;\r\n\t        }\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function BezierToSeed(b, range) {\r\n\t            var points = b.points.map(function (p) { return [p.x, p.y]; });\r\n\t            var seed = new BezierSeed(points);\r\n\t            if (range) {\r\n\t                seed.parentRange = range;\r\n\t            }\r\n\t            return seed;\r\n\t        }\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function seedToBezier(seed) {\r\n\t            var coords = [];\r\n\t            coords.push.apply(coords, seed.origin);\r\n\t            coords.push.apply(coords, seed.controls[0]);\r\n\t            if (seed.controls.length > 1) {\r\n\t                coords.push.apply(coords, seed.controls[1]);\r\n\t            }\r\n\t            coords.push.apply(coords, seed.end);\r\n\t            ensureBezierLib();\r\n\t            return new Bezier(coords);\r\n\t        }\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function getArcs(b, accuracy) {\r\n\t            var arcs = b.arcs(accuracy);\r\n\t            return arcs.map(function (a) {\r\n\t                var arc = new MakerJs.paths.Arc([a.x, a.y], a.r, MakerJs.angle.toDegrees(a.s), MakerJs.angle.toDegrees(a.e));\r\n\t                arc.bezierData = { startT: a.interval.start, endT: a.interval.end };\r\n\t                return arc;\r\n\t            });\r\n\t        }\r\n\t        /**\r\n\t         * @private\r\n\t         * Class for bezier seed.\r\n\t         */\r\n\t        var BezierSeed = (function () {\r\n\t            function BezierSeed() {\r\n\t                var args = [];\r\n\t                for (var _i = 0; _i < arguments.length; _i++) {\r\n\t                    args[_i] = arguments[_i];\r\n\t                }\r\n\t                this.type = MakerJs.pathType.BezierSeed;\r\n\t                switch (args.length) {\r\n\t                    case 1:\r\n\t                        var points = args[0];\r\n\t                        this.origin = points[0];\r\n\t                        if (points.length === 3) {\r\n\t                            this.controls = [points[1]];\r\n\t                            this.end = points[2];\r\n\t                        }\r\n\t                        else if (points.length === 4) {\r\n\t                            this.controls = [points[1], points[2]];\r\n\t                            this.end = points[3];\r\n\t                        }\r\n\t                        else {\r\n\t                            this.end = points[1];\r\n\t                        }\r\n\t                        break;\r\n\t                    case 3:\r\n\t                        if (Array.isArray(args[1])) {\r\n\t                            this.controls = args[1];\r\n\t                        }\r\n\t                        else {\r\n\t                            this.controls = [args[1]];\r\n\t                        }\r\n\t                        this.end = args[2];\r\n\t                        break;\r\n\t                    case 4:\r\n\t                        this.controls = [args[1], args[2]];\r\n\t                        this.end = args[3];\r\n\t                        break;\r\n\t                }\r\n\t            }\r\n\t            return BezierSeed;\r\n\t        }());\r\n\t        var BezierCurve = (function () {\r\n\t            function BezierCurve() {\r\n\t                var args = [];\r\n\t                for (var _i = 0; _i < arguments.length; _i++) {\r\n\t                    args[_i] = arguments[_i];\r\n\t                }\r\n\t                var _this = this;\r\n\t                this.type = BezierCurve.typeName;\r\n\t                var isLeaf = false;\r\n\t                var isArrayArg0 = Array.isArray(args[0]);\r\n\t                switch (args.length) {\r\n\t                    case 2:\r\n\t                        if (isArrayArg0) {\r\n\t                            this.accuracy = args[1];\r\n\t                        }\r\n\t                        else {\r\n\t                            //seed\r\n\t                            this.seed = args[0];\r\n\t                            if (typeof args[1] === \"boolean\") {\r\n\t                                isLeaf = args[1];\r\n\t                            }\r\n\t                            else {\r\n\t                                this.accuracy = args[1];\r\n\t                            }\r\n\t                            break;\r\n\t                        }\r\n\t                    //fall through to point array\r\n\t                    case 1:\r\n\t                        if (isArrayArg0) {\r\n\t                            var points = args[0];\r\n\t                            this.seed = new BezierSeed(points);\r\n\t                        }\r\n\t                        else {\r\n\t                            this.seed = args[0];\r\n\t                        }\r\n\t                        break;\r\n\t                    default:\r\n\t                        switch (args.length) {\r\n\t                            case 4:\r\n\t                                if (MakerJs.isPoint(args[3])) {\r\n\t                                    this.seed = new BezierSeed(args);\r\n\t                                    break;\r\n\t                                }\r\n\t                                else {\r\n\t                                    this.accuracy = args[3];\r\n\t                                    //fall through\r\n\t                                }\r\n\t                            case 3:\r\n\t                                if (isArrayArg0) {\r\n\t                                    this.seed = new BezierSeed(args.slice(0, 3));\r\n\t                                }\r\n\t                                else {\r\n\t                                    this.seed = args[0];\r\n\t                                    isLeaf = args[1];\r\n\t                                    this.accuracy = args[2];\r\n\t                                }\r\n\t                                break;\r\n\t                            case 5:\r\n\t                                this.accuracy = args[4];\r\n\t                                this.seed = new BezierSeed(args.slice(0, 4));\r\n\t                                break;\r\n\t                        }\r\n\t                        break;\r\n\t                }\r\n\t                this.paths = {};\r\n\t                if (MakerJs.measure.isBezierSeedLinear(this.seed)) {\r\n\t                    //use a line and exit\r\n\t                    this.paths = {\r\n\t                        'Line': new MakerJs.paths.Line(MakerJs.point.clone(this.seed.origin), MakerJs.point.clone(this.seed.end))\r\n\t                    };\r\n\t                    return;\r\n\t                }\r\n\t                var b = seedToBezier(this.seed);\r\n\t                if (!isLeaf) {\r\n\t                    //breaking the bezier into its extrema will make the models better correspond to rectangular measurements.\r\n\t                    //however, the potential drawback is that these broken curves will not get reconciled to this overall curve.\r\n\t                    var extrema = b.extrema().values\r\n\t                        .map(function (m) { return MakerJs.round(m); })\r\n\t                        .filter(function (value, index, self) { return self.indexOf(value) === index; })\r\n\t                        .sort();\r\n\t                    //remove leading zero\r\n\t                    if (extrema.length > 0 && extrema[0] === 0) {\r\n\t                        extrema.shift();\r\n\t                    }\r\n\t                    //remove ending 1\r\n\t                    if (extrema.length > 0 && extrema[extrema.length - 1] === 1) {\r\n\t                        extrema.pop();\r\n\t                    }\r\n\t                    if (extrema.length === 0) {\r\n\t                        isLeaf = true;\r\n\t                    }\r\n\t                    else {\r\n\t                        //need to create children\r\n\t                        //this will not contain paths, but will contain other curves\r\n\t                        this.models = {};\r\n\t                        var childSeeds = [];\r\n\t                        if (extrema.length === 1) {\r\n\t                            var split = b.split(extrema[0]);\r\n\t                            childSeeds.push(BezierToSeed(split.left, { startT: 0, endT: extrema[0] }), BezierToSeed(split.right, { startT: extrema[0], endT: 1 }));\r\n\t                        }\r\n\t                        else {\r\n\t                            //add 0 and 1 endings\r\n\t                            extrema.unshift(0);\r\n\t                            extrema.push(1);\r\n\t                            for (var i = 1; i < extrema.length; i++) {\r\n\t                                //get the bezier between \r\n\t                                childSeeds.push(BezierToSeed(b.split(extrema[i - 1], extrema[i]), { startT: extrema[i - 1], endT: extrema[i] }));\r\n\t                            }\r\n\t                        }\r\n\t                        childSeeds.forEach(function (seed, i) {\r\n\t                            _this.models['Curve_' + (1 + i)] = new BezierCurve(seed, true, _this.accuracy);\r\n\t                        });\r\n\t                    }\r\n\t                }\r\n\t                if (isLeaf) {\r\n\t                    this.paths = {};\r\n\t                    //use arcs\r\n\t                    if (!this.accuracy) {\r\n\t                        //get a default accuracy relative to the size of the bezier\r\n\t                        var len = b.length();\r\n\t                        //set the default to be a combination of fast rendering and good smoothing.\r\n\t                        this.accuracy = len / 1000;\r\n\t                    }\r\n\t                    var arcs = getArcs(b, this.accuracy);\r\n\t                    var i = 0;\r\n\t                    arcs.forEach(function (arc) {\r\n\t                        var span = MakerJs.angle.ofArcSpan(arc);\r\n\t                        if (span === 0 || span === 360)\r\n\t                            return;\r\n\t                        _this.paths['Arc_' + (1 + i)] = arc;\r\n\t                        i++;\r\n\t                    });\r\n\t                }\r\n\t            }\r\n\t            BezierCurve.getBezierSeeds = function (curve, options) {\r\n\t                if (options === void 0) { options = {}; }\r\n\t                options.shallow = true;\r\n\t                var b = seedToBezier(curve.seed);\r\n\t                var seeds = [];\r\n\t                MakerJs.model.findChains(curve, function (chains, loose, layer) {\r\n\t                    if (chains.length === 0) {\r\n\t                        //if this is a linear curve then look if line ends are the same as bezier ends.\r\n\t                        if (loose.length === 1 && loose[0].pathContext.type === MakerJs.pathType.Line) {\r\n\t                            var line = loose[0].pathContext;\r\n\t                            if (MakerJs.measure.isPointEqual(line.origin, curve.seed.origin) && MakerJs.measure.isPointEqual(line.end, curve.seed.end)) {\r\n\t                                seeds.push(curve.seed);\r\n\t                            }\r\n\t                        }\r\n\t                    }\r\n\t                    else if (chains.length === 1) {\r\n\t                        //check if endpoints are 0 and 1\r\n\t                        var chain = chains[0];\r\n\t                        var chainEnds = [chain.links[0], chain.links[chain.links.length - 1]];\r\n\t                        var chainReversed = false;\r\n\t                        //put them in bezier t order\r\n\t                        if (chainEnds[0].walkedPath.pathContext.bezierData.startT > chainEnds[1].walkedPath.pathContext.bezierData.startT) {\r\n\t                            chainEnds.reverse();\r\n\t                            chainReversed = true;\r\n\t                        }\r\n\t                        var intact = true;\r\n\t                        for (var i = 2; i--;) {\r\n\t                            var chainEnd = chainEnds[i];\r\n\t                            var arc = chainEnd.walkedPath.pathContext;\r\n\t                            var reversed = (chainReversed !== chainEnd.reversed);\r\n\t                            var chainEndPoint = chainEnd.endPoints[reversed ? 1 - i : i];\r\n\t                            var trueEndpoint = b.compute(i === 0 ? arc.bezierData.startT : arc.bezierData.endT);\r\n\t                            if (!MakerJs.measure.isPointEqual(chainEndPoint, [trueEndpoint.x, trueEndpoint.y], .00001)) {\r\n\t                                intact = false;\r\n\t                                break;\r\n\t                            }\r\n\t                        }\r\n\t                        if (intact) {\r\n\t                            seeds.push(curve.seed);\r\n\t                        }\r\n\t                    }\r\n\t                    else {\r\n\t                        //TODO: find bezier seeds from a split chain\r\n\t                    }\r\n\t                }, options);\r\n\t                return seeds;\r\n\t            };\r\n\t            BezierCurve.computeLength = function (seed) {\r\n\t                var b = seedToBezier(seed);\r\n\t                return b.length();\r\n\t            };\r\n\t            BezierCurve.computePoint = function (seed, t) {\r\n\t                var s = getScratch(seed);\r\n\t                var computedPoint = s.compute(t);\r\n\t                return [computedPoint.x, computedPoint.y];\r\n\t            };\r\n\t            return BezierCurve;\r\n\t        }());\r\n\t        BezierCurve.typeName = 'BezierCurve';\r\n\t        models.BezierCurve = BezierCurve;\r\n\t        BezierCurve.metaParameters = [\r\n\t            {\r\n\t                title: \"points\", type: \"select\", value: [\r\n\t                    [[100, 0], [-80, -60], [100, 220], [100, 60]],\r\n\t                    [[0, 0], [100, 0], [100, 100]],\r\n\t                    [[0, 0], [20, 0], [80, 100], [100, 100]]\r\n\t                ]\r\n\t            }\r\n\t        ];\r\n\t    })(models = MakerJs.models || (MakerJs.models = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var models;\r\n\t    (function (models) {\r\n\t        /**\r\n\t         * @private\r\n\t         * Our maximum circular arc span for accurate representation by a cubic curve.\r\n\t         */\r\n\t        var maxBezierArcspan = 45;\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function controlYForCircularCubic(arcSpanInRadians) {\r\n\t            //from http://pomax.github.io/bezierinfo/#circles_cubic\r\n\t            return 4 * (Math.tan(arcSpanInRadians / 4) / 3);\r\n\t        }\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function controlPointsForCircularCubic(arc) {\r\n\t            var arcSpan = MakerJs.angle.ofArcSpan(arc);\r\n\t            //compute y for radius of 1\r\n\t            var y = controlYForCircularCubic(MakerJs.angle.toRadians(arcSpan));\r\n\t            //multiply by radius\r\n\t            var c1 = [arc.radius, arc.radius * y];\r\n\t            //get second control point by mirroring, then rotating\r\n\t            var c2 = MakerJs.point.rotate(MakerJs.point.mirror(c1, false, true), arcSpan, [0, 0]);\r\n\t            //rotate again to start angle, then offset by arc's origin\r\n\t            return [c1, c2].map(function (p) { return MakerJs.point.add(arc.origin, MakerJs.point.rotate(p, arc.startAngle, [0, 0])); });\r\n\t        }\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function bezierSeedFromArc(arc) {\r\n\t            var span = MakerJs.angle.ofArcSpan(arc);\r\n\t            if (span <= 90) {\r\n\t                var endPoints = MakerJs.point.fromPathEnds(arc);\r\n\t                var controls = controlPointsForCircularCubic(arc);\r\n\t                return {\r\n\t                    type: MakerJs.pathType.BezierSeed,\r\n\t                    origin: endPoints[0],\r\n\t                    controls: controls,\r\n\t                    end: endPoints[1]\r\n\t                };\r\n\t            }\r\n\t            return null;\r\n\t        }\r\n\t        var Ellipse = (function () {\r\n\t            function Ellipse() {\r\n\t                var args = [];\r\n\t                for (var _i = 0; _i < arguments.length; _i++) {\r\n\t                    args[_i] = arguments[_i];\r\n\t                }\r\n\t                var _this = this;\r\n\t                this.models = {};\r\n\t                var n = 360 / maxBezierArcspan;\r\n\t                var accuracy;\r\n\t                var isPointArgs0 = MakerJs.isPoint(args[0]);\r\n\t                var realArgs = function (numArgs) {\r\n\t                    switch (numArgs) {\r\n\t                        case 2:\r\n\t                            if (isPointArgs0) {\r\n\t                                //origin, radius\r\n\t                                _this.origin = args[0];\r\n\t                            }\r\n\t                            break;\r\n\t                        case 3:\r\n\t                            //origin, rx, ry\r\n\t                            _this.origin = args[0];\r\n\t                            break;\r\n\t                        case 4:\r\n\t                            //cx, cy, rx, ry\r\n\t                            _this.origin = [args[0], args[1]];\r\n\t                            break;\r\n\t                    }\r\n\t                    //construct a bezier approximation for an arc with radius of 1.\r\n\t                    var a = 360 / n;\r\n\t                    var arc = new MakerJs.paths.Arc([0, 0], 1, 0, a);\r\n\t                    //clone and rotate to complete a circle\r\n\t                    for (var i = 0; i < n; i++) {\r\n\t                        var seed = bezierSeedFromArc(arc);\r\n\t                        switch (numArgs) {\r\n\t                            case 1:\r\n\t                                //radius\r\n\t                                seed = MakerJs.path.scale(seed, args[0]);\r\n\t                                break;\r\n\t                            case 2:\r\n\t                                if (isPointArgs0) {\r\n\t                                    //origin, radius\r\n\t                                    seed = MakerJs.path.scale(seed, args[1]);\r\n\t                                }\r\n\t                                else {\r\n\t                                    //rx, ry\r\n\t                                    seed = MakerJs.path.distort(seed, args[0], args[1]);\r\n\t                                }\r\n\t                                break;\r\n\t                            case 3:\r\n\t                                //origin, rx, ry\r\n\t                                seed = MakerJs.path.distort(seed, args[1], args[2]);\r\n\t                                break;\r\n\t                            case 4:\r\n\t                                //cx, cy, rx, ry\r\n\t                                seed = MakerJs.path.distort(seed, args[2], args[3]);\r\n\t                                break;\r\n\t                        }\r\n\t                        _this.models['Curve_' + (1 + i)] = new models.BezierCurve(seed, accuracy);\r\n\t                        arc.startAngle += a;\r\n\t                        arc.endAngle += a;\r\n\t                    }\r\n\t                };\r\n\t                switch (args.length) {\r\n\t                    case 2:\r\n\t                        realArgs(2);\r\n\t                        break;\r\n\t                    case 3:\r\n\t                        if (isPointArgs0) {\r\n\t                            realArgs(3);\r\n\t                        }\r\n\t                        else {\r\n\t                            accuracy = args[2];\r\n\t                            realArgs(2);\r\n\t                        }\r\n\t                        break;\r\n\t                    case 4:\r\n\t                        if (isPointArgs0) {\r\n\t                            accuracy = args[3];\r\n\t                            realArgs(3);\r\n\t                        }\r\n\t                        else {\r\n\t                            realArgs(4);\r\n\t                        }\r\n\t                        break;\r\n\t                    case 5:\r\n\t                        accuracy = args[4];\r\n\t                        realArgs(4);\r\n\t                        break;\r\n\t                }\r\n\t            }\r\n\t            return Ellipse;\r\n\t        }());\r\n\t        models.Ellipse = Ellipse;\r\n\t        Ellipse.metaParameters = [\r\n\t            { title: \"radiusX\", type: \"range\", min: 1, max: 50, value: 50 },\r\n\t            { title: \"radiusY\", type: \"range\", min: 1, max: 50, value: 25 }\r\n\t        ];\r\n\t        var EllipticArc = (function () {\r\n\t            function EllipticArc() {\r\n\t                var args = [];\r\n\t                for (var _i = 0; _i < arguments.length; _i++) {\r\n\t                    args[_i] = arguments[_i];\r\n\t                }\r\n\t                this.models = {};\r\n\t                var arc;\r\n\t                var accuracy;\r\n\t                var distortX;\r\n\t                var distortY;\r\n\t                if (MakerJs.isPathArc(args[0])) {\r\n\t                    arc = args[0];\r\n\t                    distortX = args[1];\r\n\t                    distortY = args[2];\r\n\t                    accuracy = args[3];\r\n\t                }\r\n\t                else {\r\n\t                    arc = new MakerJs.paths.Arc([0, 0], 1, args[0], args[1]);\r\n\t                    distortX = args[2];\r\n\t                    distortY = args[3];\r\n\t                    accuracy = args[4];\r\n\t                }\r\n\t                var span = MakerJs.angle.ofArcSpan(arc);\r\n\t                //split into equal chunks, no larger than max chunk size\r\n\t                var count = Math.ceil(span / maxBezierArcspan);\r\n\t                var subSpan = span / count;\r\n\t                var subArc = MakerJs.path.clone(arc);\r\n\t                for (var i = 0; i < count; i++) {\r\n\t                    subArc.startAngle = arc.startAngle + (i * subSpan);\r\n\t                    subArc.endAngle = subArc.startAngle + subSpan;\r\n\t                    var seed = bezierSeedFromArc(subArc);\r\n\t                    seed = MakerJs.path.distort(seed, distortX, distortY);\r\n\t                    this.models['Curve_' + (1 + i)] = new models.BezierCurve(seed, accuracy);\r\n\t                }\r\n\t            }\r\n\t            return EllipticArc;\r\n\t        }());\r\n\t        models.EllipticArc = EllipticArc;\r\n\t        EllipticArc.metaParameters = [\r\n\t            { title: \"startAngle\", type: \"range\", min: 0, max: 90, value: 0 },\r\n\t            { title: \"endAngle\", type: \"range\", min: 90, max: 360, value: 180 },\r\n\t            { title: \"radiusX\", type: \"range\", min: 1, max: 50, value: 50 },\r\n\t            { title: \"radiusY\", type: \"range\", min: 1, max: 50, value: 25 }\r\n\t        ];\r\n\t    })(models = MakerJs.models || (MakerJs.models = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var models;\r\n\t    (function (models) {\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        function getPoints(arg) {\r\n\t            var coords;\r\n\t            if (Array.isArray(arg)) {\r\n\t                if (MakerJs.isPoint(arg[0])) {\r\n\t                    return arg;\r\n\t                }\r\n\t                coords = arg;\r\n\t            }\r\n\t            else {\r\n\t                coords = MakerJs.importer.parseNumericList(arg);\r\n\t            }\r\n\t            var points = [];\r\n\t            for (var i = 0; i < coords.length; i += 2) {\r\n\t                points.push([coords[i], coords[i + 1]]);\r\n\t            }\r\n\t            return points;\r\n\t        }\r\n\t        var ConnectTheDots = (function () {\r\n\t            function ConnectTheDots() {\r\n\t                var args = [];\r\n\t                for (var _i = 0; _i < arguments.length; _i++) {\r\n\t                    args[_i] = arguments[_i];\r\n\t                }\r\n\t                var _this = this;\r\n\t                this.paths = {};\r\n\t                var isClosed;\r\n\t                var points;\r\n\t                switch (args.length) {\r\n\t                    case 1:\r\n\t                        isClosed = true;\r\n\t                        points = getPoints(args[0]);\r\n\t                        break;\r\n\t                    case 2:\r\n\t                        isClosed = args[0];\r\n\t                        points = getPoints(args[1]);\r\n\t                        break;\r\n\t                }\r\n\t                var connect = function (a, b, skipZeroDistance) {\r\n\t                    if (skipZeroDistance === void 0) { skipZeroDistance = false; }\r\n\t                    if (skipZeroDistance && MakerJs.measure.pointDistance(points[a], points[b]) == 0)\r\n\t                        return;\r\n\t                    _this.paths[\"ShapeLine\" + i] = new MakerJs.paths.Line(points[a], points[b]);\r\n\t                };\r\n\t                for (var i = 1; i < points.length; i++) {\r\n\t                    connect(i - 1, i);\r\n\t                }\r\n\t                if (isClosed && points.length > 2) {\r\n\t                    connect(points.length - 1, 0, true);\r\n\t                }\r\n\t            }\r\n\t            return ConnectTheDots;\r\n\t        }());\r\n\t        models.ConnectTheDots = ConnectTheDots;\r\n\t        ConnectTheDots.metaParameters = [\r\n\t            { title: \"closed\", type: \"bool\", value: true },\r\n\t            {\r\n\t                title: \"points\", type: \"select\", value: [\r\n\t                    [[0, 0], [40, 40], [60, 20], [100, 100], [60, 60], [40, 80]],\r\n\t                    [[0, 0], [100, 0], [50, 87]],\r\n\t                    [-10, 0, 10, 0, 0, 20],\r\n\t                    '-10 0 10 0 0 20',\r\n\t                ]\r\n\t            }\r\n\t        ];\r\n\t    })(models = MakerJs.models || (MakerJs.models = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var models;\r\n\t    (function (models) {\r\n\t        var Polygon = (function () {\r\n\t            function Polygon(numberOfSides, radius, firstCornerAngleInDegrees, circumscribed) {\r\n\t                this.paths = {};\r\n\t                this.paths = new models.ConnectTheDots(true, Polygon.getPoints(numberOfSides, radius, firstCornerAngleInDegrees, circumscribed)).paths;\r\n\t            }\r\n\t            Polygon.circumscribedRadius = function (radius, angleInRadians) {\r\n\t                return radius / Math.cos(angleInRadians / 2);\r\n\t            };\r\n\t            Polygon.getPoints = function (numberOfSides, radius, firstCornerAngleInDegrees, circumscribed) {\r\n\t                if (firstCornerAngleInDegrees === void 0) { firstCornerAngleInDegrees = 0; }\r\n\t                if (circumscribed === void 0) { circumscribed = false; }\r\n\t                var points = [];\r\n\t                var a1 = MakerJs.angle.toRadians(firstCornerAngleInDegrees);\r\n\t                var a = 2 * Math.PI / numberOfSides;\r\n\t                if (circumscribed) {\r\n\t                    radius = Polygon.circumscribedRadius(radius, a);\r\n\t                }\r\n\t                for (var i = 0; i < numberOfSides; i++) {\r\n\t                    points.push(MakerJs.point.fromPolar(a * i + a1, radius));\r\n\t                }\r\n\t                return points;\r\n\t            };\r\n\t            return Polygon;\r\n\t        }());\r\n\t        models.Polygon = Polygon;\r\n\t        Polygon.metaParameters = [\r\n\t            { title: \"number of sides\", type: \"range\", min: 3, max: 24, value: 6 },\r\n\t            { title: \"radius\", type: \"range\", min: 1, max: 100, value: 50 },\r\n\t            { title: \"offset angle\", type: \"range\", min: 0, max: 180, value: 0 },\r\n\t            { title: \"radius on flats (vs radius on vertexes)\", type: \"bool\", value: false }\r\n\t        ];\r\n\t    })(models = MakerJs.models || (MakerJs.models = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var models;\r\n\t    (function (models) {\r\n\t        var Holes = (function () {\r\n\t            /**\r\n\t             * Create an array of circles of the same radius from an array of center points.\r\n\t             *\r\n\t             * Example:\r\n\t             * ```\r\n\t             * //Create some holes from an array of points\r\n\t             * var makerjs = require('makerjs');\r\n\t             * var model = new makerjs.models.Holes(10, [[0, 0],[50, 0],[25, 40]]);\r\n\t             * var svg = makerjs.exporter.toSVG(model);\r\n\t             * document.write(svg);\r\n\t             * ```\r\n\t             *\r\n\t             * @param holeRadius Hole radius.\r\n\t             * @param points Array of points for origin of each hole.\r\n\t             * @param ids Optional array of corresponding path ids for the holes.\r\n\t             */\r\n\t            function Holes(holeRadius, points, ids) {\r\n\t                this.paths = {};\r\n\t                for (var i = 0; i < points.length; i++) {\r\n\t                    var id = ids ? ids[i] : i.toString();\r\n\t                    this.paths[id] = new MakerJs.paths.Circle(points[i], holeRadius);\r\n\t                }\r\n\t            }\r\n\t            return Holes;\r\n\t        }());\r\n\t        models.Holes = Holes;\r\n\t        Holes.metaParameters = [\r\n\t            { title: \"holeRadius\", type: \"range\", min: .1, max: 10, step: .1, value: 1 },\r\n\t            {\r\n\t                title: \"points\", type: \"select\", value: [\r\n\t                    [[0, 0], [10, 10], [20, 20], [30, 30], [40, 40], [50, 50], [60, 60], [70, 70], [80, 80]],\r\n\t                    [[0, 0], [0, 25], [0, 50], [0, 75], [0, 100], [25, 50], [50, 50], [75, 50], [100, 100], [100, 75], [100, 50], [100, 25], [100, 0]]\r\n\t                ]\r\n\t            }\r\n\t        ];\r\n\t    })(models = MakerJs.models || (MakerJs.models = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var models;\r\n\t    (function (models) {\r\n\t        var BoltCircle = (function () {\r\n\t            function BoltCircle(boltRadius, holeRadius, boltCount, firstBoltAngleInDegrees) {\r\n\t                if (firstBoltAngleInDegrees === void 0) { firstBoltAngleInDegrees = 0; }\r\n\t                this.paths = {};\r\n\t                var points = models.Polygon.getPoints(boltCount, boltRadius, firstBoltAngleInDegrees);\r\n\t                var ids = points.map(function (p, i) { return \"bolt \" + i; });\r\n\t                this.paths = new models.Holes(holeRadius, points, ids).paths;\r\n\t            }\r\n\t            return BoltCircle;\r\n\t        }());\r\n\t        models.BoltCircle = BoltCircle;\r\n\t        BoltCircle.metaParameters = [\r\n\t            { title: \"bolt circle radius\", type: \"range\", min: 1, max: 100, value: 50 },\r\n\t            { title: \"hole radius\", type: \"range\", min: 1, max: 50, value: 5 },\r\n\t            { title: \"bolt count\", type: \"range\", min: 3, max: 24, value: 12 },\r\n\t            { title: \"offset angle\", type: \"range\", min: 0, max: 180, value: 0 }\r\n\t        ];\r\n\t    })(models = MakerJs.models || (MakerJs.models = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var models;\r\n\t    (function (models) {\r\n\t        var BoltRectangle = (function () {\r\n\t            function BoltRectangle(width, height, holeRadius) {\r\n\t                this.paths = {};\r\n\t                var points = [[0, 0], [width, 0], [width, height], [0, height]];\r\n\t                var ids = [\"BottomLeft_bolt\", \"BottomRight_bolt\", \"TopRight_bolt\", \"TopLeft_bolt\"];\r\n\t                this.paths = new models.Holes(holeRadius, points, ids).paths;\r\n\t            }\r\n\t            return BoltRectangle;\r\n\t        }());\r\n\t        models.BoltRectangle = BoltRectangle;\r\n\t        BoltRectangle.metaParameters = [\r\n\t            { title: \"width\", type: \"range\", min: 1, max: 100, value: 100 },\r\n\t            { title: \"height\", type: \"range\", min: 1, max: 100, value: 50 },\r\n\t            { title: \"hole radius\", type: \"range\", min: 1, max: 50, value: 5 }\r\n\t        ];\r\n\t    })(models = MakerJs.models || (MakerJs.models = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var models;\r\n\t    (function (models) {\r\n\t        var Dogbone = (function () {\r\n\t            /**\r\n\t             * Create a dogbone from width, height, corner radius, style, and bottomless flag.\r\n\t             *\r\n\t             * Example:\r\n\t             * ```\r\n\t             * var d = new makerjs.models.Dogbone(50, 100, 5);\r\n\t             * ```\r\n\t             *\r\n\t             * @param width Width of the rectangle.\r\n\t             * @param height Height of the rectangle.\r\n\t             * @param radius Corner radius.\r\n\t             * @param style Optional corner style: 0 (default) for dogbone, 1 for vertical, -1 for horizontal.\r\n\t             * @param bottomless Optional flag to omit the bottom line and bottom corners (default false).\r\n\t             */\r\n\t            function Dogbone(width, height, radius, style, bottomless) {\r\n\t                if (style === void 0) { style = 0; }\r\n\t                if (bottomless === void 0) { bottomless = false; }\r\n\t                this.paths = {};\r\n\t                var maxSide = Math.min(height, width) / 2;\r\n\t                var maxRadius;\r\n\t                switch (style) {\r\n\t                    case -1: //horizontal\r\n\t                    case 1:\r\n\t                        maxRadius = maxSide / 2;\r\n\t                        break;\r\n\t                    case 0: //equal\r\n\t                    default:\r\n\t                        maxRadius = maxSide * Math.SQRT2 / 2;\r\n\t                        break;\r\n\t                }\r\n\t                radius = Math.min(radius, maxRadius);\r\n\t                var ax;\r\n\t                var ay;\r\n\t                var lx;\r\n\t                var ly;\r\n\t                var apexes;\r\n\t                switch (style) {\r\n\t                    case -1:\r\n\t                        ax = 0;\r\n\t                        ay = radius;\r\n\t                        lx = 0;\r\n\t                        ly = radius * 2;\r\n\t                        apexes = [180, 0, 0, 180];\r\n\t                        break;\r\n\t                    case 1:\r\n\t                        ax = radius;\r\n\t                        ay = 0;\r\n\t                        lx = radius * 2;\r\n\t                        ly = 0;\r\n\t                        apexes = [270, 270, 90, 90];\r\n\t                        break;\r\n\t                    case 0:\r\n\t                    default:\r\n\t                        ax = ay = radius / Math.SQRT2;\r\n\t                        lx = ly = ax * 2;\r\n\t                        apexes = [225, 315, 45, 135];\r\n\t                        break;\r\n\t                }\r\n\t                if (bottomless) {\r\n\t                    this.paths['Left'] = new MakerJs.paths.Line([0, 0], [0, height - ly]);\r\n\t                    this.paths['Right'] = new MakerJs.paths.Line([width, 0], [width, height - ly]);\r\n\t                }\r\n\t                else {\r\n\t                    this.paths['Left'] = new MakerJs.paths.Line([0, ly], [0, height - ly]);\r\n\t                    this.paths['Right'] = new MakerJs.paths.Line([width, ly], [width, height - ly]);\r\n\t                    this.paths['Bottom'] = new MakerJs.paths.Line([lx, 0], [width - lx, 0]);\r\n\t                    this.paths[\"BottomLeft\"] = new MakerJs.paths.Arc([ax, ay], radius, apexes[0] - 90, apexes[0] + 90);\r\n\t                    this.paths[\"BottomRight\"] = new MakerJs.paths.Arc([width - ax, ay], radius, apexes[1] - 90, apexes[1] + 90);\r\n\t                }\r\n\t                this.paths[\"TopRight\"] = new MakerJs.paths.Arc([width - ax, height - ay], radius, apexes[2] - 90, apexes[2] + 90);\r\n\t                this.paths[\"TopLeft\"] = new MakerJs.paths.Arc([ax, height - ay], radius, apexes[3] - 90, apexes[3] + 90);\r\n\t                this.paths['Top'] = new MakerJs.paths.Line([lx, height], [width - lx, height]);\r\n\t            }\r\n\t            return Dogbone;\r\n\t        }());\r\n\t        models.Dogbone = Dogbone;\r\n\t        Dogbone.metaParameters = [\r\n\t            { title: \"width\", type: \"range\", min: 1, max: 100, value: 50 },\r\n\t            { title: \"height\", type: \"range\", min: 1, max: 100, value: 100 },\r\n\t            { title: \"radius\", type: \"range\", min: 0, max: 50, value: 5 },\r\n\t            { title: \"style\", type: \"select\", value: [0, 1, -1] },\r\n\t            { title: \"bottomless\", type: \"bool\", value: false }\r\n\t        ];\r\n\t    })(models = MakerJs.models || (MakerJs.models = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var models;\r\n\t    (function (models) {\r\n\t        var Dome = (function () {\r\n\t            function Dome(width, height, radius, bottomless) {\r\n\t                this.paths = {};\r\n\t                var w2 = width / 2;\r\n\t                if (radius < 0)\r\n\t                    radius = 0;\r\n\t                if (radius === void 0)\r\n\t                    radius = w2;\r\n\t                radius = Math.min(radius, w2);\r\n\t                radius = Math.min(radius, height);\r\n\t                var wt = Math.max(w2 - radius, 0);\r\n\t                var hr = Math.max(height - radius, 0);\r\n\t                if (!bottomless) {\r\n\t                    this.paths[\"Bottom\"] = new MakerJs.paths.Line([-w2, 0], [w2, 0]);\r\n\t                }\r\n\t                if (hr) {\r\n\t                    this.paths[\"Left\"] = new MakerJs.paths.Line([-w2, 0], [-w2, hr]);\r\n\t                    this.paths[\"Right\"] = new MakerJs.paths.Line([w2, 0], [w2, hr]);\r\n\t                }\r\n\t                if (radius > 0) {\r\n\t                    this.paths[\"TopLeft\"] = new MakerJs.paths.Arc([-wt, hr], radius, 90, 180);\r\n\t                    this.paths[\"TopRight\"] = new MakerJs.paths.Arc([wt, hr], radius, 0, 90);\r\n\t                }\r\n\t                if (wt) {\r\n\t                    this.paths[\"Top\"] = new MakerJs.paths.Line([-wt, height], [wt, height]);\r\n\t                }\r\n\t            }\r\n\t            return Dome;\r\n\t        }());\r\n\t        models.Dome = Dome;\r\n\t        Dome.metaParameters = [\r\n\t            { title: \"width\", type: \"range\", min: 1, max: 100, value: 50 },\r\n\t            { title: \"height\", type: \"range\", min: 1, max: 100, value: 100 },\r\n\t            { title: \"radius\", type: \"range\", min: 0, max: 50, value: 25 },\r\n\t            { title: \"bottomless\", type: \"bool\", value: false }\r\n\t        ];\r\n\t    })(models = MakerJs.models || (MakerJs.models = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var models;\r\n\t    (function (models) {\r\n\t        var RoundRectangle = (function () {\r\n\t            function RoundRectangle() {\r\n\t                var args = [];\r\n\t                for (var _i = 0; _i < arguments.length; _i++) {\r\n\t                    args[_i] = arguments[_i];\r\n\t                }\r\n\t                this.paths = {};\r\n\t                var width;\r\n\t                var height;\r\n\t                var radius = 0;\r\n\t                switch (args.length) {\r\n\t                    case 3:\r\n\t                        width = args[0];\r\n\t                        height = args[1];\r\n\t                        radius = args[2];\r\n\t                        break;\r\n\t                    case 2:\r\n\t                        radius = args[1];\r\n\t                    //fall through to 1\r\n\t                    case 1:\r\n\t                        var m = MakerJs.measure.modelExtents(args[0]);\r\n\t                        this.origin = MakerJs.point.subtract(m.low, [radius, radius]);\r\n\t                        width = m.high[0] - m.low[0] + 2 * radius;\r\n\t                        height = m.high[1] - m.low[1] + 2 * radius;\r\n\t                        break;\r\n\t                }\r\n\t                var maxRadius = Math.min(height, width) / 2;\r\n\t                radius = Math.min(radius, maxRadius);\r\n\t                var wr = width - radius;\r\n\t                var hr = height - radius;\r\n\t                if (radius > 0) {\r\n\t                    this.paths[\"BottomLeft\"] = new MakerJs.paths.Arc([radius, radius], radius, 180, 270);\r\n\t                    this.paths[\"BottomRight\"] = new MakerJs.paths.Arc([wr, radius], radius, 270, 0);\r\n\t                    this.paths[\"TopRight\"] = new MakerJs.paths.Arc([wr, hr], radius, 0, 90);\r\n\t                    this.paths[\"TopLeft\"] = new MakerJs.paths.Arc([radius, hr], radius, 90, 180);\r\n\t                }\r\n\t                if (wr - radius > 0) {\r\n\t                    this.paths[\"Bottom\"] = new MakerJs.paths.Line([radius, 0], [wr, 0]);\r\n\t                    this.paths[\"Top\"] = new MakerJs.paths.Line([wr, height], [radius, height]);\r\n\t                }\r\n\t                if (hr - radius > 0) {\r\n\t                    this.paths[\"Right\"] = new MakerJs.paths.Line([width, radius], [width, hr]);\r\n\t                    this.paths[\"Left\"] = new MakerJs.paths.Line([0, hr], [0, radius]);\r\n\t                }\r\n\t            }\r\n\t            return RoundRectangle;\r\n\t        }());\r\n\t        models.RoundRectangle = RoundRectangle;\r\n\t        RoundRectangle.metaParameters = [\r\n\t            { title: \"width\", type: \"range\", min: 1, max: 100, value: 50 },\r\n\t            { title: \"height\", type: \"range\", min: 1, max: 100, value: 100 },\r\n\t            { title: \"radius\", type: \"range\", min: 0, max: 50, value: 11 }\r\n\t        ];\r\n\t    })(models = MakerJs.models || (MakerJs.models = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var models;\r\n\t    (function (models) {\r\n\t        var Oval = (function () {\r\n\t            function Oval(width, height) {\r\n\t                this.paths = {};\r\n\t                this.paths = new models.RoundRectangle(width, height, Math.min(height / 2, width / 2)).paths;\r\n\t            }\r\n\t            return Oval;\r\n\t        }());\r\n\t        models.Oval = Oval;\r\n\t        Oval.metaParameters = [\r\n\t            { title: \"width\", type: \"range\", min: 1, max: 100, value: 50 },\r\n\t            { title: \"height\", type: \"range\", min: 1, max: 100, value: 100 }\r\n\t        ];\r\n\t    })(models = MakerJs.models || (MakerJs.models = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var models;\r\n\t    (function (models) {\r\n\t        var OvalArc = (function () {\r\n\t            function OvalArc(startAngle, endAngle, sweepRadius, slotRadius, selfIntersect, isolateCaps) {\r\n\t                if (selfIntersect === void 0) { selfIntersect = false; }\r\n\t                if (isolateCaps === void 0) { isolateCaps = false; }\r\n\t                var _this = this;\r\n\t                this.paths = {};\r\n\t                var capRoot;\r\n\t                if (isolateCaps) {\r\n\t                    capRoot = { models: {} };\r\n\t                    this.models = { 'Caps': capRoot };\r\n\t                }\r\n\t                if (slotRadius <= 0 || sweepRadius <= 0)\r\n\t                    return;\r\n\t                startAngle = MakerJs.angle.noRevolutions(startAngle);\r\n\t                endAngle = MakerJs.angle.noRevolutions(endAngle);\r\n\t                if (MakerJs.round(startAngle - endAngle) == 0)\r\n\t                    return;\r\n\t                if (endAngle < startAngle)\r\n\t                    endAngle += 360;\r\n\t                var addCap = function (id, tiltAngle, offsetStartAngle, offsetEndAngle) {\r\n\t                    var capModel;\r\n\t                    if (isolateCaps) {\r\n\t                        capModel = { paths: {} };\r\n\t                        capRoot.models[id] = capModel;\r\n\t                    }\r\n\t                    else {\r\n\t                        capModel = _this;\r\n\t                    }\r\n\t                    return capModel.paths[id] = new MakerJs.paths.Arc(MakerJs.point.fromPolar(MakerJs.angle.toRadians(tiltAngle), sweepRadius), slotRadius, tiltAngle + offsetStartAngle, tiltAngle + offsetEndAngle);\r\n\t                };\r\n\t                var addSweep = function (id, offsetRadius) {\r\n\t                    return _this.paths[id] = new MakerJs.paths.Arc([0, 0], sweepRadius + offsetRadius, startAngle, endAngle);\r\n\t                };\r\n\t                addSweep(\"Outer\", slotRadius);\r\n\t                var hasInner = (sweepRadius - slotRadius) > 0;\r\n\t                if (hasInner) {\r\n\t                    addSweep(\"Inner\", -slotRadius);\r\n\t                }\r\n\t                var caps = [];\r\n\t                caps.push(addCap(\"StartCap\", startAngle, 180, 0));\r\n\t                caps.push(addCap(\"EndCap\", endAngle, 0, 180));\r\n\t                //the distance between the cap origins\r\n\t                var d = MakerJs.measure.pointDistance(caps[0].origin, caps[1].origin);\r\n\t                if ((d / 2) < slotRadius) {\r\n\t                    //the caps intersect\r\n\t                    var int = MakerJs.path.intersection(caps[0], caps[1]);\r\n\t                    if (int) {\r\n\t                        if (!hasInner || !selfIntersect) {\r\n\t                            caps[0].startAngle = int.path1Angles[0];\r\n\t                            caps[1].endAngle = int.path2Angles[0];\r\n\t                        }\r\n\t                        if (!selfIntersect && hasInner && int.intersectionPoints.length == 2) {\r\n\t                            addCap(\"StartCap2\", startAngle, 180, 0).endAngle = int.path1Angles[1];\r\n\t                            addCap(\"EndCap2\", endAngle, 0, 180).startAngle = int.path2Angles[1] + 360;\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            return OvalArc;\r\n\t        }());\r\n\t        models.OvalArc = OvalArc;\r\n\t        OvalArc.metaParameters = [\r\n\t            { title: \"start angle\", type: \"range\", min: -360, max: 360, step: 1, value: 180 },\r\n\t            { title: \"end angle\", type: \"range\", min: -360, max: 360, step: 1, value: 0 },\r\n\t            { title: \"sweep\", type: \"range\", min: 0, max: 100, step: 1, value: 50 },\r\n\t            { title: \"radius\", type: \"range\", min: 0, max: 100, step: 1, value: 15 },\r\n\t            { title: \"self intersect\", type: \"bool\", value: false }\r\n\t        ];\r\n\t    })(models = MakerJs.models || (MakerJs.models = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var models;\r\n\t    (function (models) {\r\n\t        var Rectangle = (function () {\r\n\t            function Rectangle() {\r\n\t                var args = [];\r\n\t                for (var _i = 0; _i < arguments.length; _i++) {\r\n\t                    args[_i] = arguments[_i];\r\n\t                }\r\n\t                this.paths = {};\r\n\t                var width;\r\n\t                var height;\r\n\t                if (args.length === 2 && !MakerJs.isObject(args[0])) {\r\n\t                    width = args[0];\r\n\t                    height = args[1];\r\n\t                }\r\n\t                else {\r\n\t                    var margin = 0;\r\n\t                    var m;\r\n\t                    if (MakerJs.isModel(args[0])) {\r\n\t                        m = MakerJs.measure.modelExtents(args[0]);\r\n\t                        if (args.length === 2) {\r\n\t                            margin = args[1];\r\n\t                        }\r\n\t                    }\r\n\t                    else {\r\n\t                        //use measurement\r\n\t                        m = args[0];\r\n\t                    }\r\n\t                    this.origin = MakerJs.point.subtract(m.low, [margin, margin]);\r\n\t                    width = m.high[0] - m.low[0] + 2 * margin;\r\n\t                    height = m.high[1] - m.low[1] + 2 * margin;\r\n\t                }\r\n\t                this.paths = new models.ConnectTheDots(true, [[0, 0], [width, 0], [width, height], [0, height]]).paths;\r\n\t            }\r\n\t            return Rectangle;\r\n\t        }());\r\n\t        models.Rectangle = Rectangle;\r\n\t        Rectangle.metaParameters = [\r\n\t            { title: \"width\", type: \"range\", min: 1, max: 100, value: 50 },\r\n\t            { title: \"height\", type: \"range\", min: 1, max: 100, value: 100 }\r\n\t        ];\r\n\t    })(models = MakerJs.models || (MakerJs.models = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var models;\r\n\t    (function (models) {\r\n\t        var Ring = (function () {\r\n\t            function Ring(outerRadius, innerRadius) {\r\n\t                this.paths = {};\r\n\t                var radii = {\r\n\t                    \"Ring_outer\": outerRadius,\r\n\t                    \"Ring_inner\": innerRadius\r\n\t                };\r\n\t                for (var id in radii) {\r\n\t                    this.paths[id] = new MakerJs.paths.Circle(MakerJs.point.zero(), radii[id]);\r\n\t                }\r\n\t            }\r\n\t            return Ring;\r\n\t        }());\r\n\t        models.Ring = Ring;\r\n\t        Ring.metaParameters = [\r\n\t            { title: \"outer radius\", type: \"range\", min: 0, max: 100, step: 1, value: 50 },\r\n\t            { title: \"inner radius\", type: \"range\", min: 0, max: 100, step: 1, value: 20 }\r\n\t        ];\r\n\t    })(models = MakerJs.models || (MakerJs.models = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var models;\r\n\t    (function (models) {\r\n\t        var Belt = (function () {\r\n\t            function Belt(leftRadius, distance, rightRadius) {\r\n\t                this.paths = {};\r\n\t                var left = new MakerJs.paths.Arc([0, 0], leftRadius, 0, 360);\r\n\t                var right = new MakerJs.paths.Arc([distance, 0], rightRadius, 0, 360);\r\n\t                var angles = MakerJs.solvers.circleTangentAngles(left, right);\r\n\t                if (!angles) {\r\n\t                    this.paths[\"Belt\"] = new MakerJs.paths.Circle(Math.max(leftRadius, rightRadius));\r\n\t                }\r\n\t                else {\r\n\t                    angles = angles.sort(function (a, b) { return a - b; });\r\n\t                    left.startAngle = angles[0];\r\n\t                    left.endAngle = angles[1];\r\n\t                    right.startAngle = angles[1];\r\n\t                    right.endAngle = angles[0];\r\n\t                    this.paths[\"Left\"] = left;\r\n\t                    this.paths[\"Right\"] = right;\r\n\t                    this.paths[\"Top\"] = new MakerJs.paths.Line(MakerJs.point.fromAngleOnCircle(angles[0], left), MakerJs.point.fromAngleOnCircle(angles[0], right));\r\n\t                    this.paths[\"Bottom\"] = new MakerJs.paths.Line(MakerJs.point.fromAngleOnCircle(angles[1], left), MakerJs.point.fromAngleOnCircle(angles[1], right));\r\n\t                }\r\n\t            }\r\n\t            return Belt;\r\n\t        }());\r\n\t        models.Belt = Belt;\r\n\t        Belt.metaParameters = [\r\n\t            { title: \"left radius\", type: \"range\", min: 0, max: 100, value: 30 },\r\n\t            { title: \"distance between centers\", type: \"range\", min: 0, max: 100, value: 50 },\r\n\t            { title: \"right radius\", type: \"range\", min: 0, max: 100, value: 15 }\r\n\t        ];\r\n\t    })(models = MakerJs.models || (MakerJs.models = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var models;\r\n\t    (function (models) {\r\n\t        var SCurve = (function () {\r\n\t            function SCurve(width, height) {\r\n\t                this.paths = {};\r\n\t                function findRadius(x, y) {\r\n\t                    return x + (y * y - x * x) / (2 * x);\r\n\t                }\r\n\t                var h2 = height / 2;\r\n\t                var w2 = width / 2;\r\n\t                var radius;\r\n\t                var startAngle;\r\n\t                var endAngle;\r\n\t                var arcOrigin;\r\n\t                if (width > height) {\r\n\t                    radius = findRadius(h2, w2);\r\n\t                    startAngle = 270;\r\n\t                    endAngle = 360 - MakerJs.angle.toDegrees(Math.acos(w2 / radius));\r\n\t                    arcOrigin = [0, radius];\r\n\t                }\r\n\t                else {\r\n\t                    radius = findRadius(w2, h2);\r\n\t                    startAngle = 180 - MakerJs.angle.toDegrees(Math.asin(h2 / radius));\r\n\t                    endAngle = 180;\r\n\t                    arcOrigin = [radius, 0];\r\n\t                }\r\n\t                var curve = new MakerJs.paths.Arc(arcOrigin, radius, startAngle, endAngle);\r\n\t                this.paths['curve_start'] = curve;\r\n\t                this.paths['curve_end'] = MakerJs.path.moveRelative(MakerJs.path.mirror(curve, true, true), [width, height]);\r\n\t            }\r\n\t            return SCurve;\r\n\t        }());\r\n\t        models.SCurve = SCurve;\r\n\t        SCurve.metaParameters = [\r\n\t            { title: \"width\", type: \"range\", min: 1, max: 100, value: 50 },\r\n\t            { title: \"height\", type: \"range\", min: 1, max: 100, value: 100 }\r\n\t        ];\r\n\t    })(models = MakerJs.models || (MakerJs.models = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var models;\r\n\t    (function (models) {\r\n\t        var Slot = (function () {\r\n\t            function Slot(origin, endPoint, radius, isolateCaps) {\r\n\t                if (isolateCaps === void 0) { isolateCaps = false; }\r\n\t                var _this = this;\r\n\t                this.paths = {};\r\n\t                var capRoot;\r\n\t                if (isolateCaps) {\r\n\t                    capRoot = { models: {} };\r\n\t                    this.models = { 'Caps': capRoot };\r\n\t                }\r\n\t                var addCap = function (id, capPath) {\r\n\t                    var capModel;\r\n\t                    if (isolateCaps) {\r\n\t                        capModel = { paths: {} };\r\n\t                        capRoot.models[id] = capModel;\r\n\t                    }\r\n\t                    else {\r\n\t                        capModel = _this;\r\n\t                    }\r\n\t                    capModel.paths[id] = capPath;\r\n\t                };\r\n\t                var a = MakerJs.angle.ofPointInDegrees(origin, endPoint);\r\n\t                var len = MakerJs.measure.pointDistance(origin, endPoint);\r\n\t                this.paths['Top'] = new MakerJs.paths.Line([0, radius], [len, radius]);\r\n\t                this.paths['Bottom'] = new MakerJs.paths.Line([0, -radius], [len, -radius]);\r\n\t                addCap('StartCap', new MakerJs.paths.Arc([0, 0], radius, 90, 270));\r\n\t                addCap('EndCap', new MakerJs.paths.Arc([len, 0], radius, 270, 90));\r\n\t                MakerJs.model.rotate(this, a, [0, 0]);\r\n\t                this.origin = origin;\r\n\t            }\r\n\t            return Slot;\r\n\t        }());\r\n\t        models.Slot = Slot;\r\n\t        Slot.metaParameters = [\r\n\t            {\r\n\t                title: \"origin\", type: \"select\", value: [\r\n\t                    [0, 0],\r\n\t                    [10, 0],\r\n\t                    [10, 10]\r\n\t                ]\r\n\t            },\r\n\t            {\r\n\t                title: \"end\", type: \"select\", value: [\r\n\t                    [80, 0],\r\n\t                    [0, 30],\r\n\t                    [10, 30]\r\n\t                ]\r\n\t            },\r\n\t            { title: \"radius\", type: \"range\", min: 1, max: 50, value: 10 }\r\n\t        ];\r\n\t    })(models = MakerJs.models || (MakerJs.models = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var models;\r\n\t    (function (models) {\r\n\t        var Square = (function () {\r\n\t            function Square(side) {\r\n\t                this.paths = {};\r\n\t                this.paths = new models.Rectangle(side, side).paths;\r\n\t            }\r\n\t            return Square;\r\n\t        }());\r\n\t        models.Square = Square;\r\n\t        Square.metaParameters = [\r\n\t            { title: \"side\", type: \"range\", min: 1, max: 100, value: 100 }\r\n\t        ];\r\n\t    })(models = MakerJs.models || (MakerJs.models = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var models;\r\n\t    (function (models) {\r\n\t        var Star = (function () {\r\n\t            function Star(numberOfPoints, outerRadius, innerRadius, skipPoints) {\r\n\t                if (skipPoints === void 0) { skipPoints = 2; }\r\n\t                this.paths = {};\r\n\t                if (!innerRadius) {\r\n\t                    innerRadius = outerRadius * Star.InnerRadiusRatio(numberOfPoints, skipPoints);\r\n\t                }\r\n\t                var outerPoints = models.Polygon.getPoints(numberOfPoints, outerRadius);\r\n\t                var innerPoints = models.Polygon.getPoints(numberOfPoints, innerRadius, 180 / numberOfPoints);\r\n\t                var allPoints = [];\r\n\t                for (var i = 0; i < numberOfPoints; i++) {\r\n\t                    allPoints.push(outerPoints[i]);\r\n\t                    allPoints.push(innerPoints[i]);\r\n\t                }\r\n\t                var model = new models.ConnectTheDots(true, allPoints);\r\n\t                this.paths = model.paths;\r\n\t                delete model.paths;\r\n\t            }\r\n\t            Star.InnerRadiusRatio = function (numberOfPoints, skipPoints) {\r\n\t                //formula from http://www.jdawiseman.com/papers/easymath/surds_star_inner_radius.html\r\n\t                //Cos(Pi()*m/n) / Cos(Pi()*(m-1)/n)\r\n\t                if (numberOfPoints > 0 && skipPoints > 1 && skipPoints < numberOfPoints / 2) {\r\n\t                    return Math.cos(Math.PI * skipPoints / numberOfPoints) / Math.cos(Math.PI * (skipPoints - 1) / numberOfPoints);\r\n\t                }\r\n\t                return 0;\r\n\t            };\r\n\t            return Star;\r\n\t        }());\r\n\t        models.Star = Star;\r\n\t        Star.metaParameters = [\r\n\t            { title: \"number of sides\", type: \"range\", min: 3, max: 24, value: 8 },\r\n\t            { title: \"outer radius\", type: \"range\", min: 1, max: 100, value: 50 },\r\n\t            { title: \"inner radius\", type: \"range\", min: 0, max: 100, value: 15 },\r\n\t            { title: \"skip points (when inner radius is zero)\", type: \"range\", min: 0, max: 12, value: 2 }\r\n\t        ];\r\n\t    })(models = MakerJs.models || (MakerJs.models = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tvar MakerJs;\r\n\t(function (MakerJs) {\r\n\t    var models;\r\n\t    (function (models) {\r\n\t        var Text = (function () {\r\n\t            function Text(font, text, fontSize, combine, centerCharacterOrigin, bezierAccuracy, opentypeOptions) {\r\n\t                if (combine === void 0) { combine = false; }\r\n\t                if (centerCharacterOrigin === void 0) { centerCharacterOrigin = false; }\r\n\t                var _this = this;\r\n\t                this.models = {};\r\n\t                var charIndex = 0;\r\n\t                var prevDeleted;\r\n\t                var prevChar;\r\n\t                var cb = function (glyph, x, y, _fontSize, options) {\r\n\t                    var charModel = {};\r\n\t                    var firstPoint;\r\n\t                    var currPoint;\r\n\t                    var pathCount = 0;\r\n\t                    function addPath(p) {\r\n\t                        if (!charModel.paths) {\r\n\t                            charModel.paths = {};\r\n\t                        }\r\n\t                        charModel.paths['p_' + ++pathCount] = p;\r\n\t                    }\r\n\t                    function addModel(m) {\r\n\t                        if (!charModel.models) {\r\n\t                            charModel.models = {};\r\n\t                        }\r\n\t                        charModel.models['p_' + ++pathCount] = m;\r\n\t                    }\r\n\t                    var p = glyph.getPath(0, 0, _fontSize);\r\n\t                    p.commands.map(function (command, i) {\r\n\t                        var points = [[command.x, command.y], [command.x1, command.y1], [command.x2, command.y2]].map(function (p) {\r\n\t                            if (p[0] !== void 0) {\r\n\t                                return MakerJs.point.mirror(p, false, true);\r\n\t                            }\r\n\t                        });\r\n\t                        switch (command.type) {\r\n\t                            case 'M':\r\n\t                                firstPoint = points[0];\r\n\t                                break;\r\n\t                            case 'Z':\r\n\t                                points[0] = firstPoint;\r\n\t                            //fall through to line\r\n\t                            case 'L':\r\n\t                                if (!MakerJs.measure.isPointEqual(currPoint, points[0])) {\r\n\t                                    addPath(new MakerJs.paths.Line(currPoint, points[0]));\r\n\t                                }\r\n\t                                break;\r\n\t                            case 'C':\r\n\t                                addModel(new models.BezierCurve(currPoint, points[1], points[2], points[0], bezierAccuracy));\r\n\t                                break;\r\n\t                            case 'Q':\r\n\t                                addModel(new models.BezierCurve(currPoint, points[1], points[0], bezierAccuracy));\r\n\t                                break;\r\n\t                        }\r\n\t                        currPoint = points[0];\r\n\t                    });\r\n\t                    charModel.origin = [x, 0];\r\n\t                    if (centerCharacterOrigin && (charModel.paths || charModel.models)) {\r\n\t                        var m = MakerJs.measure.modelExtents(charModel);\r\n\t                        if (m) {\r\n\t                            var w = m.high[0] - m.low[0];\r\n\t                            MakerJs.model.originate(charModel, [m.low[0] + w / 2, 0]);\r\n\t                        }\r\n\t                    }\r\n\t                    if (combine && charIndex > 0) {\r\n\t                        var combineOptions = {};\r\n\t                        var prev;\r\n\t                        if (prevDeleted) {\r\n\t                            //form a temporary complete geometry of the previous character using the previously deleted segments\r\n\t                            prev = {\r\n\t                                models: {\r\n\t                                    deleted: prevDeleted,\r\n\t                                    char: prevChar\r\n\t                                }\r\n\t                            };\r\n\t                        }\r\n\t                        else {\r\n\t                            prev = prevChar;\r\n\t                        }\r\n\t                        MakerJs.model.combine(prev, charModel, false, true, false, true, combineOptions);\r\n\t                        //save the deleted segments from this character for the next iteration\r\n\t                        prevDeleted = combineOptions.out_deleted[1];\r\n\t                    }\r\n\t                    _this.models[charIndex] = charModel;\r\n\t                    charIndex++;\r\n\t                    prevChar = charModel;\r\n\t                };\r\n\t                font.forEachGlyph(text, 0, 0, fontSize, opentypeOptions, cb);\r\n\t            }\r\n\t            return Text;\r\n\t        }());\r\n\t        models.Text = Text;\r\n\t        Text.metaParameters = [\r\n\t            { title: \"font\", type: \"font\", value: '*' },\r\n\t            { title: \"text\", type: \"text\", value: 'Hello' },\r\n\t            { title: \"font size\", type: \"range\", min: 10, max: 200, value: 72 },\r\n\t            { title: \"combine\", type: \"bool\", value: false },\r\n\t            { title: \"center character origin\", type: \"bool\", value: false }\r\n\t        ];\r\n\t    })(models = MakerJs.models || (MakerJs.models = {}));\r\n\t})(MakerJs || (MakerJs = {}));\r\n\tMakerJs.version = \"0.9.49\";\r\n\t﻿var Bezier = __webpack_require__(90);\r\n\n\n/***/ },\n/* 110 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {var clone = (function() {\n\t'use strict';\n\t\n\t/**\n\t * Clones (copies) an Object using deep copying.\n\t *\n\t * This function supports circular references by default, but if you are certain\n\t * there are no circular references in your object, you can save some CPU time\n\t * by calling clone(obj, false).\n\t *\n\t * Caution: if `circular` is false and `parent` contains circular references,\n\t * your program may enter an infinite loop and crash.\n\t *\n\t * @param `parent` - the object to be cloned\n\t * @param `circular` - set to true if the object to be cloned may contain\n\t *    circular references. (optional - true by default)\n\t * @param `depth` - set to a number if the object is only to be cloned to\n\t *    a particular depth. (optional - defaults to Infinity)\n\t * @param `prototype` - sets the prototype to be used when cloning an object.\n\t *    (optional - defaults to parent prototype).\n\t*/\n\tfunction clone(parent, circular, depth, prototype) {\n\t  var filter;\n\t  if (typeof circular === 'object') {\n\t    depth = circular.depth;\n\t    prototype = circular.prototype;\n\t    filter = circular.filter;\n\t    circular = circular.circular\n\t  }\n\t  // maintain two arrays for circular references, where corresponding parents\n\t  // and children have the same index\n\t  var allParents = [];\n\t  var allChildren = [];\n\t\n\t  var useBuffer = typeof Buffer != 'undefined';\n\t\n\t  if (typeof circular == 'undefined')\n\t    circular = true;\n\t\n\t  if (typeof depth == 'undefined')\n\t    depth = Infinity;\n\t\n\t  // recurse this function so we don't reset allParents and allChildren\n\t  function _clone(parent, depth) {\n\t    // cloning null always returns null\n\t    if (parent === null)\n\t      return null;\n\t\n\t    if (depth == 0)\n\t      return parent;\n\t\n\t    var child;\n\t    var proto;\n\t    if (typeof parent != 'object') {\n\t      return parent;\n\t    }\n\t\n\t    if (clone.__isArray(parent)) {\n\t      child = [];\n\t    } else if (clone.__isRegExp(parent)) {\n\t      child = new RegExp(parent.source, __getRegExpFlags(parent));\n\t      if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n\t    } else if (clone.__isDate(parent)) {\n\t      child = new Date(parent.getTime());\n\t    } else if (useBuffer && Buffer.isBuffer(parent)) {\n\t      child = new Buffer(parent.length);\n\t      parent.copy(child);\n\t      return child;\n\t    } else {\n\t      if (typeof prototype == 'undefined') {\n\t        proto = Object.getPrototypeOf(parent);\n\t        child = Object.create(proto);\n\t      }\n\t      else {\n\t        child = Object.create(prototype);\n\t        proto = prototype;\n\t      }\n\t    }\n\t\n\t    if (circular) {\n\t      var index = allParents.indexOf(parent);\n\t\n\t      if (index != -1) {\n\t        return allChildren[index];\n\t      }\n\t      allParents.push(parent);\n\t      allChildren.push(child);\n\t    }\n\t\n\t    for (var i in parent) {\n\t      var attrs;\n\t      if (proto) {\n\t        attrs = Object.getOwnPropertyDescriptor(proto, i);\n\t      }\n\t\n\t      if (attrs && attrs.set == null) {\n\t        continue;\n\t      }\n\t      child[i] = _clone(parent[i], depth - 1);\n\t    }\n\t\n\t    return child;\n\t  }\n\t\n\t  return _clone(parent, depth);\n\t}\n\t\n\t/**\n\t * Simple flat clone using prototype, accepts only objects, usefull for property\n\t * override on FLAT configuration object (no nested props).\n\t *\n\t * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n\t * works.\n\t */\n\tclone.clonePrototype = function clonePrototype(parent) {\n\t  if (parent === null)\n\t    return null;\n\t\n\t  var c = function () {};\n\t  c.prototype = parent;\n\t  return new c();\n\t};\n\t\n\t// private utility functions\n\t\n\tfunction __objToStr(o) {\n\t  return Object.prototype.toString.call(o);\n\t};\n\tclone.__objToStr = __objToStr;\n\t\n\tfunction __isDate(o) {\n\t  return typeof o === 'object' && __objToStr(o) === '[object Date]';\n\t};\n\tclone.__isDate = __isDate;\n\t\n\tfunction __isArray(o) {\n\t  return typeof o === 'object' && __objToStr(o) === '[object Array]';\n\t};\n\tclone.__isArray = __isArray;\n\t\n\tfunction __isRegExp(o) {\n\t  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\n\t};\n\tclone.__isRegExp = __isRegExp;\n\t\n\tfunction __getRegExpFlags(re) {\n\t  var flags = '';\n\t  if (re.global) flags += 'g';\n\t  if (re.ignoreCase) flags += 'i';\n\t  if (re.multiline) flags += 'm';\n\t  return flags;\n\t};\n\tclone.__getRegExpFlags = __getRegExpFlags;\n\t\n\treturn clone;\n\t})();\n\t\n\tif (typeof module === 'object' && module.exports) {\n\t  module.exports = clone;\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(54).Buffer))\n\n/***/ },\n/* 111 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar csg = __webpack_require__(58);\r\n\t__webpack_require__(112);\r\n\t\r\n\tmodule.exports = csg;\n\n/***/ },\n/* 112 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\r\n\t## License\r\n\t\r\n\tCopyright (c) 2014 bebbi (elghatta@gmail.com)\r\n\tCopyright (c) 2013 Eduard Bespalov (edwbes@gmail.com)\r\n\tCopyright (c) 2012 Joost Nieuwenhuijse (joost@newhouse.nl)\r\n\tCopyright (c) 2011 Evan Wallace (http://evanw.github.com/csg.js/)\r\n\tCopyright (c) 2012 Alexandre Girard (https://github.com/alx)\r\n\t\r\n\tAll code released under MIT license\r\n\t\r\n\t*/\r\n\t\r\n\tvar csgjs = __webpack_require__(58);\r\n\tvar CSG = csgjs.CSG;\r\n\tvar CAG = csgjs.CAG;\r\n\t\r\n\t////////////////////////////////////////////\r\n\t// X3D Export\r\n\t////////////////////////////////////////////\r\n\t\r\n\tCSG.prototype.toX3D = function() {\r\n\t    // materialPolygonLists\r\n\t    // key: a color string (e.g. \"0 1 1\" for yellow)\r\n\t    // value: an array of strings specifying polygons of this color\r\n\t    //        (as space-separated indices into vertexCoords)\r\n\t    var materialPolygonLists = {},\r\n\t        // list of coordinates (as \"x y z\" strings)\r\n\t        vertexCoords = [],\r\n\t        // map to look up the index in vertexCoords of a given vertex\r\n\t        vertexTagToCoordIndexMap = {};\r\n\t\r\n\t    this.polygons.map(function(p) {\r\n\t        var red = 0,\r\n\t            green = 0,\r\n\t            blue = 1; // default color is blue\r\n\t        if (p.shared && p.shared.color) {\r\n\t            red = p.shared.color[0];\r\n\t            green = p.shared.color[1];\r\n\t            blue = p.shared.color[2];\r\n\t        }\r\n\t\r\n\t        var polygonVertexIndices = [],\r\n\t            numvertices = p.vertices.length,\r\n\t            vertex;\r\n\t        for (var i = 0; i < numvertices; i++) {\r\n\t            vertex = p.vertices[i];\r\n\t            if (!(vertex.getTag() in vertexTagToCoordIndexMap)) {\r\n\t                vertexCoords.push(vertex.pos._x.toString() + \" \" +\r\n\t                    vertex.pos._y.toString() + \" \" +\r\n\t                    vertex.pos._z.toString()\r\n\t                );\r\n\t                vertexTagToCoordIndexMap[vertex.getTag()] = vertexCoords.length - 1;\r\n\t            }\r\n\t            polygonVertexIndices.push(vertexTagToCoordIndexMap[vertex.getTag()]);\r\n\t        }\r\n\t\r\n\t        var polygonString = polygonVertexIndices.join(\" \");\r\n\t\r\n\t        var colorString = red.toString() + \" \" + green.toString() + \" \" + blue.toString();\r\n\t        if (!(colorString in materialPolygonLists)) {\r\n\t            materialPolygonLists[colorString] = [];\r\n\t        }\r\n\t        // add this polygonString to the list of colorString-colored polygons\r\n\t        materialPolygonLists[colorString].push(polygonString);\r\n\t    });\r\n\t\r\n\t\r\n\t    // create output document\r\n\t    var docType = document.implementation.createDocumentType(\"X3D\",\r\n\t        'ISO//Web3D//DTD X3D 3.1//EN\" \"http://www.web3d.org/specifications/x3d-3.1.dtd', null);\r\n\t    var exportDoc = document.implementation.createDocument(null, \"X3D\", docType);\r\n\t    exportDoc.insertBefore(\r\n\t        exportDoc.createProcessingInstruction('xml', 'version=\"1.0\" encoding=\"UTF-8\"'),\r\n\t        exportDoc.doctype);\r\n\t\r\n\t    var exportRoot = exportDoc.getElementsByTagName(\"X3D\")[0];\r\n\t    exportRoot.setAttribute(\"profile\", \"Interchange\");\r\n\t    exportRoot.setAttribute(\"version\", \"3.1\");\r\n\t    exportRoot.setAttribute(\"xsd:noNamespaceSchemaLocation\", \"http://www.web3d.org/specifications/x3d-3.1.xsd\");\r\n\t    exportRoot.setAttribute(\"xmlns:xsd\", \"http://www.w3.org/2001/XMLSchema-instance\");\r\n\t\r\n\t    var exportScene = exportDoc.createElement(\"Scene\");\r\n\t    exportRoot.appendChild(exportScene);\r\n\t\r\n\t    /*\r\n\t        For each color, create a shape made of an appropriately colored\r\n\t        material which contains all polygons that are this color.\r\n\t\r\n\t        The first shape will contain the definition of all vertices,\r\n\t        (<Coordinate DEF=\"coords_mesh\"/>), which will be referenced by\r\n\t        subsequent shapes.\r\n\t      */\r\n\t    var coordsMeshDefined = false;\r\n\t    for (var colorString in materialPolygonLists) {\r\n\t        var polygonList = materialPolygonLists[colorString];\r\n\t        var shape = exportDoc.createElement(\"Shape\");\r\n\t        exportScene.appendChild(shape);\r\n\t\r\n\t        var appearance = exportDoc.createElement(\"Appearance\");\r\n\t        shape.appendChild(appearance);\r\n\t\r\n\t        var material = exportDoc.createElement(\"Material\");\r\n\t        appearance.appendChild(material);\r\n\t        material.setAttribute(\"diffuseColor\", colorString);\r\n\t        material.setAttribute(\"ambientIntensity\", \"1.0\");\r\n\t\r\n\t        var ifs = exportDoc.createElement(\"IndexedFaceSet\");\r\n\t        shape.appendChild(ifs);\r\n\t        ifs.setAttribute(\"solid\", \"true\");\r\n\t        ifs.setAttribute(\"coordIndex\", polygonList.join(\" -1 \") + \" -1\");\r\n\t\r\n\t        var coordinate = exportDoc.createElement(\"Coordinate\");\r\n\t        ifs.appendChild(coordinate);\r\n\t        if (coordsMeshDefined) {\r\n\t            coordinate.setAttribute(\"USE\", \"coords_mesh\");\r\n\t        } else {\r\n\t            coordinate.setAttribute(\"DEF\", \"coords_mesh\");\r\n\t            coordinate.setAttribute(\"point\", vertexCoords.join(\" \"));\r\n\t            coordsMeshDefined = true;\r\n\t        }\r\n\t    }\r\n\t\r\n\t    var x3dstring = (new XMLSerializer()).serializeToString(exportDoc);\r\n\t    return new Blob([x3dstring], {\r\n\t        type: \"model/x3d+xml\"\r\n\t    });\r\n\t};\r\n\t\r\n\t////////////////////////////////////////////\r\n\t// STL Binary Export\r\n\t////////////////////////////////////////////\r\n\t\r\n\t// see http://en.wikipedia.org/wiki/STL_%28file_format%29#Binary_STL\r\n\tCSG.prototype.toStlBinary = function() {\r\n\t    // first check if the host is little-endian:\r\n\t    var buffer = new ArrayBuffer(4);\r\n\t    var int32buffer = new Int32Array(buffer, 0, 1);\r\n\t    var int8buffer = new Int8Array(buffer, 0, 4);\r\n\t    int32buffer[0] = 0x11223344;\r\n\t    if (int8buffer[0] != 0x44) {\r\n\t        throw new Error(\"Binary STL output is currently only supported on little-endian (Intel) processors\");\r\n\t    }\r\n\t\r\n\t    var numtriangles = 0;\r\n\t    this.polygons.map(function(p) {\r\n\t        var numvertices = p.vertices.length;\r\n\t        var thisnumtriangles = (numvertices >= 3) ? numvertices - 2 : 0;\r\n\t        numtriangles += thisnumtriangles;\r\n\t    });\r\n\t    var headerarray = new Uint8Array(80);\r\n\t    for (var i = 0; i < 80; i++) {\r\n\t        headerarray[i] = 65;\r\n\t    }\r\n\t    var ar1 = new Uint32Array(1);\r\n\t    ar1[0] = numtriangles;\r\n\t    // write the triangles to allTrianglesBuffer:\r\n\t    var allTrianglesBuffer = new ArrayBuffer(50 * numtriangles);\r\n\t    var allTrianglesBufferAsInt8 = new Int8Array(allTrianglesBuffer);\r\n\t    // a tricky problem is that a Float32Array must be aligned at 4-byte boundaries (at least in certain browsers)\r\n\t    // while each triangle takes 50 bytes. Therefore we write each triangle to a temporary buffer, and copy that\r\n\t    // into allTrianglesBuffer:\r\n\t    var triangleBuffer = new ArrayBuffer(50);\r\n\t    var triangleBufferAsInt8 = new Int8Array(triangleBuffer);\r\n\t    // each triangle consists of 12 floats:\r\n\t    var triangleFloat32array = new Float32Array(triangleBuffer, 0, 12);\r\n\t    // and one uint16:\r\n\t    var triangleUint16array = new Uint16Array(triangleBuffer, 48, 1);\r\n\t    var byteoffset = 0;\r\n\t    this.polygons.map(function(p) {\r\n\t        var numvertices = p.vertices.length;\r\n\t        for (var i = 0; i < numvertices - 2; i++) {\r\n\t            var normal = p.plane.normal;\r\n\t            triangleFloat32array[0] = normal._x;\r\n\t            triangleFloat32array[1] = normal._y;\r\n\t            triangleFloat32array[2] = normal._z;\r\n\t            var arindex = 3;\r\n\t            for (var v = 0; v < 3; v++) {\r\n\t                var vv = v + ((v > 0) ? i : 0);\r\n\t                var vertexpos = p.vertices[vv].pos;\r\n\t                triangleFloat32array[arindex++] = vertexpos._x;\r\n\t                triangleFloat32array[arindex++] = vertexpos._y;\r\n\t                triangleFloat32array[arindex++] = vertexpos._z;\r\n\t            }\r\n\t            triangleUint16array[0] = 0;\r\n\t            // copy the triangle into allTrianglesBuffer:\r\n\t            allTrianglesBufferAsInt8.set(triangleBufferAsInt8, byteoffset);\r\n\t            byteoffset += 50;\r\n\t        }\r\n\t    });\r\n\t    return new Blob([headerarray.buffer, ar1.buffer, allTrianglesBuffer], {\r\n\t        type: \"application/sla\"\r\n\t    });\r\n\t};\r\n\t\r\n\t////////////////////////////////////////////\r\n\t// STL String Export\r\n\t////////////////////////////////////////////\r\n\t\r\n\tCSG.prototype.toStlString = function() {\r\n\t    var result = \"solid csg.js\\n\";\r\n\t    this.polygons.map(function(p) {\r\n\t        result += p.toStlString();\r\n\t    });\r\n\t    result += \"endsolid csg.js\\n\";\r\n\t    return result;\r\n\t};\r\n\t\r\n\tCSG.Vector3D.prototype.toStlString = function() {\r\n\t    return this._x + \" \" + this._y + \" \" + this._z;\r\n\t};\r\n\t\r\n\tCSG.Vertex.prototype.toStlString = function() {\r\n\t    return \"vertex \" + this.pos.toStlString() + \"\\n\";\r\n\t};\r\n\t\r\n\tCSG.Polygon.prototype.toStlString = function() {\r\n\t    var result = \"\";\r\n\t    if (this.vertices.length >= 3) // should be!\r\n\t    {\r\n\t        // STL requires triangular polygons. If our polygon has more vertices, create\r\n\t        // multiple triangles:\r\n\t        var firstVertexStl = this.vertices[0].toStlString();\r\n\t        for (var i = 0; i < this.vertices.length - 2; i++) {\r\n\t            result += \"facet normal \" + this.plane.normal.toStlString() + \"\\nouter loop\\n\";\r\n\t            result += firstVertexStl;\r\n\t            result += this.vertices[i + 1].toStlString();\r\n\t            result += this.vertices[i + 2].toStlString();\r\n\t            result += \"endloop\\nendfacet\\n\";\r\n\t        }\r\n\t    }\r\n\t    return result;\r\n\t};\r\n\t\r\n\t////////////////////////////////////////////\r\n\t// DXF Export\r\n\t////////////////////////////////////////////\r\n\t\r\n\tCAG.PathsToDxf = function(paths) {\r\n\t    var str = \"999\\nDXF generated by OpenJsCad\\n\";\r\n\t    str += \"  0\\nSECTION\\n  2\\nHEADER\\n\";\r\n\t    str += \"  0\\nENDSEC\\n\";\r\n\t    str += \"  0\\nSECTION\\n  2\\nTABLES\\n\";\r\n\t    str += \"  0\\nTABLE\\n  2\\nLTYPE\\n  70\\n1\\n\";\r\n\t    str += \"  0\\nLTYPE\\n  2\\nCONTINUOUS\\n  3\\nSolid Line\\n  72\\n65\\n  73\\n0\\n  40\\n0.0\\n\";\r\n\t    str += \"  0\\nENDTAB\\n\";\r\n\t    str += \"  0\\nTABLE\\n  2\\nLAYER\\n  70\\n1\\n\";\r\n\t    str += \"  0\\nLAYER\\n  2\\nOpenJsCad\\n  62\\n7\\n  6\\ncontinuous\\n\";\r\n\t    str += \"  0\\nENDTAB\\n\";\r\n\t    str += \"  0\\nTABLE\\n  2\\nSTYLE\\n  70\\n0\\n  0\\nENDTAB\\n\";\r\n\t    str += \"  0\\nTABLE\\n  2\\nVIEW\\n  70\\n0\\n  0\\nENDTAB\\n\";\r\n\t    str += \"  0\\nENDSEC\\n\";\r\n\t    str += \"  0\\nSECTION\\n  2\\nBLOCKS\\n\";\r\n\t    str += \"  0\\nENDSEC\\n\";\r\n\t    str += \"  0\\nSECTION\\n  2\\nENTITIES\\n\";\r\n\t    paths.map(function(path) {\r\n\t        var numpoints_closed = path.points.length + (path.closed ? 1 : 0);\r\n\t        str += \"  0\\nLWPOLYLINE\\n  8\\nOpenJsCad\\n  90\\n\" + numpoints_closed + \"\\n  70\\n\" + (path.closed ? 1 : 0) + \"\\n\";\r\n\t        for (var pointindex = 0; pointindex < numpoints_closed; pointindex++) {\r\n\t            var pointindexwrapped = pointindex;\r\n\t            if (pointindexwrapped >= path.points.length) pointindexwrapped -= path.points.length;\r\n\t            var point = path.points[pointindexwrapped];\r\n\t            str += \" 10\\n\" + point.x + \"\\n 20\\n\" + point.y + \"\\n 30\\n0.0\\n\";\r\n\t        }\r\n\t    });\r\n\t    str += \"  0\\nENDSEC\\n  0\\nEOF\\n\";\r\n\t    return new Blob([str], {\r\n\t        type: \"application/dxf\"\r\n\t    });\r\n\t};\r\n\t\r\n\tCAG.prototype.toDxf = function() {\r\n\t    var paths = this.getOutlinePaths();\r\n\t    return CAG.PathsToDxf(paths);\r\n\t};\r\n\t\r\n\t////////////////////////////////////////////\r\n\t// AMF Export\r\n\t////////////////////////////////////////////\r\n\t\r\n\tCSG.prototype.toAMFString = function(m) {\r\n\t    var result = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<amf\"+(m&&m.unit?\" unit=\\\"+m.unit\\\"\":\"\")+\">\\n\";\r\n\t    for(var k in m) {\r\n\t        result += \"<metadata type=\\\"\"+k+\"\\\">\"+m[k]+\"</metadata>\\n\";\r\n\t    }\r\n\t    result += \"<object id=\\\"0\\\">\\n<mesh>\\n<vertices>\\n\";\r\n\t\r\n\t    this.polygons.map(function(p) {                  // first we dump all vertices of all polygons\r\n\t        for(var i=0; i<p.vertices.length; i++) {\r\n\t            result += p.vertices[i].toAMFString();\r\n\t        }\r\n\t    });\r\n\t    result += \"</vertices>\\n\";\r\n\t\r\n\t    var n = 0;\r\n\t    this.polygons.map(function(p) {                  // then we dump all polygons\r\n\t        result += \"<volume>\\n\";\r\n\t        if(p.vertices.length<3)\r\n\t            return;\r\n\t        var r = 1, g = 0.4, b = 1, a = 1, colorSet = false;\r\n\t        if(p.shared && p.shared.color) {\r\n\t            r = p.shared.color[0];\r\n\t            g = p.shared.color[1];\r\n\t            b = p.shared.color[2];\r\n\t            a = p.shared.color[3];\r\n\t            colorSet = true;\r\n\t        } else if(p.color) {\r\n\t            r = p.color[0];\r\n\t            g = p.color[1];\r\n\t            b = p.color[2];\r\n\t            if(p.color.length()>3) a = p.color[3];\r\n\t                colorSet = true;\r\n\t        }\r\n\t        result += \"<color><r>\"+r+\"</r><g>\"+g+\"</g><b>\"+b+\"</b>\"+(a!==undefined?\"<a>\"+a+\"</a>\":\"\")+\"</color>\";\r\n\t\r\n\t        for(var i=0; i<p.vertices.length-2; i++) {      // making sure they are all triangles (triangular polygons)\r\n\t            result += \"<triangle>\";\r\n\t            result += \"<v1>\" + (n) + \"</v1>\";\r\n\t            result += \"<v2>\" + (n+i+1) + \"</v2>\";\r\n\t            result += \"<v3>\" + (n+i+2) + \"</v3>\";\r\n\t            result += \"</triangle>\\n\";\r\n\t        }\r\n\t        n += p.vertices.length;\r\n\t        result += \"</volume>\\n\";\r\n\t    });\r\n\t    result += \"</mesh>\\n</object>\\n\";\r\n\t    result += \"</amf>\\n\";\r\n\t    return result;\r\n\t};\r\n\t\r\n\tCSG.Vector3D.prototype.toAMFString = function() {\r\n\t    return \"<x>\" + this._x + \"</x><y>\" + this._y + \"</y><z>\" + this._z + \"</z>\";\r\n\t};\r\n\t\r\n\tCSG.Vertex.prototype.toAMFString = function() {\r\n\t   return \"<vertex><coordinates>\" + this.pos.toAMFString() + \"</coordinates></vertex>\\n\";\r\n\t};\r\n\t\r\n\n\n/***/ },\n/* 113 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t//This file contains the ES6 extensions to the core Promises/A+ API\n\t\n\tvar Promise = __webpack_require__(60);\n\t\n\tmodule.exports = Promise;\n\t\n\t/* Static Functions */\n\t\n\tvar TRUE = valuePromise(true);\n\tvar FALSE = valuePromise(false);\n\tvar NULL = valuePromise(null);\n\tvar UNDEFINED = valuePromise(undefined);\n\tvar ZERO = valuePromise(0);\n\tvar EMPTYSTRING = valuePromise('');\n\t\n\tfunction valuePromise(value) {\n\t  var p = new Promise(Promise._61);\n\t  p._81 = 1;\n\t  p._65 = value;\n\t  return p;\n\t}\n\tPromise.resolve = function (value) {\n\t  if (value instanceof Promise) return value;\n\t\n\t  if (value === null) return NULL;\n\t  if (value === undefined) return UNDEFINED;\n\t  if (value === true) return TRUE;\n\t  if (value === false) return FALSE;\n\t  if (value === 0) return ZERO;\n\t  if (value === '') return EMPTYSTRING;\n\t\n\t  if (typeof value === 'object' || typeof value === 'function') {\n\t    try {\n\t      var then = value.then;\n\t      if (typeof then === 'function') {\n\t        return new Promise(then.bind(value));\n\t      }\n\t    } catch (ex) {\n\t      return new Promise(function (resolve, reject) {\n\t        reject(ex);\n\t      });\n\t    }\n\t  }\n\t  return valuePromise(value);\n\t};\n\t\n\tPromise.all = function (arr) {\n\t  var args = Array.prototype.slice.call(arr);\n\t\n\t  return new Promise(function (resolve, reject) {\n\t    if (args.length === 0) return resolve([]);\n\t    var remaining = args.length;\n\t    function res(i, val) {\n\t      if (val && (typeof val === 'object' || typeof val === 'function')) {\n\t        if (val instanceof Promise && val.then === Promise.prototype.then) {\n\t          while (val._81 === 3) {\n\t            val = val._65;\n\t          }\n\t          if (val._81 === 1) return res(i, val._65);\n\t          if (val._81 === 2) reject(val._65);\n\t          val.then(function (val) {\n\t            res(i, val);\n\t          }, reject);\n\t          return;\n\t        } else {\n\t          var then = val.then;\n\t          if (typeof then === 'function') {\n\t            var p = new Promise(then.bind(val));\n\t            p.then(function (val) {\n\t              res(i, val);\n\t            }, reject);\n\t            return;\n\t          }\n\t        }\n\t      }\n\t      args[i] = val;\n\t      if (--remaining === 0) {\n\t        resolve(args);\n\t      }\n\t    }\n\t    for (var i = 0; i < args.length; i++) {\n\t      res(i, args[i]);\n\t    }\n\t  });\n\t};\n\t\n\tPromise.reject = function (value) {\n\t  return new Promise(function (resolve, reject) {\n\t    reject(value);\n\t  });\n\t};\n\t\n\tPromise.race = function (values) {\n\t  return new Promise(function (resolve, reject) {\n\t    values.forEach(function(value){\n\t      Promise.resolve(value).then(resolve, reject);\n\t    });\n\t  });\n\t};\n\t\n\t/* Prototype Methods */\n\t\n\tPromise.prototype['catch'] = function (onRejected) {\n\t  return this.then(null, onRejected);\n\t};\n\n\n/***/ },\n/* 114 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(60);\n\t\n\tvar DEFAULT_WHITELIST = [\n\t  ReferenceError,\n\t  TypeError,\n\t  RangeError\n\t];\n\t\n\tvar enabled = false;\n\texports.disable = disable;\n\tfunction disable() {\n\t  enabled = false;\n\t  Promise._10 = null;\n\t  Promise._97 = null;\n\t}\n\t\n\texports.enable = enable;\n\tfunction enable(options) {\n\t  options = options || {};\n\t  if (enabled) disable();\n\t  enabled = true;\n\t  var id = 0;\n\t  var displayId = 0;\n\t  var rejections = {};\n\t  Promise._10 = function (promise) {\n\t    if (\n\t      promise._81 === 2 && // IS REJECTED\n\t      rejections[promise._72]\n\t    ) {\n\t      if (rejections[promise._72].logged) {\n\t        onHandled(promise._72);\n\t      } else {\n\t        clearTimeout(rejections[promise._72].timeout);\n\t      }\n\t      delete rejections[promise._72];\n\t    }\n\t  };\n\t  Promise._97 = function (promise, err) {\n\t    if (promise._45 === 0) { // not yet handled\n\t      promise._72 = id++;\n\t      rejections[promise._72] = {\n\t        displayId: null,\n\t        error: err,\n\t        timeout: setTimeout(\n\t          onUnhandled.bind(null, promise._72),\n\t          // For reference errors and type errors, this almost always\n\t          // means the programmer made a mistake, so log them after just\n\t          // 100ms\n\t          // otherwise, wait 2 seconds to see if they get handled\n\t          matchWhitelist(err, DEFAULT_WHITELIST)\n\t            ? 100\n\t            : 2000\n\t        ),\n\t        logged: false\n\t      };\n\t    }\n\t  };\n\t  function onUnhandled(id) {\n\t    if (\n\t      options.allRejections ||\n\t      matchWhitelist(\n\t        rejections[id].error,\n\t        options.whitelist || DEFAULT_WHITELIST\n\t      )\n\t    ) {\n\t      rejections[id].displayId = displayId++;\n\t      if (options.onUnhandled) {\n\t        rejections[id].logged = true;\n\t        options.onUnhandled(\n\t          rejections[id].displayId,\n\t          rejections[id].error\n\t        );\n\t      } else {\n\t        rejections[id].logged = true;\n\t        logError(\n\t          rejections[id].displayId,\n\t          rejections[id].error\n\t        );\n\t      }\n\t    }\n\t  }\n\t  function onHandled(id) {\n\t    if (rejections[id].logged) {\n\t      if (options.onHandled) {\n\t        options.onHandled(rejections[id].displayId, rejections[id].error);\n\t      } else if (!rejections[id].onUnhandled) {\n\t        console.warn(\n\t          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n\t        );\n\t        console.warn(\n\t          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n\t          rejections[id].displayId + '.'\n\t        );\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tfunction logError(id, error) {\n\t  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n\t  var errStr = (error && (error.stack || error)) + '';\n\t  errStr.split('\\n').forEach(function (line) {\n\t    console.warn('  ' + line);\n\t  });\n\t}\n\t\n\tfunction matchWhitelist(error, list) {\n\t  return list.some(function (cls) {\n\t    return error instanceof cls;\n\t  });\n\t}\n\n/***/ },\n/* 115 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t */\n\t\n\t'use strict';\n\t\n\tif (false) {\n\t  var invariant = require('fbjs/lib/invariant');\n\t  var warning = require('fbjs/lib/warning');\n\t  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\t  var loggedTypeFailures = {};\n\t}\n\t\n\t/**\n\t * Assert that the values match with the type specs.\n\t * Error messages are memorized and will only be shown once.\n\t *\n\t * @param {object} typeSpecs Map of name to a ReactPropType\n\t * @param {object} values Runtime values that need to be type-checked\n\t * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n\t * @param {string} componentName Name of the component for error messages.\n\t * @param {?Function} getStack Returns the component stack.\n\t * @private\n\t */\n\tfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n\t  if (false) {\n\t    for (var typeSpecName in typeSpecs) {\n\t      if (typeSpecs.hasOwnProperty(typeSpecName)) {\n\t        var error;\n\t        // Prop type validation may throw. In case they do, we don't want to\n\t        // fail the render phase where it didn't fail before. So we log it.\n\t        // After these have been cleaned up, we'll let them throw.\n\t        try {\n\t          // This is intentionally an invariant that gets caught. It's the same\n\t          // behavior as without this statement except with a better message.\n\t          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', location, typeSpecName);\n\t          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n\t        } catch (ex) {\n\t          error = ex;\n\t        }\n\t        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);\n\t        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n\t          // Only monitor this failure once because there tends to be a lot of the\n\t          // same error.\n\t          loggedTypeFailures[error.message] = true;\n\t\n\t          var stack = getStack ? getStack() : '';\n\t\n\t          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');\n\t        }\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tmodule.exports = checkPropTypes;\n\n\n/***/ },\n/* 116 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t */\n\t\n\t'use strict';\n\t\n\tvar emptyFunction = __webpack_require__(8);\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(2);\n\t\n\tvar ReactPropTypesSecret = __webpack_require__(117);\n\tvar checkPropTypes = __webpack_require__(115);\n\t\n\tmodule.exports = function(isValidElement, throwOnDirectAccess) {\n\t  /* global Symbol */\n\t  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n\t  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\t\n\t  /**\n\t   * Returns the iterator method function contained on the iterable object.\n\t   *\n\t   * Be sure to invoke the function with the iterable as context:\n\t   *\n\t   *     var iteratorFn = getIteratorFn(myIterable);\n\t   *     if (iteratorFn) {\n\t   *       var iterator = iteratorFn.call(myIterable);\n\t   *       ...\n\t   *     }\n\t   *\n\t   * @param {?object} maybeIterable\n\t   * @return {?function}\n\t   */\n\t  function getIteratorFn(maybeIterable) {\n\t    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n\t    if (typeof iteratorFn === 'function') {\n\t      return iteratorFn;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Collection of methods that allow declaration and validation of props that are\n\t   * supplied to React components. Example usage:\n\t   *\n\t   *   var Props = require('ReactPropTypes');\n\t   *   var MyArticle = React.createClass({\n\t   *     propTypes: {\n\t   *       // An optional string prop named \"description\".\n\t   *       description: Props.string,\n\t   *\n\t   *       // A required enum prop named \"category\".\n\t   *       category: Props.oneOf(['News','Photos']).isRequired,\n\t   *\n\t   *       // A prop named \"dialog\" that requires an instance of Dialog.\n\t   *       dialog: Props.instanceOf(Dialog).isRequired\n\t   *     },\n\t   *     render: function() { ... }\n\t   *   });\n\t   *\n\t   * A more formal specification of how these methods are used:\n\t   *\n\t   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n\t   *   decl := ReactPropTypes.{type}(.isRequired)?\n\t   *\n\t   * Each and every declaration produces a function with the same signature. This\n\t   * allows the creation of custom validation functions. For example:\n\t   *\n\t   *  var MyLink = React.createClass({\n\t   *    propTypes: {\n\t   *      // An optional string or URI prop named \"href\".\n\t   *      href: function(props, propName, componentName) {\n\t   *        var propValue = props[propName];\n\t   *        if (propValue != null && typeof propValue !== 'string' &&\n\t   *            !(propValue instanceof URI)) {\n\t   *          return new Error(\n\t   *            'Expected a string or an URI for ' + propName + ' in ' +\n\t   *            componentName\n\t   *          );\n\t   *        }\n\t   *      }\n\t   *    },\n\t   *    render: function() {...}\n\t   *  });\n\t   *\n\t   * @internal\n\t   */\n\t\n\t  var ANONYMOUS = '<<anonymous>>';\n\t\n\t  // Important!\n\t  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n\t  var ReactPropTypes = {\n\t    array: createPrimitiveTypeChecker('array'),\n\t    bool: createPrimitiveTypeChecker('boolean'),\n\t    func: createPrimitiveTypeChecker('function'),\n\t    number: createPrimitiveTypeChecker('number'),\n\t    object: createPrimitiveTypeChecker('object'),\n\t    string: createPrimitiveTypeChecker('string'),\n\t    symbol: createPrimitiveTypeChecker('symbol'),\n\t\n\t    any: createAnyTypeChecker(),\n\t    arrayOf: createArrayOfTypeChecker,\n\t    element: createElementTypeChecker(),\n\t    instanceOf: createInstanceTypeChecker,\n\t    node: createNodeChecker(),\n\t    objectOf: createObjectOfTypeChecker,\n\t    oneOf: createEnumTypeChecker,\n\t    oneOfType: createUnionTypeChecker,\n\t    shape: createShapeTypeChecker\n\t  };\n\t\n\t  /**\n\t   * inlined Object.is polyfill to avoid requiring consumers ship their own\n\t   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n\t   */\n\t  /*eslint-disable no-self-compare*/\n\t  function is(x, y) {\n\t    // SameValue algorithm\n\t    if (x === y) {\n\t      // Steps 1-5, 7-10\n\t      // Steps 6.b-6.e: +0 != -0\n\t      return x !== 0 || 1 / x === 1 / y;\n\t    } else {\n\t      // Step 6.a: NaN == NaN\n\t      return x !== x && y !== y;\n\t    }\n\t  }\n\t  /*eslint-enable no-self-compare*/\n\t\n\t  /**\n\t   * We use an Error-like object for backward compatibility as people may call\n\t   * PropTypes directly and inspect their output. However, we don't use real\n\t   * Errors anymore. We don't inspect their stack anyway, and creating them\n\t   * is prohibitively expensive if they are created too often, such as what\n\t   * happens in oneOfType() for any type before the one that matched.\n\t   */\n\t  function PropTypeError(message) {\n\t    this.message = message;\n\t    this.stack = '';\n\t  }\n\t  // Make `instanceof Error` still work for returned errors.\n\t  PropTypeError.prototype = Error.prototype;\n\t\n\t  function createChainableTypeChecker(validate) {\n\t    if (false) {\n\t      var manualPropTypeCallCache = {};\n\t      var manualPropTypeWarningCount = 0;\n\t    }\n\t    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n\t      componentName = componentName || ANONYMOUS;\n\t      propFullName = propFullName || propName;\n\t\n\t      if (secret !== ReactPropTypesSecret) {\n\t        if (throwOnDirectAccess) {\n\t          // New behavior only for users of `prop-types` package\n\t          invariant(\n\t            false,\n\t            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n\t            'Use `PropTypes.checkPropTypes()` to call them. ' +\n\t            'Read more at http://fb.me/use-check-prop-types'\n\t          );\n\t        } else if (false) {\n\t          // Old behavior for people using React.PropTypes\n\t          var cacheKey = componentName + ':' + propName;\n\t          if (\n\t            !manualPropTypeCallCache[cacheKey] &&\n\t            // Avoid spamming the console because they are often not actionable except for lib authors\n\t            manualPropTypeWarningCount < 3\n\t          ) {\n\t            warning(\n\t              false,\n\t              'You are manually calling a React.PropTypes validation ' +\n\t              'function for the `%s` prop on `%s`. This is deprecated ' +\n\t              'and will throw in the standalone `prop-types` package. ' +\n\t              'You may be seeing this warning due to a third-party PropTypes ' +\n\t              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.',\n\t              propFullName,\n\t              componentName\n\t            );\n\t            manualPropTypeCallCache[cacheKey] = true;\n\t            manualPropTypeWarningCount++;\n\t          }\n\t        }\n\t      }\n\t      if (props[propName] == null) {\n\t        if (isRequired) {\n\t          if (props[propName] === null) {\n\t            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n\t          }\n\t          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n\t        }\n\t        return null;\n\t      } else {\n\t        return validate(props, propName, componentName, location, propFullName);\n\t      }\n\t    }\n\t\n\t    var chainedCheckType = checkType.bind(null, false);\n\t    chainedCheckType.isRequired = checkType.bind(null, true);\n\t\n\t    return chainedCheckType;\n\t  }\n\t\n\t  function createPrimitiveTypeChecker(expectedType) {\n\t    function validate(props, propName, componentName, location, propFullName, secret) {\n\t      var propValue = props[propName];\n\t      var propType = getPropType(propValue);\n\t      if (propType !== expectedType) {\n\t        // `propValue` being instance of, say, date/regexp, pass the 'object'\n\t        // check, but we can offer a more precise error message here rather than\n\t        // 'of type `object`'.\n\t        var preciseType = getPreciseType(propValue);\n\t\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function createAnyTypeChecker() {\n\t    return createChainableTypeChecker(emptyFunction.thatReturnsNull);\n\t  }\n\t\n\t  function createArrayOfTypeChecker(typeChecker) {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      if (typeof typeChecker !== 'function') {\n\t        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n\t      }\n\t      var propValue = props[propName];\n\t      if (!Array.isArray(propValue)) {\n\t        var propType = getPropType(propValue);\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n\t      }\n\t      for (var i = 0; i < propValue.length; i++) {\n\t        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n\t        if (error instanceof Error) {\n\t          return error;\n\t        }\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function createElementTypeChecker() {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      var propValue = props[propName];\n\t      if (!isValidElement(propValue)) {\n\t        var propType = getPropType(propValue);\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function createInstanceTypeChecker(expectedClass) {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      if (!(props[propName] instanceof expectedClass)) {\n\t        var expectedClassName = expectedClass.name || ANONYMOUS;\n\t        var actualClassName = getClassName(props[propName]);\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function createEnumTypeChecker(expectedValues) {\n\t    if (!Array.isArray(expectedValues)) {\n\t       false ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;\n\t      return emptyFunction.thatReturnsNull;\n\t    }\n\t\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      var propValue = props[propName];\n\t      for (var i = 0; i < expectedValues.length; i++) {\n\t        if (is(propValue, expectedValues[i])) {\n\t          return null;\n\t        }\n\t      }\n\t\n\t      var valuesString = JSON.stringify(expectedValues);\n\t      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function createObjectOfTypeChecker(typeChecker) {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      if (typeof typeChecker !== 'function') {\n\t        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n\t      }\n\t      var propValue = props[propName];\n\t      var propType = getPropType(propValue);\n\t      if (propType !== 'object') {\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n\t      }\n\t      for (var key in propValue) {\n\t        if (propValue.hasOwnProperty(key)) {\n\t          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n\t          if (error instanceof Error) {\n\t            return error;\n\t          }\n\t        }\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function createUnionTypeChecker(arrayOfTypeCheckers) {\n\t    if (!Array.isArray(arrayOfTypeCheckers)) {\n\t       false ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n\t      return emptyFunction.thatReturnsNull;\n\t    }\n\t\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n\t        var checker = arrayOfTypeCheckers[i];\n\t        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n\t          return null;\n\t        }\n\t      }\n\t\n\t      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function createNodeChecker() {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      if (!isNode(props[propName])) {\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function createShapeTypeChecker(shapeTypes) {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      var propValue = props[propName];\n\t      var propType = getPropType(propValue);\n\t      if (propType !== 'object') {\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n\t      }\n\t      for (var key in shapeTypes) {\n\t        var checker = shapeTypes[key];\n\t        if (!checker) {\n\t          continue;\n\t        }\n\t        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n\t        if (error) {\n\t          return error;\n\t        }\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function isNode(propValue) {\n\t    switch (typeof propValue) {\n\t      case 'number':\n\t      case 'string':\n\t      case 'undefined':\n\t        return true;\n\t      case 'boolean':\n\t        return !propValue;\n\t      case 'object':\n\t        if (Array.isArray(propValue)) {\n\t          return propValue.every(isNode);\n\t        }\n\t        if (propValue === null || isValidElement(propValue)) {\n\t          return true;\n\t        }\n\t\n\t        var iteratorFn = getIteratorFn(propValue);\n\t        if (iteratorFn) {\n\t          var iterator = iteratorFn.call(propValue);\n\t          var step;\n\t          if (iteratorFn !== propValue.entries) {\n\t            while (!(step = iterator.next()).done) {\n\t              if (!isNode(step.value)) {\n\t                return false;\n\t              }\n\t            }\n\t          } else {\n\t            // Iterator will provide entry [k,v] tuples rather than values.\n\t            while (!(step = iterator.next()).done) {\n\t              var entry = step.value;\n\t              if (entry) {\n\t                if (!isNode(entry[1])) {\n\t                  return false;\n\t                }\n\t              }\n\t            }\n\t          }\n\t        } else {\n\t          return false;\n\t        }\n\t\n\t        return true;\n\t      default:\n\t        return false;\n\t    }\n\t  }\n\t\n\t  function isSymbol(propType, propValue) {\n\t    // Native Symbol.\n\t    if (propType === 'symbol') {\n\t      return true;\n\t    }\n\t\n\t    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n\t    if (propValue['@@toStringTag'] === 'Symbol') {\n\t      return true;\n\t    }\n\t\n\t    // Fallback for non-spec compliant Symbols which are polyfilled.\n\t    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n\t      return true;\n\t    }\n\t\n\t    return false;\n\t  }\n\t\n\t  // Equivalent of `typeof` but with special handling for array and regexp.\n\t  function getPropType(propValue) {\n\t    var propType = typeof propValue;\n\t    if (Array.isArray(propValue)) {\n\t      return 'array';\n\t    }\n\t    if (propValue instanceof RegExp) {\n\t      // Old webkits (at least until Android 4.0) return 'function' rather than\n\t      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n\t      // passes PropTypes.object.\n\t      return 'object';\n\t    }\n\t    if (isSymbol(propType, propValue)) {\n\t      return 'symbol';\n\t    }\n\t    return propType;\n\t  }\n\t\n\t  // This handles more types than `getPropType`. Only used for error messages.\n\t  // See `createPrimitiveTypeChecker`.\n\t  function getPreciseType(propValue) {\n\t    var propType = getPropType(propValue);\n\t    if (propType === 'object') {\n\t      if (propValue instanceof Date) {\n\t        return 'date';\n\t      } else if (propValue instanceof RegExp) {\n\t        return 'regexp';\n\t      }\n\t    }\n\t    return propType;\n\t  }\n\t\n\t  // Returns class name of the object, if any.\n\t  function getClassName(propValue) {\n\t    if (!propValue.constructor || !propValue.constructor.name) {\n\t      return ANONYMOUS;\n\t    }\n\t    return propValue.constructor.name;\n\t  }\n\t\n\t  ReactPropTypes.checkPropTypes = checkPropTypes;\n\t  ReactPropTypes.PropTypes = ReactPropTypes;\n\t\n\t  return ReactPropTypes;\n\t};\n\n\n/***/ },\n/* 117 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\t\n\tmodule.exports = ReactPropTypesSecret;\n\n\n/***/ },\n/* 118 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = __webpack_require__(132);\n\n\n/***/ },\n/* 119 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar ARIADOMPropertyConfig = {\n\t  Properties: {\n\t    // Global States and Properties\n\t    'aria-current': 0, // state\n\t    'aria-details': 0,\n\t    'aria-disabled': 0, // state\n\t    'aria-hidden': 0, // state\n\t    'aria-invalid': 0, // state\n\t    'aria-keyshortcuts': 0,\n\t    'aria-label': 0,\n\t    'aria-roledescription': 0,\n\t    // Widget Attributes\n\t    'aria-autocomplete': 0,\n\t    'aria-checked': 0,\n\t    'aria-expanded': 0,\n\t    'aria-haspopup': 0,\n\t    'aria-level': 0,\n\t    'aria-modal': 0,\n\t    'aria-multiline': 0,\n\t    'aria-multiselectable': 0,\n\t    'aria-orientation': 0,\n\t    'aria-placeholder': 0,\n\t    'aria-pressed': 0,\n\t    'aria-readonly': 0,\n\t    'aria-required': 0,\n\t    'aria-selected': 0,\n\t    'aria-sort': 0,\n\t    'aria-valuemax': 0,\n\t    'aria-valuemin': 0,\n\t    'aria-valuenow': 0,\n\t    'aria-valuetext': 0,\n\t    // Live Region Attributes\n\t    'aria-atomic': 0,\n\t    'aria-busy': 0,\n\t    'aria-live': 0,\n\t    'aria-relevant': 0,\n\t    // Drag-and-Drop Attributes\n\t    'aria-dropeffect': 0,\n\t    'aria-grabbed': 0,\n\t    // Relationship Attributes\n\t    'aria-activedescendant': 0,\n\t    'aria-colcount': 0,\n\t    'aria-colindex': 0,\n\t    'aria-colspan': 0,\n\t    'aria-controls': 0,\n\t    'aria-describedby': 0,\n\t    'aria-errormessage': 0,\n\t    'aria-flowto': 0,\n\t    'aria-labelledby': 0,\n\t    'aria-owns': 0,\n\t    'aria-posinset': 0,\n\t    'aria-rowcount': 0,\n\t    'aria-rowindex': 0,\n\t    'aria-rowspan': 0,\n\t    'aria-setsize': 0\n\t  },\n\t  DOMAttributeNames: {},\n\t  DOMPropertyNames: {}\n\t};\n\t\n\tmodule.exports = ARIADOMPropertyConfig;\n\n/***/ },\n/* 120 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\t\n\tvar focusNode = __webpack_require__(56);\n\t\n\tvar AutoFocusUtils = {\n\t  focusDOMComponent: function () {\n\t    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));\n\t  }\n\t};\n\t\n\tmodule.exports = AutoFocusUtils;\n\n/***/ },\n/* 121 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar EventPropagators = __webpack_require__(24);\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\tvar FallbackCompositionState = __webpack_require__(127);\n\tvar SyntheticCompositionEvent = __webpack_require__(164);\n\tvar SyntheticInputEvent = __webpack_require__(167);\n\t\n\tvar END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space\n\tvar START_KEYCODE = 229;\n\t\n\tvar canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;\n\t\n\tvar documentMode = null;\n\tif (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {\n\t  documentMode = document.documentMode;\n\t}\n\t\n\t// Webkit offers a very useful `textInput` event that can be used to\n\t// directly represent `beforeInput`. The IE `textinput` event is not as\n\t// useful, so we don't use it.\n\tvar canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();\n\t\n\t// In IE9+, we have access to composition events, but the data supplied\n\t// by the native compositionend event may be incorrect. Japanese ideographic\n\t// spaces, for instance (\\u3000) are not recorded correctly.\n\tvar useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);\n\t\n\t/**\n\t * Opera <= 12 includes TextEvent in window, but does not fire\n\t * text input events. Rely on keypress instead.\n\t */\n\tfunction isPresto() {\n\t  var opera = window.opera;\n\t  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;\n\t}\n\t\n\tvar SPACEBAR_CODE = 32;\n\tvar SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);\n\t\n\t// Events and their corresponding property names.\n\tvar eventTypes = {\n\t  beforeInput: {\n\t    phasedRegistrationNames: {\n\t      bubbled: 'onBeforeInput',\n\t      captured: 'onBeforeInputCapture'\n\t    },\n\t    dependencies: ['topCompositionEnd', 'topKeyPress', 'topTextInput', 'topPaste']\n\t  },\n\t  compositionEnd: {\n\t    phasedRegistrationNames: {\n\t      bubbled: 'onCompositionEnd',\n\t      captured: 'onCompositionEndCapture'\n\t    },\n\t    dependencies: ['topBlur', 'topCompositionEnd', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']\n\t  },\n\t  compositionStart: {\n\t    phasedRegistrationNames: {\n\t      bubbled: 'onCompositionStart',\n\t      captured: 'onCompositionStartCapture'\n\t    },\n\t    dependencies: ['topBlur', 'topCompositionStart', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']\n\t  },\n\t  compositionUpdate: {\n\t    phasedRegistrationNames: {\n\t      bubbled: 'onCompositionUpdate',\n\t      captured: 'onCompositionUpdateCapture'\n\t    },\n\t    dependencies: ['topBlur', 'topCompositionUpdate', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']\n\t  }\n\t};\n\t\n\t// Track whether we've ever handled a keypress on the space key.\n\tvar hasSpaceKeypress = false;\n\t\n\t/**\n\t * Return whether a native keypress event is assumed to be a command.\n\t * This is required because Firefox fires `keypress` events for key commands\n\t * (cut, copy, select-all, etc.) even though no character is inserted.\n\t */\n\tfunction isKeypressCommand(nativeEvent) {\n\t  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&\n\t  // ctrlKey && altKey is equivalent to AltGr, and is not a command.\n\t  !(nativeEvent.ctrlKey && nativeEvent.altKey);\n\t}\n\t\n\t/**\n\t * Translate native top level events into event types.\n\t *\n\t * @param {string} topLevelType\n\t * @return {object}\n\t */\n\tfunction getCompositionEventType(topLevelType) {\n\t  switch (topLevelType) {\n\t    case 'topCompositionStart':\n\t      return eventTypes.compositionStart;\n\t    case 'topCompositionEnd':\n\t      return eventTypes.compositionEnd;\n\t    case 'topCompositionUpdate':\n\t      return eventTypes.compositionUpdate;\n\t  }\n\t}\n\t\n\t/**\n\t * Does our fallback best-guess model think this event signifies that\n\t * composition has begun?\n\t *\n\t * @param {string} topLevelType\n\t * @param {object} nativeEvent\n\t * @return {boolean}\n\t */\n\tfunction isFallbackCompositionStart(topLevelType, nativeEvent) {\n\t  return topLevelType === 'topKeyDown' && nativeEvent.keyCode === START_KEYCODE;\n\t}\n\t\n\t/**\n\t * Does our fallback mode think that this event is the end of composition?\n\t *\n\t * @param {string} topLevelType\n\t * @param {object} nativeEvent\n\t * @return {boolean}\n\t */\n\tfunction isFallbackCompositionEnd(topLevelType, nativeEvent) {\n\t  switch (topLevelType) {\n\t    case 'topKeyUp':\n\t      // Command keys insert or clear IME input.\n\t      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;\n\t    case 'topKeyDown':\n\t      // Expect IME keyCode on each keydown. If we get any other\n\t      // code we must have exited earlier.\n\t      return nativeEvent.keyCode !== START_KEYCODE;\n\t    case 'topKeyPress':\n\t    case 'topMouseDown':\n\t    case 'topBlur':\n\t      // Events are not possible without cancelling IME.\n\t      return true;\n\t    default:\n\t      return false;\n\t  }\n\t}\n\t\n\t/**\n\t * Google Input Tools provides composition data via a CustomEvent,\n\t * with the `data` property populated in the `detail` object. If this\n\t * is available on the event object, use it. If not, this is a plain\n\t * composition event and we have nothing special to extract.\n\t *\n\t * @param {object} nativeEvent\n\t * @return {?string}\n\t */\n\tfunction getDataFromCustomEvent(nativeEvent) {\n\t  var detail = nativeEvent.detail;\n\t  if (typeof detail === 'object' && 'data' in detail) {\n\t    return detail.data;\n\t  }\n\t  return null;\n\t}\n\t\n\t// Track the current IME composition fallback object, if any.\n\tvar currentComposition = null;\n\t\n\t/**\n\t * @return {?object} A SyntheticCompositionEvent.\n\t */\n\tfunction extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n\t  var eventType;\n\t  var fallbackData;\n\t\n\t  if (canUseCompositionEvent) {\n\t    eventType = getCompositionEventType(topLevelType);\n\t  } else if (!currentComposition) {\n\t    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {\n\t      eventType = eventTypes.compositionStart;\n\t    }\n\t  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {\n\t    eventType = eventTypes.compositionEnd;\n\t  }\n\t\n\t  if (!eventType) {\n\t    return null;\n\t  }\n\t\n\t  if (useFallbackCompositionData) {\n\t    // The current composition is stored statically and must not be\n\t    // overwritten while composition continues.\n\t    if (!currentComposition && eventType === eventTypes.compositionStart) {\n\t      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);\n\t    } else if (eventType === eventTypes.compositionEnd) {\n\t      if (currentComposition) {\n\t        fallbackData = currentComposition.getData();\n\t      }\n\t    }\n\t  }\n\t\n\t  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);\n\t\n\t  if (fallbackData) {\n\t    // Inject data generated from fallback path into the synthetic event.\n\t    // This matches the property of native CompositionEventInterface.\n\t    event.data = fallbackData;\n\t  } else {\n\t    var customData = getDataFromCustomEvent(nativeEvent);\n\t    if (customData !== null) {\n\t      event.data = customData;\n\t    }\n\t  }\n\t\n\t  EventPropagators.accumulateTwoPhaseDispatches(event);\n\t  return event;\n\t}\n\t\n\t/**\n\t * @param {string} topLevelType Record from `EventConstants`.\n\t * @param {object} nativeEvent Native browser event.\n\t * @return {?string} The string corresponding to this `beforeInput` event.\n\t */\n\tfunction getNativeBeforeInputChars(topLevelType, nativeEvent) {\n\t  switch (topLevelType) {\n\t    case 'topCompositionEnd':\n\t      return getDataFromCustomEvent(nativeEvent);\n\t    case 'topKeyPress':\n\t      /**\n\t       * If native `textInput` events are available, our goal is to make\n\t       * use of them. However, there is a special case: the spacebar key.\n\t       * In Webkit, preventing default on a spacebar `textInput` event\n\t       * cancels character insertion, but it *also* causes the browser\n\t       * to fall back to its default spacebar behavior of scrolling the\n\t       * page.\n\t       *\n\t       * Tracking at:\n\t       * https://code.google.com/p/chromium/issues/detail?id=355103\n\t       *\n\t       * To avoid this issue, use the keypress event as if no `textInput`\n\t       * event is available.\n\t       */\n\t      var which = nativeEvent.which;\n\t      if (which !== SPACEBAR_CODE) {\n\t        return null;\n\t      }\n\t\n\t      hasSpaceKeypress = true;\n\t      return SPACEBAR_CHAR;\n\t\n\t    case 'topTextInput':\n\t      // Record the characters to be added to the DOM.\n\t      var chars = nativeEvent.data;\n\t\n\t      // If it's a spacebar character, assume that we have already handled\n\t      // it at the keypress level and bail immediately. Android Chrome\n\t      // doesn't give us keycodes, so we need to blacklist it.\n\t      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {\n\t        return null;\n\t      }\n\t\n\t      return chars;\n\t\n\t    default:\n\t      // For other native event types, do nothing.\n\t      return null;\n\t  }\n\t}\n\t\n\t/**\n\t * For browsers that do not provide the `textInput` event, extract the\n\t * appropriate string to use for SyntheticInputEvent.\n\t *\n\t * @param {string} topLevelType Record from `EventConstants`.\n\t * @param {object} nativeEvent Native browser event.\n\t * @return {?string} The fallback string for this `beforeInput` event.\n\t */\n\tfunction getFallbackBeforeInputChars(topLevelType, nativeEvent) {\n\t  // If we are currently composing (IME) and using a fallback to do so,\n\t  // try to extract the composed characters from the fallback object.\n\t  // If composition event is available, we extract a string only at\n\t  // compositionevent, otherwise extract it at fallback events.\n\t  if (currentComposition) {\n\t    if (topLevelType === 'topCompositionEnd' || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {\n\t      var chars = currentComposition.getData();\n\t      FallbackCompositionState.release(currentComposition);\n\t      currentComposition = null;\n\t      return chars;\n\t    }\n\t    return null;\n\t  }\n\t\n\t  switch (topLevelType) {\n\t    case 'topPaste':\n\t      // If a paste event occurs after a keypress, throw out the input\n\t      // chars. Paste events should not lead to BeforeInput events.\n\t      return null;\n\t    case 'topKeyPress':\n\t      /**\n\t       * As of v27, Firefox may fire keypress events even when no character\n\t       * will be inserted. A few possibilities:\n\t       *\n\t       * - `which` is `0`. Arrow keys, Esc key, etc.\n\t       *\n\t       * - `which` is the pressed key code, but no char is available.\n\t       *   Ex: 'AltGr + d` in Polish. There is no modified character for\n\t       *   this key combination and no character is inserted into the\n\t       *   document, but FF fires the keypress for char code `100` anyway.\n\t       *   No `input` event will occur.\n\t       *\n\t       * - `which` is the pressed key code, but a command combination is\n\t       *   being used. Ex: `Cmd+C`. No character is inserted, and no\n\t       *   `input` event will occur.\n\t       */\n\t      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {\n\t        return String.fromCharCode(nativeEvent.which);\n\t      }\n\t      return null;\n\t    case 'topCompositionEnd':\n\t      return useFallbackCompositionData ? null : nativeEvent.data;\n\t    default:\n\t      return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Extract a SyntheticInputEvent for `beforeInput`, based on either native\n\t * `textInput` or fallback behavior.\n\t *\n\t * @return {?object} A SyntheticInputEvent.\n\t */\n\tfunction extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n\t  var chars;\n\t\n\t  if (canUseTextInputEvent) {\n\t    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);\n\t  } else {\n\t    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);\n\t  }\n\t\n\t  // If no characters are being inserted, no BeforeInput event should\n\t  // be fired.\n\t  if (!chars) {\n\t    return null;\n\t  }\n\t\n\t  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);\n\t\n\t  event.data = chars;\n\t  EventPropagators.accumulateTwoPhaseDispatches(event);\n\t  return event;\n\t}\n\t\n\t/**\n\t * Create an `onBeforeInput` event to match\n\t * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.\n\t *\n\t * This event plugin is based on the native `textInput` event\n\t * available in Chrome, Safari, Opera, and IE. This event fires after\n\t * `onKeyPress` and `onCompositionEnd`, but before `onInput`.\n\t *\n\t * `beforeInput` is spec'd but not implemented in any browsers, and\n\t * the `input` event does not provide any useful information about what has\n\t * actually been added, contrary to the spec. Thus, `textInput` is the best\n\t * available event to identify the characters that have actually been inserted\n\t * into the target node.\n\t *\n\t * This plugin is also responsible for emitting `composition` events, thus\n\t * allowing us to share composition fallback code for both `beforeInput` and\n\t * `composition` event types.\n\t */\n\tvar BeforeInputEventPlugin = {\n\t\n\t  eventTypes: eventTypes,\n\t\n\t  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n\t    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];\n\t  }\n\t};\n\t\n\tmodule.exports = BeforeInputEventPlugin;\n\n/***/ },\n/* 122 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar CSSProperty = __webpack_require__(62);\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\tvar ReactInstrumentation = __webpack_require__(9);\n\t\n\tvar camelizeStyleName = __webpack_require__(95);\n\tvar dangerousStyleValue = __webpack_require__(173);\n\tvar hyphenateStyleName = __webpack_require__(102);\n\tvar memoizeStringOnly = __webpack_require__(105);\n\tvar warning = __webpack_require__(2);\n\t\n\tvar processStyleName = memoizeStringOnly(function (styleName) {\n\t  return hyphenateStyleName(styleName);\n\t});\n\t\n\tvar hasShorthandPropertyBug = false;\n\tvar styleFloatAccessor = 'cssFloat';\n\tif (ExecutionEnvironment.canUseDOM) {\n\t  var tempStyle = document.createElement('div').style;\n\t  try {\n\t    // IE8 throws \"Invalid argument.\" if resetting shorthand style properties.\n\t    tempStyle.font = '';\n\t  } catch (e) {\n\t    hasShorthandPropertyBug = true;\n\t  }\n\t  // IE8 only supports accessing cssFloat (standard) as styleFloat\n\t  if (document.documentElement.style.cssFloat === undefined) {\n\t    styleFloatAccessor = 'styleFloat';\n\t  }\n\t}\n\t\n\tif (false) {\n\t  // 'msTransform' is correct, but the other prefixes should be capitalized\n\t  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;\n\t\n\t  // style values shouldn't contain a semicolon\n\t  var badStyleValueWithSemicolonPattern = /;\\s*$/;\n\t\n\t  var warnedStyleNames = {};\n\t  var warnedStyleValues = {};\n\t  var warnedForNaNValue = false;\n\t\n\t  var warnHyphenatedStyleName = function (name, owner) {\n\t    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n\t      return;\n\t    }\n\t\n\t    warnedStyleNames[name] = true;\n\t    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;\n\t  };\n\t\n\t  var warnBadVendoredStyleName = function (name, owner) {\n\t    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n\t      return;\n\t    }\n\t\n\t    warnedStyleNames[name] = true;\n\t    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;\n\t  };\n\t\n\t  var warnStyleValueWithSemicolon = function (name, value, owner) {\n\t    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {\n\t      return;\n\t    }\n\t\n\t    warnedStyleValues[value] = true;\n\t    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\\'t contain a semicolon.%s ' + 'Try \"%s: %s\" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;\n\t  };\n\t\n\t  var warnStyleValueIsNaN = function (name, value, owner) {\n\t    if (warnedForNaNValue) {\n\t      return;\n\t    }\n\t\n\t    warnedForNaNValue = true;\n\t    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;\n\t  };\n\t\n\t  var checkRenderMessage = function (owner) {\n\t    if (owner) {\n\t      var name = owner.getName();\n\t      if (name) {\n\t        return ' Check the render method of `' + name + '`.';\n\t      }\n\t    }\n\t    return '';\n\t  };\n\t\n\t  /**\n\t   * @param {string} name\n\t   * @param {*} value\n\t   * @param {ReactDOMComponent} component\n\t   */\n\t  var warnValidStyle = function (name, value, component) {\n\t    var owner;\n\t    if (component) {\n\t      owner = component._currentElement._owner;\n\t    }\n\t    if (name.indexOf('-') > -1) {\n\t      warnHyphenatedStyleName(name, owner);\n\t    } else if (badVendoredStyleNamePattern.test(name)) {\n\t      warnBadVendoredStyleName(name, owner);\n\t    } else if (badStyleValueWithSemicolonPattern.test(value)) {\n\t      warnStyleValueWithSemicolon(name, value, owner);\n\t    }\n\t\n\t    if (typeof value === 'number' && isNaN(value)) {\n\t      warnStyleValueIsNaN(name, value, owner);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Operations for dealing with CSS properties.\n\t */\n\tvar CSSPropertyOperations = {\n\t\n\t  /**\n\t   * Serializes a mapping of style properties for use as inline styles:\n\t   *\n\t   *   > createMarkupForStyles({width: '200px', height: 0})\n\t   *   \"width:200px;height:0;\"\n\t   *\n\t   * Undefined values are ignored so that declarative programming is easier.\n\t   * The result should be HTML-escaped before insertion into the DOM.\n\t   *\n\t   * @param {object} styles\n\t   * @param {ReactDOMComponent} component\n\t   * @return {?string}\n\t   */\n\t  createMarkupForStyles: function (styles, component) {\n\t    var serialized = '';\n\t    for (var styleName in styles) {\n\t      if (!styles.hasOwnProperty(styleName)) {\n\t        continue;\n\t      }\n\t      var styleValue = styles[styleName];\n\t      if (false) {\n\t        warnValidStyle(styleName, styleValue, component);\n\t      }\n\t      if (styleValue != null) {\n\t        serialized += processStyleName(styleName) + ':';\n\t        serialized += dangerousStyleValue(styleName, styleValue, component) + ';';\n\t      }\n\t    }\n\t    return serialized || null;\n\t  },\n\t\n\t  /**\n\t   * Sets the value for multiple styles on a node.  If a value is specified as\n\t   * '' (empty string), the corresponding style property will be unset.\n\t   *\n\t   * @param {DOMElement} node\n\t   * @param {object} styles\n\t   * @param {ReactDOMComponent} component\n\t   */\n\t  setValueForStyles: function (node, styles, component) {\n\t    if (false) {\n\t      ReactInstrumentation.debugTool.onHostOperation({\n\t        instanceID: component._debugID,\n\t        type: 'update styles',\n\t        payload: styles\n\t      });\n\t    }\n\t\n\t    var style = node.style;\n\t    for (var styleName in styles) {\n\t      if (!styles.hasOwnProperty(styleName)) {\n\t        continue;\n\t      }\n\t      if (false) {\n\t        warnValidStyle(styleName, styles[styleName], component);\n\t      }\n\t      var styleValue = dangerousStyleValue(styleName, styles[styleName], component);\n\t      if (styleName === 'float' || styleName === 'cssFloat') {\n\t        styleName = styleFloatAccessor;\n\t      }\n\t      if (styleValue) {\n\t        style[styleName] = styleValue;\n\t      } else {\n\t        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];\n\t        if (expansion) {\n\t          // Shorthand property that IE8 won't like unsetting, so unset each\n\t          // component to placate it\n\t          for (var individualStyleName in expansion) {\n\t            style[individualStyleName] = '';\n\t          }\n\t        } else {\n\t          style[styleName] = '';\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = CSSPropertyOperations;\n\n/***/ },\n/* 123 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar EventPluginHub = __webpack_require__(23);\n\tvar EventPropagators = __webpack_require__(24);\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar ReactUpdates = __webpack_require__(10);\n\tvar SyntheticEvent = __webpack_require__(11);\n\t\n\tvar getEventTarget = __webpack_require__(45);\n\tvar isEventSupported = __webpack_require__(46);\n\tvar isTextInputElement = __webpack_require__(79);\n\t\n\tvar eventTypes = {\n\t  change: {\n\t    phasedRegistrationNames: {\n\t      bubbled: 'onChange',\n\t      captured: 'onChangeCapture'\n\t    },\n\t    dependencies: ['topBlur', 'topChange', 'topClick', 'topFocus', 'topInput', 'topKeyDown', 'topKeyUp', 'topSelectionChange']\n\t  }\n\t};\n\t\n\t/**\n\t * For IE shims\n\t */\n\tvar activeElement = null;\n\tvar activeElementInst = null;\n\tvar activeElementValue = null;\n\tvar activeElementValueProp = null;\n\t\n\t/**\n\t * SECTION: handle `change` event\n\t */\n\tfunction shouldUseChangeEvent(elem) {\n\t  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();\n\t  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';\n\t}\n\t\n\tvar doesChangeEventBubble = false;\n\tif (ExecutionEnvironment.canUseDOM) {\n\t  // See `handleChange` comment below\n\t  doesChangeEventBubble = isEventSupported('change') && (!document.documentMode || document.documentMode > 8);\n\t}\n\t\n\tfunction manualDispatchChangeEvent(nativeEvent) {\n\t  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementInst, nativeEvent, getEventTarget(nativeEvent));\n\t  EventPropagators.accumulateTwoPhaseDispatches(event);\n\t\n\t  // If change and propertychange bubbled, we'd just bind to it like all the\n\t  // other events and have it go through ReactBrowserEventEmitter. Since it\n\t  // doesn't, we manually listen for the events and so we have to enqueue and\n\t  // process the abstract event manually.\n\t  //\n\t  // Batching is necessary here in order to ensure that all event handlers run\n\t  // before the next rerender (including event handlers attached to ancestor\n\t  // elements instead of directly on the input). Without this, controlled\n\t  // components don't work properly in conjunction with event bubbling because\n\t  // the component is rerendered and the value reverted before all the event\n\t  // handlers can run. See https://github.com/facebook/react/issues/708.\n\t  ReactUpdates.batchedUpdates(runEventInBatch, event);\n\t}\n\t\n\tfunction runEventInBatch(event) {\n\t  EventPluginHub.enqueueEvents(event);\n\t  EventPluginHub.processEventQueue(false);\n\t}\n\t\n\tfunction startWatchingForChangeEventIE8(target, targetInst) {\n\t  activeElement = target;\n\t  activeElementInst = targetInst;\n\t  activeElement.attachEvent('onchange', manualDispatchChangeEvent);\n\t}\n\t\n\tfunction stopWatchingForChangeEventIE8() {\n\t  if (!activeElement) {\n\t    return;\n\t  }\n\t  activeElement.detachEvent('onchange', manualDispatchChangeEvent);\n\t  activeElement = null;\n\t  activeElementInst = null;\n\t}\n\t\n\tfunction getTargetInstForChangeEvent(topLevelType, targetInst) {\n\t  if (topLevelType === 'topChange') {\n\t    return targetInst;\n\t  }\n\t}\n\tfunction handleEventsForChangeEventIE8(topLevelType, target, targetInst) {\n\t  if (topLevelType === 'topFocus') {\n\t    // stopWatching() should be a noop here but we call it just in case we\n\t    // missed a blur event somehow.\n\t    stopWatchingForChangeEventIE8();\n\t    startWatchingForChangeEventIE8(target, targetInst);\n\t  } else if (topLevelType === 'topBlur') {\n\t    stopWatchingForChangeEventIE8();\n\t  }\n\t}\n\t\n\t/**\n\t * SECTION: handle `input` event\n\t */\n\tvar isInputEventSupported = false;\n\tif (ExecutionEnvironment.canUseDOM) {\n\t  // IE9 claims to support the input event but fails to trigger it when\n\t  // deleting text, so we ignore its input events.\n\t  // IE10+ fire input events to often, such when a placeholder\n\t  // changes or when an input with a placeholder is focused.\n\t  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 11);\n\t}\n\t\n\t/**\n\t * (For IE <=11) Replacement getter/setter for the `value` property that gets\n\t * set on the active element.\n\t */\n\tvar newValueProp = {\n\t  get: function () {\n\t    return activeElementValueProp.get.call(this);\n\t  },\n\t  set: function (val) {\n\t    // Cast to a string so we can do equality checks.\n\t    activeElementValue = '' + val;\n\t    activeElementValueProp.set.call(this, val);\n\t  }\n\t};\n\t\n\t/**\n\t * (For IE <=11) Starts tracking propertychange events on the passed-in element\n\t * and override the value property so that we can distinguish user events from\n\t * value changes in JS.\n\t */\n\tfunction startWatchingForValueChange(target, targetInst) {\n\t  activeElement = target;\n\t  activeElementInst = targetInst;\n\t  activeElementValue = target.value;\n\t  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');\n\t\n\t  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only\n\t  // on DOM elements\n\t  Object.defineProperty(activeElement, 'value', newValueProp);\n\t  if (activeElement.attachEvent) {\n\t    activeElement.attachEvent('onpropertychange', handlePropertyChange);\n\t  } else {\n\t    activeElement.addEventListener('propertychange', handlePropertyChange, false);\n\t  }\n\t}\n\t\n\t/**\n\t * (For IE <=11) Removes the event listeners from the currently-tracked element,\n\t * if any exists.\n\t */\n\tfunction stopWatchingForValueChange() {\n\t  if (!activeElement) {\n\t    return;\n\t  }\n\t\n\t  // delete restores the original property definition\n\t  delete activeElement.value;\n\t\n\t  if (activeElement.detachEvent) {\n\t    activeElement.detachEvent('onpropertychange', handlePropertyChange);\n\t  } else {\n\t    activeElement.removeEventListener('propertychange', handlePropertyChange, false);\n\t  }\n\t\n\t  activeElement = null;\n\t  activeElementInst = null;\n\t  activeElementValue = null;\n\t  activeElementValueProp = null;\n\t}\n\t\n\t/**\n\t * (For IE <=11) Handles a propertychange event, sending a `change` event if\n\t * the value of the active element has changed.\n\t */\n\tfunction handlePropertyChange(nativeEvent) {\n\t  if (nativeEvent.propertyName !== 'value') {\n\t    return;\n\t  }\n\t  var value = nativeEvent.srcElement.value;\n\t  if (value === activeElementValue) {\n\t    return;\n\t  }\n\t  activeElementValue = value;\n\t\n\t  manualDispatchChangeEvent(nativeEvent);\n\t}\n\t\n\t/**\n\t * If a `change` event should be fired, returns the target's ID.\n\t */\n\tfunction getTargetInstForInputEvent(topLevelType, targetInst) {\n\t  if (topLevelType === 'topInput') {\n\t    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly\n\t    // what we want so fall through here and trigger an abstract event\n\t    return targetInst;\n\t  }\n\t}\n\t\n\tfunction handleEventsForInputEventIE(topLevelType, target, targetInst) {\n\t  if (topLevelType === 'topFocus') {\n\t    // In IE8, we can capture almost all .value changes by adding a\n\t    // propertychange handler and looking for events with propertyName\n\t    // equal to 'value'\n\t    // In IE9-11, propertychange fires for most input events but is buggy and\n\t    // doesn't fire when text is deleted, but conveniently, selectionchange\n\t    // appears to fire in all of the remaining cases so we catch those and\n\t    // forward the event if the value has changed\n\t    // In either case, we don't want to call the event handler if the value\n\t    // is changed from JS so we redefine a setter for `.value` that updates\n\t    // our activeElementValue variable, allowing us to ignore those changes\n\t    //\n\t    // stopWatching() should be a noop here but we call it just in case we\n\t    // missed a blur event somehow.\n\t    stopWatchingForValueChange();\n\t    startWatchingForValueChange(target, targetInst);\n\t  } else if (topLevelType === 'topBlur') {\n\t    stopWatchingForValueChange();\n\t  }\n\t}\n\t\n\t// For IE8 and IE9.\n\tfunction getTargetInstForInputEventIE(topLevelType, targetInst) {\n\t  if (topLevelType === 'topSelectionChange' || topLevelType === 'topKeyUp' || topLevelType === 'topKeyDown') {\n\t    // On the selectionchange event, the target is just document which isn't\n\t    // helpful for us so just check activeElement instead.\n\t    //\n\t    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire\n\t    // propertychange on the first input event after setting `value` from a\n\t    // script and fires only keydown, keypress, keyup. Catching keyup usually\n\t    // gets it and catching keydown lets us fire an event for the first\n\t    // keystroke if user does a key repeat (it'll be a little delayed: right\n\t    // before the second keystroke). Other input methods (e.g., paste) seem to\n\t    // fire selectionchange normally.\n\t    if (activeElement && activeElement.value !== activeElementValue) {\n\t      activeElementValue = activeElement.value;\n\t      return activeElementInst;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * SECTION: handle `click` event\n\t */\n\tfunction shouldUseClickEvent(elem) {\n\t  // Use the `click` event to detect changes to checkbox and radio inputs.\n\t  // This approach works across all browsers, whereas `change` does not fire\n\t  // until `blur` in IE8.\n\t  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');\n\t}\n\t\n\tfunction getTargetInstForClickEvent(topLevelType, targetInst) {\n\t  if (topLevelType === 'topClick') {\n\t    return targetInst;\n\t  }\n\t}\n\t\n\tfunction handleControlledInputBlur(inst, node) {\n\t  // TODO: In IE, inst is occasionally null. Why?\n\t  if (inst == null) {\n\t    return;\n\t  }\n\t\n\t  // Fiber and ReactDOM keep wrapper state in separate places\n\t  var state = inst._wrapperState || node._wrapperState;\n\t\n\t  if (!state || !state.controlled || node.type !== 'number') {\n\t    return;\n\t  }\n\t\n\t  // If controlled, assign the value attribute to the current value on blur\n\t  var value = '' + node.value;\n\t  if (node.getAttribute('value') !== value) {\n\t    node.setAttribute('value', value);\n\t  }\n\t}\n\t\n\t/**\n\t * This plugin creates an `onChange` event that normalizes change events\n\t * across form elements. This event fires at a time when it's possible to\n\t * change the element's value without seeing a flicker.\n\t *\n\t * Supported elements are:\n\t * - input (see `isTextInputElement`)\n\t * - textarea\n\t * - select\n\t */\n\tvar ChangeEventPlugin = {\n\t\n\t  eventTypes: eventTypes,\n\t\n\t  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n\t    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;\n\t\n\t    var getTargetInstFunc, handleEventFunc;\n\t    if (shouldUseChangeEvent(targetNode)) {\n\t      if (doesChangeEventBubble) {\n\t        getTargetInstFunc = getTargetInstForChangeEvent;\n\t      } else {\n\t        handleEventFunc = handleEventsForChangeEventIE8;\n\t      }\n\t    } else if (isTextInputElement(targetNode)) {\n\t      if (isInputEventSupported) {\n\t        getTargetInstFunc = getTargetInstForInputEvent;\n\t      } else {\n\t        getTargetInstFunc = getTargetInstForInputEventIE;\n\t        handleEventFunc = handleEventsForInputEventIE;\n\t      }\n\t    } else if (shouldUseClickEvent(targetNode)) {\n\t      getTargetInstFunc = getTargetInstForClickEvent;\n\t    }\n\t\n\t    if (getTargetInstFunc) {\n\t      var inst = getTargetInstFunc(topLevelType, targetInst);\n\t      if (inst) {\n\t        var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, nativeEventTarget);\n\t        event.type = 'change';\n\t        EventPropagators.accumulateTwoPhaseDispatches(event);\n\t        return event;\n\t      }\n\t    }\n\t\n\t    if (handleEventFunc) {\n\t      handleEventFunc(topLevelType, targetNode, targetInst);\n\t    }\n\t\n\t    // When blurring, set the value attribute for number inputs\n\t    if (topLevelType === 'topBlur') {\n\t      handleControlledInputBlur(targetInst, targetNode);\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ChangeEventPlugin;\n\n/***/ },\n/* 124 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(3);\n\t\n\tvar DOMLazyTree = __webpack_require__(14);\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\t\n\tvar createNodesFromMarkup = __webpack_require__(98);\n\tvar emptyFunction = __webpack_require__(8);\n\tvar invariant = __webpack_require__(1);\n\t\n\tvar Danger = {\n\t\n\t  /**\n\t   * Replaces a node with a string of markup at its current position within its\n\t   * parent. The markup must render into a single root node.\n\t   *\n\t   * @param {DOMElement} oldChild Child node to replace.\n\t   * @param {string} markup Markup to render in place of the child node.\n\t   * @internal\n\t   */\n\t  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {\n\t    !ExecutionEnvironment.canUseDOM ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;\n\t    !markup ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;\n\t    !(oldChild.nodeName !== 'HTML') ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;\n\t\n\t    if (typeof markup === 'string') {\n\t      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];\n\t      oldChild.parentNode.replaceChild(newChild, oldChild);\n\t    } else {\n\t      DOMLazyTree.replaceChildWithTree(oldChild, markup);\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = Danger;\n\n/***/ },\n/* 125 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Module that is injectable into `EventPluginHub`, that specifies a\n\t * deterministic ordering of `EventPlugin`s. A convenient way to reason about\n\t * plugins, without having to package every one of them. This is better than\n\t * having plugins be ordered in the same order that they are injected because\n\t * that ordering would be influenced by the packaging order.\n\t * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that\n\t * preventing default on events is convenient in `SimpleEventPlugin` handlers.\n\t */\n\t\n\tvar DefaultEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'TapEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];\n\t\n\tmodule.exports = DefaultEventPluginOrder;\n\n/***/ },\n/* 126 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar EventPropagators = __webpack_require__(24);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar SyntheticMouseEvent = __webpack_require__(28);\n\t\n\tvar eventTypes = {\n\t  mouseEnter: {\n\t    registrationName: 'onMouseEnter',\n\t    dependencies: ['topMouseOut', 'topMouseOver']\n\t  },\n\t  mouseLeave: {\n\t    registrationName: 'onMouseLeave',\n\t    dependencies: ['topMouseOut', 'topMouseOver']\n\t  }\n\t};\n\t\n\tvar EnterLeaveEventPlugin = {\n\t\n\t  eventTypes: eventTypes,\n\t\n\t  /**\n\t   * For almost every interaction we care about, there will be both a top-level\n\t   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that\n\t   * we do not extract duplicate events. However, moving the mouse into the\n\t   * browser from outside will not fire a `mouseout` event. In this case, we use\n\t   * the `mouseover` top-level event.\n\t   */\n\t  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n\t    if (topLevelType === 'topMouseOver' && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {\n\t      return null;\n\t    }\n\t    if (topLevelType !== 'topMouseOut' && topLevelType !== 'topMouseOver') {\n\t      // Must not be a mouse in or mouse out - ignoring.\n\t      return null;\n\t    }\n\t\n\t    var win;\n\t    if (nativeEventTarget.window === nativeEventTarget) {\n\t      // `nativeEventTarget` is probably a window object.\n\t      win = nativeEventTarget;\n\t    } else {\n\t      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n\t      var doc = nativeEventTarget.ownerDocument;\n\t      if (doc) {\n\t        win = doc.defaultView || doc.parentWindow;\n\t      } else {\n\t        win = window;\n\t      }\n\t    }\n\t\n\t    var from;\n\t    var to;\n\t    if (topLevelType === 'topMouseOut') {\n\t      from = targetInst;\n\t      var related = nativeEvent.relatedTarget || nativeEvent.toElement;\n\t      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;\n\t    } else {\n\t      // Moving to a node from outside the window.\n\t      from = null;\n\t      to = targetInst;\n\t    }\n\t\n\t    if (from === to) {\n\t      // Nothing pertains to our managed components.\n\t      return null;\n\t    }\n\t\n\t    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);\n\t    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);\n\t\n\t    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);\n\t    leave.type = 'mouseleave';\n\t    leave.target = fromNode;\n\t    leave.relatedTarget = toNode;\n\t\n\t    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);\n\t    enter.type = 'mouseenter';\n\t    enter.target = toNode;\n\t    enter.relatedTarget = fromNode;\n\t\n\t    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);\n\t\n\t    return [leave, enter];\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = EnterLeaveEventPlugin;\n\n/***/ },\n/* 127 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(4);\n\t\n\tvar PooledClass = __webpack_require__(13);\n\t\n\tvar getTextContentAccessor = __webpack_require__(77);\n\t\n\t/**\n\t * This helper class stores information about text content of a target node,\n\t * allowing comparison of content before and after a given event.\n\t *\n\t * Identify the node where selection currently begins, then observe\n\t * both its text content and its current position in the DOM. Since the\n\t * browser may natively replace the target node during composition, we can\n\t * use its position to find its replacement.\n\t *\n\t * @param {DOMEventTarget} root\n\t */\n\tfunction FallbackCompositionState(root) {\n\t  this._root = root;\n\t  this._startText = this.getText();\n\t  this._fallbackText = null;\n\t}\n\t\n\t_assign(FallbackCompositionState.prototype, {\n\t  destructor: function () {\n\t    this._root = null;\n\t    this._startText = null;\n\t    this._fallbackText = null;\n\t  },\n\t\n\t  /**\n\t   * Get current text of input.\n\t   *\n\t   * @return {string}\n\t   */\n\t  getText: function () {\n\t    if ('value' in this._root) {\n\t      return this._root.value;\n\t    }\n\t    return this._root[getTextContentAccessor()];\n\t  },\n\t\n\t  /**\n\t   * Determine the differing substring between the initially stored\n\t   * text content and the current content.\n\t   *\n\t   * @return {string}\n\t   */\n\t  getData: function () {\n\t    if (this._fallbackText) {\n\t      return this._fallbackText;\n\t    }\n\t\n\t    var start;\n\t    var startValue = this._startText;\n\t    var startLength = startValue.length;\n\t    var end;\n\t    var endValue = this.getText();\n\t    var endLength = endValue.length;\n\t\n\t    for (start = 0; start < startLength; start++) {\n\t      if (startValue[start] !== endValue[start]) {\n\t        break;\n\t      }\n\t    }\n\t\n\t    var minEnd = startLength - start;\n\t    for (end = 1; end <= minEnd; end++) {\n\t      if (startValue[startLength - end] !== endValue[endLength - end]) {\n\t        break;\n\t      }\n\t    }\n\t\n\t    var sliceTail = end > 1 ? 1 - end : undefined;\n\t    this._fallbackText = endValue.slice(start, sliceTail);\n\t    return this._fallbackText;\n\t  }\n\t});\n\t\n\tPooledClass.addPoolingTo(FallbackCompositionState);\n\t\n\tmodule.exports = FallbackCompositionState;\n\n/***/ },\n/* 128 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar DOMProperty = __webpack_require__(15);\n\t\n\tvar MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;\n\tvar HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;\n\tvar HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;\n\tvar HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;\n\tvar HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;\n\t\n\tvar HTMLDOMPropertyConfig = {\n\t  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),\n\t  Properties: {\n\t    /**\n\t     * Standard Properties\n\t     */\n\t    accept: 0,\n\t    acceptCharset: 0,\n\t    accessKey: 0,\n\t    action: 0,\n\t    allowFullScreen: HAS_BOOLEAN_VALUE,\n\t    allowTransparency: 0,\n\t    alt: 0,\n\t    // specifies target context for links with `preload` type\n\t    as: 0,\n\t    async: HAS_BOOLEAN_VALUE,\n\t    autoComplete: 0,\n\t    // autoFocus is polyfilled/normalized by AutoFocusUtils\n\t    // autoFocus: HAS_BOOLEAN_VALUE,\n\t    autoPlay: HAS_BOOLEAN_VALUE,\n\t    capture: HAS_BOOLEAN_VALUE,\n\t    cellPadding: 0,\n\t    cellSpacing: 0,\n\t    charSet: 0,\n\t    challenge: 0,\n\t    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n\t    cite: 0,\n\t    classID: 0,\n\t    className: 0,\n\t    cols: HAS_POSITIVE_NUMERIC_VALUE,\n\t    colSpan: 0,\n\t    content: 0,\n\t    contentEditable: 0,\n\t    contextMenu: 0,\n\t    controls: HAS_BOOLEAN_VALUE,\n\t    coords: 0,\n\t    crossOrigin: 0,\n\t    data: 0, // For `<object />` acts as `src`.\n\t    dateTime: 0,\n\t    'default': HAS_BOOLEAN_VALUE,\n\t    defer: HAS_BOOLEAN_VALUE,\n\t    dir: 0,\n\t    disabled: HAS_BOOLEAN_VALUE,\n\t    download: HAS_OVERLOADED_BOOLEAN_VALUE,\n\t    draggable: 0,\n\t    encType: 0,\n\t    form: 0,\n\t    formAction: 0,\n\t    formEncType: 0,\n\t    formMethod: 0,\n\t    formNoValidate: HAS_BOOLEAN_VALUE,\n\t    formTarget: 0,\n\t    frameBorder: 0,\n\t    headers: 0,\n\t    height: 0,\n\t    hidden: HAS_BOOLEAN_VALUE,\n\t    high: 0,\n\t    href: 0,\n\t    hrefLang: 0,\n\t    htmlFor: 0,\n\t    httpEquiv: 0,\n\t    icon: 0,\n\t    id: 0,\n\t    inputMode: 0,\n\t    integrity: 0,\n\t    is: 0,\n\t    keyParams: 0,\n\t    keyType: 0,\n\t    kind: 0,\n\t    label: 0,\n\t    lang: 0,\n\t    list: 0,\n\t    loop: HAS_BOOLEAN_VALUE,\n\t    low: 0,\n\t    manifest: 0,\n\t    marginHeight: 0,\n\t    marginWidth: 0,\n\t    max: 0,\n\t    maxLength: 0,\n\t    media: 0,\n\t    mediaGroup: 0,\n\t    method: 0,\n\t    min: 0,\n\t    minLength: 0,\n\t    // Caution; `option.selected` is not updated if `select.multiple` is\n\t    // disabled with `removeAttribute`.\n\t    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n\t    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n\t    name: 0,\n\t    nonce: 0,\n\t    noValidate: HAS_BOOLEAN_VALUE,\n\t    open: HAS_BOOLEAN_VALUE,\n\t    optimum: 0,\n\t    pattern: 0,\n\t    placeholder: 0,\n\t    playsInline: HAS_BOOLEAN_VALUE,\n\t    poster: 0,\n\t    preload: 0,\n\t    profile: 0,\n\t    radioGroup: 0,\n\t    readOnly: HAS_BOOLEAN_VALUE,\n\t    referrerPolicy: 0,\n\t    rel: 0,\n\t    required: HAS_BOOLEAN_VALUE,\n\t    reversed: HAS_BOOLEAN_VALUE,\n\t    role: 0,\n\t    rows: HAS_POSITIVE_NUMERIC_VALUE,\n\t    rowSpan: HAS_NUMERIC_VALUE,\n\t    sandbox: 0,\n\t    scope: 0,\n\t    scoped: HAS_BOOLEAN_VALUE,\n\t    scrolling: 0,\n\t    seamless: HAS_BOOLEAN_VALUE,\n\t    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n\t    shape: 0,\n\t    size: HAS_POSITIVE_NUMERIC_VALUE,\n\t    sizes: 0,\n\t    span: HAS_POSITIVE_NUMERIC_VALUE,\n\t    spellCheck: 0,\n\t    src: 0,\n\t    srcDoc: 0,\n\t    srcLang: 0,\n\t    srcSet: 0,\n\t    start: HAS_NUMERIC_VALUE,\n\t    step: 0,\n\t    style: 0,\n\t    summary: 0,\n\t    tabIndex: 0,\n\t    target: 0,\n\t    title: 0,\n\t    // Setting .type throws on non-<input> tags\n\t    type: 0,\n\t    useMap: 0,\n\t    value: 0,\n\t    width: 0,\n\t    wmode: 0,\n\t    wrap: 0,\n\t\n\t    /**\n\t     * RDFa Properties\n\t     */\n\t    about: 0,\n\t    datatype: 0,\n\t    inlist: 0,\n\t    prefix: 0,\n\t    // property is also supported for OpenGraph in meta tags.\n\t    property: 0,\n\t    resource: 0,\n\t    'typeof': 0,\n\t    vocab: 0,\n\t\n\t    /**\n\t     * Non-standard Properties\n\t     */\n\t    // autoCapitalize and autoCorrect are supported in Mobile Safari for\n\t    // keyboard hints.\n\t    autoCapitalize: 0,\n\t    autoCorrect: 0,\n\t    // autoSave allows WebKit/Blink to persist values of input fields on page reloads\n\t    autoSave: 0,\n\t    // color is for Safari mask-icon link\n\t    color: 0,\n\t    // itemProp, itemScope, itemType are for\n\t    // Microdata support. See http://schema.org/docs/gs.html\n\t    itemProp: 0,\n\t    itemScope: HAS_BOOLEAN_VALUE,\n\t    itemType: 0,\n\t    // itemID and itemRef are for Microdata support as well but\n\t    // only specified in the WHATWG spec document. See\n\t    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api\n\t    itemID: 0,\n\t    itemRef: 0,\n\t    // results show looking glass icon and recent searches on input\n\t    // search fields in WebKit/Blink\n\t    results: 0,\n\t    // IE-only attribute that specifies security restrictions on an iframe\n\t    // as an alternative to the sandbox attribute on IE<10\n\t    security: 0,\n\t    // IE-only attribute that controls focus behavior\n\t    unselectable: 0\n\t  },\n\t  DOMAttributeNames: {\n\t    acceptCharset: 'accept-charset',\n\t    className: 'class',\n\t    htmlFor: 'for',\n\t    httpEquiv: 'http-equiv'\n\t  },\n\t  DOMPropertyNames: {},\n\t  DOMMutationMethods: {\n\t    value: function (node, value) {\n\t      if (value == null) {\n\t        return node.removeAttribute('value');\n\t      }\n\t\n\t      // Number inputs get special treatment due to some edge cases in\n\t      // Chrome. Let everything else assign the value attribute as normal.\n\t      // https://github.com/facebook/react/issues/7253#issuecomment-236074326\n\t      if (node.type !== 'number' || node.hasAttribute('value') === false) {\n\t        node.setAttribute('value', '' + value);\n\t      } else if (node.validity && !node.validity.badInput && node.ownerDocument.activeElement !== node) {\n\t        // Don't assign an attribute if validation reports bad\n\t        // input. Chrome will clear the value. Additionally, don't\n\t        // operate on inputs that have focus, otherwise Chrome might\n\t        // strip off trailing decimal places and cause the user's\n\t        // cursor position to jump to the beginning of the input.\n\t        //\n\t        // In ReactDOMInput, we have an onBlur event that will trigger\n\t        // this function again when focus is lost.\n\t        node.setAttribute('value', '' + value);\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tmodule.exports = HTMLDOMPropertyConfig;\n\n/***/ },\n/* 129 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * Copyright 2014-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactReconciler = __webpack_require__(16);\n\t\n\tvar instantiateReactComponent = __webpack_require__(78);\n\tvar KeyEscapeUtils = __webpack_require__(37);\n\tvar shouldUpdateReactComponent = __webpack_require__(47);\n\tvar traverseAllChildren = __webpack_require__(81);\n\tvar warning = __webpack_require__(2);\n\t\n\tvar ReactComponentTreeHook;\n\t\n\tif (typeof process !== 'undefined' && ({\"NODE_ENV\":\"production\",\"PUBLIC_URL\":\"/PuzzlePopsicles\"}) && (\"production\") === 'test') {\n\t  // Temporary hack.\n\t  // Inline requires don't work well with Jest:\n\t  // https://github.com/facebook/react/issues/7240\n\t  // Remove the inline requires when we don't need them anymore:\n\t  // https://github.com/facebook/react/pull/7178\n\t  ReactComponentTreeHook = __webpack_require__(82);\n\t}\n\t\n\tfunction instantiateChild(childInstances, child, name, selfDebugID) {\n\t  // We found a component instance.\n\t  var keyUnique = childInstances[name] === undefined;\n\t  if (false) {\n\t    if (!ReactComponentTreeHook) {\n\t      ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\n\t    }\n\t    if (!keyUnique) {\n\t      process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;\n\t    }\n\t  }\n\t  if (child != null && keyUnique) {\n\t    childInstances[name] = instantiateReactComponent(child, true);\n\t  }\n\t}\n\t\n\t/**\n\t * ReactChildReconciler provides helpers for initializing or updating a set of\n\t * children. Its output is suitable for passing it onto ReactMultiChild which\n\t * does diffed reordering and insertion.\n\t */\n\tvar ReactChildReconciler = {\n\t  /**\n\t   * Generates a \"mount image\" for each of the supplied children. In the case\n\t   * of `ReactDOMComponent`, a mount image is a string of markup.\n\t   *\n\t   * @param {?object} nestedChildNodes Nested child maps.\n\t   * @return {?object} A set of child instances.\n\t   * @internal\n\t   */\n\t  instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID // 0 in production and for roots\n\t  ) {\n\t    if (nestedChildNodes == null) {\n\t      return null;\n\t    }\n\t    var childInstances = {};\n\t\n\t    if (false) {\n\t      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {\n\t        return instantiateChild(childInsts, child, name, selfDebugID);\n\t      }, childInstances);\n\t    } else {\n\t      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);\n\t    }\n\t    return childInstances;\n\t  },\n\t\n\t  /**\n\t   * Updates the rendered children and returns a new set of children.\n\t   *\n\t   * @param {?object} prevChildren Previously initialized set of children.\n\t   * @param {?object} nextChildren Flat child element maps.\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @param {object} context\n\t   * @return {?object} A new set of child instances.\n\t   * @internal\n\t   */\n\t  updateChildren: function (prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID // 0 in production and for roots\n\t  ) {\n\t    // We currently don't have a way to track moves here but if we use iterators\n\t    // instead of for..in we can zip the iterators and check if an item has\n\t    // moved.\n\t    // TODO: If nothing has changed, return the prevChildren object so that we\n\t    // can quickly bailout if nothing has changed.\n\t    if (!nextChildren && !prevChildren) {\n\t      return;\n\t    }\n\t    var name;\n\t    var prevChild;\n\t    for (name in nextChildren) {\n\t      if (!nextChildren.hasOwnProperty(name)) {\n\t        continue;\n\t      }\n\t      prevChild = prevChildren && prevChildren[name];\n\t      var prevElement = prevChild && prevChild._currentElement;\n\t      var nextElement = nextChildren[name];\n\t      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {\n\t        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);\n\t        nextChildren[name] = prevChild;\n\t      } else {\n\t        if (prevChild) {\n\t          removedNodes[name] = ReactReconciler.getHostNode(prevChild);\n\t          ReactReconciler.unmountComponent(prevChild, false);\n\t        }\n\t        // The child must be instantiated before it's mounted.\n\t        var nextChildInstance = instantiateReactComponent(nextElement, true);\n\t        nextChildren[name] = nextChildInstance;\n\t        // Creating mount image now ensures refs are resolved in right order\n\t        // (see https://github.com/facebook/react/pull/7101 for explanation).\n\t        var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);\n\t        mountImages.push(nextChildMountImage);\n\t      }\n\t    }\n\t    // Unmount children that are no longer present.\n\t    for (name in prevChildren) {\n\t      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {\n\t        prevChild = prevChildren[name];\n\t        removedNodes[name] = ReactReconciler.getHostNode(prevChild);\n\t        ReactReconciler.unmountComponent(prevChild, false);\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unmounts all rendered children. This should be used to clean up children\n\t   * when this component is unmounted.\n\t   *\n\t   * @param {?object} renderedChildren Previously initialized set of children.\n\t   * @internal\n\t   */\n\t  unmountChildren: function (renderedChildren, safely) {\n\t    for (var name in renderedChildren) {\n\t      if (renderedChildren.hasOwnProperty(name)) {\n\t        var renderedChild = renderedChildren[name];\n\t        ReactReconciler.unmountComponent(renderedChild, safely);\n\t      }\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactChildReconciler;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/***/ },\n/* 130 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar DOMChildrenOperations = __webpack_require__(33);\n\tvar ReactDOMIDOperations = __webpack_require__(137);\n\t\n\t/**\n\t * Abstracts away all functionality of the reconciler that requires knowledge of\n\t * the browser context. TODO: These callers should be refactored to avoid the\n\t * need for this injection.\n\t */\n\tvar ReactComponentBrowserEnvironment = {\n\t\n\t  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,\n\t\n\t  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup\n\t\n\t};\n\t\n\tmodule.exports = ReactComponentBrowserEnvironment;\n\n/***/ },\n/* 131 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(3),\n\t    _assign = __webpack_require__(4);\n\t\n\tvar React = __webpack_require__(17);\n\tvar ReactComponentEnvironment = __webpack_require__(39);\n\tvar ReactCurrentOwner = __webpack_require__(12);\n\tvar ReactErrorUtils = __webpack_require__(40);\n\tvar ReactInstanceMap = __webpack_require__(25);\n\tvar ReactInstrumentation = __webpack_require__(9);\n\tvar ReactNodeTypes = __webpack_require__(72);\n\tvar ReactReconciler = __webpack_require__(16);\n\t\n\tif (false) {\n\t  var checkReactTypeSpec = require('./checkReactTypeSpec');\n\t}\n\t\n\tvar emptyObject = __webpack_require__(22);\n\tvar invariant = __webpack_require__(1);\n\tvar shallowEqual = __webpack_require__(32);\n\tvar shouldUpdateReactComponent = __webpack_require__(47);\n\tvar warning = __webpack_require__(2);\n\t\n\tvar CompositeTypes = {\n\t  ImpureClass: 0,\n\t  PureClass: 1,\n\t  StatelessFunctional: 2\n\t};\n\t\n\tfunction StatelessComponent(Component) {}\n\tStatelessComponent.prototype.render = function () {\n\t  var Component = ReactInstanceMap.get(this)._currentElement.type;\n\t  var element = Component(this.props, this.context, this.updater);\n\t  warnIfInvalidElement(Component, element);\n\t  return element;\n\t};\n\t\n\tfunction warnIfInvalidElement(Component, element) {\n\t  if (false) {\n\t    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || React.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;\n\t    process.env.NODE_ENV !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;\n\t  }\n\t}\n\t\n\tfunction shouldConstruct(Component) {\n\t  return !!(Component.prototype && Component.prototype.isReactComponent);\n\t}\n\t\n\tfunction isPureComponent(Component) {\n\t  return !!(Component.prototype && Component.prototype.isPureReactComponent);\n\t}\n\t\n\t// Separated into a function to contain deoptimizations caused by try/finally.\n\tfunction measureLifeCyclePerf(fn, debugID, timerType) {\n\t  if (debugID === 0) {\n\t    // Top-level wrappers (see ReactMount) and empty components (see\n\t    // ReactDOMEmptyComponent) are invisible to hooks and devtools.\n\t    // Both are implementation details that should go away in the future.\n\t    return fn();\n\t  }\n\t\n\t  ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);\n\t  try {\n\t    return fn();\n\t  } finally {\n\t    ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType);\n\t  }\n\t}\n\t\n\t/**\n\t * ------------------ The Life-Cycle of a Composite Component ------------------\n\t *\n\t * - constructor: Initialization of state. The instance is now retained.\n\t *   - componentWillMount\n\t *   - render\n\t *   - [children's constructors]\n\t *     - [children's componentWillMount and render]\n\t *     - [children's componentDidMount]\n\t *     - componentDidMount\n\t *\n\t *       Update Phases:\n\t *       - componentWillReceiveProps (only called if parent updated)\n\t *       - shouldComponentUpdate\n\t *         - componentWillUpdate\n\t *           - render\n\t *           - [children's constructors or receive props phases]\n\t *         - componentDidUpdate\n\t *\n\t *     - componentWillUnmount\n\t *     - [children's componentWillUnmount]\n\t *   - [children destroyed]\n\t * - (destroyed): The instance is now blank, released by React and ready for GC.\n\t *\n\t * -----------------------------------------------------------------------------\n\t */\n\t\n\t/**\n\t * An incrementing ID assigned to each component when it is mounted. This is\n\t * used to enforce the order in which `ReactUpdates` updates dirty components.\n\t *\n\t * @private\n\t */\n\tvar nextMountID = 1;\n\t\n\t/**\n\t * @lends {ReactCompositeComponent.prototype}\n\t */\n\tvar ReactCompositeComponent = {\n\t\n\t  /**\n\t   * Base constructor for all composite component.\n\t   *\n\t   * @param {ReactElement} element\n\t   * @final\n\t   * @internal\n\t   */\n\t  construct: function (element) {\n\t    this._currentElement = element;\n\t    this._rootNodeID = 0;\n\t    this._compositeType = null;\n\t    this._instance = null;\n\t    this._hostParent = null;\n\t    this._hostContainerInfo = null;\n\t\n\t    // See ReactUpdateQueue\n\t    this._updateBatchNumber = null;\n\t    this._pendingElement = null;\n\t    this._pendingStateQueue = null;\n\t    this._pendingReplaceState = false;\n\t    this._pendingForceUpdate = false;\n\t\n\t    this._renderedNodeType = null;\n\t    this._renderedComponent = null;\n\t    this._context = null;\n\t    this._mountOrder = 0;\n\t    this._topLevelWrapper = null;\n\t\n\t    // See ReactUpdates and ReactUpdateQueue.\n\t    this._pendingCallbacks = null;\n\t\n\t    // ComponentWillUnmount shall only be called once\n\t    this._calledComponentWillUnmount = false;\n\t\n\t    if (false) {\n\t      this._warnedAboutRefsInRender = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Initializes the component, renders markup, and registers event listeners.\n\t   *\n\t   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n\t   * @param {?object} hostParent\n\t   * @param {?object} hostContainerInfo\n\t   * @param {?object} context\n\t   * @return {?string} Rendered markup to be inserted into the DOM.\n\t   * @final\n\t   * @internal\n\t   */\n\t  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n\t    var _this = this;\n\t\n\t    this._context = context;\n\t    this._mountOrder = nextMountID++;\n\t    this._hostParent = hostParent;\n\t    this._hostContainerInfo = hostContainerInfo;\n\t\n\t    var publicProps = this._currentElement.props;\n\t    var publicContext = this._processContext(context);\n\t\n\t    var Component = this._currentElement.type;\n\t\n\t    var updateQueue = transaction.getUpdateQueue();\n\t\n\t    // Initialize the public class\n\t    var doConstruct = shouldConstruct(Component);\n\t    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);\n\t    var renderedElement;\n\t\n\t    // Support functional components\n\t    if (!doConstruct && (inst == null || inst.render == null)) {\n\t      renderedElement = inst;\n\t      warnIfInvalidElement(Component, renderedElement);\n\t      !(inst === null || inst === false || React.isValidElement(inst)) ?  false ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;\n\t      inst = new StatelessComponent(Component);\n\t      this._compositeType = CompositeTypes.StatelessFunctional;\n\t    } else {\n\t      if (isPureComponent(Component)) {\n\t        this._compositeType = CompositeTypes.PureClass;\n\t      } else {\n\t        this._compositeType = CompositeTypes.ImpureClass;\n\t      }\n\t    }\n\t\n\t    if (false) {\n\t      // This will throw later in _renderValidatedComponent, but add an early\n\t      // warning now to help debugging\n\t      if (inst.render == null) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;\n\t      }\n\t\n\t      var propsMutated = inst.props !== publicProps;\n\t      var componentName = Component.displayName || Component.name || 'Component';\n\t\n\t      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + 'up the same props that your component\\'s constructor was passed.', componentName, componentName) : void 0;\n\t    }\n\t\n\t    // These should be set up in the constructor, but as a convenience for\n\t    // simpler class abstractions, we set them up after the fact.\n\t    inst.props = publicProps;\n\t    inst.context = publicContext;\n\t    inst.refs = emptyObject;\n\t    inst.updater = updateQueue;\n\t\n\t    this._instance = inst;\n\t\n\t    // Store a reference from the instance back to the internal representation\n\t    ReactInstanceMap.set(inst, this);\n\t\n\t    if (false) {\n\t      // Since plain JS classes are defined without any special initialization\n\t      // logic, we can not catch common errors early. Therefore, we have to\n\t      // catch them here, at initialization time, instead.\n\t      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved || inst.state, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;\n\t      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;\n\t      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;\n\t      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;\n\t      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;\n\t      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;\n\t      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;\n\t    }\n\t\n\t    var initialState = inst.state;\n\t    if (initialState === undefined) {\n\t      inst.state = initialState = null;\n\t    }\n\t    !(typeof initialState === 'object' && !Array.isArray(initialState)) ?  false ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;\n\t\n\t    this._pendingStateQueue = null;\n\t    this._pendingReplaceState = false;\n\t    this._pendingForceUpdate = false;\n\t\n\t    var markup;\n\t    if (inst.unstable_handleError) {\n\t      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);\n\t    } else {\n\t      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);\n\t    }\n\t\n\t    if (inst.componentDidMount) {\n\t      if (false) {\n\t        transaction.getReactMountReady().enqueue(function () {\n\t          measureLifeCyclePerf(function () {\n\t            return inst.componentDidMount();\n\t          }, _this._debugID, 'componentDidMount');\n\t        });\n\t      } else {\n\t        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);\n\t      }\n\t    }\n\t\n\t    return markup;\n\t  },\n\t\n\t  _constructComponent: function (doConstruct, publicProps, publicContext, updateQueue) {\n\t    if (false) {\n\t      ReactCurrentOwner.current = this;\n\t      try {\n\t        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);\n\t      } finally {\n\t        ReactCurrentOwner.current = null;\n\t      }\n\t    } else {\n\t      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);\n\t    }\n\t  },\n\t\n\t  _constructComponentWithoutOwner: function (doConstruct, publicProps, publicContext, updateQueue) {\n\t    var Component = this._currentElement.type;\n\t\n\t    if (doConstruct) {\n\t      if (false) {\n\t        return measureLifeCyclePerf(function () {\n\t          return new Component(publicProps, publicContext, updateQueue);\n\t        }, this._debugID, 'ctor');\n\t      } else {\n\t        return new Component(publicProps, publicContext, updateQueue);\n\t      }\n\t    }\n\t\n\t    // This can still be an instance in case of factory components\n\t    // but we'll count this as time spent rendering as the more common case.\n\t    if (false) {\n\t      return measureLifeCyclePerf(function () {\n\t        return Component(publicProps, publicContext, updateQueue);\n\t      }, this._debugID, 'render');\n\t    } else {\n\t      return Component(publicProps, publicContext, updateQueue);\n\t    }\n\t  },\n\t\n\t  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {\n\t    var markup;\n\t    var checkpoint = transaction.checkpoint();\n\t    try {\n\t      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);\n\t    } catch (e) {\n\t      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint\n\t      transaction.rollback(checkpoint);\n\t      this._instance.unstable_handleError(e);\n\t      if (this._pendingStateQueue) {\n\t        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);\n\t      }\n\t      checkpoint = transaction.checkpoint();\n\t\n\t      this._renderedComponent.unmountComponent(true);\n\t      transaction.rollback(checkpoint);\n\t\n\t      // Try again - we've informed the component about the error, so they can render an error message this time.\n\t      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).\n\t      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);\n\t    }\n\t    return markup;\n\t  },\n\t\n\t  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {\n\t    var inst = this._instance;\n\t\n\t    var debugID = 0;\n\t    if (false) {\n\t      debugID = this._debugID;\n\t    }\n\t\n\t    if (inst.componentWillMount) {\n\t      if (false) {\n\t        measureLifeCyclePerf(function () {\n\t          return inst.componentWillMount();\n\t        }, debugID, 'componentWillMount');\n\t      } else {\n\t        inst.componentWillMount();\n\t      }\n\t      // When mounting, calls to `setState` by `componentWillMount` will set\n\t      // `this._pendingStateQueue` without triggering a re-render.\n\t      if (this._pendingStateQueue) {\n\t        inst.state = this._processPendingState(inst.props, inst.context);\n\t      }\n\t    }\n\t\n\t    // If not a stateless component, we now render\n\t    if (renderedElement === undefined) {\n\t      renderedElement = this._renderValidatedComponent();\n\t    }\n\t\n\t    var nodeType = ReactNodeTypes.getType(renderedElement);\n\t    this._renderedNodeType = nodeType;\n\t    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */\n\t    );\n\t    this._renderedComponent = child;\n\t\n\t    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), debugID);\n\t\n\t    if (false) {\n\t      if (debugID !== 0) {\n\t        var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];\n\t        ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);\n\t      }\n\t    }\n\t\n\t    return markup;\n\t  },\n\t\n\t  getHostNode: function () {\n\t    return ReactReconciler.getHostNode(this._renderedComponent);\n\t  },\n\t\n\t  /**\n\t   * Releases any resources allocated by `mountComponent`.\n\t   *\n\t   * @final\n\t   * @internal\n\t   */\n\t  unmountComponent: function (safely) {\n\t    if (!this._renderedComponent) {\n\t      return;\n\t    }\n\t\n\t    var inst = this._instance;\n\t\n\t    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {\n\t      inst._calledComponentWillUnmount = true;\n\t\n\t      if (safely) {\n\t        var name = this.getName() + '.componentWillUnmount()';\n\t        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));\n\t      } else {\n\t        if (false) {\n\t          measureLifeCyclePerf(function () {\n\t            return inst.componentWillUnmount();\n\t          }, this._debugID, 'componentWillUnmount');\n\t        } else {\n\t          inst.componentWillUnmount();\n\t        }\n\t      }\n\t    }\n\t\n\t    if (this._renderedComponent) {\n\t      ReactReconciler.unmountComponent(this._renderedComponent, safely);\n\t      this._renderedNodeType = null;\n\t      this._renderedComponent = null;\n\t      this._instance = null;\n\t    }\n\t\n\t    // Reset pending fields\n\t    // Even if this component is scheduled for another update in ReactUpdates,\n\t    // it would still be ignored because these fields are reset.\n\t    this._pendingStateQueue = null;\n\t    this._pendingReplaceState = false;\n\t    this._pendingForceUpdate = false;\n\t    this._pendingCallbacks = null;\n\t    this._pendingElement = null;\n\t\n\t    // These fields do not really need to be reset since this object is no\n\t    // longer accessible.\n\t    this._context = null;\n\t    this._rootNodeID = 0;\n\t    this._topLevelWrapper = null;\n\t\n\t    // Delete the reference from the instance to this internal representation\n\t    // which allow the internals to be properly cleaned up even if the user\n\t    // leaks a reference to the public instance.\n\t    ReactInstanceMap.remove(inst);\n\t\n\t    // Some existing components rely on inst.props even after they've been\n\t    // destroyed (in event handlers).\n\t    // TODO: inst.props = null;\n\t    // TODO: inst.state = null;\n\t    // TODO: inst.context = null;\n\t  },\n\t\n\t  /**\n\t   * Filters the context object to only contain keys specified in\n\t   * `contextTypes`\n\t   *\n\t   * @param {object} context\n\t   * @return {?object}\n\t   * @private\n\t   */\n\t  _maskContext: function (context) {\n\t    var Component = this._currentElement.type;\n\t    var contextTypes = Component.contextTypes;\n\t    if (!contextTypes) {\n\t      return emptyObject;\n\t    }\n\t    var maskedContext = {};\n\t    for (var contextName in contextTypes) {\n\t      maskedContext[contextName] = context[contextName];\n\t    }\n\t    return maskedContext;\n\t  },\n\t\n\t  /**\n\t   * Filters the context object to only contain keys specified in\n\t   * `contextTypes`, and asserts that they are valid.\n\t   *\n\t   * @param {object} context\n\t   * @return {?object}\n\t   * @private\n\t   */\n\t  _processContext: function (context) {\n\t    var maskedContext = this._maskContext(context);\n\t    if (false) {\n\t      var Component = this._currentElement.type;\n\t      if (Component.contextTypes) {\n\t        this._checkContextTypes(Component.contextTypes, maskedContext, 'context');\n\t      }\n\t    }\n\t    return maskedContext;\n\t  },\n\t\n\t  /**\n\t   * @param {object} currentContext\n\t   * @return {object}\n\t   * @private\n\t   */\n\t  _processChildContext: function (currentContext) {\n\t    var Component = this._currentElement.type;\n\t    var inst = this._instance;\n\t    var childContext;\n\t\n\t    if (inst.getChildContext) {\n\t      if (false) {\n\t        ReactInstrumentation.debugTool.onBeginProcessingChildContext();\n\t        try {\n\t          childContext = inst.getChildContext();\n\t        } finally {\n\t          ReactInstrumentation.debugTool.onEndProcessingChildContext();\n\t        }\n\t      } else {\n\t        childContext = inst.getChildContext();\n\t      }\n\t    }\n\t\n\t    if (childContext) {\n\t      !(typeof Component.childContextTypes === 'object') ?  false ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;\n\t      if (false) {\n\t        this._checkContextTypes(Component.childContextTypes, childContext, 'child context');\n\t      }\n\t      for (var name in childContext) {\n\t        !(name in Component.childContextTypes) ?  false ? invariant(false, '%s.getChildContext(): key \"%s\" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;\n\t      }\n\t      return _assign({}, currentContext, childContext);\n\t    }\n\t    return currentContext;\n\t  },\n\t\n\t  /**\n\t   * Assert that the context types are valid\n\t   *\n\t   * @param {object} typeSpecs Map of context field to a ReactPropType\n\t   * @param {object} values Runtime values that need to be type-checked\n\t   * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n\t   * @private\n\t   */\n\t  _checkContextTypes: function (typeSpecs, values, location) {\n\t    if (false) {\n\t      checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);\n\t    }\n\t  },\n\t\n\t  receiveComponent: function (nextElement, transaction, nextContext) {\n\t    var prevElement = this._currentElement;\n\t    var prevContext = this._context;\n\t\n\t    this._pendingElement = null;\n\t\n\t    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);\n\t  },\n\t\n\t  /**\n\t   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`\n\t   * is set, update the component.\n\t   *\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @internal\n\t   */\n\t  performUpdateIfNecessary: function (transaction) {\n\t    if (this._pendingElement != null) {\n\t      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);\n\t    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {\n\t      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);\n\t    } else {\n\t      this._updateBatchNumber = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Perform an update to a mounted component. The componentWillReceiveProps and\n\t   * shouldComponentUpdate methods are called, then (assuming the update isn't\n\t   * skipped) the remaining update lifecycle methods are called and the DOM\n\t   * representation is updated.\n\t   *\n\t   * By default, this implements React's rendering and reconciliation algorithm.\n\t   * Sophisticated clients may wish to override this.\n\t   *\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @param {ReactElement} prevParentElement\n\t   * @param {ReactElement} nextParentElement\n\t   * @internal\n\t   * @overridable\n\t   */\n\t  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {\n\t    var inst = this._instance;\n\t    !(inst != null) ?  false ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;\n\t\n\t    var willReceive = false;\n\t    var nextContext;\n\t\n\t    // Determine if the context has changed or not\n\t    if (this._context === nextUnmaskedContext) {\n\t      nextContext = inst.context;\n\t    } else {\n\t      nextContext = this._processContext(nextUnmaskedContext);\n\t      willReceive = true;\n\t    }\n\t\n\t    var prevProps = prevParentElement.props;\n\t    var nextProps = nextParentElement.props;\n\t\n\t    // Not a simple state update but a props update\n\t    if (prevParentElement !== nextParentElement) {\n\t      willReceive = true;\n\t    }\n\t\n\t    // An update here will schedule an update but immediately set\n\t    // _pendingStateQueue which will ensure that any state updates gets\n\t    // immediately reconciled instead of waiting for the next batch.\n\t    if (willReceive && inst.componentWillReceiveProps) {\n\t      if (false) {\n\t        measureLifeCyclePerf(function () {\n\t          return inst.componentWillReceiveProps(nextProps, nextContext);\n\t        }, this._debugID, 'componentWillReceiveProps');\n\t      } else {\n\t        inst.componentWillReceiveProps(nextProps, nextContext);\n\t      }\n\t    }\n\t\n\t    var nextState = this._processPendingState(nextProps, nextContext);\n\t    var shouldUpdate = true;\n\t\n\t    if (!this._pendingForceUpdate) {\n\t      if (inst.shouldComponentUpdate) {\n\t        if (false) {\n\t          shouldUpdate = measureLifeCyclePerf(function () {\n\t            return inst.shouldComponentUpdate(nextProps, nextState, nextContext);\n\t          }, this._debugID, 'shouldComponentUpdate');\n\t        } else {\n\t          shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);\n\t        }\n\t      } else {\n\t        if (this._compositeType === CompositeTypes.PureClass) {\n\t          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);\n\t        }\n\t      }\n\t    }\n\t\n\t    if (false) {\n\t      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;\n\t    }\n\t\n\t    this._updateBatchNumber = null;\n\t    if (shouldUpdate) {\n\t      this._pendingForceUpdate = false;\n\t      // Will set `this.props`, `this.state` and `this.context`.\n\t      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);\n\t    } else {\n\t      // If it's determined that a component should not update, we still want\n\t      // to set props and state but we shortcut the rest of the update.\n\t      this._currentElement = nextParentElement;\n\t      this._context = nextUnmaskedContext;\n\t      inst.props = nextProps;\n\t      inst.state = nextState;\n\t      inst.context = nextContext;\n\t    }\n\t  },\n\t\n\t  _processPendingState: function (props, context) {\n\t    var inst = this._instance;\n\t    var queue = this._pendingStateQueue;\n\t    var replace = this._pendingReplaceState;\n\t    this._pendingReplaceState = false;\n\t    this._pendingStateQueue = null;\n\t\n\t    if (!queue) {\n\t      return inst.state;\n\t    }\n\t\n\t    if (replace && queue.length === 1) {\n\t      return queue[0];\n\t    }\n\t\n\t    var nextState = _assign({}, replace ? queue[0] : inst.state);\n\t    for (var i = replace ? 1 : 0; i < queue.length; i++) {\n\t      var partial = queue[i];\n\t      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);\n\t    }\n\t\n\t    return nextState;\n\t  },\n\t\n\t  /**\n\t   * Merges new props and state, notifies delegate methods of update and\n\t   * performs update.\n\t   *\n\t   * @param {ReactElement} nextElement Next element\n\t   * @param {object} nextProps Next public object to set as properties.\n\t   * @param {?object} nextState Next object to set as state.\n\t   * @param {?object} nextContext Next public object to set as context.\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @param {?object} unmaskedContext\n\t   * @private\n\t   */\n\t  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {\n\t    var _this2 = this;\n\t\n\t    var inst = this._instance;\n\t\n\t    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);\n\t    var prevProps;\n\t    var prevState;\n\t    var prevContext;\n\t    if (hasComponentDidUpdate) {\n\t      prevProps = inst.props;\n\t      prevState = inst.state;\n\t      prevContext = inst.context;\n\t    }\n\t\n\t    if (inst.componentWillUpdate) {\n\t      if (false) {\n\t        measureLifeCyclePerf(function () {\n\t          return inst.componentWillUpdate(nextProps, nextState, nextContext);\n\t        }, this._debugID, 'componentWillUpdate');\n\t      } else {\n\t        inst.componentWillUpdate(nextProps, nextState, nextContext);\n\t      }\n\t    }\n\t\n\t    this._currentElement = nextElement;\n\t    this._context = unmaskedContext;\n\t    inst.props = nextProps;\n\t    inst.state = nextState;\n\t    inst.context = nextContext;\n\t\n\t    this._updateRenderedComponent(transaction, unmaskedContext);\n\t\n\t    if (hasComponentDidUpdate) {\n\t      if (false) {\n\t        transaction.getReactMountReady().enqueue(function () {\n\t          measureLifeCyclePerf(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), _this2._debugID, 'componentDidUpdate');\n\t        });\n\t      } else {\n\t        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Call the component's `render` method and update the DOM accordingly.\n\t   *\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @internal\n\t   */\n\t  _updateRenderedComponent: function (transaction, context) {\n\t    var prevComponentInstance = this._renderedComponent;\n\t    var prevRenderedElement = prevComponentInstance._currentElement;\n\t    var nextRenderedElement = this._renderValidatedComponent();\n\t\n\t    var debugID = 0;\n\t    if (false) {\n\t      debugID = this._debugID;\n\t    }\n\t\n\t    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {\n\t      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));\n\t    } else {\n\t      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);\n\t      ReactReconciler.unmountComponent(prevComponentInstance, false);\n\t\n\t      var nodeType = ReactNodeTypes.getType(nextRenderedElement);\n\t      this._renderedNodeType = nodeType;\n\t      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */\n\t      );\n\t      this._renderedComponent = child;\n\t\n\t      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), debugID);\n\t\n\t      if (false) {\n\t        if (debugID !== 0) {\n\t          var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];\n\t          ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);\n\t        }\n\t      }\n\t\n\t      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Overridden in shallow rendering.\n\t   *\n\t   * @protected\n\t   */\n\t  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {\n\t    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);\n\t  },\n\t\n\t  /**\n\t   * @protected\n\t   */\n\t  _renderValidatedComponentWithoutOwnerOrContext: function () {\n\t    var inst = this._instance;\n\t    var renderedElement;\n\t\n\t    if (false) {\n\t      renderedElement = measureLifeCyclePerf(function () {\n\t        return inst.render();\n\t      }, this._debugID, 'render');\n\t    } else {\n\t      renderedElement = inst.render();\n\t    }\n\t\n\t    if (false) {\n\t      // We allow auto-mocks to proceed as if they're returning null.\n\t      if (renderedElement === undefined && inst.render._isMockFunction) {\n\t        // This is probably bad practice. Consider warning here and\n\t        // deprecating this convenience.\n\t        renderedElement = null;\n\t      }\n\t    }\n\t\n\t    return renderedElement;\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _renderValidatedComponent: function () {\n\t    var renderedElement;\n\t    if ((\"production\") !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {\n\t      ReactCurrentOwner.current = this;\n\t      try {\n\t        renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();\n\t      } finally {\n\t        ReactCurrentOwner.current = null;\n\t      }\n\t    } else {\n\t      renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();\n\t    }\n\t    !(\n\t    // TODO: An `isValidNode` function would probably be more appropriate\n\t    renderedElement === null || renderedElement === false || React.isValidElement(renderedElement)) ?  false ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;\n\t\n\t    return renderedElement;\n\t  },\n\t\n\t  /**\n\t   * Lazily allocates the refs object and stores `component` as `ref`.\n\t   *\n\t   * @param {string} ref Reference name.\n\t   * @param {component} component Component to store as `ref`.\n\t   * @final\n\t   * @private\n\t   */\n\t  attachRef: function (ref, component) {\n\t    var inst = this.getPublicInstance();\n\t    !(inst != null) ?  false ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;\n\t    var publicComponentInstance = component.getPublicInstance();\n\t    if (false) {\n\t      var componentName = component && component.getName ? component.getName() : 'a component';\n\t      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null || component._compositeType !== CompositeTypes.StatelessFunctional, 'Stateless function components cannot be given refs ' + '(See ref \"%s\" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;\n\t    }\n\t    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;\n\t    refs[ref] = publicComponentInstance;\n\t  },\n\t\n\t  /**\n\t   * Detaches a reference name.\n\t   *\n\t   * @param {string} ref Name to dereference.\n\t   * @final\n\t   * @private\n\t   */\n\t  detachRef: function (ref) {\n\t    var refs = this.getPublicInstance().refs;\n\t    delete refs[ref];\n\t  },\n\t\n\t  /**\n\t   * Get a text description of the component that can be used to identify it\n\t   * in error messages.\n\t   * @return {string} The name or null.\n\t   * @internal\n\t   */\n\t  getName: function () {\n\t    var type = this._currentElement.type;\n\t    var constructor = this._instance && this._instance.constructor;\n\t    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;\n\t  },\n\t\n\t  /**\n\t   * Get the publicly accessible representation of this component - i.e. what\n\t   * is exposed by refs and returned by render. Can be null for stateless\n\t   * components.\n\t   *\n\t   * @return {ReactComponent} the public component instance.\n\t   * @internal\n\t   */\n\t  getPublicInstance: function () {\n\t    var inst = this._instance;\n\t    if (this._compositeType === CompositeTypes.StatelessFunctional) {\n\t      return null;\n\t    }\n\t    return inst;\n\t  },\n\t\n\t  // Stub\n\t  _instantiateReactComponent: null\n\t\n\t};\n\t\n\tmodule.exports = ReactCompositeComponent;\n\n/***/ },\n/* 132 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/\n\t\n\t'use strict';\n\t\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar ReactDefaultInjection = __webpack_require__(145);\n\tvar ReactMount = __webpack_require__(71);\n\tvar ReactReconciler = __webpack_require__(16);\n\tvar ReactUpdates = __webpack_require__(10);\n\tvar ReactVersion = __webpack_require__(158);\n\t\n\tvar findDOMNode = __webpack_require__(174);\n\tvar getHostComponentFromComposite = __webpack_require__(76);\n\tvar renderSubtreeIntoContainer = __webpack_require__(181);\n\tvar warning = __webpack_require__(2);\n\t\n\tReactDefaultInjection.inject();\n\t\n\tvar ReactDOM = {\n\t  findDOMNode: findDOMNode,\n\t  render: ReactMount.render,\n\t  unmountComponentAtNode: ReactMount.unmountComponentAtNode,\n\t  version: ReactVersion,\n\t\n\t  /* eslint-disable camelcase */\n\t  unstable_batchedUpdates: ReactUpdates.batchedUpdates,\n\t  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer\n\t};\n\t\n\t// Inject the runtime into a devtools global hook regardless of browser.\n\t// Allows for debugging when the hook is injected on the page.\n\tif (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {\n\t  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({\n\t    ComponentTree: {\n\t      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,\n\t      getNodeFromInstance: function (inst) {\n\t        // inst is an internal instance (but could be a composite)\n\t        if (inst._renderedComponent) {\n\t          inst = getHostComponentFromComposite(inst);\n\t        }\n\t        if (inst) {\n\t          return ReactDOMComponentTree.getNodeFromInstance(inst);\n\t        } else {\n\t          return null;\n\t        }\n\t      }\n\t    },\n\t    Mount: ReactMount,\n\t    Reconciler: ReactReconciler\n\t  });\n\t}\n\t\n\tif (false) {\n\t  var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\t  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {\n\t\n\t    // First check if devtools is not installed\n\t    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n\t      // If we're in Chrome or Firefox, provide a download link if not installed.\n\t      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {\n\t        // Firefox does not have the issue with devtools loaded over file://\n\t        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;\n\t        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');\n\t      }\n\t    }\n\t\n\t    var testFunc = function testFn() {};\n\t    process.env.NODE_ENV !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, 'It looks like you\\'re using a minified copy of the development build ' + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;\n\t\n\t    // If we're in IE8, check to see if we are in compatibility mode and provide\n\t    // information on preventing compatibility mode\n\t    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;\n\t\n\t    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />') : void 0;\n\t\n\t    var expectedFeatures = [\n\t    // shims\n\t    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.trim];\n\t\n\t    for (var i = 0; i < expectedFeatures.length; i++) {\n\t      if (!expectedFeatures[i]) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;\n\t        break;\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tif (false) {\n\t  var ReactInstrumentation = require('./ReactInstrumentation');\n\t  var ReactDOMUnknownPropertyHook = require('./ReactDOMUnknownPropertyHook');\n\t  var ReactDOMNullInputValuePropHook = require('./ReactDOMNullInputValuePropHook');\n\t  var ReactDOMInvalidARIAHook = require('./ReactDOMInvalidARIAHook');\n\t\n\t  ReactInstrumentation.debugTool.addHook(ReactDOMUnknownPropertyHook);\n\t  ReactInstrumentation.debugTool.addHook(ReactDOMNullInputValuePropHook);\n\t  ReactInstrumentation.debugTool.addHook(ReactDOMInvalidARIAHook);\n\t}\n\t\n\tmodule.exports = ReactDOM;\n\n/***/ },\n/* 133 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t/* global hasOwnProperty:true */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(3),\n\t    _assign = __webpack_require__(4);\n\t\n\tvar AutoFocusUtils = __webpack_require__(120);\n\tvar CSSPropertyOperations = __webpack_require__(122);\n\tvar DOMLazyTree = __webpack_require__(14);\n\tvar DOMNamespaces = __webpack_require__(34);\n\tvar DOMProperty = __webpack_require__(15);\n\tvar DOMPropertyOperations = __webpack_require__(64);\n\tvar EventPluginHub = __webpack_require__(23);\n\tvar EventPluginRegistry = __webpack_require__(35);\n\tvar ReactBrowserEventEmitter = __webpack_require__(27);\n\tvar ReactDOMComponentFlags = __webpack_require__(65);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar ReactDOMInput = __webpack_require__(138);\n\tvar ReactDOMOption = __webpack_require__(139);\n\tvar ReactDOMSelect = __webpack_require__(66);\n\tvar ReactDOMTextarea = __webpack_require__(142);\n\tvar ReactInstrumentation = __webpack_require__(9);\n\tvar ReactMultiChild = __webpack_require__(151);\n\tvar ReactServerRenderingTransaction = __webpack_require__(156);\n\t\n\tvar emptyFunction = __webpack_require__(8);\n\tvar escapeTextContentForBrowser = __webpack_require__(30);\n\tvar invariant = __webpack_require__(1);\n\tvar isEventSupported = __webpack_require__(46);\n\tvar shallowEqual = __webpack_require__(32);\n\tvar validateDOMNesting = __webpack_require__(48);\n\tvar warning = __webpack_require__(2);\n\t\n\tvar Flags = ReactDOMComponentFlags;\n\tvar deleteListener = EventPluginHub.deleteListener;\n\tvar getNode = ReactDOMComponentTree.getNodeFromInstance;\n\tvar listenTo = ReactBrowserEventEmitter.listenTo;\n\tvar registrationNameModules = EventPluginRegistry.registrationNameModules;\n\t\n\t// For quickly matching children type, to test if can be treated as content.\n\tvar CONTENT_TYPES = { 'string': true, 'number': true };\n\t\n\tvar STYLE = 'style';\n\tvar HTML = '__html';\n\tvar RESERVED_PROPS = {\n\t  children: null,\n\t  dangerouslySetInnerHTML: null,\n\t  suppressContentEditableWarning: null\n\t};\n\t\n\t// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).\n\tvar DOC_FRAGMENT_TYPE = 11;\n\t\n\tfunction getDeclarationErrorAddendum(internalInstance) {\n\t  if (internalInstance) {\n\t    var owner = internalInstance._currentElement._owner || null;\n\t    if (owner) {\n\t      var name = owner.getName();\n\t      if (name) {\n\t        return ' This DOM node was rendered by `' + name + '`.';\n\t      }\n\t    }\n\t  }\n\t  return '';\n\t}\n\t\n\tfunction friendlyStringify(obj) {\n\t  if (typeof obj === 'object') {\n\t    if (Array.isArray(obj)) {\n\t      return '[' + obj.map(friendlyStringify).join(', ') + ']';\n\t    } else {\n\t      var pairs = [];\n\t      for (var key in obj) {\n\t        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n\t          var keyEscaped = /^[a-z$_][\\w$_]*$/i.test(key) ? key : JSON.stringify(key);\n\t          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));\n\t        }\n\t      }\n\t      return '{' + pairs.join(', ') + '}';\n\t    }\n\t  } else if (typeof obj === 'string') {\n\t    return JSON.stringify(obj);\n\t  } else if (typeof obj === 'function') {\n\t    return '[function object]';\n\t  }\n\t  // Differs from JSON.stringify in that undefined because undefined and that\n\t  // inf and nan don't become null\n\t  return String(obj);\n\t}\n\t\n\tvar styleMutationWarning = {};\n\t\n\tfunction checkAndWarnForMutatedStyle(style1, style2, component) {\n\t  if (style1 == null || style2 == null) {\n\t    return;\n\t  }\n\t  if (shallowEqual(style1, style2)) {\n\t    return;\n\t  }\n\t\n\t  var componentName = component._tag;\n\t  var owner = component._currentElement._owner;\n\t  var ownerName;\n\t  if (owner) {\n\t    ownerName = owner.getName();\n\t  }\n\t\n\t  var hash = ownerName + '|' + componentName;\n\t\n\t  if (styleMutationWarning.hasOwnProperty(hash)) {\n\t    return;\n\t  }\n\t\n\t  styleMutationWarning[hash] = true;\n\t\n\t   false ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;\n\t}\n\t\n\t/**\n\t * @param {object} component\n\t * @param {?object} props\n\t */\n\tfunction assertValidProps(component, props) {\n\t  if (!props) {\n\t    return;\n\t  }\n\t  // Note the use of `==` which checks for null or undefined.\n\t  if (voidElementTags[component._tag]) {\n\t    !(props.children == null && props.dangerouslySetInnerHTML == null) ?  false ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;\n\t  }\n\t  if (props.dangerouslySetInnerHTML != null) {\n\t    !(props.children == null) ?  false ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;\n\t    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ?  false ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;\n\t  }\n\t  if (false) {\n\t    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;\n\t    process.env.NODE_ENV !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;\n\t    process.env.NODE_ENV !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;\n\t  }\n\t  !(props.style == null || typeof props.style === 'object') ?  false ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \\'em\\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;\n\t}\n\t\n\tfunction enqueuePutListener(inst, registrationName, listener, transaction) {\n\t  if (transaction instanceof ReactServerRenderingTransaction) {\n\t    return;\n\t  }\n\t  if (false) {\n\t    // IE8 has no API for event capturing and the `onScroll` event doesn't\n\t    // bubble.\n\t    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\\'t support the `onScroll` event') : void 0;\n\t  }\n\t  var containerInfo = inst._hostContainerInfo;\n\t  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;\n\t  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;\n\t  listenTo(registrationName, doc);\n\t  transaction.getReactMountReady().enqueue(putListener, {\n\t    inst: inst,\n\t    registrationName: registrationName,\n\t    listener: listener\n\t  });\n\t}\n\t\n\tfunction putListener() {\n\t  var listenerToPut = this;\n\t  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);\n\t}\n\t\n\tfunction inputPostMount() {\n\t  var inst = this;\n\t  ReactDOMInput.postMountWrapper(inst);\n\t}\n\t\n\tfunction textareaPostMount() {\n\t  var inst = this;\n\t  ReactDOMTextarea.postMountWrapper(inst);\n\t}\n\t\n\tfunction optionPostMount() {\n\t  var inst = this;\n\t  ReactDOMOption.postMountWrapper(inst);\n\t}\n\t\n\tvar setAndValidateContentChildDev = emptyFunction;\n\tif (false) {\n\t  setAndValidateContentChildDev = function (content) {\n\t    var hasExistingContent = this._contentDebugID != null;\n\t    var debugID = this._debugID;\n\t    // This ID represents the inlined child that has no backing instance:\n\t    var contentDebugID = -debugID;\n\t\n\t    if (content == null) {\n\t      if (hasExistingContent) {\n\t        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);\n\t      }\n\t      this._contentDebugID = null;\n\t      return;\n\t    }\n\t\n\t    validateDOMNesting(null, String(content), this, this._ancestorInfo);\n\t    this._contentDebugID = contentDebugID;\n\t    if (hasExistingContent) {\n\t      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);\n\t      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);\n\t    } else {\n\t      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content, debugID);\n\t      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);\n\t      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);\n\t    }\n\t  };\n\t}\n\t\n\t// There are so many media events, it makes sense to just\n\t// maintain a list rather than create a `trapBubbledEvent` for each\n\tvar mediaEvents = {\n\t  topAbort: 'abort',\n\t  topCanPlay: 'canplay',\n\t  topCanPlayThrough: 'canplaythrough',\n\t  topDurationChange: 'durationchange',\n\t  topEmptied: 'emptied',\n\t  topEncrypted: 'encrypted',\n\t  topEnded: 'ended',\n\t  topError: 'error',\n\t  topLoadedData: 'loadeddata',\n\t  topLoadedMetadata: 'loadedmetadata',\n\t  topLoadStart: 'loadstart',\n\t  topPause: 'pause',\n\t  topPlay: 'play',\n\t  topPlaying: 'playing',\n\t  topProgress: 'progress',\n\t  topRateChange: 'ratechange',\n\t  topSeeked: 'seeked',\n\t  topSeeking: 'seeking',\n\t  topStalled: 'stalled',\n\t  topSuspend: 'suspend',\n\t  topTimeUpdate: 'timeupdate',\n\t  topVolumeChange: 'volumechange',\n\t  topWaiting: 'waiting'\n\t};\n\t\n\tfunction trapBubbledEventsLocal() {\n\t  var inst = this;\n\t  // If a component renders to null or if another component fatals and causes\n\t  // the state of the tree to be corrupted, `node` here can be null.\n\t  !inst._rootNodeID ?  false ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;\n\t  var node = getNode(inst);\n\t  !node ?  false ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;\n\t\n\t  switch (inst._tag) {\n\t    case 'iframe':\n\t    case 'object':\n\t      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];\n\t      break;\n\t    case 'video':\n\t    case 'audio':\n\t\n\t      inst._wrapperState.listeners = [];\n\t      // Create listener for each media event\n\t      for (var event in mediaEvents) {\n\t        if (mediaEvents.hasOwnProperty(event)) {\n\t          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(event, mediaEvents[event], node));\n\t        }\n\t      }\n\t      break;\n\t    case 'source':\n\t      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node)];\n\t      break;\n\t    case 'img':\n\t      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node), ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];\n\t      break;\n\t    case 'form':\n\t      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topReset', 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent('topSubmit', 'submit', node)];\n\t      break;\n\t    case 'input':\n\t    case 'select':\n\t    case 'textarea':\n\t      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topInvalid', 'invalid', node)];\n\t      break;\n\t  }\n\t}\n\t\n\tfunction postUpdateSelectWrapper() {\n\t  ReactDOMSelect.postUpdateWrapper(this);\n\t}\n\t\n\t// For HTML, certain tags should omit their close tag. We keep a whitelist for\n\t// those special-case tags.\n\t\n\tvar omittedCloseTags = {\n\t  'area': true,\n\t  'base': true,\n\t  'br': true,\n\t  'col': true,\n\t  'embed': true,\n\t  'hr': true,\n\t  'img': true,\n\t  'input': true,\n\t  'keygen': true,\n\t  'link': true,\n\t  'meta': true,\n\t  'param': true,\n\t  'source': true,\n\t  'track': true,\n\t  'wbr': true\n\t};\n\t\n\tvar newlineEatingTags = {\n\t  'listing': true,\n\t  'pre': true,\n\t  'textarea': true\n\t};\n\t\n\t// For HTML, certain tags cannot have children. This has the same purpose as\n\t// `omittedCloseTags` except that `menuitem` should still have its closing tag.\n\t\n\tvar voidElementTags = _assign({\n\t  'menuitem': true\n\t}, omittedCloseTags);\n\t\n\t// We accept any tag to be rendered but since this gets injected into arbitrary\n\t// HTML, we want to make sure that it's a safe tag.\n\t// http://www.w3.org/TR/REC-xml/#NT-Name\n\t\n\tvar VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\\.\\-\\d]*$/; // Simplified subset\n\tvar validatedTagCache = {};\n\tvar hasOwnProperty = {}.hasOwnProperty;\n\t\n\tfunction validateDangerousTag(tag) {\n\t  if (!hasOwnProperty.call(validatedTagCache, tag)) {\n\t    !VALID_TAG_REGEX.test(tag) ?  false ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;\n\t    validatedTagCache[tag] = true;\n\t  }\n\t}\n\t\n\tfunction isCustomComponent(tagName, props) {\n\t  return tagName.indexOf('-') >= 0 || props.is != null;\n\t}\n\t\n\tvar globalIdCounter = 1;\n\t\n\t/**\n\t * Creates a new React class that is idempotent and capable of containing other\n\t * React components. It accepts event listeners and DOM properties that are\n\t * valid according to `DOMProperty`.\n\t *\n\t *  - Event listeners: `onClick`, `onMouseDown`, etc.\n\t *  - DOM properties: `className`, `name`, `title`, etc.\n\t *\n\t * The `style` property functions differently from the DOM API. It accepts an\n\t * object mapping of style properties to values.\n\t *\n\t * @constructor ReactDOMComponent\n\t * @extends ReactMultiChild\n\t */\n\tfunction ReactDOMComponent(element) {\n\t  var tag = element.type;\n\t  validateDangerousTag(tag);\n\t  this._currentElement = element;\n\t  this._tag = tag.toLowerCase();\n\t  this._namespaceURI = null;\n\t  this._renderedChildren = null;\n\t  this._previousStyle = null;\n\t  this._previousStyleCopy = null;\n\t  this._hostNode = null;\n\t  this._hostParent = null;\n\t  this._rootNodeID = 0;\n\t  this._domID = 0;\n\t  this._hostContainerInfo = null;\n\t  this._wrapperState = null;\n\t  this._topLevelWrapper = null;\n\t  this._flags = 0;\n\t  if (false) {\n\t    this._ancestorInfo = null;\n\t    setAndValidateContentChildDev.call(this, null);\n\t  }\n\t}\n\t\n\tReactDOMComponent.displayName = 'ReactDOMComponent';\n\t\n\tReactDOMComponent.Mixin = {\n\t\n\t  /**\n\t   * Generates root tag markup then recurses. This method has side effects and\n\t   * is not idempotent.\n\t   *\n\t   * @internal\n\t   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n\t   * @param {?ReactDOMComponent} the parent component instance\n\t   * @param {?object} info about the host container\n\t   * @param {object} context\n\t   * @return {string} The computed markup.\n\t   */\n\t  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n\t    this._rootNodeID = globalIdCounter++;\n\t    this._domID = hostContainerInfo._idCounter++;\n\t    this._hostParent = hostParent;\n\t    this._hostContainerInfo = hostContainerInfo;\n\t\n\t    var props = this._currentElement.props;\n\t\n\t    switch (this._tag) {\n\t      case 'audio':\n\t      case 'form':\n\t      case 'iframe':\n\t      case 'img':\n\t      case 'link':\n\t      case 'object':\n\t      case 'source':\n\t      case 'video':\n\t        this._wrapperState = {\n\t          listeners: null\n\t        };\n\t        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n\t        break;\n\t      case 'input':\n\t        ReactDOMInput.mountWrapper(this, props, hostParent);\n\t        props = ReactDOMInput.getHostProps(this, props);\n\t        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n\t        break;\n\t      case 'option':\n\t        ReactDOMOption.mountWrapper(this, props, hostParent);\n\t        props = ReactDOMOption.getHostProps(this, props);\n\t        break;\n\t      case 'select':\n\t        ReactDOMSelect.mountWrapper(this, props, hostParent);\n\t        props = ReactDOMSelect.getHostProps(this, props);\n\t        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n\t        break;\n\t      case 'textarea':\n\t        ReactDOMTextarea.mountWrapper(this, props, hostParent);\n\t        props = ReactDOMTextarea.getHostProps(this, props);\n\t        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n\t        break;\n\t    }\n\t\n\t    assertValidProps(this, props);\n\t\n\t    // We create tags in the namespace of their parent container, except HTML\n\t    // tags get no namespace.\n\t    var namespaceURI;\n\t    var parentTag;\n\t    if (hostParent != null) {\n\t      namespaceURI = hostParent._namespaceURI;\n\t      parentTag = hostParent._tag;\n\t    } else if (hostContainerInfo._tag) {\n\t      namespaceURI = hostContainerInfo._namespaceURI;\n\t      parentTag = hostContainerInfo._tag;\n\t    }\n\t    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {\n\t      namespaceURI = DOMNamespaces.html;\n\t    }\n\t    if (namespaceURI === DOMNamespaces.html) {\n\t      if (this._tag === 'svg') {\n\t        namespaceURI = DOMNamespaces.svg;\n\t      } else if (this._tag === 'math') {\n\t        namespaceURI = DOMNamespaces.mathml;\n\t      }\n\t    }\n\t    this._namespaceURI = namespaceURI;\n\t\n\t    if (false) {\n\t      var parentInfo;\n\t      if (hostParent != null) {\n\t        parentInfo = hostParent._ancestorInfo;\n\t      } else if (hostContainerInfo._tag) {\n\t        parentInfo = hostContainerInfo._ancestorInfo;\n\t      }\n\t      if (parentInfo) {\n\t        // parentInfo should always be present except for the top-level\n\t        // component when server rendering\n\t        validateDOMNesting(this._tag, null, this, parentInfo);\n\t      }\n\t      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);\n\t    }\n\t\n\t    var mountImage;\n\t    if (transaction.useCreateElement) {\n\t      var ownerDocument = hostContainerInfo._ownerDocument;\n\t      var el;\n\t      if (namespaceURI === DOMNamespaces.html) {\n\t        if (this._tag === 'script') {\n\t          // Create the script via .innerHTML so its \"parser-inserted\" flag is\n\t          // set to true and it does not execute\n\t          var div = ownerDocument.createElement('div');\n\t          var type = this._currentElement.type;\n\t          div.innerHTML = '<' + type + '></' + type + '>';\n\t          el = div.removeChild(div.firstChild);\n\t        } else if (props.is) {\n\t          el = ownerDocument.createElement(this._currentElement.type, props.is);\n\t        } else {\n\t          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.\n\t          // See discussion in https://github.com/facebook/react/pull/6896\n\t          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240\n\t          el = ownerDocument.createElement(this._currentElement.type);\n\t        }\n\t      } else {\n\t        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);\n\t      }\n\t      ReactDOMComponentTree.precacheNode(this, el);\n\t      this._flags |= Flags.hasCachedChildNodes;\n\t      if (!this._hostParent) {\n\t        DOMPropertyOperations.setAttributeForRoot(el);\n\t      }\n\t      this._updateDOMProperties(null, props, transaction);\n\t      var lazyTree = DOMLazyTree(el);\n\t      this._createInitialChildren(transaction, props, context, lazyTree);\n\t      mountImage = lazyTree;\n\t    } else {\n\t      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);\n\t      var tagContent = this._createContentMarkup(transaction, props, context);\n\t      if (!tagContent && omittedCloseTags[this._tag]) {\n\t        mountImage = tagOpen + '/>';\n\t      } else {\n\t        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';\n\t      }\n\t    }\n\t\n\t    switch (this._tag) {\n\t      case 'input':\n\t        transaction.getReactMountReady().enqueue(inputPostMount, this);\n\t        if (props.autoFocus) {\n\t          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n\t        }\n\t        break;\n\t      case 'textarea':\n\t        transaction.getReactMountReady().enqueue(textareaPostMount, this);\n\t        if (props.autoFocus) {\n\t          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n\t        }\n\t        break;\n\t      case 'select':\n\t        if (props.autoFocus) {\n\t          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n\t        }\n\t        break;\n\t      case 'button':\n\t        if (props.autoFocus) {\n\t          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n\t        }\n\t        break;\n\t      case 'option':\n\t        transaction.getReactMountReady().enqueue(optionPostMount, this);\n\t        break;\n\t    }\n\t\n\t    return mountImage;\n\t  },\n\t\n\t  /**\n\t   * Creates markup for the open tag and all attributes.\n\t   *\n\t   * This method has side effects because events get registered.\n\t   *\n\t   * Iterating over object properties is faster than iterating over arrays.\n\t   * @see http://jsperf.com/obj-vs-arr-iteration\n\t   *\n\t   * @private\n\t   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n\t   * @param {object} props\n\t   * @return {string} Markup of opening tag.\n\t   */\n\t  _createOpenTagMarkupAndPutListeners: function (transaction, props) {\n\t    var ret = '<' + this._currentElement.type;\n\t\n\t    for (var propKey in props) {\n\t      if (!props.hasOwnProperty(propKey)) {\n\t        continue;\n\t      }\n\t      var propValue = props[propKey];\n\t      if (propValue == null) {\n\t        continue;\n\t      }\n\t      if (registrationNameModules.hasOwnProperty(propKey)) {\n\t        if (propValue) {\n\t          enqueuePutListener(this, propKey, propValue, transaction);\n\t        }\n\t      } else {\n\t        if (propKey === STYLE) {\n\t          if (propValue) {\n\t            if (false) {\n\t              // See `_updateDOMProperties`. style block\n\t              this._previousStyle = propValue;\n\t            }\n\t            propValue = this._previousStyleCopy = _assign({}, props.style);\n\t          }\n\t          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);\n\t        }\n\t        var markup = null;\n\t        if (this._tag != null && isCustomComponent(this._tag, props)) {\n\t          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {\n\t            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);\n\t          }\n\t        } else {\n\t          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);\n\t        }\n\t        if (markup) {\n\t          ret += ' ' + markup;\n\t        }\n\t      }\n\t    }\n\t\n\t    // For static pages, no need to put React ID and checksum. Saves lots of\n\t    // bytes.\n\t    if (transaction.renderToStaticMarkup) {\n\t      return ret;\n\t    }\n\t\n\t    if (!this._hostParent) {\n\t      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();\n\t    }\n\t    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);\n\t    return ret;\n\t  },\n\t\n\t  /**\n\t   * Creates markup for the content between the tags.\n\t   *\n\t   * @private\n\t   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n\t   * @param {object} props\n\t   * @param {object} context\n\t   * @return {string} Content markup.\n\t   */\n\t  _createContentMarkup: function (transaction, props, context) {\n\t    var ret = '';\n\t\n\t    // Intentional use of != to avoid catching zero/false.\n\t    var innerHTML = props.dangerouslySetInnerHTML;\n\t    if (innerHTML != null) {\n\t      if (innerHTML.__html != null) {\n\t        ret = innerHTML.__html;\n\t      }\n\t    } else {\n\t      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;\n\t      var childrenToUse = contentToUse != null ? null : props.children;\n\t      if (contentToUse != null) {\n\t        // TODO: Validate that text is allowed as a child of this node\n\t        ret = escapeTextContentForBrowser(contentToUse);\n\t        if (false) {\n\t          setAndValidateContentChildDev.call(this, contentToUse);\n\t        }\n\t      } else if (childrenToUse != null) {\n\t        var mountImages = this.mountChildren(childrenToUse, transaction, context);\n\t        ret = mountImages.join('');\n\t      }\n\t    }\n\t    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\\n') {\n\t      // text/html ignores the first character in these tags if it's a newline\n\t      // Prefer to break application/xml over text/html (for now) by adding\n\t      // a newline specifically to get eaten by the parser. (Alternately for\n\t      // textareas, replacing \"^\\n\" with \"\\r\\n\" doesn't get eaten, and the first\n\t      // \\r is normalized out by HTMLTextAreaElement#value.)\n\t      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>\n\t      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>\n\t      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>\n\t      // See: Parsing of \"textarea\" \"listing\" and \"pre\" elements\n\t      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>\n\t      return '\\n' + ret;\n\t    } else {\n\t      return ret;\n\t    }\n\t  },\n\t\n\t  _createInitialChildren: function (transaction, props, context, lazyTree) {\n\t    // Intentional use of != to avoid catching zero/false.\n\t    var innerHTML = props.dangerouslySetInnerHTML;\n\t    if (innerHTML != null) {\n\t      if (innerHTML.__html != null) {\n\t        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);\n\t      }\n\t    } else {\n\t      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;\n\t      var childrenToUse = contentToUse != null ? null : props.children;\n\t      // TODO: Validate that text is allowed as a child of this node\n\t      if (contentToUse != null) {\n\t        // Avoid setting textContent when the text is empty. In IE11 setting\n\t        // textContent on a text area will cause the placeholder to not\n\t        // show within the textarea until it has been focused and blurred again.\n\t        // https://github.com/facebook/react/issues/6731#issuecomment-254874553\n\t        if (contentToUse !== '') {\n\t          if (false) {\n\t            setAndValidateContentChildDev.call(this, contentToUse);\n\t          }\n\t          DOMLazyTree.queueText(lazyTree, contentToUse);\n\t        }\n\t      } else if (childrenToUse != null) {\n\t        var mountImages = this.mountChildren(childrenToUse, transaction, context);\n\t        for (var i = 0; i < mountImages.length; i++) {\n\t          DOMLazyTree.queueChild(lazyTree, mountImages[i]);\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Receives a next element and updates the component.\n\t   *\n\t   * @internal\n\t   * @param {ReactElement} nextElement\n\t   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n\t   * @param {object} context\n\t   */\n\t  receiveComponent: function (nextElement, transaction, context) {\n\t    var prevElement = this._currentElement;\n\t    this._currentElement = nextElement;\n\t    this.updateComponent(transaction, prevElement, nextElement, context);\n\t  },\n\t\n\t  /**\n\t   * Updates a DOM component after it has already been allocated and\n\t   * attached to the DOM. Reconciles the root DOM node, then recurses.\n\t   *\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @param {ReactElement} prevElement\n\t   * @param {ReactElement} nextElement\n\t   * @internal\n\t   * @overridable\n\t   */\n\t  updateComponent: function (transaction, prevElement, nextElement, context) {\n\t    var lastProps = prevElement.props;\n\t    var nextProps = this._currentElement.props;\n\t\n\t    switch (this._tag) {\n\t      case 'input':\n\t        lastProps = ReactDOMInput.getHostProps(this, lastProps);\n\t        nextProps = ReactDOMInput.getHostProps(this, nextProps);\n\t        break;\n\t      case 'option':\n\t        lastProps = ReactDOMOption.getHostProps(this, lastProps);\n\t        nextProps = ReactDOMOption.getHostProps(this, nextProps);\n\t        break;\n\t      case 'select':\n\t        lastProps = ReactDOMSelect.getHostProps(this, lastProps);\n\t        nextProps = ReactDOMSelect.getHostProps(this, nextProps);\n\t        break;\n\t      case 'textarea':\n\t        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);\n\t        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);\n\t        break;\n\t    }\n\t\n\t    assertValidProps(this, nextProps);\n\t    this._updateDOMProperties(lastProps, nextProps, transaction);\n\t    this._updateDOMChildren(lastProps, nextProps, transaction, context);\n\t\n\t    switch (this._tag) {\n\t      case 'input':\n\t        // Update the wrapper around inputs *after* updating props. This has to\n\t        // happen after `_updateDOMProperties`. Otherwise HTML5 input validations\n\t        // raise warnings and prevent the new value from being assigned.\n\t        ReactDOMInput.updateWrapper(this);\n\t        break;\n\t      case 'textarea':\n\t        ReactDOMTextarea.updateWrapper(this);\n\t        break;\n\t      case 'select':\n\t        // <select> value update needs to occur after <option> children\n\t        // reconciliation\n\t        transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);\n\t        break;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Reconciles the properties by detecting differences in property values and\n\t   * updating the DOM as necessary. This function is probably the single most\n\t   * critical path for performance optimization.\n\t   *\n\t   * TODO: Benchmark whether checking for changed values in memory actually\n\t   *       improves performance (especially statically positioned elements).\n\t   * TODO: Benchmark the effects of putting this at the top since 99% of props\n\t   *       do not change for a given reconciliation.\n\t   * TODO: Benchmark areas that can be improved with caching.\n\t   *\n\t   * @private\n\t   * @param {object} lastProps\n\t   * @param {object} nextProps\n\t   * @param {?DOMElement} node\n\t   */\n\t  _updateDOMProperties: function (lastProps, nextProps, transaction) {\n\t    var propKey;\n\t    var styleName;\n\t    var styleUpdates;\n\t    for (propKey in lastProps) {\n\t      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {\n\t        continue;\n\t      }\n\t      if (propKey === STYLE) {\n\t        var lastStyle = this._previousStyleCopy;\n\t        for (styleName in lastStyle) {\n\t          if (lastStyle.hasOwnProperty(styleName)) {\n\t            styleUpdates = styleUpdates || {};\n\t            styleUpdates[styleName] = '';\n\t          }\n\t        }\n\t        this._previousStyleCopy = null;\n\t      } else if (registrationNameModules.hasOwnProperty(propKey)) {\n\t        if (lastProps[propKey]) {\n\t          // Only call deleteListener if there was a listener previously or\n\t          // else willDeleteListener gets called when there wasn't actually a\n\t          // listener (e.g., onClick={null})\n\t          deleteListener(this, propKey);\n\t        }\n\t      } else if (isCustomComponent(this._tag, lastProps)) {\n\t        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {\n\t          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);\n\t        }\n\t      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {\n\t        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);\n\t      }\n\t    }\n\t    for (propKey in nextProps) {\n\t      var nextProp = nextProps[propKey];\n\t      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;\n\t      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {\n\t        continue;\n\t      }\n\t      if (propKey === STYLE) {\n\t        if (nextProp) {\n\t          if (false) {\n\t            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);\n\t            this._previousStyle = nextProp;\n\t          }\n\t          nextProp = this._previousStyleCopy = _assign({}, nextProp);\n\t        } else {\n\t          this._previousStyleCopy = null;\n\t        }\n\t        if (lastProp) {\n\t          // Unset styles on `lastProp` but not on `nextProp`.\n\t          for (styleName in lastProp) {\n\t            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {\n\t              styleUpdates = styleUpdates || {};\n\t              styleUpdates[styleName] = '';\n\t            }\n\t          }\n\t          // Update styles that changed since `lastProp`.\n\t          for (styleName in nextProp) {\n\t            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {\n\t              styleUpdates = styleUpdates || {};\n\t              styleUpdates[styleName] = nextProp[styleName];\n\t            }\n\t          }\n\t        } else {\n\t          // Relies on `updateStylesByID` not mutating `styleUpdates`.\n\t          styleUpdates = nextProp;\n\t        }\n\t      } else if (registrationNameModules.hasOwnProperty(propKey)) {\n\t        if (nextProp) {\n\t          enqueuePutListener(this, propKey, nextProp, transaction);\n\t        } else if (lastProp) {\n\t          deleteListener(this, propKey);\n\t        }\n\t      } else if (isCustomComponent(this._tag, nextProps)) {\n\t        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {\n\t          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);\n\t        }\n\t      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {\n\t        var node = getNode(this);\n\t        // If we're updating to null or undefined, we should remove the property\n\t        // from the DOM node instead of inadvertently setting to a string. This\n\t        // brings us in line with the same behavior we have on initial render.\n\t        if (nextProp != null) {\n\t          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);\n\t        } else {\n\t          DOMPropertyOperations.deleteValueForProperty(node, propKey);\n\t        }\n\t      }\n\t    }\n\t    if (styleUpdates) {\n\t      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Reconciles the children with the various properties that affect the\n\t   * children content.\n\t   *\n\t   * @param {object} lastProps\n\t   * @param {object} nextProps\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @param {object} context\n\t   */\n\t  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {\n\t    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;\n\t    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;\n\t\n\t    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;\n\t    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;\n\t\n\t    // Note the use of `!=` which checks for null or undefined.\n\t    var lastChildren = lastContent != null ? null : lastProps.children;\n\t    var nextChildren = nextContent != null ? null : nextProps.children;\n\t\n\t    // If we're switching from children to content/html or vice versa, remove\n\t    // the old content\n\t    var lastHasContentOrHtml = lastContent != null || lastHtml != null;\n\t    var nextHasContentOrHtml = nextContent != null || nextHtml != null;\n\t    if (lastChildren != null && nextChildren == null) {\n\t      this.updateChildren(null, transaction, context);\n\t    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {\n\t      this.updateTextContent('');\n\t      if (false) {\n\t        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);\n\t      }\n\t    }\n\t\n\t    if (nextContent != null) {\n\t      if (lastContent !== nextContent) {\n\t        this.updateTextContent('' + nextContent);\n\t        if (false) {\n\t          setAndValidateContentChildDev.call(this, nextContent);\n\t        }\n\t      }\n\t    } else if (nextHtml != null) {\n\t      if (lastHtml !== nextHtml) {\n\t        this.updateMarkup('' + nextHtml);\n\t      }\n\t      if (false) {\n\t        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);\n\t      }\n\t    } else if (nextChildren != null) {\n\t      if (false) {\n\t        setAndValidateContentChildDev.call(this, null);\n\t      }\n\t\n\t      this.updateChildren(nextChildren, transaction, context);\n\t    }\n\t  },\n\t\n\t  getHostNode: function () {\n\t    return getNode(this);\n\t  },\n\t\n\t  /**\n\t   * Destroys all event registrations for this instance. Does not remove from\n\t   * the DOM. That must be done by the parent.\n\t   *\n\t   * @internal\n\t   */\n\t  unmountComponent: function (safely) {\n\t    switch (this._tag) {\n\t      case 'audio':\n\t      case 'form':\n\t      case 'iframe':\n\t      case 'img':\n\t      case 'link':\n\t      case 'object':\n\t      case 'source':\n\t      case 'video':\n\t        var listeners = this._wrapperState.listeners;\n\t        if (listeners) {\n\t          for (var i = 0; i < listeners.length; i++) {\n\t            listeners[i].remove();\n\t          }\n\t        }\n\t        break;\n\t      case 'html':\n\t      case 'head':\n\t      case 'body':\n\t        /**\n\t         * Components like <html> <head> and <body> can't be removed or added\n\t         * easily in a cross-browser way, however it's valuable to be able to\n\t         * take advantage of React's reconciliation for styling and <title>\n\t         * management. So we just document it and throw in dangerous cases.\n\t         */\n\t         true ?  false ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;\n\t        break;\n\t    }\n\t\n\t    this.unmountChildren(safely);\n\t    ReactDOMComponentTree.uncacheNode(this);\n\t    EventPluginHub.deleteAllListeners(this);\n\t    this._rootNodeID = 0;\n\t    this._domID = 0;\n\t    this._wrapperState = null;\n\t\n\t    if (false) {\n\t      setAndValidateContentChildDev.call(this, null);\n\t    }\n\t  },\n\t\n\t  getPublicInstance: function () {\n\t    return getNode(this);\n\t  }\n\t\n\t};\n\t\n\t_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);\n\t\n\tmodule.exports = ReactDOMComponent;\n\n/***/ },\n/* 134 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar validateDOMNesting = __webpack_require__(48);\n\t\n\tvar DOC_NODE_TYPE = 9;\n\t\n\tfunction ReactDOMContainerInfo(topLevelWrapper, node) {\n\t  var info = {\n\t    _topLevelWrapper: topLevelWrapper,\n\t    _idCounter: 1,\n\t    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,\n\t    _node: node,\n\t    _tag: node ? node.nodeName.toLowerCase() : null,\n\t    _namespaceURI: node ? node.namespaceURI : null\n\t  };\n\t  if (false) {\n\t    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;\n\t  }\n\t  return info;\n\t}\n\t\n\tmodule.exports = ReactDOMContainerInfo;\n\n/***/ },\n/* 135 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2014-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(4);\n\t\n\tvar DOMLazyTree = __webpack_require__(14);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\t\n\tvar ReactDOMEmptyComponent = function (instantiate) {\n\t  // ReactCompositeComponent uses this:\n\t  this._currentElement = null;\n\t  // ReactDOMComponentTree uses these:\n\t  this._hostNode = null;\n\t  this._hostParent = null;\n\t  this._hostContainerInfo = null;\n\t  this._domID = 0;\n\t};\n\t_assign(ReactDOMEmptyComponent.prototype, {\n\t  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n\t    var domID = hostContainerInfo._idCounter++;\n\t    this._domID = domID;\n\t    this._hostParent = hostParent;\n\t    this._hostContainerInfo = hostContainerInfo;\n\t\n\t    var nodeValue = ' react-empty: ' + this._domID + ' ';\n\t    if (transaction.useCreateElement) {\n\t      var ownerDocument = hostContainerInfo._ownerDocument;\n\t      var node = ownerDocument.createComment(nodeValue);\n\t      ReactDOMComponentTree.precacheNode(this, node);\n\t      return DOMLazyTree(node);\n\t    } else {\n\t      if (transaction.renderToStaticMarkup) {\n\t        // Normally we'd insert a comment node, but since this is a situation\n\t        // where React won't take over (static pages), we can simply return\n\t        // nothing.\n\t        return '';\n\t      }\n\t      return '<!--' + nodeValue + '-->';\n\t    }\n\t  },\n\t  receiveComponent: function () {},\n\t  getHostNode: function () {\n\t    return ReactDOMComponentTree.getNodeFromInstance(this);\n\t  },\n\t  unmountComponent: function () {\n\t    ReactDOMComponentTree.uncacheNode(this);\n\t  }\n\t});\n\t\n\tmodule.exports = ReactDOMEmptyComponent;\n\n/***/ },\n/* 136 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactDOMFeatureFlags = {\n\t  useCreateElement: true,\n\t  useFiber: false\n\t};\n\t\n\tmodule.exports = ReactDOMFeatureFlags;\n\n/***/ },\n/* 137 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar DOMChildrenOperations = __webpack_require__(33);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\t\n\t/**\n\t * Operations used to process updates to DOM nodes.\n\t */\n\tvar ReactDOMIDOperations = {\n\t\n\t  /**\n\t   * Updates a component's children by processing a series of updates.\n\t   *\n\t   * @param {array<object>} updates List of update configurations.\n\t   * @internal\n\t   */\n\t  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {\n\t    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);\n\t    DOMChildrenOperations.processUpdates(node, updates);\n\t  }\n\t};\n\t\n\tmodule.exports = ReactDOMIDOperations;\n\n/***/ },\n/* 138 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(3),\n\t    _assign = __webpack_require__(4);\n\t\n\tvar DOMPropertyOperations = __webpack_require__(64);\n\tvar LinkedValueUtils = __webpack_require__(38);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar ReactUpdates = __webpack_require__(10);\n\t\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(2);\n\t\n\tvar didWarnValueLink = false;\n\tvar didWarnCheckedLink = false;\n\tvar didWarnValueDefaultValue = false;\n\tvar didWarnCheckedDefaultChecked = false;\n\tvar didWarnControlledToUncontrolled = false;\n\tvar didWarnUncontrolledToControlled = false;\n\t\n\tfunction forceUpdateIfMounted() {\n\t  if (this._rootNodeID) {\n\t    // DOM component is still mounted; update\n\t    ReactDOMInput.updateWrapper(this);\n\t  }\n\t}\n\t\n\tfunction isControlled(props) {\n\t  var usesChecked = props.type === 'checkbox' || props.type === 'radio';\n\t  return usesChecked ? props.checked != null : props.value != null;\n\t}\n\t\n\t/**\n\t * Implements an <input> host component that allows setting these optional\n\t * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.\n\t *\n\t * If `checked` or `value` are not supplied (or null/undefined), user actions\n\t * that affect the checked state or value will trigger updates to the element.\n\t *\n\t * If they are supplied (and not null/undefined), the rendered element will not\n\t * trigger updates to the element. Instead, the props must change in order for\n\t * the rendered element to be updated.\n\t *\n\t * The rendered element will be initialized as unchecked (or `defaultChecked`)\n\t * with an empty value (or `defaultValue`).\n\t *\n\t * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html\n\t */\n\tvar ReactDOMInput = {\n\t  getHostProps: function (inst, props) {\n\t    var value = LinkedValueUtils.getValue(props);\n\t    var checked = LinkedValueUtils.getChecked(props);\n\t\n\t    var hostProps = _assign({\n\t      // Make sure we set .type before any other properties (setting .value\n\t      // before .type means .value is lost in IE11 and below)\n\t      type: undefined,\n\t      // Make sure we set .step before .value (setting .value before .step\n\t      // means .value is rounded on mount, based upon step precision)\n\t      step: undefined,\n\t      // Make sure we set .min & .max before .value (to ensure proper order\n\t      // in corner cases such as min or max deriving from value, e.g. Issue #7170)\n\t      min: undefined,\n\t      max: undefined\n\t    }, props, {\n\t      defaultChecked: undefined,\n\t      defaultValue: undefined,\n\t      value: value != null ? value : inst._wrapperState.initialValue,\n\t      checked: checked != null ? checked : inst._wrapperState.initialChecked,\n\t      onChange: inst._wrapperState.onChange\n\t    });\n\t\n\t    return hostProps;\n\t  },\n\t\n\t  mountWrapper: function (inst, props) {\n\t    if (false) {\n\t      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);\n\t\n\t      var owner = inst._currentElement._owner;\n\t\n\t      if (props.valueLink !== undefined && !didWarnValueLink) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;\n\t        didWarnValueLink = true;\n\t      }\n\t      if (props.checkedLink !== undefined && !didWarnCheckedLink) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;\n\t        didWarnCheckedLink = true;\n\t      }\n\t      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n\t        didWarnCheckedDefaultChecked = true;\n\t      }\n\t      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n\t        didWarnValueDefaultValue = true;\n\t      }\n\t    }\n\t\n\t    var defaultValue = props.defaultValue;\n\t    inst._wrapperState = {\n\t      initialChecked: props.checked != null ? props.checked : props.defaultChecked,\n\t      initialValue: props.value != null ? props.value : defaultValue,\n\t      listeners: null,\n\t      onChange: _handleChange.bind(inst),\n\t      controlled: isControlled(props)\n\t    };\n\t  },\n\t\n\t  updateWrapper: function (inst) {\n\t    var props = inst._currentElement.props;\n\t\n\t    if (false) {\n\t      var controlled = isControlled(props);\n\t      var owner = inst._currentElement._owner;\n\t\n\t      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n\t        didWarnUncontrolledToControlled = true;\n\t      }\n\t      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n\t        didWarnControlledToUncontrolled = true;\n\t      }\n\t    }\n\t\n\t    // TODO: Shouldn't this be getChecked(props)?\n\t    var checked = props.checked;\n\t    if (checked != null) {\n\t      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);\n\t    }\n\t\n\t    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n\t    var value = LinkedValueUtils.getValue(props);\n\t    if (value != null) {\n\t      if (value === 0 && node.value === '') {\n\t        node.value = '0';\n\t        // Note: IE9 reports a number inputs as 'text', so check props instead.\n\t      } else if (props.type === 'number') {\n\t        // Simulate `input.valueAsNumber`. IE9 does not support it\n\t        var valueAsNumber = parseFloat(node.value, 10) || 0;\n\t\n\t        // eslint-disable-next-line\n\t        if (value != valueAsNumber) {\n\t          // Cast `value` to a string to ensure the value is set correctly. While\n\t          // browsers typically do this as necessary, jsdom doesn't.\n\t          node.value = '' + value;\n\t        }\n\t        // eslint-disable-next-line\n\t      } else if (value != node.value) {\n\t        // Cast `value` to a string to ensure the value is set correctly. While\n\t        // browsers typically do this as necessary, jsdom doesn't.\n\t        node.value = '' + value;\n\t      }\n\t    } else {\n\t      if (props.value == null && props.defaultValue != null) {\n\t        // In Chrome, assigning defaultValue to certain input types triggers input validation.\n\t        // For number inputs, the display value loses trailing decimal points. For email inputs,\n\t        // Chrome raises \"The specified value <x> is not a valid email address\".\n\t        //\n\t        // Here we check to see if the defaultValue has actually changed, avoiding these problems\n\t        // when the user is inputting text\n\t        //\n\t        // https://github.com/facebook/react/issues/7253\n\t        if (node.defaultValue !== '' + props.defaultValue) {\n\t          node.defaultValue = '' + props.defaultValue;\n\t        }\n\t      }\n\t      if (props.checked == null && props.defaultChecked != null) {\n\t        node.defaultChecked = !!props.defaultChecked;\n\t      }\n\t    }\n\t  },\n\t\n\t  postMountWrapper: function (inst) {\n\t    var props = inst._currentElement.props;\n\t\n\t    // This is in postMount because we need access to the DOM node, which is not\n\t    // available until after the component has mounted.\n\t    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n\t\n\t    // Detach value from defaultValue. We won't do anything if we're working on\n\t    // submit or reset inputs as those values & defaultValues are linked. They\n\t    // are not resetable nodes so this operation doesn't matter and actually\n\t    // removes browser-default values (eg \"Submit Query\") when no value is\n\t    // provided.\n\t\n\t    switch (props.type) {\n\t      case 'submit':\n\t      case 'reset':\n\t        break;\n\t      case 'color':\n\t      case 'date':\n\t      case 'datetime':\n\t      case 'datetime-local':\n\t      case 'month':\n\t      case 'time':\n\t      case 'week':\n\t        // This fixes the no-show issue on iOS Safari and Android Chrome:\n\t        // https://github.com/facebook/react/issues/7233\n\t        node.value = '';\n\t        node.value = node.defaultValue;\n\t        break;\n\t      default:\n\t        node.value = node.value;\n\t        break;\n\t    }\n\t\n\t    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug\n\t    // this is needed to work around a chrome bug where setting defaultChecked\n\t    // will sometimes influence the value of checked (even after detachment).\n\t    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416\n\t    // We need to temporarily unset name to avoid disrupting radio button groups.\n\t    var name = node.name;\n\t    if (name !== '') {\n\t      node.name = '';\n\t    }\n\t    node.defaultChecked = !node.defaultChecked;\n\t    node.defaultChecked = !node.defaultChecked;\n\t    if (name !== '') {\n\t      node.name = name;\n\t    }\n\t  }\n\t};\n\t\n\tfunction _handleChange(event) {\n\t  var props = this._currentElement.props;\n\t\n\t  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n\t\n\t  // Here we use asap to wait until all updates have propagated, which\n\t  // is important when using controlled components within layers:\n\t  // https://github.com/facebook/react/issues/1698\n\t  ReactUpdates.asap(forceUpdateIfMounted, this);\n\t\n\t  var name = props.name;\n\t  if (props.type === 'radio' && name != null) {\n\t    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);\n\t    var queryRoot = rootNode;\n\t\n\t    while (queryRoot.parentNode) {\n\t      queryRoot = queryRoot.parentNode;\n\t    }\n\t\n\t    // If `rootNode.form` was non-null, then we could try `form.elements`,\n\t    // but that sometimes behaves strangely in IE8. We could also try using\n\t    // `form.getElementsByName`, but that will only return direct children\n\t    // and won't include inputs that use the HTML5 `form=` attribute. Since\n\t    // the input might not even be in a form, let's just use the global\n\t    // `querySelectorAll` to ensure we don't miss anything.\n\t    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type=\"radio\"]');\n\t\n\t    for (var i = 0; i < group.length; i++) {\n\t      var otherNode = group[i];\n\t      if (otherNode === rootNode || otherNode.form !== rootNode.form) {\n\t        continue;\n\t      }\n\t      // This will throw if radio buttons rendered by different copies of React\n\t      // and the same name are rendered into the same form (same as #1939).\n\t      // That's probably okay; we don't support it just as we don't support\n\t      // mixing React radio buttons with non-React ones.\n\t      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);\n\t      !otherInstance ?  false ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;\n\t      // If this is a controlled radio button group, forcing the input that\n\t      // was previously checked to update will cause it to be come re-checked\n\t      // as appropriate.\n\t      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);\n\t    }\n\t  }\n\t\n\t  return returnValue;\n\t}\n\t\n\tmodule.exports = ReactDOMInput;\n\n/***/ },\n/* 139 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(4);\n\t\n\tvar React = __webpack_require__(17);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar ReactDOMSelect = __webpack_require__(66);\n\t\n\tvar warning = __webpack_require__(2);\n\tvar didWarnInvalidOptionChildren = false;\n\t\n\tfunction flattenChildren(children) {\n\t  var content = '';\n\t\n\t  // Flatten children and warn if they aren't strings or numbers;\n\t  // invalid types are ignored.\n\t  React.Children.forEach(children, function (child) {\n\t    if (child == null) {\n\t      return;\n\t    }\n\t    if (typeof child === 'string' || typeof child === 'number') {\n\t      content += child;\n\t    } else if (!didWarnInvalidOptionChildren) {\n\t      didWarnInvalidOptionChildren = true;\n\t       false ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;\n\t    }\n\t  });\n\t\n\t  return content;\n\t}\n\t\n\t/**\n\t * Implements an <option> host component that warns when `selected` is set.\n\t */\n\tvar ReactDOMOption = {\n\t  mountWrapper: function (inst, props, hostParent) {\n\t    // TODO (yungsters): Remove support for `selected` in <option>.\n\t    if (false) {\n\t      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;\n\t    }\n\t\n\t    // Look up whether this option is 'selected'\n\t    var selectValue = null;\n\t    if (hostParent != null) {\n\t      var selectParent = hostParent;\n\t\n\t      if (selectParent._tag === 'optgroup') {\n\t        selectParent = selectParent._hostParent;\n\t      }\n\t\n\t      if (selectParent != null && selectParent._tag === 'select') {\n\t        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);\n\t      }\n\t    }\n\t\n\t    // If the value is null (e.g., no specified value or after initial mount)\n\t    // or missing (e.g., for <datalist>), we don't change props.selected\n\t    var selected = null;\n\t    if (selectValue != null) {\n\t      var value;\n\t      if (props.value != null) {\n\t        value = props.value + '';\n\t      } else {\n\t        value = flattenChildren(props.children);\n\t      }\n\t      selected = false;\n\t      if (Array.isArray(selectValue)) {\n\t        // multiple\n\t        for (var i = 0; i < selectValue.length; i++) {\n\t          if ('' + selectValue[i] === value) {\n\t            selected = true;\n\t            break;\n\t          }\n\t        }\n\t      } else {\n\t        selected = '' + selectValue === value;\n\t      }\n\t    }\n\t\n\t    inst._wrapperState = { selected: selected };\n\t  },\n\t\n\t  postMountWrapper: function (inst) {\n\t    // value=\"\" should make a value attribute (#6219)\n\t    var props = inst._currentElement.props;\n\t    if (props.value != null) {\n\t      var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n\t      node.setAttribute('value', props.value);\n\t    }\n\t  },\n\t\n\t  getHostProps: function (inst, props) {\n\t    var hostProps = _assign({ selected: undefined, children: undefined }, props);\n\t\n\t    // Read state only from initial mount because <select> updates value\n\t    // manually; we need the initial state only for server rendering\n\t    if (inst._wrapperState.selected != null) {\n\t      hostProps.selected = inst._wrapperState.selected;\n\t    }\n\t\n\t    var content = flattenChildren(props.children);\n\t\n\t    if (content) {\n\t      hostProps.children = content;\n\t    }\n\t\n\t    return hostProps;\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactDOMOption;\n\n/***/ },\n/* 140 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\t\n\tvar getNodeForCharacterOffset = __webpack_require__(178);\n\tvar getTextContentAccessor = __webpack_require__(77);\n\t\n\t/**\n\t * While `isCollapsed` is available on the Selection object and `collapsed`\n\t * is available on the Range object, IE11 sometimes gets them wrong.\n\t * If the anchor/focus nodes and offsets are the same, the range is collapsed.\n\t */\n\tfunction isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {\n\t  return anchorNode === focusNode && anchorOffset === focusOffset;\n\t}\n\t\n\t/**\n\t * Get the appropriate anchor and focus node/offset pairs for IE.\n\t *\n\t * The catch here is that IE's selection API doesn't provide information\n\t * about whether the selection is forward or backward, so we have to\n\t * behave as though it's always forward.\n\t *\n\t * IE text differs from modern selection in that it behaves as though\n\t * block elements end with a new line. This means character offsets will\n\t * differ between the two APIs.\n\t *\n\t * @param {DOMElement} node\n\t * @return {object}\n\t */\n\tfunction getIEOffsets(node) {\n\t  var selection = document.selection;\n\t  var selectedRange = selection.createRange();\n\t  var selectedLength = selectedRange.text.length;\n\t\n\t  // Duplicate selection so we can move range without breaking user selection.\n\t  var fromStart = selectedRange.duplicate();\n\t  fromStart.moveToElementText(node);\n\t  fromStart.setEndPoint('EndToStart', selectedRange);\n\t\n\t  var startOffset = fromStart.text.length;\n\t  var endOffset = startOffset + selectedLength;\n\t\n\t  return {\n\t    start: startOffset,\n\t    end: endOffset\n\t  };\n\t}\n\t\n\t/**\n\t * @param {DOMElement} node\n\t * @return {?object}\n\t */\n\tfunction getModernOffsets(node) {\n\t  var selection = window.getSelection && window.getSelection();\n\t\n\t  if (!selection || selection.rangeCount === 0) {\n\t    return null;\n\t  }\n\t\n\t  var anchorNode = selection.anchorNode;\n\t  var anchorOffset = selection.anchorOffset;\n\t  var focusNode = selection.focusNode;\n\t  var focusOffset = selection.focusOffset;\n\t\n\t  var currentRange = selection.getRangeAt(0);\n\t\n\t  // In Firefox, range.startContainer and range.endContainer can be \"anonymous\n\t  // divs\", e.g. the up/down buttons on an <input type=\"number\">. Anonymous\n\t  // divs do not seem to expose properties, triggering a \"Permission denied\n\t  // error\" if any of its properties are accessed. The only seemingly possible\n\t  // way to avoid erroring is to access a property that typically works for\n\t  // non-anonymous divs and catch any error that may otherwise arise. See\n\t  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427\n\t  try {\n\t    /* eslint-disable no-unused-expressions */\n\t    currentRange.startContainer.nodeType;\n\t    currentRange.endContainer.nodeType;\n\t    /* eslint-enable no-unused-expressions */\n\t  } catch (e) {\n\t    return null;\n\t  }\n\t\n\t  // If the node and offset values are the same, the selection is collapsed.\n\t  // `Selection.isCollapsed` is available natively, but IE sometimes gets\n\t  // this value wrong.\n\t  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);\n\t\n\t  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;\n\t\n\t  var tempRange = currentRange.cloneRange();\n\t  tempRange.selectNodeContents(node);\n\t  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);\n\t\n\t  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);\n\t\n\t  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;\n\t  var end = start + rangeLength;\n\t\n\t  // Detect whether the selection is backward.\n\t  var detectionRange = document.createRange();\n\t  detectionRange.setStart(anchorNode, anchorOffset);\n\t  detectionRange.setEnd(focusNode, focusOffset);\n\t  var isBackward = detectionRange.collapsed;\n\t\n\t  return {\n\t    start: isBackward ? end : start,\n\t    end: isBackward ? start : end\n\t  };\n\t}\n\t\n\t/**\n\t * @param {DOMElement|DOMTextNode} node\n\t * @param {object} offsets\n\t */\n\tfunction setIEOffsets(node, offsets) {\n\t  var range = document.selection.createRange().duplicate();\n\t  var start, end;\n\t\n\t  if (offsets.end === undefined) {\n\t    start = offsets.start;\n\t    end = start;\n\t  } else if (offsets.start > offsets.end) {\n\t    start = offsets.end;\n\t    end = offsets.start;\n\t  } else {\n\t    start = offsets.start;\n\t    end = offsets.end;\n\t  }\n\t\n\t  range.moveToElementText(node);\n\t  range.moveStart('character', start);\n\t  range.setEndPoint('EndToStart', range);\n\t  range.moveEnd('character', end - start);\n\t  range.select();\n\t}\n\t\n\t/**\n\t * In modern non-IE browsers, we can support both forward and backward\n\t * selections.\n\t *\n\t * Note: IE10+ supports the Selection object, but it does not support\n\t * the `extend` method, which means that even in modern IE, it's not possible\n\t * to programmatically create a backward selection. Thus, for all IE\n\t * versions, we use the old IE API to create our selections.\n\t *\n\t * @param {DOMElement|DOMTextNode} node\n\t * @param {object} offsets\n\t */\n\tfunction setModernOffsets(node, offsets) {\n\t  if (!window.getSelection) {\n\t    return;\n\t  }\n\t\n\t  var selection = window.getSelection();\n\t  var length = node[getTextContentAccessor()].length;\n\t  var start = Math.min(offsets.start, length);\n\t  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);\n\t\n\t  // IE 11 uses modern selection, but doesn't support the extend method.\n\t  // Flip backward selections, so we can set with a single range.\n\t  if (!selection.extend && start > end) {\n\t    var temp = end;\n\t    end = start;\n\t    start = temp;\n\t  }\n\t\n\t  var startMarker = getNodeForCharacterOffset(node, start);\n\t  var endMarker = getNodeForCharacterOffset(node, end);\n\t\n\t  if (startMarker && endMarker) {\n\t    var range = document.createRange();\n\t    range.setStart(startMarker.node, startMarker.offset);\n\t    selection.removeAllRanges();\n\t\n\t    if (start > end) {\n\t      selection.addRange(range);\n\t      selection.extend(endMarker.node, endMarker.offset);\n\t    } else {\n\t      range.setEnd(endMarker.node, endMarker.offset);\n\t      selection.addRange(range);\n\t    }\n\t  }\n\t}\n\t\n\tvar useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);\n\t\n\tvar ReactDOMSelection = {\n\t  /**\n\t   * @param {DOMElement} node\n\t   */\n\t  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,\n\t\n\t  /**\n\t   * @param {DOMElement|DOMTextNode} node\n\t   * @param {object} offsets\n\t   */\n\t  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets\n\t};\n\t\n\tmodule.exports = ReactDOMSelection;\n\n/***/ },\n/* 141 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(3),\n\t    _assign = __webpack_require__(4);\n\t\n\tvar DOMChildrenOperations = __webpack_require__(33);\n\tvar DOMLazyTree = __webpack_require__(14);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\t\n\tvar escapeTextContentForBrowser = __webpack_require__(30);\n\tvar invariant = __webpack_require__(1);\n\tvar validateDOMNesting = __webpack_require__(48);\n\t\n\t/**\n\t * Text nodes violate a couple assumptions that React makes about components:\n\t *\n\t *  - When mounting text into the DOM, adjacent text nodes are merged.\n\t *  - Text nodes cannot be assigned a React root ID.\n\t *\n\t * This component is used to wrap strings between comment nodes so that they\n\t * can undergo the same reconciliation that is applied to elements.\n\t *\n\t * TODO: Investigate representing React components in the DOM with text nodes.\n\t *\n\t * @class ReactDOMTextComponent\n\t * @extends ReactComponent\n\t * @internal\n\t */\n\tvar ReactDOMTextComponent = function (text) {\n\t  // TODO: This is really a ReactText (ReactNode), not a ReactElement\n\t  this._currentElement = text;\n\t  this._stringText = '' + text;\n\t  // ReactDOMComponentTree uses these:\n\t  this._hostNode = null;\n\t  this._hostParent = null;\n\t\n\t  // Properties\n\t  this._domID = 0;\n\t  this._mountIndex = 0;\n\t  this._closingComment = null;\n\t  this._commentNodes = null;\n\t};\n\t\n\t_assign(ReactDOMTextComponent.prototype, {\n\t\n\t  /**\n\t   * Creates the markup for this text node. This node is not intended to have\n\t   * any features besides containing text content.\n\t   *\n\t   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n\t   * @return {string} Markup for this text node.\n\t   * @internal\n\t   */\n\t  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n\t    if (false) {\n\t      var parentInfo;\n\t      if (hostParent != null) {\n\t        parentInfo = hostParent._ancestorInfo;\n\t      } else if (hostContainerInfo != null) {\n\t        parentInfo = hostContainerInfo._ancestorInfo;\n\t      }\n\t      if (parentInfo) {\n\t        // parentInfo should always be present except for the top-level\n\t        // component when server rendering\n\t        validateDOMNesting(null, this._stringText, this, parentInfo);\n\t      }\n\t    }\n\t\n\t    var domID = hostContainerInfo._idCounter++;\n\t    var openingValue = ' react-text: ' + domID + ' ';\n\t    var closingValue = ' /react-text ';\n\t    this._domID = domID;\n\t    this._hostParent = hostParent;\n\t    if (transaction.useCreateElement) {\n\t      var ownerDocument = hostContainerInfo._ownerDocument;\n\t      var openingComment = ownerDocument.createComment(openingValue);\n\t      var closingComment = ownerDocument.createComment(closingValue);\n\t      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());\n\t      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));\n\t      if (this._stringText) {\n\t        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));\n\t      }\n\t      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));\n\t      ReactDOMComponentTree.precacheNode(this, openingComment);\n\t      this._closingComment = closingComment;\n\t      return lazyTree;\n\t    } else {\n\t      var escapedText = escapeTextContentForBrowser(this._stringText);\n\t\n\t      if (transaction.renderToStaticMarkup) {\n\t        // Normally we'd wrap this between comment nodes for the reasons stated\n\t        // above, but since this is a situation where React won't take over\n\t        // (static pages), we can simply return the text as it is.\n\t        return escapedText;\n\t      }\n\t\n\t      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Updates this component by updating the text content.\n\t   *\n\t   * @param {ReactText} nextText The next text content\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @internal\n\t   */\n\t  receiveComponent: function (nextText, transaction) {\n\t    if (nextText !== this._currentElement) {\n\t      this._currentElement = nextText;\n\t      var nextStringText = '' + nextText;\n\t      if (nextStringText !== this._stringText) {\n\t        // TODO: Save this as pending props and use performUpdateIfNecessary\n\t        // and/or updateComponent to do the actual update for consistency with\n\t        // other component types?\n\t        this._stringText = nextStringText;\n\t        var commentNodes = this.getHostNode();\n\t        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);\n\t      }\n\t    }\n\t  },\n\t\n\t  getHostNode: function () {\n\t    var hostNode = this._commentNodes;\n\t    if (hostNode) {\n\t      return hostNode;\n\t    }\n\t    if (!this._closingComment) {\n\t      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);\n\t      var node = openingComment.nextSibling;\n\t      while (true) {\n\t        !(node != null) ?  false ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;\n\t        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {\n\t          this._closingComment = node;\n\t          break;\n\t        }\n\t        node = node.nextSibling;\n\t      }\n\t    }\n\t    hostNode = [this._hostNode, this._closingComment];\n\t    this._commentNodes = hostNode;\n\t    return hostNode;\n\t  },\n\t\n\t  unmountComponent: function () {\n\t    this._closingComment = null;\n\t    this._commentNodes = null;\n\t    ReactDOMComponentTree.uncacheNode(this);\n\t  }\n\t\n\t});\n\t\n\tmodule.exports = ReactDOMTextComponent;\n\n/***/ },\n/* 142 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(3),\n\t    _assign = __webpack_require__(4);\n\t\n\tvar LinkedValueUtils = __webpack_require__(38);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar ReactUpdates = __webpack_require__(10);\n\t\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(2);\n\t\n\tvar didWarnValueLink = false;\n\tvar didWarnValDefaultVal = false;\n\t\n\tfunction forceUpdateIfMounted() {\n\t  if (this._rootNodeID) {\n\t    // DOM component is still mounted; update\n\t    ReactDOMTextarea.updateWrapper(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Implements a <textarea> host component that allows setting `value`, and\n\t * `defaultValue`. This differs from the traditional DOM API because value is\n\t * usually set as PCDATA children.\n\t *\n\t * If `value` is not supplied (or null/undefined), user actions that affect the\n\t * value will trigger updates to the element.\n\t *\n\t * If `value` is supplied (and not null/undefined), the rendered element will\n\t * not trigger updates to the element. Instead, the `value` prop must change in\n\t * order for the rendered element to be updated.\n\t *\n\t * The rendered element will be initialized with an empty value, the prop\n\t * `defaultValue` if specified, or the children content (deprecated).\n\t */\n\tvar ReactDOMTextarea = {\n\t  getHostProps: function (inst, props) {\n\t    !(props.dangerouslySetInnerHTML == null) ?  false ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;\n\t\n\t    // Always set children to the same thing. In IE9, the selection range will\n\t    // get reset if `textContent` is mutated.  We could add a check in setTextContent\n\t    // to only set the value if/when the value differs from the node value (which would\n\t    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.\n\t    // The value can be a boolean or object so that's why it's forced to be a string.\n\t    var hostProps = _assign({}, props, {\n\t      value: undefined,\n\t      defaultValue: undefined,\n\t      children: '' + inst._wrapperState.initialValue,\n\t      onChange: inst._wrapperState.onChange\n\t    });\n\t\n\t    return hostProps;\n\t  },\n\t\n\t  mountWrapper: function (inst, props) {\n\t    if (false) {\n\t      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);\n\t      if (props.valueLink !== undefined && !didWarnValueLink) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;\n\t        didWarnValueLink = true;\n\t      }\n\t      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;\n\t        didWarnValDefaultVal = true;\n\t      }\n\t    }\n\t\n\t    var value = LinkedValueUtils.getValue(props);\n\t    var initialValue = value;\n\t\n\t    // Only bother fetching default value if we're going to use it\n\t    if (value == null) {\n\t      var defaultValue = props.defaultValue;\n\t      // TODO (yungsters): Remove support for children content in <textarea>.\n\t      var children = props.children;\n\t      if (children != null) {\n\t        if (false) {\n\t          process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;\n\t        }\n\t        !(defaultValue == null) ?  false ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;\n\t        if (Array.isArray(children)) {\n\t          !(children.length <= 1) ?  false ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;\n\t          children = children[0];\n\t        }\n\t\n\t        defaultValue = '' + children;\n\t      }\n\t      if (defaultValue == null) {\n\t        defaultValue = '';\n\t      }\n\t      initialValue = defaultValue;\n\t    }\n\t\n\t    inst._wrapperState = {\n\t      initialValue: '' + initialValue,\n\t      listeners: null,\n\t      onChange: _handleChange.bind(inst)\n\t    };\n\t  },\n\t\n\t  updateWrapper: function (inst) {\n\t    var props = inst._currentElement.props;\n\t\n\t    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n\t    var value = LinkedValueUtils.getValue(props);\n\t    if (value != null) {\n\t      // Cast `value` to a string to ensure the value is set correctly. While\n\t      // browsers typically do this as necessary, jsdom doesn't.\n\t      var newValue = '' + value;\n\t\n\t      // To avoid side effects (such as losing text selection), only set value if changed\n\t      if (newValue !== node.value) {\n\t        node.value = newValue;\n\t      }\n\t      if (props.defaultValue == null) {\n\t        node.defaultValue = newValue;\n\t      }\n\t    }\n\t    if (props.defaultValue != null) {\n\t      node.defaultValue = props.defaultValue;\n\t    }\n\t  },\n\t\n\t  postMountWrapper: function (inst) {\n\t    // This is in postMount because we need access to the DOM node, which is not\n\t    // available until after the component has mounted.\n\t    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n\t    var textContent = node.textContent;\n\t\n\t    // Only set node.value if textContent is equal to the expected\n\t    // initial value. In IE10/IE11 there is a bug where the placeholder attribute\n\t    // will populate textContent as well.\n\t    // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/\n\t    if (textContent === inst._wrapperState.initialValue) {\n\t      node.value = textContent;\n\t    }\n\t  }\n\t};\n\t\n\tfunction _handleChange(event) {\n\t  var props = this._currentElement.props;\n\t  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n\t  ReactUpdates.asap(forceUpdateIfMounted, this);\n\t  return returnValue;\n\t}\n\t\n\tmodule.exports = ReactDOMTextarea;\n\n/***/ },\n/* 143 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2015-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(3);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Return the lowest common ancestor of A and B, or null if they are in\n\t * different trees.\n\t */\n\tfunction getLowestCommonAncestor(instA, instB) {\n\t  !('_hostNode' in instA) ?  false ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;\n\t  !('_hostNode' in instB) ?  false ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;\n\t\n\t  var depthA = 0;\n\t  for (var tempA = instA; tempA; tempA = tempA._hostParent) {\n\t    depthA++;\n\t  }\n\t  var depthB = 0;\n\t  for (var tempB = instB; tempB; tempB = tempB._hostParent) {\n\t    depthB++;\n\t  }\n\t\n\t  // If A is deeper, crawl up.\n\t  while (depthA - depthB > 0) {\n\t    instA = instA._hostParent;\n\t    depthA--;\n\t  }\n\t\n\t  // If B is deeper, crawl up.\n\t  while (depthB - depthA > 0) {\n\t    instB = instB._hostParent;\n\t    depthB--;\n\t  }\n\t\n\t  // Walk in lockstep until we find a match.\n\t  var depth = depthA;\n\t  while (depth--) {\n\t    if (instA === instB) {\n\t      return instA;\n\t    }\n\t    instA = instA._hostParent;\n\t    instB = instB._hostParent;\n\t  }\n\t  return null;\n\t}\n\t\n\t/**\n\t * Return if A is an ancestor of B.\n\t */\n\tfunction isAncestor(instA, instB) {\n\t  !('_hostNode' in instA) ?  false ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;\n\t  !('_hostNode' in instB) ?  false ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;\n\t\n\t  while (instB) {\n\t    if (instB === instA) {\n\t      return true;\n\t    }\n\t    instB = instB._hostParent;\n\t  }\n\t  return false;\n\t}\n\t\n\t/**\n\t * Return the parent instance of the passed-in instance.\n\t */\n\tfunction getParentInstance(inst) {\n\t  !('_hostNode' in inst) ?  false ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;\n\t\n\t  return inst._hostParent;\n\t}\n\t\n\t/**\n\t * Simulates the traversal of a two-phase, capture/bubble event dispatch.\n\t */\n\tfunction traverseTwoPhase(inst, fn, arg) {\n\t  var path = [];\n\t  while (inst) {\n\t    path.push(inst);\n\t    inst = inst._hostParent;\n\t  }\n\t  var i;\n\t  for (i = path.length; i-- > 0;) {\n\t    fn(path[i], 'captured', arg);\n\t  }\n\t  for (i = 0; i < path.length; i++) {\n\t    fn(path[i], 'bubbled', arg);\n\t  }\n\t}\n\t\n\t/**\n\t * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that\n\t * should would receive a `mouseEnter` or `mouseLeave` event.\n\t *\n\t * Does not invoke the callback on the nearest common ancestor because nothing\n\t * \"entered\" or \"left\" that element.\n\t */\n\tfunction traverseEnterLeave(from, to, fn, argFrom, argTo) {\n\t  var common = from && to ? getLowestCommonAncestor(from, to) : null;\n\t  var pathFrom = [];\n\t  while (from && from !== common) {\n\t    pathFrom.push(from);\n\t    from = from._hostParent;\n\t  }\n\t  var pathTo = [];\n\t  while (to && to !== common) {\n\t    pathTo.push(to);\n\t    to = to._hostParent;\n\t  }\n\t  var i;\n\t  for (i = 0; i < pathFrom.length; i++) {\n\t    fn(pathFrom[i], 'bubbled', argFrom);\n\t  }\n\t  for (i = pathTo.length; i-- > 0;) {\n\t    fn(pathTo[i], 'captured', argTo);\n\t  }\n\t}\n\t\n\tmodule.exports = {\n\t  isAncestor: isAncestor,\n\t  getLowestCommonAncestor: getLowestCommonAncestor,\n\t  getParentInstance: getParentInstance,\n\t  traverseTwoPhase: traverseTwoPhase,\n\t  traverseEnterLeave: traverseEnterLeave\n\t};\n\n/***/ },\n/* 144 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(4);\n\t\n\tvar ReactUpdates = __webpack_require__(10);\n\tvar Transaction = __webpack_require__(29);\n\t\n\tvar emptyFunction = __webpack_require__(8);\n\t\n\tvar RESET_BATCHED_UPDATES = {\n\t  initialize: emptyFunction,\n\t  close: function () {\n\t    ReactDefaultBatchingStrategy.isBatchingUpdates = false;\n\t  }\n\t};\n\t\n\tvar FLUSH_BATCHED_UPDATES = {\n\t  initialize: emptyFunction,\n\t  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)\n\t};\n\t\n\tvar TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];\n\t\n\tfunction ReactDefaultBatchingStrategyTransaction() {\n\t  this.reinitializeTransaction();\n\t}\n\t\n\t_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction, {\n\t  getTransactionWrappers: function () {\n\t    return TRANSACTION_WRAPPERS;\n\t  }\n\t});\n\t\n\tvar transaction = new ReactDefaultBatchingStrategyTransaction();\n\t\n\tvar ReactDefaultBatchingStrategy = {\n\t  isBatchingUpdates: false,\n\t\n\t  /**\n\t   * Call the provided function in a context within which calls to `setState`\n\t   * and friends are batched such that components aren't updated unnecessarily.\n\t   */\n\t  batchedUpdates: function (callback, a, b, c, d, e) {\n\t    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;\n\t\n\t    ReactDefaultBatchingStrategy.isBatchingUpdates = true;\n\t\n\t    // The code is written this way to avoid extra allocations\n\t    if (alreadyBatchingUpdates) {\n\t      return callback(a, b, c, d, e);\n\t    } else {\n\t      return transaction.perform(callback, null, a, b, c, d, e);\n\t    }\n\t  }\n\t};\n\t\n\tmodule.exports = ReactDefaultBatchingStrategy;\n\n/***/ },\n/* 145 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar ARIADOMPropertyConfig = __webpack_require__(119);\n\tvar BeforeInputEventPlugin = __webpack_require__(121);\n\tvar ChangeEventPlugin = __webpack_require__(123);\n\tvar DefaultEventPluginOrder = __webpack_require__(125);\n\tvar EnterLeaveEventPlugin = __webpack_require__(126);\n\tvar HTMLDOMPropertyConfig = __webpack_require__(128);\n\tvar ReactComponentBrowserEnvironment = __webpack_require__(130);\n\tvar ReactDOMComponent = __webpack_require__(133);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar ReactDOMEmptyComponent = __webpack_require__(135);\n\tvar ReactDOMTreeTraversal = __webpack_require__(143);\n\tvar ReactDOMTextComponent = __webpack_require__(141);\n\tvar ReactDefaultBatchingStrategy = __webpack_require__(144);\n\tvar ReactEventListener = __webpack_require__(148);\n\tvar ReactInjection = __webpack_require__(149);\n\tvar ReactReconcileTransaction = __webpack_require__(154);\n\tvar SVGDOMPropertyConfig = __webpack_require__(159);\n\tvar SelectEventPlugin = __webpack_require__(160);\n\tvar SimpleEventPlugin = __webpack_require__(161);\n\t\n\tvar alreadyInjected = false;\n\t\n\tfunction inject() {\n\t  if (alreadyInjected) {\n\t    // TODO: This is currently true because these injections are shared between\n\t    // the client and the server package. They should be built independently\n\t    // and not share any injection state. Then this problem will be solved.\n\t    return;\n\t  }\n\t  alreadyInjected = true;\n\t\n\t  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);\n\t\n\t  /**\n\t   * Inject modules for resolving DOM hierarchy and plugin ordering.\n\t   */\n\t  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);\n\t  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);\n\t  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);\n\t\n\t  /**\n\t   * Some important event plugins included by default (without having to require\n\t   * them).\n\t   */\n\t  ReactInjection.EventPluginHub.injectEventPluginsByName({\n\t    SimpleEventPlugin: SimpleEventPlugin,\n\t    EnterLeaveEventPlugin: EnterLeaveEventPlugin,\n\t    ChangeEventPlugin: ChangeEventPlugin,\n\t    SelectEventPlugin: SelectEventPlugin,\n\t    BeforeInputEventPlugin: BeforeInputEventPlugin\n\t  });\n\t\n\t  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);\n\t\n\t  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);\n\t\n\t  ReactInjection.DOMProperty.injectDOMPropertyConfig(ARIADOMPropertyConfig);\n\t  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);\n\t  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);\n\t\n\t  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {\n\t    return new ReactDOMEmptyComponent(instantiate);\n\t  });\n\t\n\t  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);\n\t  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);\n\t\n\t  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);\n\t}\n\t\n\tmodule.exports = {\n\t  inject: inject\n\t};\n\n/***/ },\n/* 146 */\n83,\n/* 147 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar EventPluginHub = __webpack_require__(23);\n\t\n\tfunction runEventQueueInBatch(events) {\n\t  EventPluginHub.enqueueEvents(events);\n\t  EventPluginHub.processEventQueue(false);\n\t}\n\t\n\tvar ReactEventEmitterMixin = {\n\t\n\t  /**\n\t   * Streams a fired top-level event to `EventPluginHub` where plugins have the\n\t   * opportunity to create `ReactEvent`s to be dispatched.\n\t   */\n\t  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n\t    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);\n\t    runEventQueueInBatch(events);\n\t  }\n\t};\n\t\n\tmodule.exports = ReactEventEmitterMixin;\n\n/***/ },\n/* 148 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(4);\n\t\n\tvar EventListener = __webpack_require__(55);\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\tvar PooledClass = __webpack_require__(13);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar ReactUpdates = __webpack_require__(10);\n\t\n\tvar getEventTarget = __webpack_require__(45);\n\tvar getUnboundedScrollPosition = __webpack_require__(100);\n\t\n\t/**\n\t * Find the deepest React component completely containing the root of the\n\t * passed-in instance (for use when entire React trees are nested within each\n\t * other). If React trees are not nested, returns null.\n\t */\n\tfunction findParent(inst) {\n\t  // TODO: It may be a good idea to cache this to prevent unnecessary DOM\n\t  // traversal, but caching is difficult to do correctly without using a\n\t  // mutation observer to listen for all DOM changes.\n\t  while (inst._hostParent) {\n\t    inst = inst._hostParent;\n\t  }\n\t  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);\n\t  var container = rootNode.parentNode;\n\t  return ReactDOMComponentTree.getClosestInstanceFromNode(container);\n\t}\n\t\n\t// Used to store ancestor hierarchy in top level callback\n\tfunction TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {\n\t  this.topLevelType = topLevelType;\n\t  this.nativeEvent = nativeEvent;\n\t  this.ancestors = [];\n\t}\n\t_assign(TopLevelCallbackBookKeeping.prototype, {\n\t  destructor: function () {\n\t    this.topLevelType = null;\n\t    this.nativeEvent = null;\n\t    this.ancestors.length = 0;\n\t  }\n\t});\n\tPooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);\n\t\n\tfunction handleTopLevelImpl(bookKeeping) {\n\t  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);\n\t  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);\n\t\n\t  // Loop through the hierarchy, in case there's any nested components.\n\t  // It's important that we build the array of ancestors before calling any\n\t  // event handlers, because event handlers can modify the DOM, leading to\n\t  // inconsistencies with ReactMount's node cache. See #1105.\n\t  var ancestor = targetInst;\n\t  do {\n\t    bookKeeping.ancestors.push(ancestor);\n\t    ancestor = ancestor && findParent(ancestor);\n\t  } while (ancestor);\n\t\n\t  for (var i = 0; i < bookKeeping.ancestors.length; i++) {\n\t    targetInst = bookKeeping.ancestors[i];\n\t    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));\n\t  }\n\t}\n\t\n\tfunction scrollValueMonitor(cb) {\n\t  var scrollPosition = getUnboundedScrollPosition(window);\n\t  cb(scrollPosition);\n\t}\n\t\n\tvar ReactEventListener = {\n\t  _enabled: true,\n\t  _handleTopLevel: null,\n\t\n\t  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,\n\t\n\t  setHandleTopLevel: function (handleTopLevel) {\n\t    ReactEventListener._handleTopLevel = handleTopLevel;\n\t  },\n\t\n\t  setEnabled: function (enabled) {\n\t    ReactEventListener._enabled = !!enabled;\n\t  },\n\t\n\t  isEnabled: function () {\n\t    return ReactEventListener._enabled;\n\t  },\n\t\n\t  /**\n\t   * Traps top-level events by using event bubbling.\n\t   *\n\t   * @param {string} topLevelType Record from `EventConstants`.\n\t   * @param {string} handlerBaseName Event name (e.g. \"click\").\n\t   * @param {object} element Element on which to attach listener.\n\t   * @return {?object} An object with a remove function which will forcefully\n\t   *                  remove the listener.\n\t   * @internal\n\t   */\n\t  trapBubbledEvent: function (topLevelType, handlerBaseName, element) {\n\t    if (!element) {\n\t      return null;\n\t    }\n\t    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n\t  },\n\t\n\t  /**\n\t   * Traps a top-level event by using event capturing.\n\t   *\n\t   * @param {string} topLevelType Record from `EventConstants`.\n\t   * @param {string} handlerBaseName Event name (e.g. \"click\").\n\t   * @param {object} element Element on which to attach listener.\n\t   * @return {?object} An object with a remove function which will forcefully\n\t   *                  remove the listener.\n\t   * @internal\n\t   */\n\t  trapCapturedEvent: function (topLevelType, handlerBaseName, element) {\n\t    if (!element) {\n\t      return null;\n\t    }\n\t    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n\t  },\n\t\n\t  monitorScrollValue: function (refresh) {\n\t    var callback = scrollValueMonitor.bind(null, refresh);\n\t    EventListener.listen(window, 'scroll', callback);\n\t  },\n\t\n\t  dispatchEvent: function (topLevelType, nativeEvent) {\n\t    if (!ReactEventListener._enabled) {\n\t      return;\n\t    }\n\t\n\t    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);\n\t    try {\n\t      // Event queue being processed in the same cycle allows\n\t      // `preventDefault`.\n\t      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);\n\t    } finally {\n\t      TopLevelCallbackBookKeeping.release(bookKeeping);\n\t    }\n\t  }\n\t};\n\t\n\tmodule.exports = ReactEventListener;\n\n/***/ },\n/* 149 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar DOMProperty = __webpack_require__(15);\n\tvar EventPluginHub = __webpack_require__(23);\n\tvar EventPluginUtils = __webpack_require__(36);\n\tvar ReactComponentEnvironment = __webpack_require__(39);\n\tvar ReactEmptyComponent = __webpack_require__(67);\n\tvar ReactBrowserEventEmitter = __webpack_require__(27);\n\tvar ReactHostComponent = __webpack_require__(69);\n\tvar ReactUpdates = __webpack_require__(10);\n\t\n\tvar ReactInjection = {\n\t  Component: ReactComponentEnvironment.injection,\n\t  DOMProperty: DOMProperty.injection,\n\t  EmptyComponent: ReactEmptyComponent.injection,\n\t  EventPluginHub: EventPluginHub.injection,\n\t  EventPluginUtils: EventPluginUtils.injection,\n\t  EventEmitter: ReactBrowserEventEmitter.injection,\n\t  HostComponent: ReactHostComponent.injection,\n\t  Updates: ReactUpdates.injection\n\t};\n\t\n\tmodule.exports = ReactInjection;\n\n/***/ },\n/* 150 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar adler32 = __webpack_require__(172);\n\t\n\tvar TAG_END = /\\/?>/;\n\tvar COMMENT_START = /^<\\!\\-\\-/;\n\t\n\tvar ReactMarkupChecksum = {\n\t  CHECKSUM_ATTR_NAME: 'data-react-checksum',\n\t\n\t  /**\n\t   * @param {string} markup Markup string\n\t   * @return {string} Markup string with checksum attribute attached\n\t   */\n\t  addChecksumToMarkup: function (markup) {\n\t    var checksum = adler32(markup);\n\t\n\t    // Add checksum (handle both parent tags, comments and self-closing tags)\n\t    if (COMMENT_START.test(markup)) {\n\t      return markup;\n\t    } else {\n\t      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '=\"' + checksum + '\"$&');\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @param {string} markup to use\n\t   * @param {DOMElement} element root React element\n\t   * @returns {boolean} whether or not the markup is the same\n\t   */\n\t  canReuseMarkup: function (markup, element) {\n\t    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n\t    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);\n\t    var markupChecksum = adler32(markup);\n\t    return markupChecksum === existingChecksum;\n\t  }\n\t};\n\t\n\tmodule.exports = ReactMarkupChecksum;\n\n/***/ },\n/* 151 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(3);\n\t\n\tvar ReactComponentEnvironment = __webpack_require__(39);\n\tvar ReactInstanceMap = __webpack_require__(25);\n\tvar ReactInstrumentation = __webpack_require__(9);\n\t\n\tvar ReactCurrentOwner = __webpack_require__(12);\n\tvar ReactReconciler = __webpack_require__(16);\n\tvar ReactChildReconciler = __webpack_require__(129);\n\t\n\tvar emptyFunction = __webpack_require__(8);\n\tvar flattenChildren = __webpack_require__(175);\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Make an update for markup to be rendered and inserted at a supplied index.\n\t *\n\t * @param {string} markup Markup that renders into an element.\n\t * @param {number} toIndex Destination index.\n\t * @private\n\t */\n\tfunction makeInsertMarkup(markup, afterNode, toIndex) {\n\t  // NOTE: Null values reduce hidden classes.\n\t  return {\n\t    type: 'INSERT_MARKUP',\n\t    content: markup,\n\t    fromIndex: null,\n\t    fromNode: null,\n\t    toIndex: toIndex,\n\t    afterNode: afterNode\n\t  };\n\t}\n\t\n\t/**\n\t * Make an update for moving an existing element to another index.\n\t *\n\t * @param {number} fromIndex Source index of the existing element.\n\t * @param {number} toIndex Destination index of the element.\n\t * @private\n\t */\n\tfunction makeMove(child, afterNode, toIndex) {\n\t  // NOTE: Null values reduce hidden classes.\n\t  return {\n\t    type: 'MOVE_EXISTING',\n\t    content: null,\n\t    fromIndex: child._mountIndex,\n\t    fromNode: ReactReconciler.getHostNode(child),\n\t    toIndex: toIndex,\n\t    afterNode: afterNode\n\t  };\n\t}\n\t\n\t/**\n\t * Make an update for removing an element at an index.\n\t *\n\t * @param {number} fromIndex Index of the element to remove.\n\t * @private\n\t */\n\tfunction makeRemove(child, node) {\n\t  // NOTE: Null values reduce hidden classes.\n\t  return {\n\t    type: 'REMOVE_NODE',\n\t    content: null,\n\t    fromIndex: child._mountIndex,\n\t    fromNode: node,\n\t    toIndex: null,\n\t    afterNode: null\n\t  };\n\t}\n\t\n\t/**\n\t * Make an update for setting the markup of a node.\n\t *\n\t * @param {string} markup Markup that renders into an element.\n\t * @private\n\t */\n\tfunction makeSetMarkup(markup) {\n\t  // NOTE: Null values reduce hidden classes.\n\t  return {\n\t    type: 'SET_MARKUP',\n\t    content: markup,\n\t    fromIndex: null,\n\t    fromNode: null,\n\t    toIndex: null,\n\t    afterNode: null\n\t  };\n\t}\n\t\n\t/**\n\t * Make an update for setting the text content.\n\t *\n\t * @param {string} textContent Text content to set.\n\t * @private\n\t */\n\tfunction makeTextContent(textContent) {\n\t  // NOTE: Null values reduce hidden classes.\n\t  return {\n\t    type: 'TEXT_CONTENT',\n\t    content: textContent,\n\t    fromIndex: null,\n\t    fromNode: null,\n\t    toIndex: null,\n\t    afterNode: null\n\t  };\n\t}\n\t\n\t/**\n\t * Push an update, if any, onto the queue. Creates a new queue if none is\n\t * passed and always returns the queue. Mutative.\n\t */\n\tfunction enqueue(queue, update) {\n\t  if (update) {\n\t    queue = queue || [];\n\t    queue.push(update);\n\t  }\n\t  return queue;\n\t}\n\t\n\t/**\n\t * Processes any enqueued updates.\n\t *\n\t * @private\n\t */\n\tfunction processQueue(inst, updateQueue) {\n\t  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);\n\t}\n\t\n\tvar setChildrenForInstrumentation = emptyFunction;\n\tif (false) {\n\t  var getDebugID = function (inst) {\n\t    if (!inst._debugID) {\n\t      // Check for ART-like instances. TODO: This is silly/gross.\n\t      var internal;\n\t      if (internal = ReactInstanceMap.get(inst)) {\n\t        inst = internal;\n\t      }\n\t    }\n\t    return inst._debugID;\n\t  };\n\t  setChildrenForInstrumentation = function (children) {\n\t    var debugID = getDebugID(this);\n\t    // TODO: React Native empty components are also multichild.\n\t    // This means they still get into this method but don't have _debugID.\n\t    if (debugID !== 0) {\n\t      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {\n\t        return children[key]._debugID;\n\t      }) : []);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * ReactMultiChild are capable of reconciling multiple children.\n\t *\n\t * @class ReactMultiChild\n\t * @internal\n\t */\n\tvar ReactMultiChild = {\n\t\n\t  /**\n\t   * Provides common functionality for components that must reconcile multiple\n\t   * children. This is used by `ReactDOMComponent` to mount, update, and\n\t   * unmount child components.\n\t   *\n\t   * @lends {ReactMultiChild.prototype}\n\t   */\n\t  Mixin: {\n\t\n\t    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {\n\t      if (false) {\n\t        var selfDebugID = getDebugID(this);\n\t        if (this._currentElement) {\n\t          try {\n\t            ReactCurrentOwner.current = this._currentElement._owner;\n\t            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, selfDebugID);\n\t          } finally {\n\t            ReactCurrentOwner.current = null;\n\t          }\n\t        }\n\t      }\n\t      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);\n\t    },\n\t\n\t    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {\n\t      var nextChildren;\n\t      var selfDebugID = 0;\n\t      if (false) {\n\t        selfDebugID = getDebugID(this);\n\t        if (this._currentElement) {\n\t          try {\n\t            ReactCurrentOwner.current = this._currentElement._owner;\n\t            nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);\n\t          } finally {\n\t            ReactCurrentOwner.current = null;\n\t          }\n\t          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);\n\t          return nextChildren;\n\t        }\n\t      }\n\t      nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);\n\t      ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);\n\t      return nextChildren;\n\t    },\n\t\n\t    /**\n\t     * Generates a \"mount image\" for each of the supplied children. In the case\n\t     * of `ReactDOMComponent`, a mount image is a string of markup.\n\t     *\n\t     * @param {?object} nestedChildren Nested child maps.\n\t     * @return {array} An array of mounted representations.\n\t     * @internal\n\t     */\n\t    mountChildren: function (nestedChildren, transaction, context) {\n\t      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);\n\t      this._renderedChildren = children;\n\t\n\t      var mountImages = [];\n\t      var index = 0;\n\t      for (var name in children) {\n\t        if (children.hasOwnProperty(name)) {\n\t          var child = children[name];\n\t          var selfDebugID = 0;\n\t          if (false) {\n\t            selfDebugID = getDebugID(this);\n\t          }\n\t          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);\n\t          child._mountIndex = index++;\n\t          mountImages.push(mountImage);\n\t        }\n\t      }\n\t\n\t      if (false) {\n\t        setChildrenForInstrumentation.call(this, children);\n\t      }\n\t\n\t      return mountImages;\n\t    },\n\t\n\t    /**\n\t     * Replaces any rendered children with a text content string.\n\t     *\n\t     * @param {string} nextContent String of content.\n\t     * @internal\n\t     */\n\t    updateTextContent: function (nextContent) {\n\t      var prevChildren = this._renderedChildren;\n\t      // Remove any rendered children.\n\t      ReactChildReconciler.unmountChildren(prevChildren, false);\n\t      for (var name in prevChildren) {\n\t        if (prevChildren.hasOwnProperty(name)) {\n\t           true ?  false ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;\n\t        }\n\t      }\n\t      // Set new text content.\n\t      var updates = [makeTextContent(nextContent)];\n\t      processQueue(this, updates);\n\t    },\n\t\n\t    /**\n\t     * Replaces any rendered children with a markup string.\n\t     *\n\t     * @param {string} nextMarkup String of markup.\n\t     * @internal\n\t     */\n\t    updateMarkup: function (nextMarkup) {\n\t      var prevChildren = this._renderedChildren;\n\t      // Remove any rendered children.\n\t      ReactChildReconciler.unmountChildren(prevChildren, false);\n\t      for (var name in prevChildren) {\n\t        if (prevChildren.hasOwnProperty(name)) {\n\t           true ?  false ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;\n\t        }\n\t      }\n\t      var updates = [makeSetMarkup(nextMarkup)];\n\t      processQueue(this, updates);\n\t    },\n\t\n\t    /**\n\t     * Updates the rendered children with new children.\n\t     *\n\t     * @param {?object} nextNestedChildrenElements Nested child element maps.\n\t     * @param {ReactReconcileTransaction} transaction\n\t     * @internal\n\t     */\n\t    updateChildren: function (nextNestedChildrenElements, transaction, context) {\n\t      // Hook used by React ART\n\t      this._updateChildren(nextNestedChildrenElements, transaction, context);\n\t    },\n\t\n\t    /**\n\t     * @param {?object} nextNestedChildrenElements Nested child element maps.\n\t     * @param {ReactReconcileTransaction} transaction\n\t     * @final\n\t     * @protected\n\t     */\n\t    _updateChildren: function (nextNestedChildrenElements, transaction, context) {\n\t      var prevChildren = this._renderedChildren;\n\t      var removedNodes = {};\n\t      var mountImages = [];\n\t      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);\n\t      if (!nextChildren && !prevChildren) {\n\t        return;\n\t      }\n\t      var updates = null;\n\t      var name;\n\t      // `nextIndex` will increment for each child in `nextChildren`, but\n\t      // `lastIndex` will be the last index visited in `prevChildren`.\n\t      var nextIndex = 0;\n\t      var lastIndex = 0;\n\t      // `nextMountIndex` will increment for each newly mounted child.\n\t      var nextMountIndex = 0;\n\t      var lastPlacedNode = null;\n\t      for (name in nextChildren) {\n\t        if (!nextChildren.hasOwnProperty(name)) {\n\t          continue;\n\t        }\n\t        var prevChild = prevChildren && prevChildren[name];\n\t        var nextChild = nextChildren[name];\n\t        if (prevChild === nextChild) {\n\t          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));\n\t          lastIndex = Math.max(prevChild._mountIndex, lastIndex);\n\t          prevChild._mountIndex = nextIndex;\n\t        } else {\n\t          if (prevChild) {\n\t            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.\n\t            lastIndex = Math.max(prevChild._mountIndex, lastIndex);\n\t            // The `removedNodes` loop below will actually remove the child.\n\t          }\n\t          // The child must be instantiated before it's mounted.\n\t          updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));\n\t          nextMountIndex++;\n\t        }\n\t        nextIndex++;\n\t        lastPlacedNode = ReactReconciler.getHostNode(nextChild);\n\t      }\n\t      // Remove children that are no longer present.\n\t      for (name in removedNodes) {\n\t        if (removedNodes.hasOwnProperty(name)) {\n\t          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));\n\t        }\n\t      }\n\t      if (updates) {\n\t        processQueue(this, updates);\n\t      }\n\t      this._renderedChildren = nextChildren;\n\t\n\t      if (false) {\n\t        setChildrenForInstrumentation.call(this, nextChildren);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Unmounts all rendered children. This should be used to clean up children\n\t     * when this component is unmounted. It does not actually perform any\n\t     * backend operations.\n\t     *\n\t     * @internal\n\t     */\n\t    unmountChildren: function (safely) {\n\t      var renderedChildren = this._renderedChildren;\n\t      ReactChildReconciler.unmountChildren(renderedChildren, safely);\n\t      this._renderedChildren = null;\n\t    },\n\t\n\t    /**\n\t     * Moves a child component to the supplied index.\n\t     *\n\t     * @param {ReactComponent} child Component to move.\n\t     * @param {number} toIndex Destination index of the element.\n\t     * @param {number} lastIndex Last index visited of the siblings of `child`.\n\t     * @protected\n\t     */\n\t    moveChild: function (child, afterNode, toIndex, lastIndex) {\n\t      // If the index of `child` is less than `lastIndex`, then it needs to\n\t      // be moved. Otherwise, we do not need to move it because a child will be\n\t      // inserted or moved before `child`.\n\t      if (child._mountIndex < lastIndex) {\n\t        return makeMove(child, afterNode, toIndex);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Creates a child component.\n\t     *\n\t     * @param {ReactComponent} child Component to create.\n\t     * @param {string} mountImage Markup to insert.\n\t     * @protected\n\t     */\n\t    createChild: function (child, afterNode, mountImage) {\n\t      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);\n\t    },\n\t\n\t    /**\n\t     * Removes a child component.\n\t     *\n\t     * @param {ReactComponent} child Child to remove.\n\t     * @protected\n\t     */\n\t    removeChild: function (child, node) {\n\t      return makeRemove(child, node);\n\t    },\n\t\n\t    /**\n\t     * Mounts a child with the supplied name.\n\t     *\n\t     * NOTE: This is part of `updateChildren` and is here for readability.\n\t     *\n\t     * @param {ReactComponent} child Component to mount.\n\t     * @param {string} name Name of the child.\n\t     * @param {number} index Index at which to insert the child.\n\t     * @param {ReactReconcileTransaction} transaction\n\t     * @private\n\t     */\n\t    _mountChildAtIndex: function (child, mountImage, afterNode, index, transaction, context) {\n\t      child._mountIndex = index;\n\t      return this.createChild(child, afterNode, mountImage);\n\t    },\n\t\n\t    /**\n\t     * Unmounts a rendered child.\n\t     *\n\t     * NOTE: This is part of `updateChildren` and is here for readability.\n\t     *\n\t     * @param {ReactComponent} child Component to unmount.\n\t     * @private\n\t     */\n\t    _unmountChild: function (child, node) {\n\t      var update = this.removeChild(child, node);\n\t      child._mountIndex = null;\n\t      return update;\n\t    }\n\t\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactMultiChild;\n\n/***/ },\n/* 152 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(3);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * @param {?object} object\n\t * @return {boolean} True if `object` is a valid owner.\n\t * @final\n\t */\n\tfunction isValidOwner(object) {\n\t  return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');\n\t}\n\t\n\t/**\n\t * ReactOwners are capable of storing references to owned components.\n\t *\n\t * All components are capable of //being// referenced by owner components, but\n\t * only ReactOwner components are capable of //referencing// owned components.\n\t * The named reference is known as a \"ref\".\n\t *\n\t * Refs are available when mounted and updated during reconciliation.\n\t *\n\t *   var MyComponent = React.createClass({\n\t *     render: function() {\n\t *       return (\n\t *         <div onClick={this.handleClick}>\n\t *           <CustomComponent ref=\"custom\" />\n\t *         </div>\n\t *       );\n\t *     },\n\t *     handleClick: function() {\n\t *       this.refs.custom.handleClick();\n\t *     },\n\t *     componentDidMount: function() {\n\t *       this.refs.custom.initialize();\n\t *     }\n\t *   });\n\t *\n\t * Refs should rarely be used. When refs are used, they should only be done to\n\t * control data that is not handled by React's data flow.\n\t *\n\t * @class ReactOwner\n\t */\n\tvar ReactOwner = {\n\t  /**\n\t   * Adds a component by ref to an owner component.\n\t   *\n\t   * @param {ReactComponent} component Component to reference.\n\t   * @param {string} ref Name by which to refer to the component.\n\t   * @param {ReactOwner} owner Component on which to record the ref.\n\t   * @final\n\t   * @internal\n\t   */\n\t  addComponentAsRefTo: function (component, ref, owner) {\n\t    !isValidOwner(owner) ?  false ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;\n\t    owner.attachRef(ref, component);\n\t  },\n\t\n\t  /**\n\t   * Removes a component by ref from an owner component.\n\t   *\n\t   * @param {ReactComponent} component Component to dereference.\n\t   * @param {string} ref Name of the ref to remove.\n\t   * @param {ReactOwner} owner Component on which the ref is recorded.\n\t   * @final\n\t   * @internal\n\t   */\n\t  removeComponentAsRefFrom: function (component, ref, owner) {\n\t    !isValidOwner(owner) ?  false ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;\n\t    var ownerPublicInstance = owner.getPublicInstance();\n\t    // Check that `component`'s owner is still alive and that `component` is still the current ref\n\t    // because we do not want to detach the ref if another component stole it.\n\t    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {\n\t      owner.detachRef(ref);\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactOwner;\n\n/***/ },\n/* 153 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\t\n\tmodule.exports = ReactPropTypesSecret;\n\n/***/ },\n/* 154 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(4);\n\t\n\tvar CallbackQueue = __webpack_require__(63);\n\tvar PooledClass = __webpack_require__(13);\n\tvar ReactBrowserEventEmitter = __webpack_require__(27);\n\tvar ReactInputSelection = __webpack_require__(70);\n\tvar ReactInstrumentation = __webpack_require__(9);\n\tvar Transaction = __webpack_require__(29);\n\tvar ReactUpdateQueue = __webpack_require__(41);\n\t\n\t/**\n\t * Ensures that, when possible, the selection range (currently selected text\n\t * input) is not disturbed by performing the transaction.\n\t */\n\tvar SELECTION_RESTORATION = {\n\t  /**\n\t   * @return {Selection} Selection information.\n\t   */\n\t  initialize: ReactInputSelection.getSelectionInformation,\n\t  /**\n\t   * @param {Selection} sel Selection information returned from `initialize`.\n\t   */\n\t  close: ReactInputSelection.restoreSelection\n\t};\n\t\n\t/**\n\t * Suppresses events (blur/focus) that could be inadvertently dispatched due to\n\t * high level DOM manipulations (like temporarily removing a text input from the\n\t * DOM).\n\t */\n\tvar EVENT_SUPPRESSION = {\n\t  /**\n\t   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before\n\t   * the reconciliation.\n\t   */\n\t  initialize: function () {\n\t    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();\n\t    ReactBrowserEventEmitter.setEnabled(false);\n\t    return currentlyEnabled;\n\t  },\n\t\n\t  /**\n\t   * @param {boolean} previouslyEnabled Enabled status of\n\t   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`\n\t   *   restores the previous value.\n\t   */\n\t  close: function (previouslyEnabled) {\n\t    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);\n\t  }\n\t};\n\t\n\t/**\n\t * Provides a queue for collecting `componentDidMount` and\n\t * `componentDidUpdate` callbacks during the transaction.\n\t */\n\tvar ON_DOM_READY_QUEUEING = {\n\t  /**\n\t   * Initializes the internal `onDOMReady` queue.\n\t   */\n\t  initialize: function () {\n\t    this.reactMountReady.reset();\n\t  },\n\t\n\t  /**\n\t   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.\n\t   */\n\t  close: function () {\n\t    this.reactMountReady.notifyAll();\n\t  }\n\t};\n\t\n\t/**\n\t * Executed within the scope of the `Transaction` instance. Consider these as\n\t * being member methods, but with an implied ordering while being isolated from\n\t * each other.\n\t */\n\tvar TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];\n\t\n\tif (false) {\n\t  TRANSACTION_WRAPPERS.push({\n\t    initialize: ReactInstrumentation.debugTool.onBeginFlush,\n\t    close: ReactInstrumentation.debugTool.onEndFlush\n\t  });\n\t}\n\t\n\t/**\n\t * Currently:\n\t * - The order that these are listed in the transaction is critical:\n\t * - Suppresses events.\n\t * - Restores selection range.\n\t *\n\t * Future:\n\t * - Restore document/overflow scroll positions that were unintentionally\n\t *   modified via DOM insertions above the top viewport boundary.\n\t * - Implement/integrate with customized constraint based layout system and keep\n\t *   track of which dimensions must be remeasured.\n\t *\n\t * @class ReactReconcileTransaction\n\t */\n\tfunction ReactReconcileTransaction(useCreateElement) {\n\t  this.reinitializeTransaction();\n\t  // Only server-side rendering really needs this option (see\n\t  // `ReactServerRendering`), but server-side uses\n\t  // `ReactServerRenderingTransaction` instead. This option is here so that it's\n\t  // accessible and defaults to false when `ReactDOMComponent` and\n\t  // `ReactDOMTextComponent` checks it in `mountComponent`.`\n\t  this.renderToStaticMarkup = false;\n\t  this.reactMountReady = CallbackQueue.getPooled(null);\n\t  this.useCreateElement = useCreateElement;\n\t}\n\t\n\tvar Mixin = {\n\t  /**\n\t   * @see Transaction\n\t   * @abstract\n\t   * @final\n\t   * @return {array<object>} List of operation wrap procedures.\n\t   *   TODO: convert to array<TransactionWrapper>\n\t   */\n\t  getTransactionWrappers: function () {\n\t    return TRANSACTION_WRAPPERS;\n\t  },\n\t\n\t  /**\n\t   * @return {object} The queue to collect `onDOMReady` callbacks with.\n\t   */\n\t  getReactMountReady: function () {\n\t    return this.reactMountReady;\n\t  },\n\t\n\t  /**\n\t   * @return {object} The queue to collect React async events.\n\t   */\n\t  getUpdateQueue: function () {\n\t    return ReactUpdateQueue;\n\t  },\n\t\n\t  /**\n\t   * Save current transaction state -- if the return value from this method is\n\t   * passed to `rollback`, the transaction will be reset to that state.\n\t   */\n\t  checkpoint: function () {\n\t    // reactMountReady is the our only stateful wrapper\n\t    return this.reactMountReady.checkpoint();\n\t  },\n\t\n\t  rollback: function (checkpoint) {\n\t    this.reactMountReady.rollback(checkpoint);\n\t  },\n\t\n\t  /**\n\t   * `PooledClass` looks for this, and will invoke this before allowing this\n\t   * instance to be reused.\n\t   */\n\t  destructor: function () {\n\t    CallbackQueue.release(this.reactMountReady);\n\t    this.reactMountReady = null;\n\t  }\n\t};\n\t\n\t_assign(ReactReconcileTransaction.prototype, Transaction, Mixin);\n\t\n\tPooledClass.addPoolingTo(ReactReconcileTransaction);\n\t\n\tmodule.exports = ReactReconcileTransaction;\n\n/***/ },\n/* 155 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactOwner = __webpack_require__(152);\n\t\n\tvar ReactRef = {};\n\t\n\tfunction attachRef(ref, component, owner) {\n\t  if (typeof ref === 'function') {\n\t    ref(component.getPublicInstance());\n\t  } else {\n\t    // Legacy ref\n\t    ReactOwner.addComponentAsRefTo(component, ref, owner);\n\t  }\n\t}\n\t\n\tfunction detachRef(ref, component, owner) {\n\t  if (typeof ref === 'function') {\n\t    ref(null);\n\t  } else {\n\t    // Legacy ref\n\t    ReactOwner.removeComponentAsRefFrom(component, ref, owner);\n\t  }\n\t}\n\t\n\tReactRef.attachRefs = function (instance, element) {\n\t  if (element === null || typeof element !== 'object') {\n\t    return;\n\t  }\n\t  var ref = element.ref;\n\t  if (ref != null) {\n\t    attachRef(ref, instance, element._owner);\n\t  }\n\t};\n\t\n\tReactRef.shouldUpdateRefs = function (prevElement, nextElement) {\n\t  // If either the owner or a `ref` has changed, make sure the newest owner\n\t  // has stored a reference to `this`, and the previous owner (if different)\n\t  // has forgotten the reference to `this`. We use the element instead\n\t  // of the public this.props because the post processing cannot determine\n\t  // a ref. The ref conceptually lives on the element.\n\t\n\t  // TODO: Should this even be possible? The owner cannot change because\n\t  // it's forbidden by shouldUpdateReactComponent. The ref can change\n\t  // if you swap the keys of but not the refs. Reconsider where this check\n\t  // is made. It probably belongs where the key checking and\n\t  // instantiateReactComponent is done.\n\t\n\t  var prevRef = null;\n\t  var prevOwner = null;\n\t  if (prevElement !== null && typeof prevElement === 'object') {\n\t    prevRef = prevElement.ref;\n\t    prevOwner = prevElement._owner;\n\t  }\n\t\n\t  var nextRef = null;\n\t  var nextOwner = null;\n\t  if (nextElement !== null && typeof nextElement === 'object') {\n\t    nextRef = nextElement.ref;\n\t    nextOwner = nextElement._owner;\n\t  }\n\t\n\t  return prevRef !== nextRef ||\n\t  // If owner changes but we have an unchanged function ref, don't update refs\n\t  typeof nextRef === 'string' && nextOwner !== prevOwner;\n\t};\n\t\n\tReactRef.detachRefs = function (instance, element) {\n\t  if (element === null || typeof element !== 'object') {\n\t    return;\n\t  }\n\t  var ref = element.ref;\n\t  if (ref != null) {\n\t    detachRef(ref, instance, element._owner);\n\t  }\n\t};\n\t\n\tmodule.exports = ReactRef;\n\n/***/ },\n/* 156 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2014-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(4);\n\t\n\tvar PooledClass = __webpack_require__(13);\n\tvar Transaction = __webpack_require__(29);\n\tvar ReactInstrumentation = __webpack_require__(9);\n\tvar ReactServerUpdateQueue = __webpack_require__(157);\n\t\n\t/**\n\t * Executed within the scope of the `Transaction` instance. Consider these as\n\t * being member methods, but with an implied ordering while being isolated from\n\t * each other.\n\t */\n\tvar TRANSACTION_WRAPPERS = [];\n\t\n\tif (false) {\n\t  TRANSACTION_WRAPPERS.push({\n\t    initialize: ReactInstrumentation.debugTool.onBeginFlush,\n\t    close: ReactInstrumentation.debugTool.onEndFlush\n\t  });\n\t}\n\t\n\tvar noopCallbackQueue = {\n\t  enqueue: function () {}\n\t};\n\t\n\t/**\n\t * @class ReactServerRenderingTransaction\n\t * @param {boolean} renderToStaticMarkup\n\t */\n\tfunction ReactServerRenderingTransaction(renderToStaticMarkup) {\n\t  this.reinitializeTransaction();\n\t  this.renderToStaticMarkup = renderToStaticMarkup;\n\t  this.useCreateElement = false;\n\t  this.updateQueue = new ReactServerUpdateQueue(this);\n\t}\n\t\n\tvar Mixin = {\n\t  /**\n\t   * @see Transaction\n\t   * @abstract\n\t   * @final\n\t   * @return {array} Empty list of operation wrap procedures.\n\t   */\n\t  getTransactionWrappers: function () {\n\t    return TRANSACTION_WRAPPERS;\n\t  },\n\t\n\t  /**\n\t   * @return {object} The queue to collect `onDOMReady` callbacks with.\n\t   */\n\t  getReactMountReady: function () {\n\t    return noopCallbackQueue;\n\t  },\n\t\n\t  /**\n\t   * @return {object} The queue to collect React async events.\n\t   */\n\t  getUpdateQueue: function () {\n\t    return this.updateQueue;\n\t  },\n\t\n\t  /**\n\t   * `PooledClass` looks for this, and will invoke this before allowing this\n\t   * instance to be reused.\n\t   */\n\t  destructor: function () {},\n\t\n\t  checkpoint: function () {},\n\t\n\t  rollback: function () {}\n\t};\n\t\n\t_assign(ReactServerRenderingTransaction.prototype, Transaction, Mixin);\n\t\n\tPooledClass.addPoolingTo(ReactServerRenderingTransaction);\n\t\n\tmodule.exports = ReactServerRenderingTransaction;\n\n/***/ },\n/* 157 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2015-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar ReactUpdateQueue = __webpack_require__(41);\n\t\n\tvar warning = __webpack_require__(2);\n\t\n\tfunction warnNoop(publicInstance, callerName) {\n\t  if (false) {\n\t    var constructor = publicInstance.constructor;\n\t    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;\n\t  }\n\t}\n\t\n\t/**\n\t * This is the update queue used for server rendering.\n\t * It delegates to ReactUpdateQueue while server rendering is in progress and\n\t * switches to ReactNoopUpdateQueue after the transaction has completed.\n\t * @class ReactServerUpdateQueue\n\t * @param {Transaction} transaction\n\t */\n\t\n\tvar ReactServerUpdateQueue = function () {\n\t  function ReactServerUpdateQueue(transaction) {\n\t    _classCallCheck(this, ReactServerUpdateQueue);\n\t\n\t    this.transaction = transaction;\n\t  }\n\t\n\t  /**\n\t   * Checks whether or not this composite component is mounted.\n\t   * @param {ReactClass} publicInstance The instance we want to test.\n\t   * @return {boolean} True if mounted, false otherwise.\n\t   * @protected\n\t   * @final\n\t   */\n\t\n\t\n\t  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {\n\t    return false;\n\t  };\n\t\n\t  /**\n\t   * Enqueue a callback that will be executed after all the pending updates\n\t   * have processed.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance to use as `this` context.\n\t   * @param {?function} callback Called after state is updated.\n\t   * @internal\n\t   */\n\t\n\t\n\t  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {\n\t    if (this.transaction.isInTransaction()) {\n\t      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Forces an update. This should only be invoked when it is known with\n\t   * certainty that we are **not** in a DOM transaction.\n\t   *\n\t   * You may want to call this when you know that some deeper aspect of the\n\t   * component's state has changed but `setState` was not called.\n\t   *\n\t   * This will not invoke `shouldComponentUpdate`, but it will invoke\n\t   * `componentWillUpdate` and `componentDidUpdate`.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @internal\n\t   */\n\t\n\t\n\t  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {\n\t    if (this.transaction.isInTransaction()) {\n\t      ReactUpdateQueue.enqueueForceUpdate(publicInstance);\n\t    } else {\n\t      warnNoop(publicInstance, 'forceUpdate');\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Replaces all of the state. Always use this or `setState` to mutate state.\n\t   * You should treat `this.state` as immutable.\n\t   *\n\t   * There is no guarantee that `this.state` will be immediately updated, so\n\t   * accessing `this.state` after calling this method may return the old value.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @param {object|function} completeState Next state.\n\t   * @internal\n\t   */\n\t\n\t\n\t  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {\n\t    if (this.transaction.isInTransaction()) {\n\t      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);\n\t    } else {\n\t      warnNoop(publicInstance, 'replaceState');\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Sets a subset of the state. This only exists because _pendingState is\n\t   * internal. This provides a merging strategy that is not available to deep\n\t   * properties which is confusing. TODO: Expose pendingState or don't use it\n\t   * during the merge.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @param {object|function} partialState Next partial state to be merged with state.\n\t   * @internal\n\t   */\n\t\n\t\n\t  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {\n\t    if (this.transaction.isInTransaction()) {\n\t      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);\n\t    } else {\n\t      warnNoop(publicInstance, 'setState');\n\t    }\n\t  };\n\t\n\t  return ReactServerUpdateQueue;\n\t}();\n\t\n\tmodule.exports = ReactServerUpdateQueue;\n\n/***/ },\n/* 158 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tmodule.exports = '15.5.4';\n\n/***/ },\n/* 159 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar NS = {\n\t  xlink: 'http://www.w3.org/1999/xlink',\n\t  xml: 'http://www.w3.org/XML/1998/namespace'\n\t};\n\t\n\t// We use attributes for everything SVG so let's avoid some duplication and run\n\t// code instead.\n\t// The following are all specified in the HTML config already so we exclude here.\n\t// - class (as className)\n\t// - color\n\t// - height\n\t// - id\n\t// - lang\n\t// - max\n\t// - media\n\t// - method\n\t// - min\n\t// - name\n\t// - style\n\t// - target\n\t// - type\n\t// - width\n\tvar ATTRS = {\n\t  accentHeight: 'accent-height',\n\t  accumulate: 0,\n\t  additive: 0,\n\t  alignmentBaseline: 'alignment-baseline',\n\t  allowReorder: 'allowReorder',\n\t  alphabetic: 0,\n\t  amplitude: 0,\n\t  arabicForm: 'arabic-form',\n\t  ascent: 0,\n\t  attributeName: 'attributeName',\n\t  attributeType: 'attributeType',\n\t  autoReverse: 'autoReverse',\n\t  azimuth: 0,\n\t  baseFrequency: 'baseFrequency',\n\t  baseProfile: 'baseProfile',\n\t  baselineShift: 'baseline-shift',\n\t  bbox: 0,\n\t  begin: 0,\n\t  bias: 0,\n\t  by: 0,\n\t  calcMode: 'calcMode',\n\t  capHeight: 'cap-height',\n\t  clip: 0,\n\t  clipPath: 'clip-path',\n\t  clipRule: 'clip-rule',\n\t  clipPathUnits: 'clipPathUnits',\n\t  colorInterpolation: 'color-interpolation',\n\t  colorInterpolationFilters: 'color-interpolation-filters',\n\t  colorProfile: 'color-profile',\n\t  colorRendering: 'color-rendering',\n\t  contentScriptType: 'contentScriptType',\n\t  contentStyleType: 'contentStyleType',\n\t  cursor: 0,\n\t  cx: 0,\n\t  cy: 0,\n\t  d: 0,\n\t  decelerate: 0,\n\t  descent: 0,\n\t  diffuseConstant: 'diffuseConstant',\n\t  direction: 0,\n\t  display: 0,\n\t  divisor: 0,\n\t  dominantBaseline: 'dominant-baseline',\n\t  dur: 0,\n\t  dx: 0,\n\t  dy: 0,\n\t  edgeMode: 'edgeMode',\n\t  elevation: 0,\n\t  enableBackground: 'enable-background',\n\t  end: 0,\n\t  exponent: 0,\n\t  externalResourcesRequired: 'externalResourcesRequired',\n\t  fill: 0,\n\t  fillOpacity: 'fill-opacity',\n\t  fillRule: 'fill-rule',\n\t  filter: 0,\n\t  filterRes: 'filterRes',\n\t  filterUnits: 'filterUnits',\n\t  floodColor: 'flood-color',\n\t  floodOpacity: 'flood-opacity',\n\t  focusable: 0,\n\t  fontFamily: 'font-family',\n\t  fontSize: 'font-size',\n\t  fontSizeAdjust: 'font-size-adjust',\n\t  fontStretch: 'font-stretch',\n\t  fontStyle: 'font-style',\n\t  fontVariant: 'font-variant',\n\t  fontWeight: 'font-weight',\n\t  format: 0,\n\t  from: 0,\n\t  fx: 0,\n\t  fy: 0,\n\t  g1: 0,\n\t  g2: 0,\n\t  glyphName: 'glyph-name',\n\t  glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n\t  glyphOrientationVertical: 'glyph-orientation-vertical',\n\t  glyphRef: 'glyphRef',\n\t  gradientTransform: 'gradientTransform',\n\t  gradientUnits: 'gradientUnits',\n\t  hanging: 0,\n\t  horizAdvX: 'horiz-adv-x',\n\t  horizOriginX: 'horiz-origin-x',\n\t  ideographic: 0,\n\t  imageRendering: 'image-rendering',\n\t  'in': 0,\n\t  in2: 0,\n\t  intercept: 0,\n\t  k: 0,\n\t  k1: 0,\n\t  k2: 0,\n\t  k3: 0,\n\t  k4: 0,\n\t  kernelMatrix: 'kernelMatrix',\n\t  kernelUnitLength: 'kernelUnitLength',\n\t  kerning: 0,\n\t  keyPoints: 'keyPoints',\n\t  keySplines: 'keySplines',\n\t  keyTimes: 'keyTimes',\n\t  lengthAdjust: 'lengthAdjust',\n\t  letterSpacing: 'letter-spacing',\n\t  lightingColor: 'lighting-color',\n\t  limitingConeAngle: 'limitingConeAngle',\n\t  local: 0,\n\t  markerEnd: 'marker-end',\n\t  markerMid: 'marker-mid',\n\t  markerStart: 'marker-start',\n\t  markerHeight: 'markerHeight',\n\t  markerUnits: 'markerUnits',\n\t  markerWidth: 'markerWidth',\n\t  mask: 0,\n\t  maskContentUnits: 'maskContentUnits',\n\t  maskUnits: 'maskUnits',\n\t  mathematical: 0,\n\t  mode: 0,\n\t  numOctaves: 'numOctaves',\n\t  offset: 0,\n\t  opacity: 0,\n\t  operator: 0,\n\t  order: 0,\n\t  orient: 0,\n\t  orientation: 0,\n\t  origin: 0,\n\t  overflow: 0,\n\t  overlinePosition: 'overline-position',\n\t  overlineThickness: 'overline-thickness',\n\t  paintOrder: 'paint-order',\n\t  panose1: 'panose-1',\n\t  pathLength: 'pathLength',\n\t  patternContentUnits: 'patternContentUnits',\n\t  patternTransform: 'patternTransform',\n\t  patternUnits: 'patternUnits',\n\t  pointerEvents: 'pointer-events',\n\t  points: 0,\n\t  pointsAtX: 'pointsAtX',\n\t  pointsAtY: 'pointsAtY',\n\t  pointsAtZ: 'pointsAtZ',\n\t  preserveAlpha: 'preserveAlpha',\n\t  preserveAspectRatio: 'preserveAspectRatio',\n\t  primitiveUnits: 'primitiveUnits',\n\t  r: 0,\n\t  radius: 0,\n\t  refX: 'refX',\n\t  refY: 'refY',\n\t  renderingIntent: 'rendering-intent',\n\t  repeatCount: 'repeatCount',\n\t  repeatDur: 'repeatDur',\n\t  requiredExtensions: 'requiredExtensions',\n\t  requiredFeatures: 'requiredFeatures',\n\t  restart: 0,\n\t  result: 0,\n\t  rotate: 0,\n\t  rx: 0,\n\t  ry: 0,\n\t  scale: 0,\n\t  seed: 0,\n\t  shapeRendering: 'shape-rendering',\n\t  slope: 0,\n\t  spacing: 0,\n\t  specularConstant: 'specularConstant',\n\t  specularExponent: 'specularExponent',\n\t  speed: 0,\n\t  spreadMethod: 'spreadMethod',\n\t  startOffset: 'startOffset',\n\t  stdDeviation: 'stdDeviation',\n\t  stemh: 0,\n\t  stemv: 0,\n\t  stitchTiles: 'stitchTiles',\n\t  stopColor: 'stop-color',\n\t  stopOpacity: 'stop-opacity',\n\t  strikethroughPosition: 'strikethrough-position',\n\t  strikethroughThickness: 'strikethrough-thickness',\n\t  string: 0,\n\t  stroke: 0,\n\t  strokeDasharray: 'stroke-dasharray',\n\t  strokeDashoffset: 'stroke-dashoffset',\n\t  strokeLinecap: 'stroke-linecap',\n\t  strokeLinejoin: 'stroke-linejoin',\n\t  strokeMiterlimit: 'stroke-miterlimit',\n\t  strokeOpacity: 'stroke-opacity',\n\t  strokeWidth: 'stroke-width',\n\t  surfaceScale: 'surfaceScale',\n\t  systemLanguage: 'systemLanguage',\n\t  tableValues: 'tableValues',\n\t  targetX: 'targetX',\n\t  targetY: 'targetY',\n\t  textAnchor: 'text-anchor',\n\t  textDecoration: 'text-decoration',\n\t  textRendering: 'text-rendering',\n\t  textLength: 'textLength',\n\t  to: 0,\n\t  transform: 0,\n\t  u1: 0,\n\t  u2: 0,\n\t  underlinePosition: 'underline-position',\n\t  underlineThickness: 'underline-thickness',\n\t  unicode: 0,\n\t  unicodeBidi: 'unicode-bidi',\n\t  unicodeRange: 'unicode-range',\n\t  unitsPerEm: 'units-per-em',\n\t  vAlphabetic: 'v-alphabetic',\n\t  vHanging: 'v-hanging',\n\t  vIdeographic: 'v-ideographic',\n\t  vMathematical: 'v-mathematical',\n\t  values: 0,\n\t  vectorEffect: 'vector-effect',\n\t  version: 0,\n\t  vertAdvY: 'vert-adv-y',\n\t  vertOriginX: 'vert-origin-x',\n\t  vertOriginY: 'vert-origin-y',\n\t  viewBox: 'viewBox',\n\t  viewTarget: 'viewTarget',\n\t  visibility: 0,\n\t  widths: 0,\n\t  wordSpacing: 'word-spacing',\n\t  writingMode: 'writing-mode',\n\t  x: 0,\n\t  xHeight: 'x-height',\n\t  x1: 0,\n\t  x2: 0,\n\t  xChannelSelector: 'xChannelSelector',\n\t  xlinkActuate: 'xlink:actuate',\n\t  xlinkArcrole: 'xlink:arcrole',\n\t  xlinkHref: 'xlink:href',\n\t  xlinkRole: 'xlink:role',\n\t  xlinkShow: 'xlink:show',\n\t  xlinkTitle: 'xlink:title',\n\t  xlinkType: 'xlink:type',\n\t  xmlBase: 'xml:base',\n\t  xmlns: 0,\n\t  xmlnsXlink: 'xmlns:xlink',\n\t  xmlLang: 'xml:lang',\n\t  xmlSpace: 'xml:space',\n\t  y: 0,\n\t  y1: 0,\n\t  y2: 0,\n\t  yChannelSelector: 'yChannelSelector',\n\t  z: 0,\n\t  zoomAndPan: 'zoomAndPan'\n\t};\n\t\n\tvar SVGDOMPropertyConfig = {\n\t  Properties: {},\n\t  DOMAttributeNamespaces: {\n\t    xlinkActuate: NS.xlink,\n\t    xlinkArcrole: NS.xlink,\n\t    xlinkHref: NS.xlink,\n\t    xlinkRole: NS.xlink,\n\t    xlinkShow: NS.xlink,\n\t    xlinkTitle: NS.xlink,\n\t    xlinkType: NS.xlink,\n\t    xmlBase: NS.xml,\n\t    xmlLang: NS.xml,\n\t    xmlSpace: NS.xml\n\t  },\n\t  DOMAttributeNames: {}\n\t};\n\t\n\tObject.keys(ATTRS).forEach(function (key) {\n\t  SVGDOMPropertyConfig.Properties[key] = 0;\n\t  if (ATTRS[key]) {\n\t    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];\n\t  }\n\t});\n\t\n\tmodule.exports = SVGDOMPropertyConfig;\n\n/***/ },\n/* 160 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar EventPropagators = __webpack_require__(24);\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar ReactInputSelection = __webpack_require__(70);\n\tvar SyntheticEvent = __webpack_require__(11);\n\t\n\tvar getActiveElement = __webpack_require__(57);\n\tvar isTextInputElement = __webpack_require__(79);\n\tvar shallowEqual = __webpack_require__(32);\n\t\n\tvar skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;\n\t\n\tvar eventTypes = {\n\t  select: {\n\t    phasedRegistrationNames: {\n\t      bubbled: 'onSelect',\n\t      captured: 'onSelectCapture'\n\t    },\n\t    dependencies: ['topBlur', 'topContextMenu', 'topFocus', 'topKeyDown', 'topKeyUp', 'topMouseDown', 'topMouseUp', 'topSelectionChange']\n\t  }\n\t};\n\t\n\tvar activeElement = null;\n\tvar activeElementInst = null;\n\tvar lastSelection = null;\n\tvar mouseDown = false;\n\t\n\t// Track whether a listener exists for this plugin. If none exist, we do\n\t// not extract events. See #3639.\n\tvar hasListener = false;\n\t\n\t/**\n\t * Get an object which is a unique representation of the current selection.\n\t *\n\t * The return value will not be consistent across nodes or browsers, but\n\t * two identical selections on the same node will return identical objects.\n\t *\n\t * @param {DOMElement} node\n\t * @return {object}\n\t */\n\tfunction getSelection(node) {\n\t  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {\n\t    return {\n\t      start: node.selectionStart,\n\t      end: node.selectionEnd\n\t    };\n\t  } else if (window.getSelection) {\n\t    var selection = window.getSelection();\n\t    return {\n\t      anchorNode: selection.anchorNode,\n\t      anchorOffset: selection.anchorOffset,\n\t      focusNode: selection.focusNode,\n\t      focusOffset: selection.focusOffset\n\t    };\n\t  } else if (document.selection) {\n\t    var range = document.selection.createRange();\n\t    return {\n\t      parentElement: range.parentElement(),\n\t      text: range.text,\n\t      top: range.boundingTop,\n\t      left: range.boundingLeft\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Poll selection to see whether it's changed.\n\t *\n\t * @param {object} nativeEvent\n\t * @return {?SyntheticEvent}\n\t */\n\tfunction constructSelectEvent(nativeEvent, nativeEventTarget) {\n\t  // Ensure we have the right element, and that the user is not dragging a\n\t  // selection (this matches native `select` event behavior). In HTML5, select\n\t  // fires only on input and textarea thus if there's no focused element we\n\t  // won't dispatch.\n\t  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {\n\t    return null;\n\t  }\n\t\n\t  // Only fire when selection has actually changed.\n\t  var currentSelection = getSelection(activeElement);\n\t  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {\n\t    lastSelection = currentSelection;\n\t\n\t    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);\n\t\n\t    syntheticEvent.type = 'select';\n\t    syntheticEvent.target = activeElement;\n\t\n\t    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);\n\t\n\t    return syntheticEvent;\n\t  }\n\t\n\t  return null;\n\t}\n\t\n\t/**\n\t * This plugin creates an `onSelect` event that normalizes select events\n\t * across form elements.\n\t *\n\t * Supported elements are:\n\t * - input (see `isTextInputElement`)\n\t * - textarea\n\t * - contentEditable\n\t *\n\t * This differs from native browser implementations in the following ways:\n\t * - Fires on contentEditable fields as well as inputs.\n\t * - Fires for collapsed selection.\n\t * - Fires after user input.\n\t */\n\tvar SelectEventPlugin = {\n\t\n\t  eventTypes: eventTypes,\n\t\n\t  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n\t    if (!hasListener) {\n\t      return null;\n\t    }\n\t\n\t    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;\n\t\n\t    switch (topLevelType) {\n\t      // Track the input node that has focus.\n\t      case 'topFocus':\n\t        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {\n\t          activeElement = targetNode;\n\t          activeElementInst = targetInst;\n\t          lastSelection = null;\n\t        }\n\t        break;\n\t      case 'topBlur':\n\t        activeElement = null;\n\t        activeElementInst = null;\n\t        lastSelection = null;\n\t        break;\n\t\n\t      // Don't fire the event while the user is dragging. This matches the\n\t      // semantics of the native select event.\n\t      case 'topMouseDown':\n\t        mouseDown = true;\n\t        break;\n\t      case 'topContextMenu':\n\t      case 'topMouseUp':\n\t        mouseDown = false;\n\t        return constructSelectEvent(nativeEvent, nativeEventTarget);\n\t\n\t      // Chrome and IE fire non-standard event when selection is changed (and\n\t      // sometimes when it hasn't). IE's event fires out of order with respect\n\t      // to key and input events on deletion, so we discard it.\n\t      //\n\t      // Firefox doesn't support selectionchange, so check selection status\n\t      // after each key entry. The selection changes after keydown and before\n\t      // keyup, but we check on keydown as well in the case of holding down a\n\t      // key, when multiple keydown events are fired but only one keyup is.\n\t      // This is also our approach for IE handling, for the reason above.\n\t      case 'topSelectionChange':\n\t        if (skipSelectionChangeEvent) {\n\t          break;\n\t        }\n\t      // falls through\n\t      case 'topKeyDown':\n\t      case 'topKeyUp':\n\t        return constructSelectEvent(nativeEvent, nativeEventTarget);\n\t    }\n\t\n\t    return null;\n\t  },\n\t\n\t  didPutListener: function (inst, registrationName, listener) {\n\t    if (registrationName === 'onSelect') {\n\t      hasListener = true;\n\t    }\n\t  }\n\t};\n\t\n\tmodule.exports = SelectEventPlugin;\n\n/***/ },\n/* 161 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(3);\n\t\n\tvar EventListener = __webpack_require__(55);\n\tvar EventPropagators = __webpack_require__(24);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar SyntheticAnimationEvent = __webpack_require__(162);\n\tvar SyntheticClipboardEvent = __webpack_require__(163);\n\tvar SyntheticEvent = __webpack_require__(11);\n\tvar SyntheticFocusEvent = __webpack_require__(166);\n\tvar SyntheticKeyboardEvent = __webpack_require__(168);\n\tvar SyntheticMouseEvent = __webpack_require__(28);\n\tvar SyntheticDragEvent = __webpack_require__(165);\n\tvar SyntheticTouchEvent = __webpack_require__(169);\n\tvar SyntheticTransitionEvent = __webpack_require__(170);\n\tvar SyntheticUIEvent = __webpack_require__(26);\n\tvar SyntheticWheelEvent = __webpack_require__(171);\n\t\n\tvar emptyFunction = __webpack_require__(8);\n\tvar getEventCharCode = __webpack_require__(43);\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Turns\n\t * ['abort', ...]\n\t * into\n\t * eventTypes = {\n\t *   'abort': {\n\t *     phasedRegistrationNames: {\n\t *       bubbled: 'onAbort',\n\t *       captured: 'onAbortCapture',\n\t *     },\n\t *     dependencies: ['topAbort'],\n\t *   },\n\t *   ...\n\t * };\n\t * topLevelEventsToDispatchConfig = {\n\t *   'topAbort': { sameConfig }\n\t * };\n\t */\n\tvar eventTypes = {};\n\tvar topLevelEventsToDispatchConfig = {};\n\t['abort', 'animationEnd', 'animationIteration', 'animationStart', 'blur', 'canPlay', 'canPlayThrough', 'click', 'contextMenu', 'copy', 'cut', 'doubleClick', 'drag', 'dragEnd', 'dragEnter', 'dragExit', 'dragLeave', 'dragOver', 'dragStart', 'drop', 'durationChange', 'emptied', 'encrypted', 'ended', 'error', 'focus', 'input', 'invalid', 'keyDown', 'keyPress', 'keyUp', 'load', 'loadedData', 'loadedMetadata', 'loadStart', 'mouseDown', 'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'paste', 'pause', 'play', 'playing', 'progress', 'rateChange', 'reset', 'scroll', 'seeked', 'seeking', 'stalled', 'submit', 'suspend', 'timeUpdate', 'touchCancel', 'touchEnd', 'touchMove', 'touchStart', 'transitionEnd', 'volumeChange', 'waiting', 'wheel'].forEach(function (event) {\n\t  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);\n\t  var onEvent = 'on' + capitalizedEvent;\n\t  var topEvent = 'top' + capitalizedEvent;\n\t\n\t  var type = {\n\t    phasedRegistrationNames: {\n\t      bubbled: onEvent,\n\t      captured: onEvent + 'Capture'\n\t    },\n\t    dependencies: [topEvent]\n\t  };\n\t  eventTypes[event] = type;\n\t  topLevelEventsToDispatchConfig[topEvent] = type;\n\t});\n\t\n\tvar onClickListeners = {};\n\t\n\tfunction getDictionaryKey(inst) {\n\t  // Prevents V8 performance issue:\n\t  // https://github.com/facebook/react/pull/7232\n\t  return '.' + inst._rootNodeID;\n\t}\n\t\n\tfunction isInteractive(tag) {\n\t  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';\n\t}\n\t\n\tvar SimpleEventPlugin = {\n\t\n\t  eventTypes: eventTypes,\n\t\n\t  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n\t    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];\n\t    if (!dispatchConfig) {\n\t      return null;\n\t    }\n\t    var EventConstructor;\n\t    switch (topLevelType) {\n\t      case 'topAbort':\n\t      case 'topCanPlay':\n\t      case 'topCanPlayThrough':\n\t      case 'topDurationChange':\n\t      case 'topEmptied':\n\t      case 'topEncrypted':\n\t      case 'topEnded':\n\t      case 'topError':\n\t      case 'topInput':\n\t      case 'topInvalid':\n\t      case 'topLoad':\n\t      case 'topLoadedData':\n\t      case 'topLoadedMetadata':\n\t      case 'topLoadStart':\n\t      case 'topPause':\n\t      case 'topPlay':\n\t      case 'topPlaying':\n\t      case 'topProgress':\n\t      case 'topRateChange':\n\t      case 'topReset':\n\t      case 'topSeeked':\n\t      case 'topSeeking':\n\t      case 'topStalled':\n\t      case 'topSubmit':\n\t      case 'topSuspend':\n\t      case 'topTimeUpdate':\n\t      case 'topVolumeChange':\n\t      case 'topWaiting':\n\t        // HTML Events\n\t        // @see http://www.w3.org/TR/html5/index.html#events-0\n\t        EventConstructor = SyntheticEvent;\n\t        break;\n\t      case 'topKeyPress':\n\t        // Firefox creates a keypress event for function keys too. This removes\n\t        // the unwanted keypress events. Enter is however both printable and\n\t        // non-printable. One would expect Tab to be as well (but it isn't).\n\t        if (getEventCharCode(nativeEvent) === 0) {\n\t          return null;\n\t        }\n\t      /* falls through */\n\t      case 'topKeyDown':\n\t      case 'topKeyUp':\n\t        EventConstructor = SyntheticKeyboardEvent;\n\t        break;\n\t      case 'topBlur':\n\t      case 'topFocus':\n\t        EventConstructor = SyntheticFocusEvent;\n\t        break;\n\t      case 'topClick':\n\t        // Firefox creates a click event on right mouse clicks. This removes the\n\t        // unwanted click events.\n\t        if (nativeEvent.button === 2) {\n\t          return null;\n\t        }\n\t      /* falls through */\n\t      case 'topDoubleClick':\n\t      case 'topMouseDown':\n\t      case 'topMouseMove':\n\t      case 'topMouseUp':\n\t      // TODO: Disabled elements should not respond to mouse events\n\t      /* falls through */\n\t      case 'topMouseOut':\n\t      case 'topMouseOver':\n\t      case 'topContextMenu':\n\t        EventConstructor = SyntheticMouseEvent;\n\t        break;\n\t      case 'topDrag':\n\t      case 'topDragEnd':\n\t      case 'topDragEnter':\n\t      case 'topDragExit':\n\t      case 'topDragLeave':\n\t      case 'topDragOver':\n\t      case 'topDragStart':\n\t      case 'topDrop':\n\t        EventConstructor = SyntheticDragEvent;\n\t        break;\n\t      case 'topTouchCancel':\n\t      case 'topTouchEnd':\n\t      case 'topTouchMove':\n\t      case 'topTouchStart':\n\t        EventConstructor = SyntheticTouchEvent;\n\t        break;\n\t      case 'topAnimationEnd':\n\t      case 'topAnimationIteration':\n\t      case 'topAnimationStart':\n\t        EventConstructor = SyntheticAnimationEvent;\n\t        break;\n\t      case 'topTransitionEnd':\n\t        EventConstructor = SyntheticTransitionEvent;\n\t        break;\n\t      case 'topScroll':\n\t        EventConstructor = SyntheticUIEvent;\n\t        break;\n\t      case 'topWheel':\n\t        EventConstructor = SyntheticWheelEvent;\n\t        break;\n\t      case 'topCopy':\n\t      case 'topCut':\n\t      case 'topPaste':\n\t        EventConstructor = SyntheticClipboardEvent;\n\t        break;\n\t    }\n\t    !EventConstructor ?  false ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;\n\t    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);\n\t    EventPropagators.accumulateTwoPhaseDispatches(event);\n\t    return event;\n\t  },\n\t\n\t  didPutListener: function (inst, registrationName, listener) {\n\t    // Mobile Safari does not fire properly bubble click events on\n\t    // non-interactive elements, which means delegated click listeners do not\n\t    // fire. The workaround for this bug involves attaching an empty click\n\t    // listener on the target node.\n\t    // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n\t    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {\n\t      var key = getDictionaryKey(inst);\n\t      var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n\t      if (!onClickListeners[key]) {\n\t        onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);\n\t      }\n\t    }\n\t  },\n\t\n\t  willDeleteListener: function (inst, registrationName) {\n\t    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {\n\t      var key = getDictionaryKey(inst);\n\t      onClickListeners[key].remove();\n\t      delete onClickListeners[key];\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = SimpleEventPlugin;\n\n/***/ },\n/* 162 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticEvent = __webpack_require__(11);\n\t\n\t/**\n\t * @interface Event\n\t * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent\n\t */\n\tvar AnimationEventInterface = {\n\t  animationName: null,\n\t  elapsedTime: null,\n\t  pseudoElement: null\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticEvent}\n\t */\n\tfunction SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);\n\t\n\tmodule.exports = SyntheticAnimationEvent;\n\n/***/ },\n/* 163 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticEvent = __webpack_require__(11);\n\t\n\t/**\n\t * @interface Event\n\t * @see http://www.w3.org/TR/clipboard-apis/\n\t */\n\tvar ClipboardEventInterface = {\n\t  clipboardData: function (event) {\n\t    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;\n\t  }\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticUIEvent}\n\t */\n\tfunction SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);\n\t\n\tmodule.exports = SyntheticClipboardEvent;\n\n/***/ },\n/* 164 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticEvent = __webpack_require__(11);\n\t\n\t/**\n\t * @interface Event\n\t * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents\n\t */\n\tvar CompositionEventInterface = {\n\t  data: null\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticUIEvent}\n\t */\n\tfunction SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);\n\t\n\tmodule.exports = SyntheticCompositionEvent;\n\n/***/ },\n/* 165 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticMouseEvent = __webpack_require__(28);\n\t\n\t/**\n\t * @interface DragEvent\n\t * @see http://www.w3.org/TR/DOM-Level-3-Events/\n\t */\n\tvar DragEventInterface = {\n\t  dataTransfer: null\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticUIEvent}\n\t */\n\tfunction SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);\n\t\n\tmodule.exports = SyntheticDragEvent;\n\n/***/ },\n/* 166 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticUIEvent = __webpack_require__(26);\n\t\n\t/**\n\t * @interface FocusEvent\n\t * @see http://www.w3.org/TR/DOM-Level-3-Events/\n\t */\n\tvar FocusEventInterface = {\n\t  relatedTarget: null\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticUIEvent}\n\t */\n\tfunction SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);\n\t\n\tmodule.exports = SyntheticFocusEvent;\n\n/***/ },\n/* 167 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticEvent = __webpack_require__(11);\n\t\n\t/**\n\t * @interface Event\n\t * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105\n\t *      /#events-inputevents\n\t */\n\tvar InputEventInterface = {\n\t  data: null\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticUIEvent}\n\t */\n\tfunction SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);\n\t\n\tmodule.exports = SyntheticInputEvent;\n\n/***/ },\n/* 168 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticUIEvent = __webpack_require__(26);\n\t\n\tvar getEventCharCode = __webpack_require__(43);\n\tvar getEventKey = __webpack_require__(176);\n\tvar getEventModifierState = __webpack_require__(44);\n\t\n\t/**\n\t * @interface KeyboardEvent\n\t * @see http://www.w3.org/TR/DOM-Level-3-Events/\n\t */\n\tvar KeyboardEventInterface = {\n\t  key: getEventKey,\n\t  location: null,\n\t  ctrlKey: null,\n\t  shiftKey: null,\n\t  altKey: null,\n\t  metaKey: null,\n\t  repeat: null,\n\t  locale: null,\n\t  getModifierState: getEventModifierState,\n\t  // Legacy Interface\n\t  charCode: function (event) {\n\t    // `charCode` is the result of a KeyPress event and represents the value of\n\t    // the actual printable character.\n\t\n\t    // KeyPress is deprecated, but its replacement is not yet final and not\n\t    // implemented in any major browser. Only KeyPress has charCode.\n\t    if (event.type === 'keypress') {\n\t      return getEventCharCode(event);\n\t    }\n\t    return 0;\n\t  },\n\t  keyCode: function (event) {\n\t    // `keyCode` is the result of a KeyDown/Up event and represents the value of\n\t    // physical keyboard key.\n\t\n\t    // The actual meaning of the value depends on the users' keyboard layout\n\t    // which cannot be detected. Assuming that it is a US keyboard layout\n\t    // provides a surprisingly accurate mapping for US and European users.\n\t    // Due to this, it is left to the user to implement at this time.\n\t    if (event.type === 'keydown' || event.type === 'keyup') {\n\t      return event.keyCode;\n\t    }\n\t    return 0;\n\t  },\n\t  which: function (event) {\n\t    // `which` is an alias for either `keyCode` or `charCode` depending on the\n\t    // type of the event.\n\t    if (event.type === 'keypress') {\n\t      return getEventCharCode(event);\n\t    }\n\t    if (event.type === 'keydown' || event.type === 'keyup') {\n\t      return event.keyCode;\n\t    }\n\t    return 0;\n\t  }\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticUIEvent}\n\t */\n\tfunction SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);\n\t\n\tmodule.exports = SyntheticKeyboardEvent;\n\n/***/ },\n/* 169 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticUIEvent = __webpack_require__(26);\n\t\n\tvar getEventModifierState = __webpack_require__(44);\n\t\n\t/**\n\t * @interface TouchEvent\n\t * @see http://www.w3.org/TR/touch-events/\n\t */\n\tvar TouchEventInterface = {\n\t  touches: null,\n\t  targetTouches: null,\n\t  changedTouches: null,\n\t  altKey: null,\n\t  metaKey: null,\n\t  ctrlKey: null,\n\t  shiftKey: null,\n\t  getModifierState: getEventModifierState\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticUIEvent}\n\t */\n\tfunction SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);\n\t\n\tmodule.exports = SyntheticTouchEvent;\n\n/***/ },\n/* 170 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticEvent = __webpack_require__(11);\n\t\n\t/**\n\t * @interface Event\n\t * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent\n\t */\n\tvar TransitionEventInterface = {\n\t  propertyName: null,\n\t  elapsedTime: null,\n\t  pseudoElement: null\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticEvent}\n\t */\n\tfunction SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);\n\t\n\tmodule.exports = SyntheticTransitionEvent;\n\n/***/ },\n/* 171 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticMouseEvent = __webpack_require__(28);\n\t\n\t/**\n\t * @interface WheelEvent\n\t * @see http://www.w3.org/TR/DOM-Level-3-Events/\n\t */\n\tvar WheelEventInterface = {\n\t  deltaX: function (event) {\n\t    return 'deltaX' in event ? event.deltaX :\n\t    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).\n\t    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;\n\t  },\n\t  deltaY: function (event) {\n\t    return 'deltaY' in event ? event.deltaY :\n\t    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).\n\t    'wheelDeltaY' in event ? -event.wheelDeltaY :\n\t    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).\n\t    'wheelDelta' in event ? -event.wheelDelta : 0;\n\t  },\n\t  deltaZ: null,\n\t\n\t  // Browsers without \"deltaMode\" is reporting in raw wheel delta where one\n\t  // notch on the scroll is always +/- 120, roughly equivalent to pixels.\n\t  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or\n\t  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.\n\t  deltaMode: null\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticMouseEvent}\n\t */\n\tfunction SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);\n\t\n\tmodule.exports = SyntheticWheelEvent;\n\n/***/ },\n/* 172 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar MOD = 65521;\n\t\n\t// adler32 is not cryptographically strong, and is only used to sanity check that\n\t// markup generated on the server matches the markup generated on the client.\n\t// This implementation (a modified version of the SheetJS version) has been optimized\n\t// for our use case, at the expense of conforming to the adler32 specification\n\t// for non-ascii inputs.\n\tfunction adler32(data) {\n\t  var a = 1;\n\t  var b = 0;\n\t  var i = 0;\n\t  var l = data.length;\n\t  var m = l & ~0x3;\n\t  while (i < m) {\n\t    var n = Math.min(i + 4096, m);\n\t    for (; i < n; i += 4) {\n\t      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));\n\t    }\n\t    a %= MOD;\n\t    b %= MOD;\n\t  }\n\t  for (; i < l; i++) {\n\t    b += a += data.charCodeAt(i);\n\t  }\n\t  a %= MOD;\n\t  b %= MOD;\n\t  return a | b << 16;\n\t}\n\t\n\tmodule.exports = adler32;\n\n/***/ },\n/* 173 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar CSSProperty = __webpack_require__(62);\n\tvar warning = __webpack_require__(2);\n\t\n\tvar isUnitlessNumber = CSSProperty.isUnitlessNumber;\n\tvar styleWarnings = {};\n\t\n\t/**\n\t * Convert a value into the proper css writable value. The style name `name`\n\t * should be logical (no hyphens), as specified\n\t * in `CSSProperty.isUnitlessNumber`.\n\t *\n\t * @param {string} name CSS property name such as `topMargin`.\n\t * @param {*} value CSS property value such as `10px`.\n\t * @param {ReactDOMComponent} component\n\t * @return {string} Normalized style value with dimensions applied.\n\t */\n\tfunction dangerousStyleValue(name, value, component) {\n\t  // Note that we've removed escapeTextForBrowser() calls here since the\n\t  // whole string will be escaped when the attribute is injected into\n\t  // the markup. If you provide unsafe user data here they can inject\n\t  // arbitrary CSS which may be problematic (I couldn't repro this):\n\t  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\n\t  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/\n\t  // This is not an XSS hole but instead a potential CSS injection issue\n\t  // which has lead to a greater discussion about how we're going to\n\t  // trust URLs moving forward. See #2115901\n\t\n\t  var isEmpty = value == null || typeof value === 'boolean' || value === '';\n\t  if (isEmpty) {\n\t    return '';\n\t  }\n\t\n\t  var isNonNumeric = isNaN(value);\n\t  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {\n\t    return '' + value; // cast to string\n\t  }\n\t\n\t  if (typeof value === 'string') {\n\t    if (false) {\n\t      // Allow '0' to pass through without warning. 0 is already special and\n\t      // doesn't require units, so we don't need to warn about it.\n\t      if (component && value !== '0') {\n\t        var owner = component._currentElement._owner;\n\t        var ownerName = owner ? owner.getName() : null;\n\t        if (ownerName && !styleWarnings[ownerName]) {\n\t          styleWarnings[ownerName] = {};\n\t        }\n\t        var warned = false;\n\t        if (ownerName) {\n\t          var warnings = styleWarnings[ownerName];\n\t          warned = warnings[name];\n\t          if (!warned) {\n\t            warnings[name] = true;\n\t          }\n\t        }\n\t        if (!warned) {\n\t          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;\n\t        }\n\t      }\n\t    }\n\t    value = value.trim();\n\t  }\n\t  return value + 'px';\n\t}\n\t\n\tmodule.exports = dangerousStyleValue;\n\n/***/ },\n/* 174 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(3);\n\t\n\tvar ReactCurrentOwner = __webpack_require__(12);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar ReactInstanceMap = __webpack_require__(25);\n\t\n\tvar getHostComponentFromComposite = __webpack_require__(76);\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(2);\n\t\n\t/**\n\t * Returns the DOM node rendered by this element.\n\t *\n\t * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode\n\t *\n\t * @param {ReactComponent|DOMElement} componentOrElement\n\t * @return {?DOMElement} The root node of this element.\n\t */\n\tfunction findDOMNode(componentOrElement) {\n\t  if (false) {\n\t    var owner = ReactCurrentOwner.current;\n\t    if (owner !== null) {\n\t      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;\n\t      owner._warnedAboutRefsInRender = true;\n\t    }\n\t  }\n\t  if (componentOrElement == null) {\n\t    return null;\n\t  }\n\t  if (componentOrElement.nodeType === 1) {\n\t    return componentOrElement;\n\t  }\n\t\n\t  var inst = ReactInstanceMap.get(componentOrElement);\n\t  if (inst) {\n\t    inst = getHostComponentFromComposite(inst);\n\t    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;\n\t  }\n\t\n\t  if (typeof componentOrElement.render === 'function') {\n\t     true ?  false ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;\n\t  } else {\n\t     true ?  false ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;\n\t  }\n\t}\n\t\n\tmodule.exports = findDOMNode;\n\n/***/ },\n/* 175 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar KeyEscapeUtils = __webpack_require__(37);\n\tvar traverseAllChildren = __webpack_require__(81);\n\tvar warning = __webpack_require__(2);\n\t\n\tvar ReactComponentTreeHook;\n\t\n\tif (typeof process !== 'undefined' && ({\"NODE_ENV\":\"production\",\"PUBLIC_URL\":\"/PuzzlePopsicles\"}) && (\"production\") === 'test') {\n\t  // Temporary hack.\n\t  // Inline requires don't work well with Jest:\n\t  // https://github.com/facebook/react/issues/7240\n\t  // Remove the inline requires when we don't need them anymore:\n\t  // https://github.com/facebook/react/pull/7178\n\t  ReactComponentTreeHook = __webpack_require__(82);\n\t}\n\t\n\t/**\n\t * @param {function} traverseContext Context passed through traversal.\n\t * @param {?ReactComponent} child React child component.\n\t * @param {!string} name String name of key path to child.\n\t * @param {number=} selfDebugID Optional debugID of the current internal instance.\n\t */\n\tfunction flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {\n\t  // We found a component instance.\n\t  if (traverseContext && typeof traverseContext === 'object') {\n\t    var result = traverseContext;\n\t    var keyUnique = result[name] === undefined;\n\t    if (false) {\n\t      if (!ReactComponentTreeHook) {\n\t        ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\n\t      }\n\t      if (!keyUnique) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;\n\t      }\n\t    }\n\t    if (keyUnique && child != null) {\n\t      result[name] = child;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Flattens children that are typically specified as `props.children`. Any null\n\t * children will not be included in the resulting object.\n\t * @return {!object} flattened children keyed by name.\n\t */\n\tfunction flattenChildren(children, selfDebugID) {\n\t  if (children == null) {\n\t    return children;\n\t  }\n\t  var result = {};\n\t\n\t  if (false) {\n\t    traverseAllChildren(children, function (traverseContext, child, name) {\n\t      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);\n\t    }, result);\n\t  } else {\n\t    traverseAllChildren(children, flattenSingleChildIntoContext, result);\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = flattenChildren;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/***/ },\n/* 176 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar getEventCharCode = __webpack_require__(43);\n\t\n\t/**\n\t * Normalization of deprecated HTML5 `key` values\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n\t */\n\tvar normalizeKey = {\n\t  'Esc': 'Escape',\n\t  'Spacebar': ' ',\n\t  'Left': 'ArrowLeft',\n\t  'Up': 'ArrowUp',\n\t  'Right': 'ArrowRight',\n\t  'Down': 'ArrowDown',\n\t  'Del': 'Delete',\n\t  'Win': 'OS',\n\t  'Menu': 'ContextMenu',\n\t  'Apps': 'ContextMenu',\n\t  'Scroll': 'ScrollLock',\n\t  'MozPrintableKey': 'Unidentified'\n\t};\n\t\n\t/**\n\t * Translation from legacy `keyCode` to HTML5 `key`\n\t * Only special keys supported, all others depend on keyboard layout or browser\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n\t */\n\tvar translateToKey = {\n\t  8: 'Backspace',\n\t  9: 'Tab',\n\t  12: 'Clear',\n\t  13: 'Enter',\n\t  16: 'Shift',\n\t  17: 'Control',\n\t  18: 'Alt',\n\t  19: 'Pause',\n\t  20: 'CapsLock',\n\t  27: 'Escape',\n\t  32: ' ',\n\t  33: 'PageUp',\n\t  34: 'PageDown',\n\t  35: 'End',\n\t  36: 'Home',\n\t  37: 'ArrowLeft',\n\t  38: 'ArrowUp',\n\t  39: 'ArrowRight',\n\t  40: 'ArrowDown',\n\t  45: 'Insert',\n\t  46: 'Delete',\n\t  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',\n\t  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',\n\t  144: 'NumLock',\n\t  145: 'ScrollLock',\n\t  224: 'Meta'\n\t};\n\t\n\t/**\n\t * @param {object} nativeEvent Native browser event.\n\t * @return {string} Normalized `key` property.\n\t */\n\tfunction getEventKey(nativeEvent) {\n\t  if (nativeEvent.key) {\n\t    // Normalize inconsistent values reported by browsers due to\n\t    // implementations of a working draft specification.\n\t\n\t    // FireFox implements `key` but returns `MozPrintableKey` for all\n\t    // printable characters (normalized to `Unidentified`), ignore it.\n\t    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;\n\t    if (key !== 'Unidentified') {\n\t      return key;\n\t    }\n\t  }\n\t\n\t  // Browser does not implement `key`, polyfill as much of it as we can.\n\t  if (nativeEvent.type === 'keypress') {\n\t    var charCode = getEventCharCode(nativeEvent);\n\t\n\t    // The enter-key is technically both printable and non-printable and can\n\t    // thus be captured by `keypress`, no other non-printable key should.\n\t    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);\n\t  }\n\t  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {\n\t    // While user keyboard layout determines the actual meaning of each\n\t    // `keyCode` value, almost all function keys have a universal value.\n\t    return translateToKey[nativeEvent.keyCode] || 'Unidentified';\n\t  }\n\t  return '';\n\t}\n\t\n\tmodule.exports = getEventKey;\n\n/***/ },\n/* 177 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\t/* global Symbol */\n\t\n\tvar ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n\tvar FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\t\n\t/**\n\t * Returns the iterator method function contained on the iterable object.\n\t *\n\t * Be sure to invoke the function with the iterable as context:\n\t *\n\t *     var iteratorFn = getIteratorFn(myIterable);\n\t *     if (iteratorFn) {\n\t *       var iterator = iteratorFn.call(myIterable);\n\t *       ...\n\t *     }\n\t *\n\t * @param {?object} maybeIterable\n\t * @return {?function}\n\t */\n\tfunction getIteratorFn(maybeIterable) {\n\t  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n\t  if (typeof iteratorFn === 'function') {\n\t    return iteratorFn;\n\t  }\n\t}\n\t\n\tmodule.exports = getIteratorFn;\n\n/***/ },\n/* 178 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Given any node return the first leaf node without children.\n\t *\n\t * @param {DOMElement|DOMTextNode} node\n\t * @return {DOMElement|DOMTextNode}\n\t */\n\t\n\tfunction getLeafNode(node) {\n\t  while (node && node.firstChild) {\n\t    node = node.firstChild;\n\t  }\n\t  return node;\n\t}\n\t\n\t/**\n\t * Get the next sibling within a container. This will walk up the\n\t * DOM if a node's siblings have been exhausted.\n\t *\n\t * @param {DOMElement|DOMTextNode} node\n\t * @return {?DOMElement|DOMTextNode}\n\t */\n\tfunction getSiblingNode(node) {\n\t  while (node) {\n\t    if (node.nextSibling) {\n\t      return node.nextSibling;\n\t    }\n\t    node = node.parentNode;\n\t  }\n\t}\n\t\n\t/**\n\t * Get object describing the nodes which contain characters at offset.\n\t *\n\t * @param {DOMElement|DOMTextNode} root\n\t * @param {number} offset\n\t * @return {?object}\n\t */\n\tfunction getNodeForCharacterOffset(root, offset) {\n\t  var node = getLeafNode(root);\n\t  var nodeStart = 0;\n\t  var nodeEnd = 0;\n\t\n\t  while (node) {\n\t    if (node.nodeType === 3) {\n\t      nodeEnd = nodeStart + node.textContent.length;\n\t\n\t      if (nodeStart <= offset && nodeEnd >= offset) {\n\t        return {\n\t          node: node,\n\t          offset: offset - nodeStart\n\t        };\n\t      }\n\t\n\t      nodeStart = nodeEnd;\n\t    }\n\t\n\t    node = getLeafNode(getSiblingNode(node));\n\t  }\n\t}\n\t\n\tmodule.exports = getNodeForCharacterOffset;\n\n/***/ },\n/* 179 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\t\n\t/**\n\t * Generate a mapping of standard vendor prefixes using the defined style property and event name.\n\t *\n\t * @param {string} styleProp\n\t * @param {string} eventName\n\t * @returns {object}\n\t */\n\tfunction makePrefixMap(styleProp, eventName) {\n\t  var prefixes = {};\n\t\n\t  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();\n\t  prefixes['Webkit' + styleProp] = 'webkit' + eventName;\n\t  prefixes['Moz' + styleProp] = 'moz' + eventName;\n\t  prefixes['ms' + styleProp] = 'MS' + eventName;\n\t  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();\n\t\n\t  return prefixes;\n\t}\n\t\n\t/**\n\t * A list of event names to a configurable list of vendor prefixes.\n\t */\n\tvar vendorPrefixes = {\n\t  animationend: makePrefixMap('Animation', 'AnimationEnd'),\n\t  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),\n\t  animationstart: makePrefixMap('Animation', 'AnimationStart'),\n\t  transitionend: makePrefixMap('Transition', 'TransitionEnd')\n\t};\n\t\n\t/**\n\t * Event names that have already been detected and prefixed (if applicable).\n\t */\n\tvar prefixedEventNames = {};\n\t\n\t/**\n\t * Element to check for prefixes on.\n\t */\n\tvar style = {};\n\t\n\t/**\n\t * Bootstrap if a DOM exists.\n\t */\n\tif (ExecutionEnvironment.canUseDOM) {\n\t  style = document.createElement('div').style;\n\t\n\t  // On some platforms, in particular some releases of Android 4.x,\n\t  // the un-prefixed \"animation\" and \"transition\" properties are defined on the\n\t  // style object but the events that fire will still be prefixed, so we need\n\t  // to check if the un-prefixed events are usable, and if not remove them from the map.\n\t  if (!('AnimationEvent' in window)) {\n\t    delete vendorPrefixes.animationend.animation;\n\t    delete vendorPrefixes.animationiteration.animation;\n\t    delete vendorPrefixes.animationstart.animation;\n\t  }\n\t\n\t  // Same as above\n\t  if (!('TransitionEvent' in window)) {\n\t    delete vendorPrefixes.transitionend.transition;\n\t  }\n\t}\n\t\n\t/**\n\t * Attempts to determine the correct vendor prefixed event name.\n\t *\n\t * @param {string} eventName\n\t * @returns {string}\n\t */\n\tfunction getVendorPrefixedEventName(eventName) {\n\t  if (prefixedEventNames[eventName]) {\n\t    return prefixedEventNames[eventName];\n\t  } else if (!vendorPrefixes[eventName]) {\n\t    return eventName;\n\t  }\n\t\n\t  var prefixMap = vendorPrefixes[eventName];\n\t\n\t  for (var styleProp in prefixMap) {\n\t    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {\n\t      return prefixedEventNames[eventName] = prefixMap[styleProp];\n\t    }\n\t  }\n\t\n\t  return '';\n\t}\n\t\n\tmodule.exports = getVendorPrefixedEventName;\n\n/***/ },\n/* 180 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar escapeTextContentForBrowser = __webpack_require__(30);\n\t\n\t/**\n\t * Escapes attribute value to prevent scripting attacks.\n\t *\n\t * @param {*} value Value to escape.\n\t * @return {string} An escaped string.\n\t */\n\tfunction quoteAttributeValueForBrowser(value) {\n\t  return '\"' + escapeTextContentForBrowser(value) + '\"';\n\t}\n\t\n\tmodule.exports = quoteAttributeValueForBrowser;\n\n/***/ },\n/* 181 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactMount = __webpack_require__(71);\n\t\n\tmodule.exports = ReactMount.renderSubtreeIntoContainer;\n\n/***/ },\n/* 182 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// @remove-on-eject-begin\n\t/**\n\t * Copyright (c) 2015-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t */\n\t// @remove-on-eject-end\n\t'use strict';\n\t\n\tif (typeof Promise === 'undefined') {\n\t  // Rejection tracking prevents a common issue where React gets into an\n\t  // inconsistent state due to an error, but it gets swallowed by a Promise,\n\t  // and the user has no idea what causes React's erratic future behavior.\n\t  __webpack_require__(114).enable();\n\t  window.Promise = __webpack_require__(113);\n\t}\n\t\n\t// fetch() polyfill for making API calls.\n\t__webpack_require__(183);\n\t\n\t// Object.assign() is commonly used with React.\n\t// It will use the native implementation if it's present and isn't buggy.\n\tObject.assign = __webpack_require__(4);\n\n\n/***/ },\n/* 183 */\n/***/ function(module, exports) {\n\n\t(function(self) {\n\t  'use strict';\n\t\n\t  if (self.fetch) {\n\t    return\n\t  }\n\t\n\t  var support = {\n\t    searchParams: 'URLSearchParams' in self,\n\t    iterable: 'Symbol' in self && 'iterator' in Symbol,\n\t    blob: 'FileReader' in self && 'Blob' in self && (function() {\n\t      try {\n\t        new Blob()\n\t        return true\n\t      } catch(e) {\n\t        return false\n\t      }\n\t    })(),\n\t    formData: 'FormData' in self,\n\t    arrayBuffer: 'ArrayBuffer' in self\n\t  }\n\t\n\t  if (support.arrayBuffer) {\n\t    var viewClasses = [\n\t      '[object Int8Array]',\n\t      '[object Uint8Array]',\n\t      '[object Uint8ClampedArray]',\n\t      '[object Int16Array]',\n\t      '[object Uint16Array]',\n\t      '[object Int32Array]',\n\t      '[object Uint32Array]',\n\t      '[object Float32Array]',\n\t      '[object Float64Array]'\n\t    ]\n\t\n\t    var isDataView = function(obj) {\n\t      return obj && DataView.prototype.isPrototypeOf(obj)\n\t    }\n\t\n\t    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n\t      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n\t    }\n\t  }\n\t\n\t  function normalizeName(name) {\n\t    if (typeof name !== 'string') {\n\t      name = String(name)\n\t    }\n\t    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n\t      throw new TypeError('Invalid character in header field name')\n\t    }\n\t    return name.toLowerCase()\n\t  }\n\t\n\t  function normalizeValue(value) {\n\t    if (typeof value !== 'string') {\n\t      value = String(value)\n\t    }\n\t    return value\n\t  }\n\t\n\t  // Build a destructive iterator for the value list\n\t  function iteratorFor(items) {\n\t    var iterator = {\n\t      next: function() {\n\t        var value = items.shift()\n\t        return {done: value === undefined, value: value}\n\t      }\n\t    }\n\t\n\t    if (support.iterable) {\n\t      iterator[Symbol.iterator] = function() {\n\t        return iterator\n\t      }\n\t    }\n\t\n\t    return iterator\n\t  }\n\t\n\t  function Headers(headers) {\n\t    this.map = {}\n\t\n\t    if (headers instanceof Headers) {\n\t      headers.forEach(function(value, name) {\n\t        this.append(name, value)\n\t      }, this)\n\t\n\t    } else if (headers) {\n\t      Object.getOwnPropertyNames(headers).forEach(function(name) {\n\t        this.append(name, headers[name])\n\t      }, this)\n\t    }\n\t  }\n\t\n\t  Headers.prototype.append = function(name, value) {\n\t    name = normalizeName(name)\n\t    value = normalizeValue(value)\n\t    var oldValue = this.map[name]\n\t    this.map[name] = oldValue ? oldValue+','+value : value\n\t  }\n\t\n\t  Headers.prototype['delete'] = function(name) {\n\t    delete this.map[normalizeName(name)]\n\t  }\n\t\n\t  Headers.prototype.get = function(name) {\n\t    name = normalizeName(name)\n\t    return this.has(name) ? this.map[name] : null\n\t  }\n\t\n\t  Headers.prototype.has = function(name) {\n\t    return this.map.hasOwnProperty(normalizeName(name))\n\t  }\n\t\n\t  Headers.prototype.set = function(name, value) {\n\t    this.map[normalizeName(name)] = normalizeValue(value)\n\t  }\n\t\n\t  Headers.prototype.forEach = function(callback, thisArg) {\n\t    for (var name in this.map) {\n\t      if (this.map.hasOwnProperty(name)) {\n\t        callback.call(thisArg, this.map[name], name, this)\n\t      }\n\t    }\n\t  }\n\t\n\t  Headers.prototype.keys = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push(name) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.values = function() {\n\t    var items = []\n\t    this.forEach(function(value) { items.push(value) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.entries = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push([name, value]) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  if (support.iterable) {\n\t    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n\t  }\n\t\n\t  function consumed(body) {\n\t    if (body.bodyUsed) {\n\t      return Promise.reject(new TypeError('Already read'))\n\t    }\n\t    body.bodyUsed = true\n\t  }\n\t\n\t  function fileReaderReady(reader) {\n\t    return new Promise(function(resolve, reject) {\n\t      reader.onload = function() {\n\t        resolve(reader.result)\n\t      }\n\t      reader.onerror = function() {\n\t        reject(reader.error)\n\t      }\n\t    })\n\t  }\n\t\n\t  function readBlobAsArrayBuffer(blob) {\n\t    var reader = new FileReader()\n\t    var promise = fileReaderReady(reader)\n\t    reader.readAsArrayBuffer(blob)\n\t    return promise\n\t  }\n\t\n\t  function readBlobAsText(blob) {\n\t    var reader = new FileReader()\n\t    var promise = fileReaderReady(reader)\n\t    reader.readAsText(blob)\n\t    return promise\n\t  }\n\t\n\t  function readArrayBufferAsText(buf) {\n\t    var view = new Uint8Array(buf)\n\t    var chars = new Array(view.length)\n\t\n\t    for (var i = 0; i < view.length; i++) {\n\t      chars[i] = String.fromCharCode(view[i])\n\t    }\n\t    return chars.join('')\n\t  }\n\t\n\t  function bufferClone(buf) {\n\t    if (buf.slice) {\n\t      return buf.slice(0)\n\t    } else {\n\t      var view = new Uint8Array(buf.byteLength)\n\t      view.set(new Uint8Array(buf))\n\t      return view.buffer\n\t    }\n\t  }\n\t\n\t  function Body() {\n\t    this.bodyUsed = false\n\t\n\t    this._initBody = function(body) {\n\t      this._bodyInit = body\n\t      if (!body) {\n\t        this._bodyText = ''\n\t      } else if (typeof body === 'string') {\n\t        this._bodyText = body\n\t      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n\t        this._bodyBlob = body\n\t      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n\t        this._bodyFormData = body\n\t      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t        this._bodyText = body.toString()\n\t      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n\t        this._bodyArrayBuffer = bufferClone(body.buffer)\n\t        // IE 10-11 can't handle a DataView body.\n\t        this._bodyInit = new Blob([this._bodyArrayBuffer])\n\t      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n\t        this._bodyArrayBuffer = bufferClone(body)\n\t      } else {\n\t        throw new Error('unsupported BodyInit type')\n\t      }\n\t\n\t      if (!this.headers.get('content-type')) {\n\t        if (typeof body === 'string') {\n\t          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n\t        } else if (this._bodyBlob && this._bodyBlob.type) {\n\t          this.headers.set('content-type', this._bodyBlob.type)\n\t        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n\t        }\n\t      }\n\t    }\n\t\n\t    if (support.blob) {\n\t      this.blob = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return Promise.resolve(this._bodyBlob)\n\t        } else if (this._bodyArrayBuffer) {\n\t          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as blob')\n\t        } else {\n\t          return Promise.resolve(new Blob([this._bodyText]))\n\t        }\n\t      }\n\t\n\t      this.arrayBuffer = function() {\n\t        if (this._bodyArrayBuffer) {\n\t          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n\t        } else {\n\t          return this.blob().then(readBlobAsArrayBuffer)\n\t        }\n\t      }\n\t    }\n\t\n\t    this.text = function() {\n\t      var rejected = consumed(this)\n\t      if (rejected) {\n\t        return rejected\n\t      }\n\t\n\t      if (this._bodyBlob) {\n\t        return readBlobAsText(this._bodyBlob)\n\t      } else if (this._bodyArrayBuffer) {\n\t        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n\t      } else if (this._bodyFormData) {\n\t        throw new Error('could not read FormData body as text')\n\t      } else {\n\t        return Promise.resolve(this._bodyText)\n\t      }\n\t    }\n\t\n\t    if (support.formData) {\n\t      this.formData = function() {\n\t        return this.text().then(decode)\n\t      }\n\t    }\n\t\n\t    this.json = function() {\n\t      return this.text().then(JSON.parse)\n\t    }\n\t\n\t    return this\n\t  }\n\t\n\t  // HTTP methods whose capitalization should be normalized\n\t  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\t\n\t  function normalizeMethod(method) {\n\t    var upcased = method.toUpperCase()\n\t    return (methods.indexOf(upcased) > -1) ? upcased : method\n\t  }\n\t\n\t  function Request(input, options) {\n\t    options = options || {}\n\t    var body = options.body\n\t\n\t    if (input instanceof Request) {\n\t      if (input.bodyUsed) {\n\t        throw new TypeError('Already read')\n\t      }\n\t      this.url = input.url\n\t      this.credentials = input.credentials\n\t      if (!options.headers) {\n\t        this.headers = new Headers(input.headers)\n\t      }\n\t      this.method = input.method\n\t      this.mode = input.mode\n\t      if (!body && input._bodyInit != null) {\n\t        body = input._bodyInit\n\t        input.bodyUsed = true\n\t      }\n\t    } else {\n\t      this.url = String(input)\n\t    }\n\t\n\t    this.credentials = options.credentials || this.credentials || 'omit'\n\t    if (options.headers || !this.headers) {\n\t      this.headers = new Headers(options.headers)\n\t    }\n\t    this.method = normalizeMethod(options.method || this.method || 'GET')\n\t    this.mode = options.mode || this.mode || null\n\t    this.referrer = null\n\t\n\t    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n\t      throw new TypeError('Body not allowed for GET or HEAD requests')\n\t    }\n\t    this._initBody(body)\n\t  }\n\t\n\t  Request.prototype.clone = function() {\n\t    return new Request(this, { body: this._bodyInit })\n\t  }\n\t\n\t  function decode(body) {\n\t    var form = new FormData()\n\t    body.trim().split('&').forEach(function(bytes) {\n\t      if (bytes) {\n\t        var split = bytes.split('=')\n\t        var name = split.shift().replace(/\\+/g, ' ')\n\t        var value = split.join('=').replace(/\\+/g, ' ')\n\t        form.append(decodeURIComponent(name), decodeURIComponent(value))\n\t      }\n\t    })\n\t    return form\n\t  }\n\t\n\t  function parseHeaders(rawHeaders) {\n\t    var headers = new Headers()\n\t    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n\t      var parts = line.split(':')\n\t      var key = parts.shift().trim()\n\t      if (key) {\n\t        var value = parts.join(':').trim()\n\t        headers.append(key, value)\n\t      }\n\t    })\n\t    return headers\n\t  }\n\t\n\t  Body.call(Request.prototype)\n\t\n\t  function Response(bodyInit, options) {\n\t    if (!options) {\n\t      options = {}\n\t    }\n\t\n\t    this.type = 'default'\n\t    this.status = 'status' in options ? options.status : 200\n\t    this.ok = this.status >= 200 && this.status < 300\n\t    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n\t    this.headers = new Headers(options.headers)\n\t    this.url = options.url || ''\n\t    this._initBody(bodyInit)\n\t  }\n\t\n\t  Body.call(Response.prototype)\n\t\n\t  Response.prototype.clone = function() {\n\t    return new Response(this._bodyInit, {\n\t      status: this.status,\n\t      statusText: this.statusText,\n\t      headers: new Headers(this.headers),\n\t      url: this.url\n\t    })\n\t  }\n\t\n\t  Response.error = function() {\n\t    var response = new Response(null, {status: 0, statusText: ''})\n\t    response.type = 'error'\n\t    return response\n\t  }\n\t\n\t  var redirectStatuses = [301, 302, 303, 307, 308]\n\t\n\t  Response.redirect = function(url, status) {\n\t    if (redirectStatuses.indexOf(status) === -1) {\n\t      throw new RangeError('Invalid status code')\n\t    }\n\t\n\t    return new Response(null, {status: status, headers: {location: url}})\n\t  }\n\t\n\t  self.Headers = Headers\n\t  self.Request = Request\n\t  self.Response = Response\n\t\n\t  self.fetch = function(input, init) {\n\t    return new Promise(function(resolve, reject) {\n\t      var request = new Request(input, init)\n\t      var xhr = new XMLHttpRequest()\n\t\n\t      xhr.onload = function() {\n\t        var options = {\n\t          status: xhr.status,\n\t          statusText: xhr.statusText,\n\t          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n\t        }\n\t        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n\t        var body = 'response' in xhr ? xhr.response : xhr.responseText\n\t        resolve(new Response(body, options))\n\t      }\n\t\n\t      xhr.onerror = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.ontimeout = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.open(request.method, request.url, true)\n\t\n\t      if (request.credentials === 'include') {\n\t        xhr.withCredentials = true\n\t      }\n\t\n\t      if ('responseType' in xhr && support.blob) {\n\t        xhr.responseType = 'blob'\n\t      }\n\t\n\t      request.headers.forEach(function(value, name) {\n\t        xhr.setRequestHeader(name, value)\n\t      })\n\t\n\t      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n\t    })\n\t  }\n\t  self.fetch.polyfill = true\n\t})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ },\n/* 184 */\n37,\n/* 185 */\n[206, 19],\n/* 186 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar PooledClass = __webpack_require__(185);\n\tvar ReactElement = __webpack_require__(18);\n\t\n\tvar emptyFunction = __webpack_require__(8);\n\tvar traverseAllChildren = __webpack_require__(196);\n\t\n\tvar twoArgumentPooler = PooledClass.twoArgumentPooler;\n\tvar fourArgumentPooler = PooledClass.fourArgumentPooler;\n\t\n\tvar userProvidedKeyEscapeRegex = /\\/+/g;\n\tfunction escapeUserProvidedKey(text) {\n\t  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');\n\t}\n\t\n\t/**\n\t * PooledClass representing the bookkeeping associated with performing a child\n\t * traversal. Allows avoiding binding callbacks.\n\t *\n\t * @constructor ForEachBookKeeping\n\t * @param {!function} forEachFunction Function to perform traversal with.\n\t * @param {?*} forEachContext Context to perform context with.\n\t */\n\tfunction ForEachBookKeeping(forEachFunction, forEachContext) {\n\t  this.func = forEachFunction;\n\t  this.context = forEachContext;\n\t  this.count = 0;\n\t}\n\tForEachBookKeeping.prototype.destructor = function () {\n\t  this.func = null;\n\t  this.context = null;\n\t  this.count = 0;\n\t};\n\tPooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);\n\t\n\tfunction forEachSingleChild(bookKeeping, child, name) {\n\t  var func = bookKeeping.func,\n\t      context = bookKeeping.context;\n\t\n\t  func.call(context, child, bookKeeping.count++);\n\t}\n\t\n\t/**\n\t * Iterates through children that are typically specified as `props.children`.\n\t *\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach\n\t *\n\t * The provided forEachFunc(child, index) will be called for each\n\t * leaf child.\n\t *\n\t * @param {?*} children Children tree container.\n\t * @param {function(*, int)} forEachFunc\n\t * @param {*} forEachContext Context for forEachContext.\n\t */\n\tfunction forEachChildren(children, forEachFunc, forEachContext) {\n\t  if (children == null) {\n\t    return children;\n\t  }\n\t  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);\n\t  traverseAllChildren(children, forEachSingleChild, traverseContext);\n\t  ForEachBookKeeping.release(traverseContext);\n\t}\n\t\n\t/**\n\t * PooledClass representing the bookkeeping associated with performing a child\n\t * mapping. Allows avoiding binding callbacks.\n\t *\n\t * @constructor MapBookKeeping\n\t * @param {!*} mapResult Object containing the ordered map of results.\n\t * @param {!function} mapFunction Function to perform mapping with.\n\t * @param {?*} mapContext Context to perform mapping with.\n\t */\n\tfunction MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {\n\t  this.result = mapResult;\n\t  this.keyPrefix = keyPrefix;\n\t  this.func = mapFunction;\n\t  this.context = mapContext;\n\t  this.count = 0;\n\t}\n\tMapBookKeeping.prototype.destructor = function () {\n\t  this.result = null;\n\t  this.keyPrefix = null;\n\t  this.func = null;\n\t  this.context = null;\n\t  this.count = 0;\n\t};\n\tPooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);\n\t\n\tfunction mapSingleChildIntoContext(bookKeeping, child, childKey) {\n\t  var result = bookKeeping.result,\n\t      keyPrefix = bookKeeping.keyPrefix,\n\t      func = bookKeeping.func,\n\t      context = bookKeeping.context;\n\t\n\t\n\t  var mappedChild = func.call(context, child, bookKeeping.count++);\n\t  if (Array.isArray(mappedChild)) {\n\t    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);\n\t  } else if (mappedChild != null) {\n\t    if (ReactElement.isValidElement(mappedChild)) {\n\t      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,\n\t      // Keep both the (mapped) and old keys if they differ, just as\n\t      // traverseAllChildren used to do for objects as children\n\t      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);\n\t    }\n\t    result.push(mappedChild);\n\t  }\n\t}\n\t\n\tfunction mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {\n\t  var escapedPrefix = '';\n\t  if (prefix != null) {\n\t    escapedPrefix = escapeUserProvidedKey(prefix) + '/';\n\t  }\n\t  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);\n\t  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n\t  MapBookKeeping.release(traverseContext);\n\t}\n\t\n\t/**\n\t * Maps children that are typically specified as `props.children`.\n\t *\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map\n\t *\n\t * The provided mapFunction(child, key, index) will be called for each\n\t * leaf child.\n\t *\n\t * @param {?*} children Children tree container.\n\t * @param {function(*, int)} func The map function.\n\t * @param {*} context Context for mapFunction.\n\t * @return {object} Object containing the ordered map of results.\n\t */\n\tfunction mapChildren(children, func, context) {\n\t  if (children == null) {\n\t    return children;\n\t  }\n\t  var result = [];\n\t  mapIntoWithKeyPrefixInternal(children, result, null, func, context);\n\t  return result;\n\t}\n\t\n\tfunction forEachSingleChildDummy(traverseContext, child, name) {\n\t  return null;\n\t}\n\t\n\t/**\n\t * Count the number of children that are typically specified as\n\t * `props.children`.\n\t *\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count\n\t *\n\t * @param {?*} children Children tree container.\n\t * @return {number} The number of children.\n\t */\n\tfunction countChildren(children, context) {\n\t  return traverseAllChildren(children, forEachSingleChildDummy, null);\n\t}\n\t\n\t/**\n\t * Flatten a children object (typically specified as `props.children`) and\n\t * return an array with appropriately re-keyed children.\n\t *\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray\n\t */\n\tfunction toArray(children) {\n\t  var result = [];\n\t  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);\n\t  return result;\n\t}\n\t\n\tvar ReactChildren = {\n\t  forEach: forEachChildren,\n\t  map: mapChildren,\n\t  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,\n\t  count: countChildren,\n\t  toArray: toArray\n\t};\n\t\n\tmodule.exports = ReactChildren;\n\n/***/ },\n/* 187 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(19),\n\t    _assign = __webpack_require__(4);\n\t\n\tvar ReactComponent = __webpack_require__(49);\n\tvar ReactElement = __webpack_require__(18);\n\tvar ReactPropTypeLocationNames = __webpack_require__(189);\n\tvar ReactNoopUpdateQueue = __webpack_require__(50);\n\t\n\tvar emptyObject = __webpack_require__(22);\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(2);\n\t\n\tvar MIXINS_KEY = 'mixins';\n\t\n\t// Helper function to allow the creation of anonymous functions which do not\n\t// have .name set to the name of the variable being assigned to.\n\tfunction identity(fn) {\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Policies that describe methods in `ReactClassInterface`.\n\t */\n\t\n\t\n\tvar injectedMixins = [];\n\t\n\t/**\n\t * Composite components are higher-level components that compose other composite\n\t * or host components.\n\t *\n\t * To create a new type of `ReactClass`, pass a specification of\n\t * your new class to `React.createClass`. The only requirement of your class\n\t * specification is that you implement a `render` method.\n\t *\n\t *   var MyComponent = React.createClass({\n\t *     render: function() {\n\t *       return <div>Hello World</div>;\n\t *     }\n\t *   });\n\t *\n\t * The class specification supports a specific protocol of methods that have\n\t * special meaning (e.g. `render`). See `ReactClassInterface` for\n\t * more the comprehensive protocol. Any other properties and methods in the\n\t * class specification will be available on the prototype.\n\t *\n\t * @interface ReactClassInterface\n\t * @internal\n\t */\n\tvar ReactClassInterface = {\n\t\n\t  /**\n\t   * An array of Mixin objects to include when defining your component.\n\t   *\n\t   * @type {array}\n\t   * @optional\n\t   */\n\t  mixins: 'DEFINE_MANY',\n\t\n\t  /**\n\t   * An object containing properties and methods that should be defined on\n\t   * the component's constructor instead of its prototype (static methods).\n\t   *\n\t   * @type {object}\n\t   * @optional\n\t   */\n\t  statics: 'DEFINE_MANY',\n\t\n\t  /**\n\t   * Definition of prop types for this component.\n\t   *\n\t   * @type {object}\n\t   * @optional\n\t   */\n\t  propTypes: 'DEFINE_MANY',\n\t\n\t  /**\n\t   * Definition of context types for this component.\n\t   *\n\t   * @type {object}\n\t   * @optional\n\t   */\n\t  contextTypes: 'DEFINE_MANY',\n\t\n\t  /**\n\t   * Definition of context types this component sets for its children.\n\t   *\n\t   * @type {object}\n\t   * @optional\n\t   */\n\t  childContextTypes: 'DEFINE_MANY',\n\t\n\t  // ==== Definition methods ====\n\t\n\t  /**\n\t   * Invoked when the component is mounted. Values in the mapping will be set on\n\t   * `this.props` if that prop is not specified (i.e. using an `in` check).\n\t   *\n\t   * This method is invoked before `getInitialState` and therefore cannot rely\n\t   * on `this.state` or use `this.setState`.\n\t   *\n\t   * @return {object}\n\t   * @optional\n\t   */\n\t  getDefaultProps: 'DEFINE_MANY_MERGED',\n\t\n\t  /**\n\t   * Invoked once before the component is mounted. The return value will be used\n\t   * as the initial value of `this.state`.\n\t   *\n\t   *   getInitialState: function() {\n\t   *     return {\n\t   *       isOn: false,\n\t   *       fooBaz: new BazFoo()\n\t   *     }\n\t   *   }\n\t   *\n\t   * @return {object}\n\t   * @optional\n\t   */\n\t  getInitialState: 'DEFINE_MANY_MERGED',\n\t\n\t  /**\n\t   * @return {object}\n\t   * @optional\n\t   */\n\t  getChildContext: 'DEFINE_MANY_MERGED',\n\t\n\t  /**\n\t   * Uses props from `this.props` and state from `this.state` to render the\n\t   * structure of the component.\n\t   *\n\t   * No guarantees are made about when or how often this method is invoked, so\n\t   * it must not have side effects.\n\t   *\n\t   *   render: function() {\n\t   *     var name = this.props.name;\n\t   *     return <div>Hello, {name}!</div>;\n\t   *   }\n\t   *\n\t   * @return {ReactComponent}\n\t   * @required\n\t   */\n\t  render: 'DEFINE_ONCE',\n\t\n\t  // ==== Delegate methods ====\n\t\n\t  /**\n\t   * Invoked when the component is initially created and about to be mounted.\n\t   * This may have side effects, but any external subscriptions or data created\n\t   * by this method must be cleaned up in `componentWillUnmount`.\n\t   *\n\t   * @optional\n\t   */\n\t  componentWillMount: 'DEFINE_MANY',\n\t\n\t  /**\n\t   * Invoked when the component has been mounted and has a DOM representation.\n\t   * However, there is no guarantee that the DOM node is in the document.\n\t   *\n\t   * Use this as an opportunity to operate on the DOM when the component has\n\t   * been mounted (initialized and rendered) for the first time.\n\t   *\n\t   * @param {DOMElement} rootNode DOM element representing the component.\n\t   * @optional\n\t   */\n\t  componentDidMount: 'DEFINE_MANY',\n\t\n\t  /**\n\t   * Invoked before the component receives new props.\n\t   *\n\t   * Use this as an opportunity to react to a prop transition by updating the\n\t   * state using `this.setState`. Current props are accessed via `this.props`.\n\t   *\n\t   *   componentWillReceiveProps: function(nextProps, nextContext) {\n\t   *     this.setState({\n\t   *       likesIncreasing: nextProps.likeCount > this.props.likeCount\n\t   *     });\n\t   *   }\n\t   *\n\t   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop\n\t   * transition may cause a state change, but the opposite is not true. If you\n\t   * need it, you are probably looking for `componentWillUpdate`.\n\t   *\n\t   * @param {object} nextProps\n\t   * @optional\n\t   */\n\t  componentWillReceiveProps: 'DEFINE_MANY',\n\t\n\t  /**\n\t   * Invoked while deciding if the component should be updated as a result of\n\t   * receiving new props, state and/or context.\n\t   *\n\t   * Use this as an opportunity to `return false` when you're certain that the\n\t   * transition to the new props/state/context will not require a component\n\t   * update.\n\t   *\n\t   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {\n\t   *     return !equal(nextProps, this.props) ||\n\t   *       !equal(nextState, this.state) ||\n\t   *       !equal(nextContext, this.context);\n\t   *   }\n\t   *\n\t   * @param {object} nextProps\n\t   * @param {?object} nextState\n\t   * @param {?object} nextContext\n\t   * @return {boolean} True if the component should update.\n\t   * @optional\n\t   */\n\t  shouldComponentUpdate: 'DEFINE_ONCE',\n\t\n\t  /**\n\t   * Invoked when the component is about to update due to a transition from\n\t   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`\n\t   * and `nextContext`.\n\t   *\n\t   * Use this as an opportunity to perform preparation before an update occurs.\n\t   *\n\t   * NOTE: You **cannot** use `this.setState()` in this method.\n\t   *\n\t   * @param {object} nextProps\n\t   * @param {?object} nextState\n\t   * @param {?object} nextContext\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @optional\n\t   */\n\t  componentWillUpdate: 'DEFINE_MANY',\n\t\n\t  /**\n\t   * Invoked when the component's DOM representation has been updated.\n\t   *\n\t   * Use this as an opportunity to operate on the DOM when the component has\n\t   * been updated.\n\t   *\n\t   * @param {object} prevProps\n\t   * @param {?object} prevState\n\t   * @param {?object} prevContext\n\t   * @param {DOMElement} rootNode DOM element representing the component.\n\t   * @optional\n\t   */\n\t  componentDidUpdate: 'DEFINE_MANY',\n\t\n\t  /**\n\t   * Invoked when the component is about to be removed from its parent and have\n\t   * its DOM representation destroyed.\n\t   *\n\t   * Use this as an opportunity to deallocate any external resources.\n\t   *\n\t   * NOTE: There is no `componentDidUnmount` since your component will have been\n\t   * destroyed by that point.\n\t   *\n\t   * @optional\n\t   */\n\t  componentWillUnmount: 'DEFINE_MANY',\n\t\n\t  // ==== Advanced methods ====\n\t\n\t  /**\n\t   * Updates the component's currently mounted DOM representation.\n\t   *\n\t   * By default, this implements React's rendering and reconciliation algorithm.\n\t   * Sophisticated clients may wish to override this.\n\t   *\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @internal\n\t   * @overridable\n\t   */\n\t  updateComponent: 'OVERRIDE_BASE'\n\t\n\t};\n\t\n\t/**\n\t * Mapping from class specification keys to special processing functions.\n\t *\n\t * Although these are declared like instance properties in the specification\n\t * when defining classes using `React.createClass`, they are actually static\n\t * and are accessible on the constructor instead of the prototype. Despite\n\t * being static, they must be defined outside of the \"statics\" key under\n\t * which all other static methods are defined.\n\t */\n\tvar RESERVED_SPEC_KEYS = {\n\t  displayName: function (Constructor, displayName) {\n\t    Constructor.displayName = displayName;\n\t  },\n\t  mixins: function (Constructor, mixins) {\n\t    if (mixins) {\n\t      for (var i = 0; i < mixins.length; i++) {\n\t        mixSpecIntoComponent(Constructor, mixins[i]);\n\t      }\n\t    }\n\t  },\n\t  childContextTypes: function (Constructor, childContextTypes) {\n\t    if (false) {\n\t      validateTypeDef(Constructor, childContextTypes, 'childContext');\n\t    }\n\t    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);\n\t  },\n\t  contextTypes: function (Constructor, contextTypes) {\n\t    if (false) {\n\t      validateTypeDef(Constructor, contextTypes, 'context');\n\t    }\n\t    Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);\n\t  },\n\t  /**\n\t   * Special case getDefaultProps which should move into statics but requires\n\t   * automatic merging.\n\t   */\n\t  getDefaultProps: function (Constructor, getDefaultProps) {\n\t    if (Constructor.getDefaultProps) {\n\t      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);\n\t    } else {\n\t      Constructor.getDefaultProps = getDefaultProps;\n\t    }\n\t  },\n\t  propTypes: function (Constructor, propTypes) {\n\t    if (false) {\n\t      validateTypeDef(Constructor, propTypes, 'prop');\n\t    }\n\t    Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);\n\t  },\n\t  statics: function (Constructor, statics) {\n\t    mixStaticSpecIntoComponent(Constructor, statics);\n\t  },\n\t  autobind: function () {} };\n\t\n\tfunction validateTypeDef(Constructor, typeDef, location) {\n\t  for (var propName in typeDef) {\n\t    if (typeDef.hasOwnProperty(propName)) {\n\t      // use a warning instead of an invariant so components\n\t      // don't show up in prod but only in __DEV__\n\t       false ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;\n\t    }\n\t  }\n\t}\n\t\n\tfunction validateMethodOverride(isAlreadyDefined, name) {\n\t  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;\n\t\n\t  // Disallow overriding of base class methods unless explicitly allowed.\n\t  if (ReactClassMixin.hasOwnProperty(name)) {\n\t    !(specPolicy === 'OVERRIDE_BASE') ?  false ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;\n\t  }\n\t\n\t  // Disallow defining methods more than once unless explicitly allowed.\n\t  if (isAlreadyDefined) {\n\t    !(specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED') ?  false ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;\n\t  }\n\t}\n\t\n\t/**\n\t * Mixin helper which handles policy validation and reserved\n\t * specification keys when building React classes.\n\t */\n\tfunction mixSpecIntoComponent(Constructor, spec) {\n\t  if (!spec) {\n\t    if (false) {\n\t      var typeofSpec = typeof spec;\n\t      var isMixinValid = typeofSpec === 'object' && spec !== null;\n\t\n\t      process.env.NODE_ENV !== 'production' ? warning(isMixinValid, '%s: You\\'re attempting to include a mixin that is either null ' + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec) : void 0;\n\t    }\n\t\n\t    return;\n\t  }\n\t\n\t  !(typeof spec !== 'function') ?  false ? invariant(false, 'ReactClass: You\\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;\n\t  !!ReactElement.isValidElement(spec) ?  false ? invariant(false, 'ReactClass: You\\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;\n\t\n\t  var proto = Constructor.prototype;\n\t  var autoBindPairs = proto.__reactAutoBindPairs;\n\t\n\t  // By handling mixins before any other properties, we ensure the same\n\t  // chaining order is applied to methods with DEFINE_MANY policy, whether\n\t  // mixins are listed before or after these methods in the spec.\n\t  if (spec.hasOwnProperty(MIXINS_KEY)) {\n\t    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);\n\t  }\n\t\n\t  for (var name in spec) {\n\t    if (!spec.hasOwnProperty(name)) {\n\t      continue;\n\t    }\n\t\n\t    if (name === MIXINS_KEY) {\n\t      // We have already handled mixins in a special case above.\n\t      continue;\n\t    }\n\t\n\t    var property = spec[name];\n\t    var isAlreadyDefined = proto.hasOwnProperty(name);\n\t    validateMethodOverride(isAlreadyDefined, name);\n\t\n\t    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {\n\t      RESERVED_SPEC_KEYS[name](Constructor, property);\n\t    } else {\n\t      // Setup methods on prototype:\n\t      // The following member methods should not be automatically bound:\n\t      // 1. Expected ReactClass methods (in the \"interface\").\n\t      // 2. Overridden methods (that were mixed in).\n\t      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);\n\t      var isFunction = typeof property === 'function';\n\t      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;\n\t\n\t      if (shouldAutoBind) {\n\t        autoBindPairs.push(name, property);\n\t        proto[name] = property;\n\t      } else {\n\t        if (isAlreadyDefined) {\n\t          var specPolicy = ReactClassInterface[name];\n\t\n\t          // These cases should already be caught by validateMethodOverride.\n\t          !(isReactClassMethod && (specPolicy === 'DEFINE_MANY_MERGED' || specPolicy === 'DEFINE_MANY')) ?  false ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;\n\t\n\t          // For methods which are defined more than once, call the existing\n\t          // methods before calling the new property, merging if appropriate.\n\t          if (specPolicy === 'DEFINE_MANY_MERGED') {\n\t            proto[name] = createMergedResultFunction(proto[name], property);\n\t          } else if (specPolicy === 'DEFINE_MANY') {\n\t            proto[name] = createChainedFunction(proto[name], property);\n\t          }\n\t        } else {\n\t          proto[name] = property;\n\t          if (false) {\n\t            // Add verbose displayName to the function, which helps when looking\n\t            // at profiling tools.\n\t            if (typeof property === 'function' && spec.displayName) {\n\t              proto[name].displayName = spec.displayName + '_' + name;\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tfunction mixStaticSpecIntoComponent(Constructor, statics) {\n\t  if (!statics) {\n\t    return;\n\t  }\n\t  for (var name in statics) {\n\t    var property = statics[name];\n\t    if (!statics.hasOwnProperty(name)) {\n\t      continue;\n\t    }\n\t\n\t    var isReserved = name in RESERVED_SPEC_KEYS;\n\t    !!isReserved ?  false ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\\'t be on the \"statics\" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;\n\t\n\t    var isInherited = name in Constructor;\n\t    !!isInherited ?  false ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;\n\t    Constructor[name] = property;\n\t  }\n\t}\n\t\n\t/**\n\t * Merge two objects, but throw if both contain the same key.\n\t *\n\t * @param {object} one The first object, which is mutated.\n\t * @param {object} two The second object\n\t * @return {object} one after it has been mutated to contain everything in two.\n\t */\n\tfunction mergeIntoWithNoDuplicateKeys(one, two) {\n\t  !(one && two && typeof one === 'object' && typeof two === 'object') ?  false ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;\n\t\n\t  for (var key in two) {\n\t    if (two.hasOwnProperty(key)) {\n\t      !(one[key] === undefined) ?  false ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;\n\t      one[key] = two[key];\n\t    }\n\t  }\n\t  return one;\n\t}\n\t\n\t/**\n\t * Creates a function that invokes two functions and merges their return values.\n\t *\n\t * @param {function} one Function to invoke first.\n\t * @param {function} two Function to invoke second.\n\t * @return {function} Function that invokes the two argument functions.\n\t * @private\n\t */\n\tfunction createMergedResultFunction(one, two) {\n\t  return function mergedResult() {\n\t    var a = one.apply(this, arguments);\n\t    var b = two.apply(this, arguments);\n\t    if (a == null) {\n\t      return b;\n\t    } else if (b == null) {\n\t      return a;\n\t    }\n\t    var c = {};\n\t    mergeIntoWithNoDuplicateKeys(c, a);\n\t    mergeIntoWithNoDuplicateKeys(c, b);\n\t    return c;\n\t  };\n\t}\n\t\n\t/**\n\t * Creates a function that invokes two functions and ignores their return vales.\n\t *\n\t * @param {function} one Function to invoke first.\n\t * @param {function} two Function to invoke second.\n\t * @return {function} Function that invokes the two argument functions.\n\t * @private\n\t */\n\tfunction createChainedFunction(one, two) {\n\t  return function chainedFunction() {\n\t    one.apply(this, arguments);\n\t    two.apply(this, arguments);\n\t  };\n\t}\n\t\n\t/**\n\t * Binds a method to the component.\n\t *\n\t * @param {object} component Component whose method is going to be bound.\n\t * @param {function} method Method to be bound.\n\t * @return {function} The bound method.\n\t */\n\tfunction bindAutoBindMethod(component, method) {\n\t  var boundMethod = method.bind(component);\n\t  if (false) {\n\t    boundMethod.__reactBoundContext = component;\n\t    boundMethod.__reactBoundMethod = method;\n\t    boundMethod.__reactBoundArguments = null;\n\t    var componentName = component.constructor.displayName;\n\t    var _bind = boundMethod.bind;\n\t    boundMethod.bind = function (newThis) {\n\t      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t        args[_key - 1] = arguments[_key];\n\t      }\n\t\n\t      // User is trying to bind() an autobound method; we effectively will\n\t      // ignore the value of \"this\" that the user is trying to use, so\n\t      // let's warn.\n\t      if (newThis !== component && newThis !== null) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;\n\t      } else if (!args.length) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;\n\t        return boundMethod;\n\t      }\n\t      var reboundMethod = _bind.apply(boundMethod, arguments);\n\t      reboundMethod.__reactBoundContext = component;\n\t      reboundMethod.__reactBoundMethod = method;\n\t      reboundMethod.__reactBoundArguments = args;\n\t      return reboundMethod;\n\t    };\n\t  }\n\t  return boundMethod;\n\t}\n\t\n\t/**\n\t * Binds all auto-bound methods in a component.\n\t *\n\t * @param {object} component Component whose method is going to be bound.\n\t */\n\tfunction bindAutoBindMethods(component) {\n\t  var pairs = component.__reactAutoBindPairs;\n\t  for (var i = 0; i < pairs.length; i += 2) {\n\t    var autoBindKey = pairs[i];\n\t    var method = pairs[i + 1];\n\t    component[autoBindKey] = bindAutoBindMethod(component, method);\n\t  }\n\t}\n\t\n\t/**\n\t * Add more to the ReactClass base class. These are all legacy features and\n\t * therefore not already part of the modern ReactComponent.\n\t */\n\tvar ReactClassMixin = {\n\t\n\t  /**\n\t   * TODO: This will be deprecated because state should always keep a consistent\n\t   * type signature and the only use case for this, is to avoid that.\n\t   */\n\t  replaceState: function (newState, callback) {\n\t    this.updater.enqueueReplaceState(this, newState);\n\t    if (callback) {\n\t      this.updater.enqueueCallback(this, callback, 'replaceState');\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Checks whether or not this composite component is mounted.\n\t   * @return {boolean} True if mounted, false otherwise.\n\t   * @protected\n\t   * @final\n\t   */\n\t  isMounted: function () {\n\t    return this.updater.isMounted(this);\n\t  }\n\t};\n\t\n\tvar ReactClassComponent = function () {};\n\t_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);\n\t\n\tvar didWarnDeprecated = false;\n\t\n\t/**\n\t * Module for creating composite components.\n\t *\n\t * @class ReactClass\n\t */\n\tvar ReactClass = {\n\t\n\t  /**\n\t   * Creates a composite component class given a class specification.\n\t   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass\n\t   *\n\t   * @param {object} spec Class specification (which must define `render`).\n\t   * @return {function} Component constructor function.\n\t   * @public\n\t   */\n\t  createClass: function (spec) {\n\t    if (false) {\n\t      process.env.NODE_ENV !== 'production' ? warning(didWarnDeprecated, '%s: React.createClass is deprecated and will be removed in version 16. ' + 'Use plain JavaScript classes instead. If you\\'re not yet ready to ' + 'migrate, create-react-class is available on npm as a ' + 'drop-in replacement.', spec && spec.displayName || 'A Component') : void 0;\n\t      didWarnDeprecated = true;\n\t    }\n\t\n\t    // To keep our warnings more understandable, we'll use a little hack here to\n\t    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't\n\t    // unnecessarily identify a class without displayName as 'Constructor'.\n\t    var Constructor = identity(function (props, context, updater) {\n\t      // This constructor gets overridden by mocks. The argument is used\n\t      // by mocks to assert on what gets mounted.\n\t\n\t      if (false) {\n\t        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;\n\t      }\n\t\n\t      // Wire up auto-binding\n\t      if (this.__reactAutoBindPairs.length) {\n\t        bindAutoBindMethods(this);\n\t      }\n\t\n\t      this.props = props;\n\t      this.context = context;\n\t      this.refs = emptyObject;\n\t      this.updater = updater || ReactNoopUpdateQueue;\n\t\n\t      this.state = null;\n\t\n\t      // ReactClasses doesn't have constructors. Instead, they use the\n\t      // getInitialState and componentWillMount methods for initialization.\n\t\n\t      var initialState = this.getInitialState ? this.getInitialState() : null;\n\t      if (false) {\n\t        // We allow auto-mocks to proceed as if they're returning null.\n\t        if (initialState === undefined && this.getInitialState._isMockFunction) {\n\t          // This is probably bad practice. Consider warning here and\n\t          // deprecating this convenience.\n\t          initialState = null;\n\t        }\n\t      }\n\t      !(typeof initialState === 'object' && !Array.isArray(initialState)) ?  false ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;\n\t\n\t      this.state = initialState;\n\t    });\n\t    Constructor.prototype = new ReactClassComponent();\n\t    Constructor.prototype.constructor = Constructor;\n\t    Constructor.prototype.__reactAutoBindPairs = [];\n\t\n\t    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));\n\t\n\t    mixSpecIntoComponent(Constructor, spec);\n\t\n\t    // Initialize the defaultProps property after all mixins have been merged.\n\t    if (Constructor.getDefaultProps) {\n\t      Constructor.defaultProps = Constructor.getDefaultProps();\n\t    }\n\t\n\t    if (false) {\n\t      // This is a tag to indicate that the use of these method names is ok,\n\t      // since it's used with createClass. If it's not, then it's likely a\n\t      // mistake so we'll warn you to use the static property, property\n\t      // initializer or constructor respectively.\n\t      if (Constructor.getDefaultProps) {\n\t        Constructor.getDefaultProps.isReactClassApproved = {};\n\t      }\n\t      if (Constructor.prototype.getInitialState) {\n\t        Constructor.prototype.getInitialState.isReactClassApproved = {};\n\t      }\n\t    }\n\t\n\t    !Constructor.prototype.render ?  false ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;\n\t\n\t    if (false) {\n\t      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;\n\t      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;\n\t    }\n\t\n\t    // Reduce time spent doing lookups by setting these on the prototype.\n\t    for (var methodName in ReactClassInterface) {\n\t      if (!Constructor.prototype[methodName]) {\n\t        Constructor.prototype[methodName] = null;\n\t      }\n\t    }\n\t\n\t    return Constructor;\n\t  },\n\t\n\t  injection: {\n\t    injectMixin: function (mixin) {\n\t      injectedMixins.push(mixin);\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactClass;\n\n/***/ },\n/* 188 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactElement = __webpack_require__(18);\n\t\n\t/**\n\t * Create a factory that creates HTML tag elements.\n\t *\n\t * @private\n\t */\n\tvar createDOMFactory = ReactElement.createFactory;\n\tif (false) {\n\t  var ReactElementValidator = require('./ReactElementValidator');\n\t  createDOMFactory = ReactElementValidator.createFactory;\n\t}\n\t\n\t/**\n\t * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.\n\t * This is also accessible via `React.DOM`.\n\t *\n\t * @public\n\t */\n\tvar ReactDOMFactories = {\n\t  a: createDOMFactory('a'),\n\t  abbr: createDOMFactory('abbr'),\n\t  address: createDOMFactory('address'),\n\t  area: createDOMFactory('area'),\n\t  article: createDOMFactory('article'),\n\t  aside: createDOMFactory('aside'),\n\t  audio: createDOMFactory('audio'),\n\t  b: createDOMFactory('b'),\n\t  base: createDOMFactory('base'),\n\t  bdi: createDOMFactory('bdi'),\n\t  bdo: createDOMFactory('bdo'),\n\t  big: createDOMFactory('big'),\n\t  blockquote: createDOMFactory('blockquote'),\n\t  body: createDOMFactory('body'),\n\t  br: createDOMFactory('br'),\n\t  button: createDOMFactory('button'),\n\t  canvas: createDOMFactory('canvas'),\n\t  caption: createDOMFactory('caption'),\n\t  cite: createDOMFactory('cite'),\n\t  code: createDOMFactory('code'),\n\t  col: createDOMFactory('col'),\n\t  colgroup: createDOMFactory('colgroup'),\n\t  data: createDOMFactory('data'),\n\t  datalist: createDOMFactory('datalist'),\n\t  dd: createDOMFactory('dd'),\n\t  del: createDOMFactory('del'),\n\t  details: createDOMFactory('details'),\n\t  dfn: createDOMFactory('dfn'),\n\t  dialog: createDOMFactory('dialog'),\n\t  div: createDOMFactory('div'),\n\t  dl: createDOMFactory('dl'),\n\t  dt: createDOMFactory('dt'),\n\t  em: createDOMFactory('em'),\n\t  embed: createDOMFactory('embed'),\n\t  fieldset: createDOMFactory('fieldset'),\n\t  figcaption: createDOMFactory('figcaption'),\n\t  figure: createDOMFactory('figure'),\n\t  footer: createDOMFactory('footer'),\n\t  form: createDOMFactory('form'),\n\t  h1: createDOMFactory('h1'),\n\t  h2: createDOMFactory('h2'),\n\t  h3: createDOMFactory('h3'),\n\t  h4: createDOMFactory('h4'),\n\t  h5: createDOMFactory('h5'),\n\t  h6: createDOMFactory('h6'),\n\t  head: createDOMFactory('head'),\n\t  header: createDOMFactory('header'),\n\t  hgroup: createDOMFactory('hgroup'),\n\t  hr: createDOMFactory('hr'),\n\t  html: createDOMFactory('html'),\n\t  i: createDOMFactory('i'),\n\t  iframe: createDOMFactory('iframe'),\n\t  img: createDOMFactory('img'),\n\t  input: createDOMFactory('input'),\n\t  ins: createDOMFactory('ins'),\n\t  kbd: createDOMFactory('kbd'),\n\t  keygen: createDOMFactory('keygen'),\n\t  label: createDOMFactory('label'),\n\t  legend: createDOMFactory('legend'),\n\t  li: createDOMFactory('li'),\n\t  link: createDOMFactory('link'),\n\t  main: createDOMFactory('main'),\n\t  map: createDOMFactory('map'),\n\t  mark: createDOMFactory('mark'),\n\t  menu: createDOMFactory('menu'),\n\t  menuitem: createDOMFactory('menuitem'),\n\t  meta: createDOMFactory('meta'),\n\t  meter: createDOMFactory('meter'),\n\t  nav: createDOMFactory('nav'),\n\t  noscript: createDOMFactory('noscript'),\n\t  object: createDOMFactory('object'),\n\t  ol: createDOMFactory('ol'),\n\t  optgroup: createDOMFactory('optgroup'),\n\t  option: createDOMFactory('option'),\n\t  output: createDOMFactory('output'),\n\t  p: createDOMFactory('p'),\n\t  param: createDOMFactory('param'),\n\t  picture: createDOMFactory('picture'),\n\t  pre: createDOMFactory('pre'),\n\t  progress: createDOMFactory('progress'),\n\t  q: createDOMFactory('q'),\n\t  rp: createDOMFactory('rp'),\n\t  rt: createDOMFactory('rt'),\n\t  ruby: createDOMFactory('ruby'),\n\t  s: createDOMFactory('s'),\n\t  samp: createDOMFactory('samp'),\n\t  script: createDOMFactory('script'),\n\t  section: createDOMFactory('section'),\n\t  select: createDOMFactory('select'),\n\t  small: createDOMFactory('small'),\n\t  source: createDOMFactory('source'),\n\t  span: createDOMFactory('span'),\n\t  strong: createDOMFactory('strong'),\n\t  style: createDOMFactory('style'),\n\t  sub: createDOMFactory('sub'),\n\t  summary: createDOMFactory('summary'),\n\t  sup: createDOMFactory('sup'),\n\t  table: createDOMFactory('table'),\n\t  tbody: createDOMFactory('tbody'),\n\t  td: createDOMFactory('td'),\n\t  textarea: createDOMFactory('textarea'),\n\t  tfoot: createDOMFactory('tfoot'),\n\t  th: createDOMFactory('th'),\n\t  thead: createDOMFactory('thead'),\n\t  time: createDOMFactory('time'),\n\t  title: createDOMFactory('title'),\n\t  tr: createDOMFactory('tr'),\n\t  track: createDOMFactory('track'),\n\t  u: createDOMFactory('u'),\n\t  ul: createDOMFactory('ul'),\n\t  'var': createDOMFactory('var'),\n\t  video: createDOMFactory('video'),\n\t  wbr: createDOMFactory('wbr'),\n\t\n\t  // SVG\n\t  circle: createDOMFactory('circle'),\n\t  clipPath: createDOMFactory('clipPath'),\n\t  defs: createDOMFactory('defs'),\n\t  ellipse: createDOMFactory('ellipse'),\n\t  g: createDOMFactory('g'),\n\t  image: createDOMFactory('image'),\n\t  line: createDOMFactory('line'),\n\t  linearGradient: createDOMFactory('linearGradient'),\n\t  mask: createDOMFactory('mask'),\n\t  path: createDOMFactory('path'),\n\t  pattern: createDOMFactory('pattern'),\n\t  polygon: createDOMFactory('polygon'),\n\t  polyline: createDOMFactory('polyline'),\n\t  radialGradient: createDOMFactory('radialGradient'),\n\t  rect: createDOMFactory('rect'),\n\t  stop: createDOMFactory('stop'),\n\t  svg: createDOMFactory('svg'),\n\t  text: createDOMFactory('text'),\n\t  tspan: createDOMFactory('tspan')\n\t};\n\t\n\tmodule.exports = ReactDOMFactories;\n\n/***/ },\n/* 189 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactPropTypeLocationNames = {};\n\t\n\tif (false) {\n\t  ReactPropTypeLocationNames = {\n\t    prop: 'prop',\n\t    context: 'context',\n\t    childContext: 'child context'\n\t  };\n\t}\n\t\n\tmodule.exports = ReactPropTypeLocationNames;\n\n/***/ },\n/* 190 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _require = __webpack_require__(18),\n\t    isValidElement = _require.isValidElement;\n\t\n\tvar factory = __webpack_require__(61);\n\t\n\tmodule.exports = factory(isValidElement);\n\n/***/ },\n/* 191 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(4);\n\t\n\tvar ReactComponent = __webpack_require__(49);\n\tvar ReactNoopUpdateQueue = __webpack_require__(50);\n\t\n\tvar emptyObject = __webpack_require__(22);\n\t\n\t/**\n\t * Base class helpers for the updating state of a component.\n\t */\n\tfunction ReactPureComponent(props, context, updater) {\n\t  // Duplicated from ReactComponent.\n\t  this.props = props;\n\t  this.context = context;\n\t  this.refs = emptyObject;\n\t  // We initialize the default updater but the real one gets injected by the\n\t  // renderer.\n\t  this.updater = updater || ReactNoopUpdateQueue;\n\t}\n\t\n\tfunction ComponentDummy() {}\n\tComponentDummy.prototype = ReactComponent.prototype;\n\tReactPureComponent.prototype = new ComponentDummy();\n\tReactPureComponent.prototype.constructor = ReactPureComponent;\n\t// Avoid an extra prototype jump for these methods.\n\t_assign(ReactPureComponent.prototype, ReactComponent.prototype);\n\tReactPureComponent.prototype.isPureReactComponent = true;\n\t\n\tmodule.exports = ReactPureComponent;\n\n/***/ },\n/* 192 */\n158,\n/* 193 */\n177,\n/* 194 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar nextDebugID = 1;\n\t\n\tfunction getNextDebugID() {\n\t  return nextDebugID++;\n\t}\n\t\n\tmodule.exports = getNextDebugID;\n\n/***/ },\n/* 195 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(19);\n\t\n\tvar ReactElement = __webpack_require__(18);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Returns the first child in a collection of children and verifies that there\n\t * is only one child in the collection.\n\t *\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only\n\t *\n\t * The current implementation of this function assumes that a single child gets\n\t * passed without a wrapper, but the purpose of this helper function is to\n\t * abstract away the particular structure of children.\n\t *\n\t * @param {?object} children Child collection structure.\n\t * @return {ReactElement} The first and only `ReactElement` contained in the\n\t * structure.\n\t */\n\tfunction onlyChild(children) {\n\t  !ReactElement.isValidElement(children) ?  false ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;\n\t  return children;\n\t}\n\t\n\tmodule.exports = onlyChild;\n\n/***/ },\n/* 196 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(19);\n\t\n\tvar ReactCurrentOwner = __webpack_require__(12);\n\tvar REACT_ELEMENT_TYPE = __webpack_require__(83);\n\t\n\tvar getIteratorFn = __webpack_require__(193);\n\tvar invariant = __webpack_require__(1);\n\tvar KeyEscapeUtils = __webpack_require__(184);\n\tvar warning = __webpack_require__(2);\n\t\n\tvar SEPARATOR = '.';\n\tvar SUBSEPARATOR = ':';\n\t\n\t/**\n\t * This is inlined from ReactElement since this file is shared between\n\t * isomorphic and renderers. We could extract this to a\n\t *\n\t */\n\t\n\t/**\n\t * TODO: Test that a single child and an array with one item have the same key\n\t * pattern.\n\t */\n\t\n\tvar didWarnAboutMaps = false;\n\t\n\t/**\n\t * Generate a key string that identifies a component within a set.\n\t *\n\t * @param {*} component A component that could contain a manual key.\n\t * @param {number} index Index that is used if a manual key is not provided.\n\t * @return {string}\n\t */\n\tfunction getComponentKey(component, index) {\n\t  // Do some typechecking here since we call this blindly. We want to ensure\n\t  // that we don't block potential future ES APIs.\n\t  if (component && typeof component === 'object' && component.key != null) {\n\t    // Explicit key\n\t    return KeyEscapeUtils.escape(component.key);\n\t  }\n\t  // Implicit key determined by the index in the set\n\t  return index.toString(36);\n\t}\n\t\n\t/**\n\t * @param {?*} children Children tree container.\n\t * @param {!string} nameSoFar Name of the key path so far.\n\t * @param {!function} callback Callback to invoke with each child found.\n\t * @param {?*} traverseContext Used to pass information throughout the traversal\n\t * process.\n\t * @return {!number} The number of children in this subtree.\n\t */\n\tfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n\t  var type = typeof children;\n\t\n\t  if (type === 'undefined' || type === 'boolean') {\n\t    // All of the above are perceived as null.\n\t    children = null;\n\t  }\n\t\n\t  if (children === null || type === 'string' || type === 'number' ||\n\t  // The following is inlined from ReactElement. This means we can optimize\n\t  // some checks. React Fiber also inlines this logic for similar purposes.\n\t  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {\n\t    callback(traverseContext, children,\n\t    // If it's the only child, treat the name as if it was wrapped in an array\n\t    // so that it's consistent if the number of children grows.\n\t    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n\t    return 1;\n\t  }\n\t\n\t  var child;\n\t  var nextName;\n\t  var subtreeCount = 0; // Count of children found in the current subtree.\n\t  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\t\n\t  if (Array.isArray(children)) {\n\t    for (var i = 0; i < children.length; i++) {\n\t      child = children[i];\n\t      nextName = nextNamePrefix + getComponentKey(child, i);\n\t      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n\t    }\n\t  } else {\n\t    var iteratorFn = getIteratorFn(children);\n\t    if (iteratorFn) {\n\t      var iterator = iteratorFn.call(children);\n\t      var step;\n\t      if (iteratorFn !== children.entries) {\n\t        var ii = 0;\n\t        while (!(step = iterator.next()).done) {\n\t          child = step.value;\n\t          nextName = nextNamePrefix + getComponentKey(child, ii++);\n\t          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n\t        }\n\t      } else {\n\t        if (false) {\n\t          var mapsAsChildrenAddendum = '';\n\t          if (ReactCurrentOwner.current) {\n\t            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();\n\t            if (mapsAsChildrenOwnerName) {\n\t              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';\n\t            }\n\t          }\n\t          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;\n\t          didWarnAboutMaps = true;\n\t        }\n\t        // Iterator will provide entry [k,v] tuples rather than values.\n\t        while (!(step = iterator.next()).done) {\n\t          var entry = step.value;\n\t          if (entry) {\n\t            child = entry[1];\n\t            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);\n\t            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n\t          }\n\t        }\n\t      }\n\t    } else if (type === 'object') {\n\t      var addendum = '';\n\t      if (false) {\n\t        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';\n\t        if (children._isReactElement) {\n\t          addendum = ' It looks like you\\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';\n\t        }\n\t        if (ReactCurrentOwner.current) {\n\t          var name = ReactCurrentOwner.current.getName();\n\t          if (name) {\n\t            addendum += ' Check the render method of `' + name + '`.';\n\t          }\n\t        }\n\t      }\n\t      var childrenString = String(children);\n\t       true ?  false ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;\n\t    }\n\t  }\n\t\n\t  return subtreeCount;\n\t}\n\t\n\t/**\n\t * Traverses children that are typically specified as `props.children`, but\n\t * might also be specified through attributes:\n\t *\n\t * - `traverseAllChildren(this.props.children, ...)`\n\t * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n\t *\n\t * The `traverseContext` is an optional argument that is passed through the\n\t * entire traversal. It can be used to store accumulations or anything else that\n\t * the callback might find relevant.\n\t *\n\t * @param {?*} children Children tree object.\n\t * @param {!function} callback To invoke upon traversing each child.\n\t * @param {?*} traverseContext Context for traversal.\n\t * @return {!number} The number of children in this subtree.\n\t */\n\tfunction traverseAllChildren(children, callback, traverseContext) {\n\t  if (children == null) {\n\t    return 0;\n\t  }\n\t\n\t  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n\t}\n\t\n\tmodule.exports = traverseAllChildren;\n\n/***/ },\n/* 197 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// A library of seedable RNGs implemented in Javascript.\n\t//\n\t// Usage:\n\t//\n\t// var seedrandom = require('seedrandom');\n\t// var random = seedrandom(1); // or any seed.\n\t// var x = random();       // 0 <= x < 1.  Every bit is random.\n\t// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n\t\n\t// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n\t// Period: ~2^116\n\t// Reported to pass all BigCrush tests.\n\tvar alea = __webpack_require__(198);\n\t\n\t// xor128, a pure xor-shift generator by George Marsaglia.\n\t// Period: 2^128-1.\n\t// Reported to fail: MatrixRank and LinearComp.\n\tvar xor128 = __webpack_require__(200);\n\t\n\t// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n\t// Period: 2^192-2^32\n\t// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\n\tvar xorwow = __webpack_require__(203);\n\t\n\t// xorshift7, by François Panneton and Pierre L'ecuyer, takes\n\t// a different approach: it adds robustness by allowing more shifts\n\t// than Marsaglia's original three.  It is a 7-shift generator\n\t// with 256 bits, that passes BigCrush with no systmatic failures.\n\t// Period 2^256-1.\n\t// No systematic BigCrush failures reported.\n\tvar xorshift7 = __webpack_require__(202);\n\t\n\t// xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n\t// very long period that also adds a Weyl generator. It also passes\n\t// BigCrush with no systematic failures.  Its long period may\n\t// be useful if you have many generators and need to avoid\n\t// collisions.\n\t// Period: 2^4128-2^32.\n\t// No systematic BigCrush failures reported.\n\tvar xor4096 = __webpack_require__(201);\n\t\n\t// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n\t// number generator derived from ChaCha, a modern stream cipher.\n\t// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\t// Period: ~2^127\n\t// No systematic BigCrush failures reported.\n\tvar tychei = __webpack_require__(199);\n\t\n\t// The original ARC4-based prng included in this library.\n\t// Period: ~2^1600\n\tvar sr = __webpack_require__(204);\n\t\n\tsr.alea = alea;\n\tsr.xor128 = xor128;\n\tsr.xorwow = xorwow;\n\tsr.xorshift7 = xorshift7;\n\tsr.xor4096 = xor4096;\n\tsr.tychei = tychei;\n\t\n\tmodule.exports = sr;\n\n\n/***/ },\n/* 198 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n\t// http://baagoe.com/en/RandomMusings/javascript/\n\t// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n\t// Original work is under MIT license -\n\t\n\t// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a copy\n\t// of this software and associated documentation files (the \"Software\"), to deal\n\t// in the Software without restriction, including without limitation the rights\n\t// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t// copies of the Software, and to permit persons to whom the Software is\n\t// furnished to do so, subject to the following conditions:\n\t// \n\t// The above copyright notice and this permission notice shall be included in\n\t// all copies or substantial portions of the Software.\n\t// \n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t// THE SOFTWARE.\n\t\n\t\n\t\n\t(function(global, module, define) {\n\t\n\tfunction Alea(seed) {\n\t  var me = this, mash = Mash();\n\t\n\t  me.next = function() {\n\t    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n\t    me.s0 = me.s1;\n\t    me.s1 = me.s2;\n\t    return me.s2 = t - (me.c = t | 0);\n\t  };\n\t\n\t  // Apply the seeding algorithm from Baagoe.\n\t  me.c = 1;\n\t  me.s0 = mash(' ');\n\t  me.s1 = mash(' ');\n\t  me.s2 = mash(' ');\n\t  me.s0 -= mash(seed);\n\t  if (me.s0 < 0) { me.s0 += 1; }\n\t  me.s1 -= mash(seed);\n\t  if (me.s1 < 0) { me.s1 += 1; }\n\t  me.s2 -= mash(seed);\n\t  if (me.s2 < 0) { me.s2 += 1; }\n\t  mash = null;\n\t}\n\t\n\tfunction copy(f, t) {\n\t  t.c = f.c;\n\t  t.s0 = f.s0;\n\t  t.s1 = f.s1;\n\t  t.s2 = f.s2;\n\t  return t;\n\t}\n\t\n\tfunction impl(seed, opts) {\n\t  var xg = new Alea(seed),\n\t      state = opts && opts.state,\n\t      prng = xg.next;\n\t  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }\n\t  prng.double = function() {\n\t    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n\t  };\n\t  prng.quick = prng;\n\t  if (state) {\n\t    if (typeof(state) == 'object') copy(state, xg);\n\t    prng.state = function() { return copy(xg, {}); }\n\t  }\n\t  return prng;\n\t}\n\t\n\tfunction Mash() {\n\t  var n = 0xefc8249d;\n\t\n\t  var mash = function(data) {\n\t    data = data.toString();\n\t    for (var i = 0; i < data.length; i++) {\n\t      n += data.charCodeAt(i);\n\t      var h = 0.02519603282416938 * n;\n\t      n = h >>> 0;\n\t      h -= n;\n\t      h *= n;\n\t      n = h >>> 0;\n\t      h -= n;\n\t      n += h * 0x100000000; // 2^32\n\t    }\n\t    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n\t  };\n\t\n\t  return mash;\n\t}\n\t\n\t\n\tif (module && module.exports) {\n\t  module.exports = impl;\n\t} else if (__webpack_require__(7) && __webpack_require__(20)) {\n\t  !(__WEBPACK_AMD_DEFINE_RESULT__ = function() { return impl; }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else {\n\t  this.alea = impl;\n\t}\n\t\n\t})(\n\t  this,\n\t  (typeof module) == 'object' && module,    // present in node.js\n\t  __webpack_require__(7)   // present with an AMD loader\n\t);\n\t\n\t\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(21)(module)))\n\n/***/ },\n/* 199 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n\t// Samuel Neves and Filipe Araujo.\n\t// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\t\n\t(function(global, module, define) {\n\t\n\tfunction XorGen(seed) {\n\t  var me = this, strseed = '';\n\t\n\t  // Set up generator function.\n\t  me.next = function() {\n\t    var b = me.b, c = me.c, d = me.d, a = me.a;\n\t    b = (b << 25) ^ (b >>> 7) ^ c;\n\t    c = (c - d) | 0;\n\t    d = (d << 24) ^ (d >>> 8) ^ a;\n\t    a = (a - b) | 0;\n\t    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\n\t    me.c = c = (c - d) | 0;\n\t    me.d = (d << 16) ^ (c >>> 16) ^ a;\n\t    return me.a = (a - b) | 0;\n\t  };\n\t\n\t  /* The following is non-inverted tyche, which has better internal\n\t   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n\t  me.next = function() {\n\t    var a = me.a, b = me.b, c = me.c, d = me.d;\n\t    a = (me.a + me.b | 0) >>> 0;\n\t    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n\t    c = me.c + d | 0;\n\t    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n\t    me.a = a = a + b | 0;\n\t    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n\t    me.c = c = c + d | 0;\n\t    b = b ^ c;\n\t    return me.b = (b << 7 ^ b >>> 25);\n\t  }\n\t  */\n\t\n\t  me.a = 0;\n\t  me.b = 0;\n\t  me.c = 2654435769 | 0;\n\t  me.d = 1367130551;\n\t\n\t  if (seed === Math.floor(seed)) {\n\t    // Integer seed.\n\t    me.a = (seed / 0x100000000) | 0;\n\t    me.b = seed | 0;\n\t  } else {\n\t    // String seed.\n\t    strseed += seed;\n\t  }\n\t\n\t  // Mix in string seed, then discard an initial batch of 64 values.\n\t  for (var k = 0; k < strseed.length + 20; k++) {\n\t    me.b ^= strseed.charCodeAt(k) | 0;\n\t    me.next();\n\t  }\n\t}\n\t\n\tfunction copy(f, t) {\n\t  t.a = f.a;\n\t  t.b = f.b;\n\t  t.c = f.c;\n\t  t.d = f.d;\n\t  return t;\n\t};\n\t\n\tfunction impl(seed, opts) {\n\t  var xg = new XorGen(seed),\n\t      state = opts && opts.state,\n\t      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n\t  prng.double = function() {\n\t    do {\n\t      var top = xg.next() >>> 11,\n\t          bot = (xg.next() >>> 0) / 0x100000000,\n\t          result = (top + bot) / (1 << 21);\n\t    } while (result === 0);\n\t    return result;\n\t  };\n\t  prng.int32 = xg.next;\n\t  prng.quick = prng;\n\t  if (state) {\n\t    if (typeof(state) == 'object') copy(state, xg);\n\t    prng.state = function() { return copy(xg, {}); }\n\t  }\n\t  return prng;\n\t}\n\t\n\tif (module && module.exports) {\n\t  module.exports = impl;\n\t} else if (__webpack_require__(7) && __webpack_require__(20)) {\n\t  !(__WEBPACK_AMD_DEFINE_RESULT__ = function() { return impl; }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else {\n\t  this.tychei = impl;\n\t}\n\t\n\t})(\n\t  this,\n\t  (typeof module) == 'object' && module,    // present in node.js\n\t  __webpack_require__(7)   // present with an AMD loader\n\t);\n\t\n\t\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(21)(module)))\n\n/***/ },\n/* 200 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {// A Javascript implementaion of the \"xor128\" prng algorithm by\n\t// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\t\n\t(function(global, module, define) {\n\t\n\tfunction XorGen(seed) {\n\t  var me = this, strseed = '';\n\t\n\t  me.x = 0;\n\t  me.y = 0;\n\t  me.z = 0;\n\t  me.w = 0;\n\t\n\t  // Set up generator function.\n\t  me.next = function() {\n\t    var t = me.x ^ (me.x << 11);\n\t    me.x = me.y;\n\t    me.y = me.z;\n\t    me.z = me.w;\n\t    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);\n\t  };\n\t\n\t  if (seed === (seed | 0)) {\n\t    // Integer seed.\n\t    me.x = seed;\n\t  } else {\n\t    // String seed.\n\t    strseed += seed;\n\t  }\n\t\n\t  // Mix in string seed, then discard an initial batch of 64 values.\n\t  for (var k = 0; k < strseed.length + 64; k++) {\n\t    me.x ^= strseed.charCodeAt(k) | 0;\n\t    me.next();\n\t  }\n\t}\n\t\n\tfunction copy(f, t) {\n\t  t.x = f.x;\n\t  t.y = f.y;\n\t  t.z = f.z;\n\t  t.w = f.w;\n\t  return t;\n\t}\n\t\n\tfunction impl(seed, opts) {\n\t  var xg = new XorGen(seed),\n\t      state = opts && opts.state,\n\t      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n\t  prng.double = function() {\n\t    do {\n\t      var top = xg.next() >>> 11,\n\t          bot = (xg.next() >>> 0) / 0x100000000,\n\t          result = (top + bot) / (1 << 21);\n\t    } while (result === 0);\n\t    return result;\n\t  };\n\t  prng.int32 = xg.next;\n\t  prng.quick = prng;\n\t  if (state) {\n\t    if (typeof(state) == 'object') copy(state, xg);\n\t    prng.state = function() { return copy(xg, {}); }\n\t  }\n\t  return prng;\n\t}\n\t\n\tif (module && module.exports) {\n\t  module.exports = impl;\n\t} else if (__webpack_require__(7) && __webpack_require__(20)) {\n\t  !(__WEBPACK_AMD_DEFINE_RESULT__ = function() { return impl; }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else {\n\t  this.xor128 = impl;\n\t}\n\t\n\t})(\n\t  this,\n\t  (typeof module) == 'object' && module,    // present in node.js\n\t  __webpack_require__(7)   // present with an AMD loader\n\t);\n\t\n\t\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(21)(module)))\n\n/***/ },\n/* 201 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n\t//\n\t// This fast non-cryptographic random number generator is designed for\n\t// use in Monte-Carlo algorithms. It combines a long-period xorshift\n\t// generator with a Weyl generator, and it passes all common batteries\n\t// of stasticial tests for randomness while consuming only a few nanoseconds\n\t// for each prng generated.  For background on the generator, see Brent's\n\t// paper: \"Some long-period random number generators using shifts and xors.\"\n\t// http://arxiv.org/pdf/1004.3115v1.pdf\n\t//\n\t// Usage:\n\t//\n\t// var xor4096 = require('xor4096');\n\t// random = xor4096(1);                        // Seed with int32 or string.\n\t// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n\t// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n\t//\n\t// For nonzero numeric keys, this impelementation provides a sequence\n\t// identical to that by Brent's xorgens 3 implementaion in C.  This\n\t// implementation also provides for initalizing the generator with\n\t// string seeds, or for saving and restoring the state of the generator.\n\t//\n\t// On Chrome, this prng benchmarks about 2.1 times slower than\n\t// Javascript's built-in Math.random().\n\t\n\t(function(global, module, define) {\n\t\n\tfunction XorGen(seed) {\n\t  var me = this;\n\t\n\t  // Set up generator function.\n\t  me.next = function() {\n\t    var w = me.w,\n\t        X = me.X, i = me.i, t, v;\n\t    // Update Weyl generator.\n\t    me.w = w = (w + 0x61c88647) | 0;\n\t    // Update xor generator.\n\t    v = X[(i + 34) & 127];\n\t    t = X[i = ((i + 1) & 127)];\n\t    v ^= v << 13;\n\t    t ^= t << 17;\n\t    v ^= v >>> 15;\n\t    t ^= t >>> 12;\n\t    // Update Xor generator array state.\n\t    v = X[i] = v ^ t;\n\t    me.i = i;\n\t    // Result is the combination.\n\t    return (v + (w ^ (w >>> 16))) | 0;\n\t  };\n\t\n\t  function init(me, seed) {\n\t    var t, v, i, j, w, X = [], limit = 128;\n\t    if (seed === (seed | 0)) {\n\t      // Numeric seeds initialize v, which is used to generates X.\n\t      v = seed;\n\t      seed = null;\n\t    } else {\n\t      // String seeds are mixed into v and X one character at a time.\n\t      seed = seed + '\\0';\n\t      v = 0;\n\t      limit = Math.max(limit, seed.length);\n\t    }\n\t    // Initialize circular array and weyl value.\n\t    for (i = 0, j = -32; j < limit; ++j) {\n\t      // Put the unicode characters into the array, and shuffle them.\n\t      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n\t      // After 32 shuffles, take v as the starting w value.\n\t      if (j === 0) w = v;\n\t      v ^= v << 10;\n\t      v ^= v >>> 15;\n\t      v ^= v << 4;\n\t      v ^= v >>> 13;\n\t      if (j >= 0) {\n\t        w = (w + 0x61c88647) | 0;     // Weyl.\n\t        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.\n\t        i = (0 == t) ? i + 1 : 0;     // Count zeroes.\n\t      }\n\t    }\n\t    // We have detected all zeroes; make the key nonzero.\n\t    if (i >= 128) {\n\t      X[(seed && seed.length || 0) & 127] = -1;\n\t    }\n\t    // Run the generator 512 times to further mix the state before using it.\n\t    // Factoring this as a function slows the main generator, so it is just\n\t    // unrolled here.  The weyl generator is not advanced while warming up.\n\t    i = 127;\n\t    for (j = 4 * 128; j > 0; --j) {\n\t      v = X[(i + 34) & 127];\n\t      t = X[i = ((i + 1) & 127)];\n\t      v ^= v << 13;\n\t      t ^= t << 17;\n\t      v ^= v >>> 15;\n\t      t ^= t >>> 12;\n\t      X[i] = v ^ t;\n\t    }\n\t    // Storing state as object members is faster than using closure variables.\n\t    me.w = w;\n\t    me.X = X;\n\t    me.i = i;\n\t  }\n\t\n\t  init(me, seed);\n\t}\n\t\n\tfunction copy(f, t) {\n\t  t.i = f.i;\n\t  t.w = f.w;\n\t  t.X = f.X.slice();\n\t  return t;\n\t};\n\t\n\tfunction impl(seed, opts) {\n\t  if (seed == null) seed = +(new Date);\n\t  var xg = new XorGen(seed),\n\t      state = opts && opts.state,\n\t      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n\t  prng.double = function() {\n\t    do {\n\t      var top = xg.next() >>> 11,\n\t          bot = (xg.next() >>> 0) / 0x100000000,\n\t          result = (top + bot) / (1 << 21);\n\t    } while (result === 0);\n\t    return result;\n\t  };\n\t  prng.int32 = xg.next;\n\t  prng.quick = prng;\n\t  if (state) {\n\t    if (state.X) copy(state, xg);\n\t    prng.state = function() { return copy(xg, {}); }\n\t  }\n\t  return prng;\n\t}\n\t\n\tif (module && module.exports) {\n\t  module.exports = impl;\n\t} else if (__webpack_require__(7) && __webpack_require__(20)) {\n\t  !(__WEBPACK_AMD_DEFINE_RESULT__ = function() { return impl; }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else {\n\t  this.xor4096 = impl;\n\t}\n\t\n\t})(\n\t  this,                                     // window object or global\n\t  (typeof module) == 'object' && module,    // present in node.js\n\t  __webpack_require__(7)   // present with an AMD loader\n\t);\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(21)(module)))\n\n/***/ },\n/* 202 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {// A Javascript implementaion of the \"xorshift7\" algorithm by\n\t// François Panneton and Pierre L'ecuyer:\n\t// \"On the Xorgshift Random Number Generators\"\n\t// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n\t\n\t(function(global, module, define) {\n\t\n\tfunction XorGen(seed) {\n\t  var me = this;\n\t\n\t  // Set up generator function.\n\t  me.next = function() {\n\t    // Update xor generator.\n\t    var X = me.x, i = me.i, t, v, w;\n\t    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\n\t    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\n\t    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\n\t    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\n\t    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\n\t    X[i] = v;\n\t    me.i = (i + 1) & 7;\n\t    return v;\n\t  };\n\t\n\t  function init(me, seed) {\n\t    var j, w, X = [];\n\t\n\t    if (seed === (seed | 0)) {\n\t      // Seed state array using a 32-bit integer.\n\t      w = X[0] = seed;\n\t    } else {\n\t      // Seed state using a string.\n\t      seed = '' + seed;\n\t      for (j = 0; j < seed.length; ++j) {\n\t        X[j & 7] = (X[j & 7] << 15) ^\n\t            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\n\t      }\n\t    }\n\t    // Enforce an array length of 8, not all zeroes.\n\t    while (X.length < 8) X.push(0);\n\t    for (j = 0; j < 8 && X[j] === 0; ++j);\n\t    if (j == 8) w = X[7] = -1; else w = X[j];\n\t\n\t    me.x = X;\n\t    me.i = 0;\n\t\n\t    // Discard an initial 256 values.\n\t    for (j = 256; j > 0; --j) {\n\t      me.next();\n\t    }\n\t  }\n\t\n\t  init(me, seed);\n\t}\n\t\n\tfunction copy(f, t) {\n\t  t.x = f.x.slice();\n\t  t.i = f.i;\n\t  return t;\n\t}\n\t\n\tfunction impl(seed, opts) {\n\t  if (seed == null) seed = +(new Date);\n\t  var xg = new XorGen(seed),\n\t      state = opts && opts.state,\n\t      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n\t  prng.double = function() {\n\t    do {\n\t      var top = xg.next() >>> 11,\n\t          bot = (xg.next() >>> 0) / 0x100000000,\n\t          result = (top + bot) / (1 << 21);\n\t    } while (result === 0);\n\t    return result;\n\t  };\n\t  prng.int32 = xg.next;\n\t  prng.quick = prng;\n\t  if (state) {\n\t    if (state.x) copy(state, xg);\n\t    prng.state = function() { return copy(xg, {}); }\n\t  }\n\t  return prng;\n\t}\n\t\n\tif (module && module.exports) {\n\t  module.exports = impl;\n\t} else if (__webpack_require__(7) && __webpack_require__(20)) {\n\t  !(__WEBPACK_AMD_DEFINE_RESULT__ = function() { return impl; }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else {\n\t  this.xorshift7 = impl;\n\t}\n\t\n\t})(\n\t  this,\n\t  (typeof module) == 'object' && module,    // present in node.js\n\t  __webpack_require__(7)   // present with an AMD loader\n\t);\n\t\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(21)(module)))\n\n/***/ },\n/* 203 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {// A Javascript implementaion of the \"xorwow\" prng algorithm by\n\t// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\t\n\t(function(global, module, define) {\n\t\n\tfunction XorGen(seed) {\n\t  var me = this, strseed = '';\n\t\n\t  // Set up generator function.\n\t  me.next = function() {\n\t    var t = (me.x ^ (me.x >>> 2));\n\t    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\n\t    return (me.d = (me.d + 362437 | 0)) +\n\t       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\n\t  };\n\t\n\t  me.x = 0;\n\t  me.y = 0;\n\t  me.z = 0;\n\t  me.w = 0;\n\t  me.v = 0;\n\t\n\t  if (seed === (seed | 0)) {\n\t    // Integer seed.\n\t    me.x = seed;\n\t  } else {\n\t    // String seed.\n\t    strseed += seed;\n\t  }\n\t\n\t  // Mix in string seed, then discard an initial batch of 64 values.\n\t  for (var k = 0; k < strseed.length + 64; k++) {\n\t    me.x ^= strseed.charCodeAt(k) | 0;\n\t    if (k == strseed.length) {\n\t      me.d = me.x << 10 ^ me.x >>> 4;\n\t    }\n\t    me.next();\n\t  }\n\t}\n\t\n\tfunction copy(f, t) {\n\t  t.x = f.x;\n\t  t.y = f.y;\n\t  t.z = f.z;\n\t  t.w = f.w;\n\t  t.v = f.v;\n\t  t.d = f.d;\n\t  return t;\n\t}\n\t\n\tfunction impl(seed, opts) {\n\t  var xg = new XorGen(seed),\n\t      state = opts && opts.state,\n\t      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n\t  prng.double = function() {\n\t    do {\n\t      var top = xg.next() >>> 11,\n\t          bot = (xg.next() >>> 0) / 0x100000000,\n\t          result = (top + bot) / (1 << 21);\n\t    } while (result === 0);\n\t    return result;\n\t  };\n\t  prng.int32 = xg.next;\n\t  prng.quick = prng;\n\t  if (state) {\n\t    if (typeof(state) == 'object') copy(state, xg);\n\t    prng.state = function() { return copy(xg, {}); }\n\t  }\n\t  return prng;\n\t}\n\t\n\tif (module && module.exports) {\n\t  module.exports = impl;\n\t} else if (__webpack_require__(7) && __webpack_require__(20)) {\n\t  !(__WEBPACK_AMD_DEFINE_RESULT__ = function() { return impl; }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else {\n\t  this.xorwow = impl;\n\t}\n\t\n\t})(\n\t  this,\n\t  (typeof module) == 'object' && module,    // present in node.js\n\t  __webpack_require__(7)   // present with an AMD loader\n\t);\n\t\n\t\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(21)(module)))\n\n/***/ },\n/* 204 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/*\n\tCopyright 2014 David Bau.\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining\n\ta copy of this software and associated documentation files (the\n\t\"Software\"), to deal in the Software without restriction, including\n\twithout limitation the rights to use, copy, modify, merge, publish,\n\tdistribute, sublicense, and/or sell copies of the Software, and to\n\tpermit persons to whom the Software is furnished to do so, subject to\n\tthe following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be\n\tincluded in all copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\tEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\tMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n\tIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n\tCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n\tTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n\tSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t*/\n\t\n\t(function (pool, math) {\n\t//\n\t// The following constants are related to IEEE 754 limits.\n\t//\n\tvar global = this,\n\t    width = 256,        // each RC4 output is 0 <= x < 256\n\t    chunks = 6,         // at least six RC4 outputs for each double\n\t    digits = 52,        // there are 52 significant digits in a double\n\t    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n\t    startdenom = math.pow(width, chunks),\n\t    significance = math.pow(2, digits),\n\t    overflow = significance * 2,\n\t    mask = width - 1,\n\t    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\t\n\t//\n\t// seedrandom()\n\t// This is the seedrandom function described above.\n\t//\n\tfunction seedrandom(seed, options, callback) {\n\t  var key = [];\n\t  options = (options == true) ? { entropy: true } : (options || {});\n\t\n\t  // Flatten the seed string or build one from local entropy if needed.\n\t  var shortseed = mixkey(flatten(\n\t    options.entropy ? [seed, tostring(pool)] :\n\t    (seed == null) ? autoseed() : seed, 3), key);\n\t\n\t  // Use the seed to initialize an ARC4 generator.\n\t  var arc4 = new ARC4(key);\n\t\n\t  // This function returns a random double in [0, 1) that contains\n\t  // randomness in every bit of the mantissa of the IEEE 754 value.\n\t  var prng = function() {\n\t    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n\t        d = startdenom,                 //   and denominator d = 2 ^ 48.\n\t        x = 0;                          //   and no 'extra last byte'.\n\t    while (n < significance) {          // Fill up all significant digits by\n\t      n = (n + x) * width;              //   shifting numerator and\n\t      d *= width;                       //   denominator and generating a\n\t      x = arc4.g(1);                    //   new least-significant-byte.\n\t    }\n\t    while (n >= overflow) {             // To avoid rounding up, before adding\n\t      n /= 2;                           //   last byte, shift everything\n\t      d /= 2;                           //   right using integer math until\n\t      x >>>= 1;                         //   we have exactly the desired bits.\n\t    }\n\t    return (n + x) / d;                 // Form the number within [0, 1).\n\t  };\n\t\n\t  prng.int32 = function() { return arc4.g(4) | 0; }\n\t  prng.quick = function() { return arc4.g(4) / 0x100000000; }\n\t  prng.double = prng;\n\t\n\t  // Mix the randomness into accumulated entropy.\n\t  mixkey(tostring(arc4.S), pool);\n\t\n\t  // Calling convention: what to return as a function of prng, seed, is_math.\n\t  return (options.pass || callback ||\n\t      function(prng, seed, is_math_call, state) {\n\t        if (state) {\n\t          // Load the arc4 state from the given state if it has an S array.\n\t          if (state.S) { copy(state, arc4); }\n\t          // Only provide the .state method if requested via options.state.\n\t          prng.state = function() { return copy(arc4, {}); }\n\t        }\n\t\n\t        // If called as a method of Math (Math.seedrandom()), mutate\n\t        // Math.random because that is how seedrandom.js has worked since v1.0.\n\t        if (is_math_call) { math[rngname] = prng; return seed; }\n\t\n\t        // Otherwise, it is a newer calling convention, so return the\n\t        // prng directly.\n\t        else return prng;\n\t      })(\n\t  prng,\n\t  shortseed,\n\t  'global' in options ? options.global : (this == math),\n\t  options.state);\n\t}\n\tmath['seed' + rngname] = seedrandom;\n\t\n\t//\n\t// ARC4\n\t//\n\t// An ARC4 implementation.  The constructor takes a key in the form of\n\t// an array of at most (width) integers that should be 0 <= x < (width).\n\t//\n\t// The g(count) method returns a pseudorandom integer that concatenates\n\t// the next (count) outputs from ARC4.  Its return value is a number x\n\t// that is in the range 0 <= x < (width ^ count).\n\t//\n\tfunction ARC4(key) {\n\t  var t, keylen = key.length,\n\t      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\t\n\t  // The empty key [] is treated as [0].\n\t  if (!keylen) { key = [keylen++]; }\n\t\n\t  // Set up S using the standard key scheduling algorithm.\n\t  while (i < width) {\n\t    s[i] = i++;\n\t  }\n\t  for (i = 0; i < width; i++) {\n\t    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n\t    s[j] = t;\n\t  }\n\t\n\t  // The \"g\" method returns the next (count) outputs as one number.\n\t  (me.g = function(count) {\n\t    // Using instance members instead of closure state nearly doubles speed.\n\t    var t, r = 0,\n\t        i = me.i, j = me.j, s = me.S;\n\t    while (count--) {\n\t      t = s[i = mask & (i + 1)];\n\t      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n\t    }\n\t    me.i = i; me.j = j;\n\t    return r;\n\t    // For robust unpredictability, the function call below automatically\n\t    // discards an initial batch of values.  This is called RC4-drop[256].\n\t    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n\t  })(width);\n\t}\n\t\n\t//\n\t// copy()\n\t// Copies internal state of ARC4 to or from a plain object.\n\t//\n\tfunction copy(f, t) {\n\t  t.i = f.i;\n\t  t.j = f.j;\n\t  t.S = f.S.slice();\n\t  return t;\n\t};\n\t\n\t//\n\t// flatten()\n\t// Converts an object tree to nested arrays of strings.\n\t//\n\tfunction flatten(obj, depth) {\n\t  var result = [], typ = (typeof obj), prop;\n\t  if (depth && typ == 'object') {\n\t    for (prop in obj) {\n\t      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n\t    }\n\t  }\n\t  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n\t}\n\t\n\t//\n\t// mixkey()\n\t// Mixes a string seed into a key that is an array of integers, and\n\t// returns a shortened string seed that is equivalent to the result key.\n\t//\n\tfunction mixkey(seed, key) {\n\t  var stringseed = seed + '', smear, j = 0;\n\t  while (j < stringseed.length) {\n\t    key[mask & j] =\n\t      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n\t  }\n\t  return tostring(key);\n\t}\n\t\n\t//\n\t// autoseed()\n\t// Returns an object for autoseeding, using window.crypto and Node crypto\n\t// module if available.\n\t//\n\tfunction autoseed() {\n\t  try {\n\t    var out;\n\t    if (nodecrypto && (out = nodecrypto.randomBytes)) {\n\t      // The use of 'out' to remember randomBytes makes tight minified code.\n\t      out = out(width);\n\t    } else {\n\t      out = new Uint8Array(width);\n\t      (global.crypto || global.msCrypto).getRandomValues(out);\n\t    }\n\t    return tostring(out);\n\t  } catch (e) {\n\t    var browser = global.navigator,\n\t        plugins = browser && browser.plugins;\n\t    return [+new Date, global, plugins, global.screen, tostring(pool)];\n\t  }\n\t}\n\t\n\t//\n\t// tostring()\n\t// Converts an array of charcodes to a string\n\t//\n\tfunction tostring(a) {\n\t  return String.fromCharCode.apply(0, a);\n\t}\n\t\n\t//\n\t// When seedrandom.js is loaded, we immediately mix a few bits\n\t// from the built-in RNG into the entropy pool.  Because we do\n\t// not want to interfere with deterministic PRNG state later,\n\t// seedrandom will not call math.random on its own again after\n\t// initialization.\n\t//\n\tmixkey(math.random(), pool);\n\t\n\t//\n\t// Nodejs and AMD support: export the implementation as a module using\n\t// either convention.\n\t//\n\tif ((typeof module) == 'object' && module.exports) {\n\t  module.exports = seedrandom;\n\t  // When in node.js, try using crypto package for autoseeding.\n\t  try {\n\t    nodecrypto = __webpack_require__(205);\n\t  } catch (ex) {}\n\t} else if (true) {\n\t  !(__WEBPACK_AMD_DEFINE_RESULT__ = function() { return seedrandom; }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t}\n\t\n\t// End anonymous scope, and pass initial values.\n\t})(\n\t  [],     // pool: entropy pool starts empty\n\t  Math    // math: package containing random, pow, and seedrandom\n\t);\n\n\n/***/ },\n/* 205 */\n/***/ function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ },\n/* 206 */\n/***/ function(module, exports, __webpack_require__, __webpack_module_template_argument_0__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(__webpack_module_template_argument_0__);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Static poolers. Several custom versions for each potential number of\n\t * arguments. A completely generic pooler is easy to implement, but would\n\t * require accessing the `arguments` object. In each of these, `this` refers to\n\t * the Class itself, not an instance. If any others are needed, simply add them\n\t * here, or in their own files.\n\t */\n\tvar oneArgumentPooler = function (copyFieldsFrom) {\n\t  var Klass = this;\n\t  if (Klass.instancePool.length) {\n\t    var instance = Klass.instancePool.pop();\n\t    Klass.call(instance, copyFieldsFrom);\n\t    return instance;\n\t  } else {\n\t    return new Klass(copyFieldsFrom);\n\t  }\n\t};\n\t\n\tvar twoArgumentPooler = function (a1, a2) {\n\t  var Klass = this;\n\t  if (Klass.instancePool.length) {\n\t    var instance = Klass.instancePool.pop();\n\t    Klass.call(instance, a1, a2);\n\t    return instance;\n\t  } else {\n\t    return new Klass(a1, a2);\n\t  }\n\t};\n\t\n\tvar threeArgumentPooler = function (a1, a2, a3) {\n\t  var Klass = this;\n\t  if (Klass.instancePool.length) {\n\t    var instance = Klass.instancePool.pop();\n\t    Klass.call(instance, a1, a2, a3);\n\t    return instance;\n\t  } else {\n\t    return new Klass(a1, a2, a3);\n\t  }\n\t};\n\t\n\tvar fourArgumentPooler = function (a1, a2, a3, a4) {\n\t  var Klass = this;\n\t  if (Klass.instancePool.length) {\n\t    var instance = Klass.instancePool.pop();\n\t    Klass.call(instance, a1, a2, a3, a4);\n\t    return instance;\n\t  } else {\n\t    return new Klass(a1, a2, a3, a4);\n\t  }\n\t};\n\t\n\tvar standardReleaser = function (instance) {\n\t  var Klass = this;\n\t  !(instance instanceof Klass) ?  false ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;\n\t  instance.destructor();\n\t  if (Klass.instancePool.length < Klass.poolSize) {\n\t    Klass.instancePool.push(instance);\n\t  }\n\t};\n\t\n\tvar DEFAULT_POOL_SIZE = 10;\n\tvar DEFAULT_POOLER = oneArgumentPooler;\n\t\n\t/**\n\t * Augments `CopyConstructor` to be a poolable class, augmenting only the class\n\t * itself (statically) not adding any prototypical fields. Any CopyConstructor\n\t * you give this may have a `poolSize` property, and will look for a\n\t * prototypical `destructor` on instances.\n\t *\n\t * @param {Function} CopyConstructor Constructor that can be used to reset.\n\t * @param {Function} pooler Customizable pooler.\n\t */\n\tvar addPoolingTo = function (CopyConstructor, pooler) {\n\t  // Casting as any so that flow ignores the actual implementation and trusts\n\t  // it to match the type we declared\n\t  var NewKlass = CopyConstructor;\n\t  NewKlass.instancePool = [];\n\t  NewKlass.getPooled = pooler || DEFAULT_POOLER;\n\t  if (!NewKlass.poolSize) {\n\t    NewKlass.poolSize = DEFAULT_POOL_SIZE;\n\t  }\n\t  NewKlass.release = standardReleaser;\n\t  return NewKlass;\n\t};\n\t\n\tvar PooledClass = {\n\t  addPoolingTo: addPoolingTo,\n\t  oneArgumentPooler: oneArgumentPooler,\n\t  twoArgumentPooler: twoArgumentPooler,\n\t  threeArgumentPooler: threeArgumentPooler,\n\t  fourArgumentPooler: fourArgumentPooler\n\t};\n\t\n\tmodule.exports = PooledClass;\n\n/***/ }\n/******/ ])));\n\n\n// WEBPACK FOOTER //\n// static/js/main.11d00fbb.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/PuzzlePopsicles/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap edac639845ea42490da8","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/invariant.js\n// module id = 1\n// module chunks = 0","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar emptyFunction = require('./emptyFunction');\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = emptyFunction;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var printWarning = function printWarning(format) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      var argIndex = 0;\n      var message = 'Warning: ' + format.replace(/%s/g, function () {\n        return args[argIndex++];\n      });\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n      try {\n        // --- Welcome to debugging React ---\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch (x) {}\n    };\n\n    warning = function warning(condition, format) {\n      if (format === undefined) {\n        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n      }\n\n      if (format.indexOf('Failed Composite propType: ') === 0) {\n        return; // Ignore CompositeComponent proptype check.\n      }\n\n      if (!condition) {\n        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n          args[_key2 - 2] = arguments[_key2];\n        }\n\n        printWarning.apply(undefined, [format].concat(args));\n      }\n    };\n  })();\n}\n\nmodule.exports = warning;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/warning.js\n// module id = 2\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n'use strict';\n\n/**\n * WARNING: DO NOT manually require this module.\n * This is a replacement for `invariant(...)` used by the error code system\n * and will _only_ be required by the corresponding babel pass.\n * It always throws.\n */\n\nfunction reactProdInvariant(code) {\n  var argCount = arguments.length - 1;\n\n  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;\n\n  for (var argIdx = 0; argIdx < argCount; argIdx++) {\n    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);\n  }\n\n  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';\n\n  var error = new Error(message);\n  error.name = 'Invariant Violation';\n  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame\n\n  throw error;\n}\n\nmodule.exports = reactProdInvariant;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/reactProdInvariant.js\n// module id = 3\n// module chunks = 0","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/object-assign/index.js\n// module id = 4\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar DOMProperty = require('./DOMProperty');\nvar ReactDOMComponentFlags = require('./ReactDOMComponentFlags');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;\nvar Flags = ReactDOMComponentFlags;\n\nvar internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);\n\n/**\n * Check if a given node should be cached.\n */\nfunction shouldPrecacheNode(node, nodeID) {\n  return node.nodeType === 1 && node.getAttribute(ATTR_NAME) === String(nodeID) || node.nodeType === 8 && node.nodeValue === ' react-text: ' + nodeID + ' ' || node.nodeType === 8 && node.nodeValue === ' react-empty: ' + nodeID + ' ';\n}\n\n/**\n * Drill down (through composites and empty components) until we get a host or\n * host text component.\n *\n * This is pretty polymorphic but unavoidable with the current structure we have\n * for `_renderedChildren`.\n */\nfunction getRenderedHostOrTextFromComponent(component) {\n  var rendered;\n  while (rendered = component._renderedComponent) {\n    component = rendered;\n  }\n  return component;\n}\n\n/**\n * Populate `_hostNode` on the rendered host/text component with the given\n * DOM node. The passed `inst` can be a composite.\n */\nfunction precacheNode(inst, node) {\n  var hostInst = getRenderedHostOrTextFromComponent(inst);\n  hostInst._hostNode = node;\n  node[internalInstanceKey] = hostInst;\n}\n\nfunction uncacheNode(inst) {\n  var node = inst._hostNode;\n  if (node) {\n    delete node[internalInstanceKey];\n    inst._hostNode = null;\n  }\n}\n\n/**\n * Populate `_hostNode` on each child of `inst`, assuming that the children\n * match up with the DOM (element) children of `node`.\n *\n * We cache entire levels at once to avoid an n^2 problem where we access the\n * children of a node sequentially and have to walk from the start to our target\n * node every time.\n *\n * Since we update `_renderedChildren` and the actual DOM at (slightly)\n * different times, we could race here and see a newer `_renderedChildren` than\n * the DOM nodes we see. To avoid this, ReactMultiChild calls\n * `prepareToManageChildren` before we change `_renderedChildren`, at which\n * time the container's child nodes are always cached (until it unmounts).\n */\nfunction precacheChildNodes(inst, node) {\n  if (inst._flags & Flags.hasCachedChildNodes) {\n    return;\n  }\n  var children = inst._renderedChildren;\n  var childNode = node.firstChild;\n  outer: for (var name in children) {\n    if (!children.hasOwnProperty(name)) {\n      continue;\n    }\n    var childInst = children[name];\n    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;\n    if (childID === 0) {\n      // We're currently unmounting this child in ReactMultiChild; skip it.\n      continue;\n    }\n    // We assume the child nodes are in the same order as the child instances.\n    for (; childNode !== null; childNode = childNode.nextSibling) {\n      if (shouldPrecacheNode(childNode, childID)) {\n        precacheNode(childInst, childNode);\n        continue outer;\n      }\n    }\n    // We reached the end of the DOM children without finding an ID match.\n    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;\n  }\n  inst._flags |= Flags.hasCachedChildNodes;\n}\n\n/**\n * Given a DOM node, return the closest ReactDOMComponent or\n * ReactDOMTextComponent instance ancestor.\n */\nfunction getClosestInstanceFromNode(node) {\n  if (node[internalInstanceKey]) {\n    return node[internalInstanceKey];\n  }\n\n  // Walk up the tree until we find an ancestor whose instance we have cached.\n  var parents = [];\n  while (!node[internalInstanceKey]) {\n    parents.push(node);\n    if (node.parentNode) {\n      node = node.parentNode;\n    } else {\n      // Top of the tree. This node must not be part of a React tree (or is\n      // unmounted, potentially).\n      return null;\n    }\n  }\n\n  var closest;\n  var inst;\n  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {\n    closest = inst;\n    if (parents.length) {\n      precacheChildNodes(inst, node);\n    }\n  }\n\n  return closest;\n}\n\n/**\n * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent\n * instance, or null if the node was not rendered by this React.\n */\nfunction getInstanceFromNode(node) {\n  var inst = getClosestInstanceFromNode(node);\n  if (inst != null && inst._hostNode === node) {\n    return inst;\n  } else {\n    return null;\n  }\n}\n\n/**\n * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding\n * DOM node.\n */\nfunction getNodeFromInstance(inst) {\n  // Without this first invariant, passing a non-DOM-component triggers the next\n  // invariant for a missing parent, which is super confusing.\n  !(inst._hostNode !== undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;\n\n  if (inst._hostNode) {\n    return inst._hostNode;\n  }\n\n  // Walk up the tree until we find an ancestor whose DOM node we have cached.\n  var parents = [];\n  while (!inst._hostNode) {\n    parents.push(inst);\n    !inst._hostParent ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;\n    inst = inst._hostParent;\n  }\n\n  // Now parents contains each ancestor that does *not* have a cached native\n  // node, and `inst` is the deepest ancestor that does.\n  for (; parents.length; inst = parents.pop()) {\n    precacheChildNodes(inst, inst._hostNode);\n  }\n\n  return inst._hostNode;\n}\n\nvar ReactDOMComponentTree = {\n  getClosestInstanceFromNode: getClosestInstanceFromNode,\n  getInstanceFromNode: getInstanceFromNode,\n  getNodeFromInstance: getNodeFromInstance,\n  precacheChildNodes: precacheChildNodes,\n  precacheNode: precacheNode,\n  uncacheNode: uncacheNode\n};\n\nmodule.exports = ReactDOMComponentTree;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMComponentTree.js\n// module id = 5\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\n/**\n * Simple, lightweight module assisting with the detection and context of\n * Worker. Helps avoid circular dependencies and allows code to reason about\n * whether or not they are in a Worker, even if they never include the main\n * `ReactWorker` dependency.\n */\nvar ExecutionEnvironment = {\n\n  canUseDOM: canUseDOM,\n\n  canUseWorkers: typeof Worker !== 'undefined',\n\n  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n\n  canUseViewport: canUseDOM && !!window.screen,\n\n  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\n};\n\nmodule.exports = ExecutionEnvironment;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/ExecutionEnvironment.js\n// module id = 6\n// module chunks = 0","module.exports = function() { throw new Error(\"define cannot be used indirect\"); };\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/amd-define.js\n// module id = 7\n// module chunks = 0","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/emptyFunction.js\n// module id = 8\n// module chunks = 0","/**\n * Copyright 2016-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n// Trust the developer to only use ReactInstrumentation with a __DEV__ check\n\nvar debugTool = null;\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactDebugTool = require('./ReactDebugTool');\n  debugTool = ReactDebugTool;\n}\n\nmodule.exports = { debugTool: debugTool };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactInstrumentation.js\n// module id = 9\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar CallbackQueue = require('./CallbackQueue');\nvar PooledClass = require('./PooledClass');\nvar ReactFeatureFlags = require('./ReactFeatureFlags');\nvar ReactReconciler = require('./ReactReconciler');\nvar Transaction = require('./Transaction');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar dirtyComponents = [];\nvar updateBatchNumber = 0;\nvar asapCallbackQueue = CallbackQueue.getPooled();\nvar asapEnqueued = false;\n\nvar batchingStrategy = null;\n\nfunction ensureInjected() {\n  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;\n}\n\nvar NESTED_UPDATES = {\n  initialize: function () {\n    this.dirtyComponentsLength = dirtyComponents.length;\n  },\n  close: function () {\n    if (this.dirtyComponentsLength !== dirtyComponents.length) {\n      // Additional updates were enqueued by componentDidUpdate handlers or\n      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run\n      // these new updates so that if A's componentDidUpdate calls setState on\n      // B, B will update before the callback A's updater provided when calling\n      // setState.\n      dirtyComponents.splice(0, this.dirtyComponentsLength);\n      flushBatchedUpdates();\n    } else {\n      dirtyComponents.length = 0;\n    }\n  }\n};\n\nvar UPDATE_QUEUEING = {\n  initialize: function () {\n    this.callbackQueue.reset();\n  },\n  close: function () {\n    this.callbackQueue.notifyAll();\n  }\n};\n\nvar TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];\n\nfunction ReactUpdatesFlushTransaction() {\n  this.reinitializeTransaction();\n  this.dirtyComponentsLength = null;\n  this.callbackQueue = CallbackQueue.getPooled();\n  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(\n  /* useCreateElement */true);\n}\n\n_assign(ReactUpdatesFlushTransaction.prototype, Transaction, {\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  destructor: function () {\n    this.dirtyComponentsLength = null;\n    CallbackQueue.release(this.callbackQueue);\n    this.callbackQueue = null;\n    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);\n    this.reconcileTransaction = null;\n  },\n\n  perform: function (method, scope, a) {\n    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`\n    // with this transaction's wrappers around it.\n    return Transaction.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);\n  }\n});\n\nPooledClass.addPoolingTo(ReactUpdatesFlushTransaction);\n\nfunction batchedUpdates(callback, a, b, c, d, e) {\n  ensureInjected();\n  return batchingStrategy.batchedUpdates(callback, a, b, c, d, e);\n}\n\n/**\n * Array comparator for ReactComponents by mount ordering.\n *\n * @param {ReactComponent} c1 first component you're comparing\n * @param {ReactComponent} c2 second component you're comparing\n * @return {number} Return value usable by Array.prototype.sort().\n */\nfunction mountOrderComparator(c1, c2) {\n  return c1._mountOrder - c2._mountOrder;\n}\n\nfunction runBatchedUpdates(transaction) {\n  var len = transaction.dirtyComponentsLength;\n  !(len === dirtyComponents.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected flush transaction\\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;\n\n  // Since reconciling a component higher in the owner hierarchy usually (not\n  // always -- see shouldComponentUpdate()) will reconcile children, reconcile\n  // them before their children by sorting the array.\n  dirtyComponents.sort(mountOrderComparator);\n\n  // Any updates enqueued while reconciling must be performed after this entire\n  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and\n  // C, B could update twice in a single batch if C's render enqueues an update\n  // to B (since B would have already updated, we should skip it, and the only\n  // way we can know to do so is by checking the batch counter).\n  updateBatchNumber++;\n\n  for (var i = 0; i < len; i++) {\n    // If a component is unmounted before pending changes apply, it will still\n    // be here, but we assume that it has cleared its _pendingCallbacks and\n    // that performUpdateIfNecessary is a noop.\n    var component = dirtyComponents[i];\n\n    // If performUpdateIfNecessary happens to enqueue any new updates, we\n    // shouldn't execute the callbacks until the next render happens, so\n    // stash the callbacks first\n    var callbacks = component._pendingCallbacks;\n    component._pendingCallbacks = null;\n\n    var markerName;\n    if (ReactFeatureFlags.logTopLevelRenders) {\n      var namedComponent = component;\n      // Duck type TopLevelWrapper. This is probably always true.\n      if (component._currentElement.type.isReactTopLevelWrapper) {\n        namedComponent = component._renderedComponent;\n      }\n      markerName = 'React update: ' + namedComponent.getName();\n      console.time(markerName);\n    }\n\n    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);\n\n    if (markerName) {\n      console.timeEnd(markerName);\n    }\n\n    if (callbacks) {\n      for (var j = 0; j < callbacks.length; j++) {\n        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());\n      }\n    }\n  }\n}\n\nvar flushBatchedUpdates = function () {\n  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents\n  // array and perform any updates enqueued by mount-ready handlers (i.e.,\n  // componentDidUpdate) but we need to check here too in order to catch\n  // updates enqueued by setState callbacks and asap calls.\n  while (dirtyComponents.length || asapEnqueued) {\n    if (dirtyComponents.length) {\n      var transaction = ReactUpdatesFlushTransaction.getPooled();\n      transaction.perform(runBatchedUpdates, null, transaction);\n      ReactUpdatesFlushTransaction.release(transaction);\n    }\n\n    if (asapEnqueued) {\n      asapEnqueued = false;\n      var queue = asapCallbackQueue;\n      asapCallbackQueue = CallbackQueue.getPooled();\n      queue.notifyAll();\n      CallbackQueue.release(queue);\n    }\n  }\n};\n\n/**\n * Mark a component as needing a rerender, adding an optional callback to a\n * list of functions which will be executed once the rerender occurs.\n */\nfunction enqueueUpdate(component) {\n  ensureInjected();\n\n  // Various parts of our code (such as ReactCompositeComponent's\n  // _renderValidatedComponent) assume that calls to render aren't nested;\n  // verify that that's the case. (This is called by each top-level update\n  // function, like setState, forceUpdate, etc.; creation and\n  // destruction of top-level components is guarded in ReactMount.)\n\n  if (!batchingStrategy.isBatchingUpdates) {\n    batchingStrategy.batchedUpdates(enqueueUpdate, component);\n    return;\n  }\n\n  dirtyComponents.push(component);\n  if (component._updateBatchNumber == null) {\n    component._updateBatchNumber = updateBatchNumber + 1;\n  }\n}\n\n/**\n * Enqueue a callback to be run at the end of the current batching cycle. Throws\n * if no updates are currently being performed.\n */\nfunction asap(callback, context) {\n  !batchingStrategy.isBatchingUpdates ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\\'t enqueue an asap callback in a context whereupdates are not being batched.') : _prodInvariant('125') : void 0;\n  asapCallbackQueue.enqueue(callback, context);\n  asapEnqueued = true;\n}\n\nvar ReactUpdatesInjection = {\n  injectReconcileTransaction: function (ReconcileTransaction) {\n    !ReconcileTransaction ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;\n    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;\n  },\n\n  injectBatchingStrategy: function (_batchingStrategy) {\n    !_batchingStrategy ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;\n    !(typeof _batchingStrategy.batchedUpdates === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;\n    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;\n    batchingStrategy = _batchingStrategy;\n  }\n};\n\nvar ReactUpdates = {\n  /**\n   * React references `ReactReconcileTransaction` using this property in order\n   * to allow dependency injection.\n   *\n   * @internal\n   */\n  ReactReconcileTransaction: null,\n\n  batchedUpdates: batchedUpdates,\n  enqueueUpdate: enqueueUpdate,\n  flushBatchedUpdates: flushBatchedUpdates,\n  injection: ReactUpdatesInjection,\n  asap: asap\n};\n\nmodule.exports = ReactUpdates;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactUpdates.js\n// module id = 10\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar PooledClass = require('./PooledClass');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar warning = require('fbjs/lib/warning');\n\nvar didWarnForAddedNewProperty = false;\nvar isProxySupported = typeof Proxy === 'function';\n\nvar shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar EventInterface = {\n  type: null,\n  target: null,\n  // currentTarget is set when dispatching; no use in copying it here\n  currentTarget: emptyFunction.thatReturnsNull,\n  eventPhase: null,\n  bubbles: null,\n  cancelable: null,\n  timeStamp: function (event) {\n    return event.timeStamp || Date.now();\n  },\n  defaultPrevented: null,\n  isTrusted: null\n};\n\n/**\n * Synthetic events are dispatched by event plugins, typically in response to a\n * top-level event delegation handler.\n *\n * These systems should generally use pooling to reduce the frequency of garbage\n * collection. The system should check `isPersistent` to determine whether the\n * event should be released into the pool after being dispatched. Users that\n * need a persisted event should invoke `persist`.\n *\n * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\n * normalizing browser quirks. Subclasses do not necessarily have to implement a\n * DOM interface; custom application-specific events can also subclass this.\n *\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {*} targetInst Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @param {DOMEventTarget} nativeEventTarget Target node.\n */\nfunction SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {\n  if (process.env.NODE_ENV !== 'production') {\n    // these have a getter/setter for warnings\n    delete this.nativeEvent;\n    delete this.preventDefault;\n    delete this.stopPropagation;\n  }\n\n  this.dispatchConfig = dispatchConfig;\n  this._targetInst = targetInst;\n  this.nativeEvent = nativeEvent;\n\n  var Interface = this.constructor.Interface;\n  for (var propName in Interface) {\n    if (!Interface.hasOwnProperty(propName)) {\n      continue;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      delete this[propName]; // this has a getter/setter for warnings\n    }\n    var normalize = Interface[propName];\n    if (normalize) {\n      this[propName] = normalize(nativeEvent);\n    } else {\n      if (propName === 'target') {\n        this.target = nativeEventTarget;\n      } else {\n        this[propName] = nativeEvent[propName];\n      }\n    }\n  }\n\n  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;\n  if (defaultPrevented) {\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  } else {\n    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;\n  }\n  this.isPropagationStopped = emptyFunction.thatReturnsFalse;\n  return this;\n}\n\n_assign(SyntheticEvent.prototype, {\n\n  preventDefault: function () {\n    this.defaultPrevented = true;\n    var event = this.nativeEvent;\n    if (!event) {\n      return;\n    }\n\n    if (event.preventDefault) {\n      event.preventDefault();\n    } else if (typeof event.returnValue !== 'unknown') {\n      // eslint-disable-line valid-typeof\n      event.returnValue = false;\n    }\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  },\n\n  stopPropagation: function () {\n    var event = this.nativeEvent;\n    if (!event) {\n      return;\n    }\n\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    } else if (typeof event.cancelBubble !== 'unknown') {\n      // eslint-disable-line valid-typeof\n      // The ChangeEventPlugin registers a \"propertychange\" event for\n      // IE. This event does not support bubbling or cancelling, and\n      // any references to cancelBubble throw \"Member not found\".  A\n      // typeof check of \"unknown\" circumvents this issue (and is also\n      // IE specific).\n      event.cancelBubble = true;\n    }\n\n    this.isPropagationStopped = emptyFunction.thatReturnsTrue;\n  },\n\n  /**\n   * We release all dispatched `SyntheticEvent`s after each event loop, adding\n   * them back into the pool. This allows a way to hold onto a reference that\n   * won't be added back into the pool.\n   */\n  persist: function () {\n    this.isPersistent = emptyFunction.thatReturnsTrue;\n  },\n\n  /**\n   * Checks if this event should be released back into the pool.\n   *\n   * @return {boolean} True if this should not be released, false otherwise.\n   */\n  isPersistent: emptyFunction.thatReturnsFalse,\n\n  /**\n   * `PooledClass` looks for `destructor` on each instance it releases.\n   */\n  destructor: function () {\n    var Interface = this.constructor.Interface;\n    for (var propName in Interface) {\n      if (process.env.NODE_ENV !== 'production') {\n        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));\n      } else {\n        this[propName] = null;\n      }\n    }\n    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {\n      this[shouldBeReleasedProperties[i]] = null;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));\n      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));\n      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));\n    }\n  }\n\n});\n\nSyntheticEvent.Interface = EventInterface;\n\nif (process.env.NODE_ENV !== 'production') {\n  if (isProxySupported) {\n    /*eslint-disable no-func-assign */\n    SyntheticEvent = new Proxy(SyntheticEvent, {\n      construct: function (target, args) {\n        return this.apply(target, Object.create(target.prototype), args);\n      },\n      apply: function (constructor, that, args) {\n        return new Proxy(constructor.apply(that, args), {\n          set: function (target, prop, value) {\n            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {\n              process.env.NODE_ENV !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), 'This synthetic event is reused for performance reasons. If you\\'re ' + 'seeing this, you\\'re adding a new property in the synthetic event object. ' + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;\n              didWarnForAddedNewProperty = true;\n            }\n            target[prop] = value;\n            return true;\n          }\n        });\n      }\n    });\n    /*eslint-enable no-func-assign */\n  }\n}\n/**\n * Helper to reduce boilerplate when creating subclasses.\n *\n * @param {function} Class\n * @param {?object} Interface\n */\nSyntheticEvent.augmentClass = function (Class, Interface) {\n  var Super = this;\n\n  var E = function () {};\n  E.prototype = Super.prototype;\n  var prototype = new E();\n\n  _assign(prototype, Class.prototype);\n  Class.prototype = prototype;\n  Class.prototype.constructor = Class;\n\n  Class.Interface = _assign({}, Super.Interface, Interface);\n  Class.augmentClass = Super.augmentClass;\n\n  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);\n};\n\nPooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);\n\nmodule.exports = SyntheticEvent;\n\n/**\n  * Helper to nullify syntheticEvent instance properties when destructing\n  *\n  * @param {object} SyntheticEvent\n  * @param {String} propName\n  * @return {object} defineProperty object\n  */\nfunction getPooledWarningPropertyDefinition(propName, getVal) {\n  var isFunction = typeof getVal === 'function';\n  return {\n    configurable: true,\n    set: set,\n    get: get\n  };\n\n  function set(val) {\n    var action = isFunction ? 'setting the method' : 'setting the property';\n    warn(action, 'This is effectively a no-op');\n    return val;\n  }\n\n  function get() {\n    var action = isFunction ? 'accessing the method' : 'accessing the property';\n    var result = isFunction ? 'This is a no-op function' : 'This is set to null';\n    warn(action, result);\n    return getVal;\n  }\n\n  function warn(action, result) {\n    var warningCondition = false;\n    process.env.NODE_ENV !== 'production' ? warning(warningCondition, 'This synthetic event is reused for performance reasons. If you\\'re seeing this, ' + 'you\\'re %s `%s` on a released/nullified synthetic event. %s. ' + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticEvent.js\n// module id = 11\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\nvar ReactCurrentOwner = {\n\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n\n};\n\nmodule.exports = ReactCurrentOwner;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactCurrentOwner.js\n// module id = 12\n// module chunks = 0","/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar DOMNamespaces = require('./DOMNamespaces');\nvar setInnerHTML = require('./setInnerHTML');\n\nvar createMicrosoftUnsafeLocalFunction = require('./createMicrosoftUnsafeLocalFunction');\nvar setTextContent = require('./setTextContent');\n\nvar ELEMENT_NODE_TYPE = 1;\nvar DOCUMENT_FRAGMENT_NODE_TYPE = 11;\n\n/**\n * In IE (8-11) and Edge, appending nodes with no children is dramatically\n * faster than appending a full subtree, so we essentially queue up the\n * .appendChild calls here and apply them so each node is added to its parent\n * before any children are added.\n *\n * In other browsers, doing so is slower or neutral compared to the other order\n * (in Firefox, twice as slow) so we only do this inversion in IE.\n *\n * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.\n */\nvar enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\\bEdge\\/\\d/.test(navigator.userAgent);\n\nfunction insertTreeChildren(tree) {\n  if (!enableLazy) {\n    return;\n  }\n  var node = tree.node;\n  var children = tree.children;\n  if (children.length) {\n    for (var i = 0; i < children.length; i++) {\n      insertTreeBefore(node, children[i], null);\n    }\n  } else if (tree.html != null) {\n    setInnerHTML(node, tree.html);\n  } else if (tree.text != null) {\n    setTextContent(node, tree.text);\n  }\n}\n\nvar insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {\n  // DocumentFragments aren't actually part of the DOM after insertion so\n  // appending children won't update the DOM. We need to ensure the fragment\n  // is properly populated first, breaking out of our lazy approach for just\n  // this level. Also, some <object> plugins (like Flash Player) will read\n  // <param> nodes immediately upon insertion into the DOM, so <object>\n  // must also be populated prior to insertion into the DOM.\n  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {\n    insertTreeChildren(tree);\n    parentNode.insertBefore(tree.node, referenceNode);\n  } else {\n    parentNode.insertBefore(tree.node, referenceNode);\n    insertTreeChildren(tree);\n  }\n});\n\nfunction replaceChildWithTree(oldNode, newTree) {\n  oldNode.parentNode.replaceChild(newTree.node, oldNode);\n  insertTreeChildren(newTree);\n}\n\nfunction queueChild(parentTree, childTree) {\n  if (enableLazy) {\n    parentTree.children.push(childTree);\n  } else {\n    parentTree.node.appendChild(childTree.node);\n  }\n}\n\nfunction queueHTML(tree, html) {\n  if (enableLazy) {\n    tree.html = html;\n  } else {\n    setInnerHTML(tree.node, html);\n  }\n}\n\nfunction queueText(tree, text) {\n  if (enableLazy) {\n    tree.text = text;\n  } else {\n    setTextContent(tree.node, text);\n  }\n}\n\nfunction toString() {\n  return this.node.nodeName;\n}\n\nfunction DOMLazyTree(node) {\n  return {\n    node: node,\n    children: [],\n    html: null,\n    text: null,\n    toString: toString\n  };\n}\n\nDOMLazyTree.insertTreeBefore = insertTreeBefore;\nDOMLazyTree.replaceChildWithTree = replaceChildWithTree;\nDOMLazyTree.queueChild = queueChild;\nDOMLazyTree.queueHTML = queueHTML;\nDOMLazyTree.queueText = queueText;\n\nmodule.exports = DOMLazyTree;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/DOMLazyTree.js\n// module id = 14\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\nfunction checkMask(value, bitmask) {\n  return (value & bitmask) === bitmask;\n}\n\nvar DOMPropertyInjection = {\n  /**\n   * Mapping from normalized, camelcased property names to a configuration that\n   * specifies how the associated DOM property should be accessed or rendered.\n   */\n  MUST_USE_PROPERTY: 0x1,\n  HAS_BOOLEAN_VALUE: 0x4,\n  HAS_NUMERIC_VALUE: 0x8,\n  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,\n  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,\n\n  /**\n   * Inject some specialized knowledge about the DOM. This takes a config object\n   * with the following properties:\n   *\n   * isCustomAttribute: function that given an attribute name will return true\n   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*\n   * attributes where it's impossible to enumerate all of the possible\n   * attribute names,\n   *\n   * Properties: object mapping DOM property name to one of the\n   * DOMPropertyInjection constants or null. If your attribute isn't in here,\n   * it won't get written to the DOM.\n   *\n   * DOMAttributeNames: object mapping React attribute name to the DOM\n   * attribute name. Attribute names not specified use the **lowercase**\n   * normalized name.\n   *\n   * DOMAttributeNamespaces: object mapping React attribute name to the DOM\n   * attribute namespace URL. (Attribute names not specified use no namespace.)\n   *\n   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.\n   * Property names not specified use the normalized name.\n   *\n   * DOMMutationMethods: Properties that require special mutation methods. If\n   * `value` is undefined, the mutation method should unset the property.\n   *\n   * @param {object} domPropertyConfig the config as described above.\n   */\n  injectDOMPropertyConfig: function (domPropertyConfig) {\n    var Injection = DOMPropertyInjection;\n    var Properties = domPropertyConfig.Properties || {};\n    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};\n    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};\n    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};\n    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};\n\n    if (domPropertyConfig.isCustomAttribute) {\n      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);\n    }\n\n    for (var propName in Properties) {\n      !!DOMProperty.properties.hasOwnProperty(propName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\\'re trying to inject DOM property \\'%s\\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;\n\n      var lowerCased = propName.toLowerCase();\n      var propConfig = Properties[propName];\n\n      var propertyInfo = {\n        attributeName: lowerCased,\n        attributeNamespace: null,\n        propertyName: propName,\n        mutationMethod: null,\n\n        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),\n        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),\n        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),\n        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),\n        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)\n      };\n      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;\n\n      if (process.env.NODE_ENV !== 'production') {\n        DOMProperty.getPossibleStandardName[lowerCased] = propName;\n      }\n\n      if (DOMAttributeNames.hasOwnProperty(propName)) {\n        var attributeName = DOMAttributeNames[propName];\n        propertyInfo.attributeName = attributeName;\n        if (process.env.NODE_ENV !== 'production') {\n          DOMProperty.getPossibleStandardName[attributeName] = propName;\n        }\n      }\n\n      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {\n        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];\n      }\n\n      if (DOMPropertyNames.hasOwnProperty(propName)) {\n        propertyInfo.propertyName = DOMPropertyNames[propName];\n      }\n\n      if (DOMMutationMethods.hasOwnProperty(propName)) {\n        propertyInfo.mutationMethod = DOMMutationMethods[propName];\n      }\n\n      DOMProperty.properties[propName] = propertyInfo;\n    }\n  }\n};\n\n/* eslint-disable max-len */\nvar ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\n/* eslint-enable max-len */\n\n/**\n * DOMProperty exports lookup objects that can be used like functions:\n *\n *   > DOMProperty.isValid['id']\n *   true\n *   > DOMProperty.isValid['foobar']\n *   undefined\n *\n * Although this may be confusing, it performs better in general.\n *\n * @see http://jsperf.com/key-exists\n * @see http://jsperf.com/key-missing\n */\nvar DOMProperty = {\n\n  ID_ATTRIBUTE_NAME: 'data-reactid',\n  ROOT_ATTRIBUTE_NAME: 'data-reactroot',\n\n  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,\n  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040',\n\n  /**\n   * Map from property \"standard name\" to an object with info about how to set\n   * the property in the DOM. Each object contains:\n   *\n   * attributeName:\n   *   Used when rendering markup or with `*Attribute()`.\n   * attributeNamespace\n   * propertyName:\n   *   Used on DOM node instances. (This includes properties that mutate due to\n   *   external factors.)\n   * mutationMethod:\n   *   If non-null, used instead of the property or `setAttribute()` after\n   *   initial render.\n   * mustUseProperty:\n   *   Whether the property must be accessed and mutated as an object property.\n   * hasBooleanValue:\n   *   Whether the property should be removed when set to a falsey value.\n   * hasNumericValue:\n   *   Whether the property must be numeric or parse as a numeric and should be\n   *   removed when set to a falsey value.\n   * hasPositiveNumericValue:\n   *   Whether the property must be positive numeric or parse as a positive\n   *   numeric and should be removed when set to a falsey value.\n   * hasOverloadedBooleanValue:\n   *   Whether the property can be used as a flag as well as with a value.\n   *   Removed when strictly equal to false; present without a value when\n   *   strictly equal to true; present with a value otherwise.\n   */\n  properties: {},\n\n  /**\n   * Mapping from lowercase property names to the properly cased version, used\n   * to warn in the case of missing properties. Available only in __DEV__.\n   *\n   * autofocus is predefined, because adding it to the property whitelist\n   * causes unintended side effects.\n   *\n   * @type {Object}\n   */\n  getPossibleStandardName: process.env.NODE_ENV !== 'production' ? { autofocus: 'autoFocus' } : null,\n\n  /**\n   * All of the isCustomAttribute() functions that have been injected.\n   */\n  _isCustomAttributeFunctions: [],\n\n  /**\n   * Checks whether a property name is a custom attribute.\n   * @method\n   */\n  isCustomAttribute: function (attributeName) {\n    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {\n      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];\n      if (isCustomAttributeFn(attributeName)) {\n        return true;\n      }\n    }\n    return false;\n  },\n\n  injection: DOMPropertyInjection\n};\n\nmodule.exports = DOMProperty;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/DOMProperty.js\n// module id = 15\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactRef = require('./ReactRef');\nvar ReactInstrumentation = require('./ReactInstrumentation');\n\nvar warning = require('fbjs/lib/warning');\n\n/**\n * Helper to call ReactRef.attachRefs with this composite component, split out\n * to avoid allocations in the transaction mount-ready queue.\n */\nfunction attachRefs() {\n  ReactRef.attachRefs(this, this._currentElement);\n}\n\nvar ReactReconciler = {\n\n  /**\n   * Initializes the component, renders markup, and registers event listeners.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {?object} the containing host component instance\n   * @param {?object} info about the host container\n   * @return {?string} Rendered markup to be inserted into the DOM.\n   * @final\n   * @internal\n   */\n  mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID // 0 in production and for roots\n  ) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);\n      }\n    }\n    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);\n    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {\n      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);\n      }\n    }\n    return markup;\n  },\n\n  /**\n   * Returns a value that can be passed to\n   * ReactComponentEnvironment.replaceNodeWithMarkup.\n   */\n  getHostNode: function (internalInstance) {\n    return internalInstance.getHostNode();\n  },\n\n  /**\n   * Releases any resources allocated by `mountComponent`.\n   *\n   * @final\n   * @internal\n   */\n  unmountComponent: function (internalInstance, safely) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);\n      }\n    }\n    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);\n    internalInstance.unmountComponent(safely);\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);\n      }\n    }\n  },\n\n  /**\n   * Update a component using a new element.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {ReactElement} nextElement\n   * @param {ReactReconcileTransaction} transaction\n   * @param {object} context\n   * @internal\n   */\n  receiveComponent: function (internalInstance, nextElement, transaction, context) {\n    var prevElement = internalInstance._currentElement;\n\n    if (nextElement === prevElement && context === internalInstance._context) {\n      // Since elements are immutable after the owner is rendered,\n      // we can do a cheap identity compare here to determine if this is a\n      // superfluous reconcile. It's possible for state to be mutable but such\n      // change should trigger an update of the owner which would recreate\n      // the element. We explicitly check for the existence of an owner since\n      // it's possible for an element created outside a composite to be\n      // deeply mutated and reused.\n\n      // TODO: Bailing out early is just a perf optimization right?\n      // TODO: Removing the return statement should affect correctness?\n      return;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);\n      }\n    }\n\n    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);\n\n    if (refsChanged) {\n      ReactRef.detachRefs(internalInstance, prevElement);\n    }\n\n    internalInstance.receiveComponent(nextElement, transaction, context);\n\n    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {\n      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);\n      }\n    }\n  },\n\n  /**\n   * Flush any dirty changes in a component.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {\n    if (internalInstance._updateBatchNumber !== updateBatchNumber) {\n      // The component's enqueued batch number should always be the current\n      // batch or the following one.\n      process.env.NODE_ENV !== 'production' ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;\n      return;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);\n      }\n    }\n    internalInstance.performUpdateIfNecessary(transaction);\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);\n      }\n    }\n  }\n\n};\n\nmodule.exports = ReactReconciler;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactReconciler.js\n// module id = 16\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar ReactChildren = require('./ReactChildren');\nvar ReactComponent = require('./ReactComponent');\nvar ReactPureComponent = require('./ReactPureComponent');\nvar ReactClass = require('./ReactClass');\nvar ReactDOMFactories = require('./ReactDOMFactories');\nvar ReactElement = require('./ReactElement');\nvar ReactPropTypes = require('./ReactPropTypes');\nvar ReactVersion = require('./ReactVersion');\n\nvar onlyChild = require('./onlyChild');\nvar warning = require('fbjs/lib/warning');\n\nvar createElement = ReactElement.createElement;\nvar createFactory = ReactElement.createFactory;\nvar cloneElement = ReactElement.cloneElement;\n\nif (process.env.NODE_ENV !== 'production') {\n  var canDefineProperty = require('./canDefineProperty');\n  var ReactElementValidator = require('./ReactElementValidator');\n  var didWarnPropTypesDeprecated = false;\n  createElement = ReactElementValidator.createElement;\n  createFactory = ReactElementValidator.createFactory;\n  cloneElement = ReactElementValidator.cloneElement;\n}\n\nvar __spread = _assign;\n\nif (process.env.NODE_ENV !== 'production') {\n  var warned = false;\n  __spread = function () {\n    process.env.NODE_ENV !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;\n    warned = true;\n    return _assign.apply(null, arguments);\n  };\n}\n\nvar React = {\n\n  // Modern\n\n  Children: {\n    map: ReactChildren.map,\n    forEach: ReactChildren.forEach,\n    count: ReactChildren.count,\n    toArray: ReactChildren.toArray,\n    only: onlyChild\n  },\n\n  Component: ReactComponent,\n  PureComponent: ReactPureComponent,\n\n  createElement: createElement,\n  cloneElement: cloneElement,\n  isValidElement: ReactElement.isValidElement,\n\n  // Classic\n\n  PropTypes: ReactPropTypes,\n  createClass: ReactClass.createClass,\n  createFactory: createFactory,\n  createMixin: function (mixin) {\n    // Currently a noop. Will be used to validate and trace mixins.\n    return mixin;\n  },\n\n  // This looks DOM specific but these are actually isomorphic helpers\n  // since they are just generating DOM strings.\n  DOM: ReactDOMFactories,\n\n  version: ReactVersion,\n\n  // Deprecated hook for JSX spread, don't use this for anything.\n  __spread: __spread\n};\n\n// TODO: Fix tests so that this deprecation warning doesn't cause failures.\nif (process.env.NODE_ENV !== 'production') {\n  if (canDefineProperty) {\n    Object.defineProperty(React, 'PropTypes', {\n      get: function () {\n        process.env.NODE_ENV !== 'production' ? warning(didWarnPropTypesDeprecated, 'Accessing PropTypes via the main React package is deprecated. Use ' + 'the prop-types package from npm instead.') : void 0;\n        didWarnPropTypesDeprecated = true;\n        return ReactPropTypes;\n      }\n    });\n  }\n}\n\nmodule.exports = React;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/React.js\n// module id = 17\n// module chunks = 0","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\n\nvar warning = require('fbjs/lib/warning');\nvar canDefineProperty = require('./canDefineProperty');\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar REACT_ELEMENT_TYPE = require('./ReactElementSymbol');\n\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\n\nvar specialPropKeyWarningShown, specialPropRefWarningShown;\n\nfunction hasValidRef(config) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  var warnAboutAccessingKey = function () {\n    if (!specialPropKeyWarningShown) {\n      specialPropKeyWarningShown = true;\n      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;\n    }\n  };\n  warnAboutAccessingKey.isReactWarning = true;\n  Object.defineProperty(props, 'key', {\n    get: warnAboutAccessingKey,\n    configurable: true\n  });\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  var warnAboutAccessingRef = function () {\n    if (!specialPropRefWarningShown) {\n      specialPropRefWarningShown = true;\n      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;\n    }\n  };\n  warnAboutAccessingRef.isReactWarning = true;\n  Object.defineProperty(props, 'ref', {\n    get: warnAboutAccessingRef,\n    configurable: true\n  });\n}\n\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, no instanceof check\n * will work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} key\n * @param {string|object} ref\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @param {*} owner\n * @param {*} props\n * @internal\n */\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allow us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {};\n\n    // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n    if (canDefineProperty) {\n      Object.defineProperty(element._store, 'validated', {\n        configurable: false,\n        enumerable: false,\n        writable: true,\n        value: false\n      });\n      // self and source are DEV only properties.\n      Object.defineProperty(element, '_self', {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: self\n      });\n      // Two elements created in two different places should be considered\n      // equal for testing purposes and therefore we hide it from enumeration.\n      Object.defineProperty(element, '_source', {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: source\n      });\n    } else {\n      element._store.validated = false;\n      element._self = self;\n      element._source = source;\n    }\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n\n/**\n * Create and return a new ReactElement of the given type.\n * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement\n */\nReactElement.createElement = function (type, config, children) {\n  var propName;\n\n  // Reserved names are extracted\n  var props = {};\n\n  var key = null;\n  var ref = null;\n  var self = null;\n  var source = null;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      ref = config.ref;\n    }\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source;\n    // Remaining properties are added to a new props object\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n    props.children = childArray;\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (key || ref) {\n      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {\n        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n        if (key) {\n          defineKeyPropWarningGetter(props, displayName);\n        }\n        if (ref) {\n          defineRefPropWarningGetter(props, displayName);\n        }\n      }\n    }\n  }\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n};\n\n/**\n * Return a function that produces ReactElements of a given type.\n * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory\n */\nReactElement.createFactory = function (type) {\n  var factory = ReactElement.createElement.bind(null, type);\n  // Expose the type on the factory and the prototype so that it can be\n  // easily accessed on elements. E.g. `<Foo />.type === Foo`.\n  // This should not be named `constructor` since this may not be the function\n  // that created the element, and it may not even be a constructor.\n  // Legacy hook TODO: Warn if this is accessed\n  factory.type = type;\n  return factory;\n};\n\nReactElement.cloneAndReplaceKey = function (oldElement, newKey) {\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n\n  return newElement;\n};\n\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement\n */\nReactElement.cloneElement = function (element, config, children) {\n  var propName;\n\n  // Original props are copied\n  var props = _assign({}, element.props);\n\n  // Reserved names are extracted\n  var key = element.key;\n  var ref = element.ref;\n  // Self is preserved since the owner is preserved.\n  var self = element._self;\n  // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n  var source = element._source;\n\n  // Owner will be preserved, unless ref is overridden\n  var owner = element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    // Remaining properties override existing props\n    var defaultProps;\n    if (element.type && element.type.defaultProps) {\n      defaultProps = element.type.defaultProps;\n    }\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        if (config[propName] === undefined && defaultProps !== undefined) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n};\n\n/**\n * Verifies the object is a ReactElement.\n * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a valid component.\n * @final\n */\nReactElement.isValidElement = function (object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n};\n\nmodule.exports = ReactElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactElement.js\n// module id = 18\n// module chunks = 0","module.exports = __webpack_amd_options__;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/amd-options.js\n// module id = 20\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 21\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar emptyObject = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/emptyObject.js\n// module id = 22\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar EventPluginRegistry = require('./EventPluginRegistry');\nvar EventPluginUtils = require('./EventPluginUtils');\nvar ReactErrorUtils = require('./ReactErrorUtils');\n\nvar accumulateInto = require('./accumulateInto');\nvar forEachAccumulated = require('./forEachAccumulated');\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Internal store for event listeners\n */\nvar listenerBank = {};\n\n/**\n * Internal queue of events that have accumulated their dispatches and are\n * waiting to have their dispatches executed.\n */\nvar eventQueue = null;\n\n/**\n * Dispatches an event and releases it back into the pool, unless persistent.\n *\n * @param {?object} event Synthetic event to be dispatched.\n * @param {boolean} simulated If the event is simulated (changes exn behavior)\n * @private\n */\nvar executeDispatchesAndRelease = function (event, simulated) {\n  if (event) {\n    EventPluginUtils.executeDispatchesInOrder(event, simulated);\n\n    if (!event.isPersistent()) {\n      event.constructor.release(event);\n    }\n  }\n};\nvar executeDispatchesAndReleaseSimulated = function (e) {\n  return executeDispatchesAndRelease(e, true);\n};\nvar executeDispatchesAndReleaseTopLevel = function (e) {\n  return executeDispatchesAndRelease(e, false);\n};\n\nvar getDictionaryKey = function (inst) {\n  // Prevents V8 performance issue:\n  // https://github.com/facebook/react/pull/7232\n  return '.' + inst._rootNodeID;\n};\n\nfunction isInteractive(tag) {\n  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';\n}\n\nfunction shouldPreventMouseEvent(name, type, props) {\n  switch (name) {\n    case 'onClick':\n    case 'onClickCapture':\n    case 'onDoubleClick':\n    case 'onDoubleClickCapture':\n    case 'onMouseDown':\n    case 'onMouseDownCapture':\n    case 'onMouseMove':\n    case 'onMouseMoveCapture':\n    case 'onMouseUp':\n    case 'onMouseUpCapture':\n      return !!(props.disabled && isInteractive(type));\n    default:\n      return false;\n  }\n}\n\n/**\n * This is a unified interface for event plugins to be installed and configured.\n *\n * Event plugins can implement the following properties:\n *\n *   `extractEvents` {function(string, DOMEventTarget, string, object): *}\n *     Required. When a top-level event is fired, this method is expected to\n *     extract synthetic events that will in turn be queued and dispatched.\n *\n *   `eventTypes` {object}\n *     Optional, plugins that fire events must publish a mapping of registration\n *     names that are used to register listeners. Values of this mapping must\n *     be objects that contain `registrationName` or `phasedRegistrationNames`.\n *\n *   `executeDispatch` {function(object, function, string)}\n *     Optional, allows plugins to override how an event gets dispatched. By\n *     default, the listener is simply invoked.\n *\n * Each plugin that is injected into `EventsPluginHub` is immediately operable.\n *\n * @public\n */\nvar EventPluginHub = {\n\n  /**\n   * Methods for injecting dependencies.\n   */\n  injection: {\n\n    /**\n     * @param {array} InjectedEventPluginOrder\n     * @public\n     */\n    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,\n\n    /**\n     * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n     */\n    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName\n\n  },\n\n  /**\n   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.\n   *\n   * @param {object} inst The instance, which is the source of events.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @param {function} listener The callback to store.\n   */\n  putListener: function (inst, registrationName, listener) {\n    !(typeof listener === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;\n\n    var key = getDictionaryKey(inst);\n    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});\n    bankForRegistrationName[key] = listener;\n\n    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n    if (PluginModule && PluginModule.didPutListener) {\n      PluginModule.didPutListener(inst, registrationName, listener);\n    }\n  },\n\n  /**\n   * @param {object} inst The instance, which is the source of events.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @return {?function} The stored callback.\n   */\n  getListener: function (inst, registrationName) {\n    // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not\n    // live here; needs to be moved to a better place soon\n    var bankForRegistrationName = listenerBank[registrationName];\n    if (shouldPreventMouseEvent(registrationName, inst._currentElement.type, inst._currentElement.props)) {\n      return null;\n    }\n    var key = getDictionaryKey(inst);\n    return bankForRegistrationName && bankForRegistrationName[key];\n  },\n\n  /**\n   * Deletes a listener from the registration bank.\n   *\n   * @param {object} inst The instance, which is the source of events.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   */\n  deleteListener: function (inst, registrationName) {\n    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n    if (PluginModule && PluginModule.willDeleteListener) {\n      PluginModule.willDeleteListener(inst, registrationName);\n    }\n\n    var bankForRegistrationName = listenerBank[registrationName];\n    // TODO: This should never be null -- when is it?\n    if (bankForRegistrationName) {\n      var key = getDictionaryKey(inst);\n      delete bankForRegistrationName[key];\n    }\n  },\n\n  /**\n   * Deletes all listeners for the DOM element with the supplied ID.\n   *\n   * @param {object} inst The instance, which is the source of events.\n   */\n  deleteAllListeners: function (inst) {\n    var key = getDictionaryKey(inst);\n    for (var registrationName in listenerBank) {\n      if (!listenerBank.hasOwnProperty(registrationName)) {\n        continue;\n      }\n\n      if (!listenerBank[registrationName][key]) {\n        continue;\n      }\n\n      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n      if (PluginModule && PluginModule.willDeleteListener) {\n        PluginModule.willDeleteListener(inst, registrationName);\n      }\n\n      delete listenerBank[registrationName][key];\n    }\n  },\n\n  /**\n   * Allows registered plugins an opportunity to extract events from top-level\n   * native browser events.\n   *\n   * @return {*} An accumulation of synthetic events.\n   * @internal\n   */\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    var events;\n    var plugins = EventPluginRegistry.plugins;\n    for (var i = 0; i < plugins.length; i++) {\n      // Not every plugin in the ordering may be loaded at runtime.\n      var possiblePlugin = plugins[i];\n      if (possiblePlugin) {\n        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);\n        if (extractedEvents) {\n          events = accumulateInto(events, extractedEvents);\n        }\n      }\n    }\n    return events;\n  },\n\n  /**\n   * Enqueues a synthetic event that should be dispatched when\n   * `processEventQueue` is invoked.\n   *\n   * @param {*} events An accumulation of synthetic events.\n   * @internal\n   */\n  enqueueEvents: function (events) {\n    if (events) {\n      eventQueue = accumulateInto(eventQueue, events);\n    }\n  },\n\n  /**\n   * Dispatches all synthetic events on the event queue.\n   *\n   * @internal\n   */\n  processEventQueue: function (simulated) {\n    // Set `eventQueue` to null before processing it so that we can tell if more\n    // events get enqueued while processing.\n    var processingEventQueue = eventQueue;\n    eventQueue = null;\n    if (simulated) {\n      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);\n    } else {\n      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);\n    }\n    !!eventQueue ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;\n    // This would be a good time to rethrow if any of the event handlers threw.\n    ReactErrorUtils.rethrowCaughtError();\n  },\n\n  /**\n   * These are needed for tests only. Do not use!\n   */\n  __purge: function () {\n    listenerBank = {};\n  },\n\n  __getListenerBank: function () {\n    return listenerBank;\n  }\n\n};\n\nmodule.exports = EventPluginHub;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/EventPluginHub.js\n// module id = 23\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar EventPluginHub = require('./EventPluginHub');\nvar EventPluginUtils = require('./EventPluginUtils');\n\nvar accumulateInto = require('./accumulateInto');\nvar forEachAccumulated = require('./forEachAccumulated');\nvar warning = require('fbjs/lib/warning');\n\nvar getListener = EventPluginHub.getListener;\n\n/**\n * Some event types have a notion of different registration names for different\n * \"phases\" of propagation. This finds listeners by a given phase.\n */\nfunction listenerAtPhase(inst, event, propagationPhase) {\n  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];\n  return getListener(inst, registrationName);\n}\n\n/**\n * Tags a `SyntheticEvent` with dispatched listeners. Creating this function\n * here, allows us to not have to bind or create functions for each event.\n * Mutating the event's members allows us to not have to create a wrapping\n * \"dispatch\" object that pairs the event with the listener.\n */\nfunction accumulateDirectionalDispatches(inst, phase, event) {\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;\n  }\n  var listener = listenerAtPhase(inst, event, phase);\n  if (listener) {\n    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\n    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n  }\n}\n\n/**\n * Collect dispatches (must be entirely collected before dispatching - see unit\n * tests). Lazily allocate the array to conserve memory.  We must loop through\n * each event and perform the traversal for each one. We cannot perform a\n * single traversal for the entire collection of events because each event may\n * have a different target.\n */\nfunction accumulateTwoPhaseDispatchesSingle(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);\n  }\n}\n\n/**\n * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.\n */\nfunction accumulateTwoPhaseDispatchesSingleSkipTarget(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    var targetInst = event._targetInst;\n    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;\n    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);\n  }\n}\n\n/**\n * Accumulates without regard to direction, does not look for phased\n * registration names. Same as `accumulateDirectDispatchesSingle` but without\n * requiring that the `dispatchMarker` be the same as the dispatched ID.\n */\nfunction accumulateDispatches(inst, ignoredDirection, event) {\n  if (event && event.dispatchConfig.registrationName) {\n    var registrationName = event.dispatchConfig.registrationName;\n    var listener = getListener(inst, registrationName);\n    if (listener) {\n      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\n      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n    }\n  }\n}\n\n/**\n * Accumulates dispatches on an `SyntheticEvent`, but only for the\n * `dispatchMarker`.\n * @param {SyntheticEvent} event\n */\nfunction accumulateDirectDispatchesSingle(event) {\n  if (event && event.dispatchConfig.registrationName) {\n    accumulateDispatches(event._targetInst, null, event);\n  }\n}\n\nfunction accumulateTwoPhaseDispatches(events) {\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);\n}\n\nfunction accumulateTwoPhaseDispatchesSkipTarget(events) {\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);\n}\n\nfunction accumulateEnterLeaveDispatches(leave, enter, from, to) {\n  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);\n}\n\nfunction accumulateDirectDispatches(events) {\n  forEachAccumulated(events, accumulateDirectDispatchesSingle);\n}\n\n/**\n * A small set of propagation patterns, each of which will accept a small amount\n * of information, and generate a set of \"dispatch ready event objects\" - which\n * are sets of events that have already been annotated with a set of dispatched\n * listener functions/ids. The API is designed this way to discourage these\n * propagation strategies from actually executing the dispatches, since we\n * always want to collect the entire set of dispatches before executing event a\n * single one.\n *\n * @constructor EventPropagators\n */\nvar EventPropagators = {\n  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,\n  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,\n  accumulateDirectDispatches: accumulateDirectDispatches,\n  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches\n};\n\nmodule.exports = EventPropagators;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/EventPropagators.js\n// module id = 24\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\n * instance (key) and the internal representation (value). This allows public\n * methods to accept the user facing instance as an argument and map them back\n * to internal methods.\n */\n\n// TODO: Replace this with ES6: var ReactInstanceMap = new Map();\n\nvar ReactInstanceMap = {\n\n  /**\n   * This API should be called `delete` but we'd have to make sure to always\n   * transform these to strings for IE support. When this transform is fully\n   * supported we can rename it.\n   */\n  remove: function (key) {\n    key._reactInternalInstance = undefined;\n  },\n\n  get: function (key) {\n    return key._reactInternalInstance;\n  },\n\n  has: function (key) {\n    return key._reactInternalInstance !== undefined;\n  },\n\n  set: function (key, value) {\n    key._reactInternalInstance = value;\n  }\n\n};\n\nmodule.exports = ReactInstanceMap;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactInstanceMap.js\n// module id = 25\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\nvar getEventTarget = require('./getEventTarget');\n\n/**\n * @interface UIEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar UIEventInterface = {\n  view: function (event) {\n    if (event.view) {\n      return event.view;\n    }\n\n    var target = getEventTarget(event);\n    if (target.window === target) {\n      // target is a window object\n      return target;\n    }\n\n    var doc = target.ownerDocument;\n    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n    if (doc) {\n      return doc.defaultView || doc.parentWindow;\n    } else {\n      return window;\n    }\n  },\n  detail: function (event) {\n    return event.detail || 0;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticEvent}\n */\nfunction SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);\n\nmodule.exports = SyntheticUIEvent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticUIEvent.js\n// module id = 26\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar EventPluginRegistry = require('./EventPluginRegistry');\nvar ReactEventEmitterMixin = require('./ReactEventEmitterMixin');\nvar ViewportMetrics = require('./ViewportMetrics');\n\nvar getVendorPrefixedEventName = require('./getVendorPrefixedEventName');\nvar isEventSupported = require('./isEventSupported');\n\n/**\n * Summary of `ReactBrowserEventEmitter` event handling:\n *\n *  - Top-level delegation is used to trap most native browser events. This\n *    may only occur in the main thread and is the responsibility of\n *    ReactEventListener, which is injected and can therefore support pluggable\n *    event sources. This is the only work that occurs in the main thread.\n *\n *  - We normalize and de-duplicate events to account for browser quirks. This\n *    may be done in the worker thread.\n *\n *  - Forward these native events (with the associated top-level type used to\n *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want\n *    to extract any synthetic events.\n *\n *  - The `EventPluginHub` will then process each event by annotating them with\n *    \"dispatches\", a sequence of listeners and IDs that care about that event.\n *\n *  - The `EventPluginHub` then dispatches the events.\n *\n * Overview of React and the event system:\n *\n * +------------+    .\n * |    DOM     |    .\n * +------------+    .\n *       |           .\n *       v           .\n * +------------+    .\n * | ReactEvent |    .\n * |  Listener  |    .\n * +------------+    .                         +-----------+\n *       |           .               +--------+|SimpleEvent|\n *       |           .               |         |Plugin     |\n * +-----|------+    .               v         +-----------+\n * |     |      |    .    +--------------+                    +------------+\n * |     +-----------.--->|EventPluginHub|                    |    Event   |\n * |            |    .    |              |     +-----------+  | Propagators|\n * | ReactEvent |    .    |              |     |TapEvent   |  |------------|\n * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|\n * |            |    .    |              |     +-----------+  |  utilities |\n * |     +-----------.--->|              |                    +------------+\n * |     |      |    .    +--------------+\n * +-----|------+    .                ^        +-----------+\n *       |           .                |        |Enter/Leave|\n *       +           .                +-------+|Plugin     |\n * +-------------+   .                         +-----------+\n * | application |   .\n * |-------------|   .\n * |             |   .\n * |             |   .\n * +-------------+   .\n *                   .\n *    React Core     .  General Purpose Event Plugin System\n */\n\nvar hasEventPageXY;\nvar alreadyListeningTo = {};\nvar isMonitoringScrollValue = false;\nvar reactTopListenersCounter = 0;\n\n// For events like 'submit' which don't consistently bubble (which we trap at a\n// lower node than `document`), binding at `document` would cause duplicate\n// events so we don't include them here\nvar topEventMapping = {\n  topAbort: 'abort',\n  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',\n  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',\n  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',\n  topBlur: 'blur',\n  topCanPlay: 'canplay',\n  topCanPlayThrough: 'canplaythrough',\n  topChange: 'change',\n  topClick: 'click',\n  topCompositionEnd: 'compositionend',\n  topCompositionStart: 'compositionstart',\n  topCompositionUpdate: 'compositionupdate',\n  topContextMenu: 'contextmenu',\n  topCopy: 'copy',\n  topCut: 'cut',\n  topDoubleClick: 'dblclick',\n  topDrag: 'drag',\n  topDragEnd: 'dragend',\n  topDragEnter: 'dragenter',\n  topDragExit: 'dragexit',\n  topDragLeave: 'dragleave',\n  topDragOver: 'dragover',\n  topDragStart: 'dragstart',\n  topDrop: 'drop',\n  topDurationChange: 'durationchange',\n  topEmptied: 'emptied',\n  topEncrypted: 'encrypted',\n  topEnded: 'ended',\n  topError: 'error',\n  topFocus: 'focus',\n  topInput: 'input',\n  topKeyDown: 'keydown',\n  topKeyPress: 'keypress',\n  topKeyUp: 'keyup',\n  topLoadedData: 'loadeddata',\n  topLoadedMetadata: 'loadedmetadata',\n  topLoadStart: 'loadstart',\n  topMouseDown: 'mousedown',\n  topMouseMove: 'mousemove',\n  topMouseOut: 'mouseout',\n  topMouseOver: 'mouseover',\n  topMouseUp: 'mouseup',\n  topPaste: 'paste',\n  topPause: 'pause',\n  topPlay: 'play',\n  topPlaying: 'playing',\n  topProgress: 'progress',\n  topRateChange: 'ratechange',\n  topScroll: 'scroll',\n  topSeeked: 'seeked',\n  topSeeking: 'seeking',\n  topSelectionChange: 'selectionchange',\n  topStalled: 'stalled',\n  topSuspend: 'suspend',\n  topTextInput: 'textInput',\n  topTimeUpdate: 'timeupdate',\n  topTouchCancel: 'touchcancel',\n  topTouchEnd: 'touchend',\n  topTouchMove: 'touchmove',\n  topTouchStart: 'touchstart',\n  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',\n  topVolumeChange: 'volumechange',\n  topWaiting: 'waiting',\n  topWheel: 'wheel'\n};\n\n/**\n * To ensure no conflicts with other potential React instances on the page\n */\nvar topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);\n\nfunction getListeningForDocument(mountAt) {\n  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`\n  // directly.\n  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {\n    mountAt[topListenersIDKey] = reactTopListenersCounter++;\n    alreadyListeningTo[mountAt[topListenersIDKey]] = {};\n  }\n  return alreadyListeningTo[mountAt[topListenersIDKey]];\n}\n\n/**\n * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For\n * example:\n *\n *   EventPluginHub.putListener('myID', 'onClick', myFunction);\n *\n * This would allocate a \"registration\" of `('onClick', myFunction)` on 'myID'.\n *\n * @internal\n */\nvar ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {\n\n  /**\n   * Injectable event backend\n   */\n  ReactEventListener: null,\n\n  injection: {\n    /**\n     * @param {object} ReactEventListener\n     */\n    injectReactEventListener: function (ReactEventListener) {\n      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);\n      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;\n    }\n  },\n\n  /**\n   * Sets whether or not any created callbacks should be enabled.\n   *\n   * @param {boolean} enabled True if callbacks should be enabled.\n   */\n  setEnabled: function (enabled) {\n    if (ReactBrowserEventEmitter.ReactEventListener) {\n      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);\n    }\n  },\n\n  /**\n   * @return {boolean} True if callbacks are enabled.\n   */\n  isEnabled: function () {\n    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());\n  },\n\n  /**\n   * We listen for bubbled touch events on the document object.\n   *\n   * Firefox v8.01 (and possibly others) exhibited strange behavior when\n   * mounting `onmousemove` events at some node that was not the document\n   * element. The symptoms were that if your mouse is not moving over something\n   * contained within that mount point (for example on the background) the\n   * top-level listeners for `onmousemove` won't be called. However, if you\n   * register the `mousemove` on the document object, then it will of course\n   * catch all `mousemove`s. This along with iOS quirks, justifies restricting\n   * top-level listeners to the document object only, at least for these\n   * movement types of events and possibly all events.\n   *\n   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n   *\n   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but\n   * they bubble to document.\n   *\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @param {object} contentDocumentHandle Document which owns the container\n   */\n  listenTo: function (registrationName, contentDocumentHandle) {\n    var mountAt = contentDocumentHandle;\n    var isListening = getListeningForDocument(mountAt);\n    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];\n\n    for (var i = 0; i < dependencies.length; i++) {\n      var dependency = dependencies[i];\n      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {\n        if (dependency === 'topWheel') {\n          if (isEventSupported('wheel')) {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'wheel', mountAt);\n          } else if (isEventSupported('mousewheel')) {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'mousewheel', mountAt);\n          } else {\n            // Firefox needs to capture a different mouse scroll event.\n            // @see http://www.quirksmode.org/dom/events/tests/scroll.html\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'DOMMouseScroll', mountAt);\n          }\n        } else if (dependency === 'topScroll') {\n\n          if (isEventSupported('scroll', true)) {\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topScroll', 'scroll', mountAt);\n          } else {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topScroll', 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);\n          }\n        } else if (dependency === 'topFocus' || dependency === 'topBlur') {\n\n          if (isEventSupported('focus', true)) {\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topFocus', 'focus', mountAt);\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topBlur', 'blur', mountAt);\n          } else if (isEventSupported('focusin')) {\n            // IE has `focusin` and `focusout` events which bubble.\n            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topFocus', 'focusin', mountAt);\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topBlur', 'focusout', mountAt);\n          }\n\n          // to make sure blur and focus event listeners are only attached once\n          isListening.topBlur = true;\n          isListening.topFocus = true;\n        } else if (topEventMapping.hasOwnProperty(dependency)) {\n          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);\n        }\n\n        isListening[dependency] = true;\n      }\n    }\n  },\n\n  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {\n    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);\n  },\n\n  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {\n    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);\n  },\n\n  /**\n   * Protect against document.createEvent() returning null\n   * Some popup blocker extensions appear to do this:\n   * https://github.com/facebook/react/issues/6887\n   */\n  supportsEventPageXY: function () {\n    if (!document.createEvent) {\n      return false;\n    }\n    var ev = document.createEvent('MouseEvent');\n    return ev != null && 'pageX' in ev;\n  },\n\n  /**\n   * Listens to window scroll and resize events. We cache scroll values so that\n   * application code can access them without triggering reflows.\n   *\n   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when\n   * pageX/pageY isn't supported (legacy browsers).\n   *\n   * NOTE: Scroll events do not bubble.\n   *\n   * @see http://www.quirksmode.org/dom/events/scroll.html\n   */\n  ensureScrollValueMonitoring: function () {\n    if (hasEventPageXY === undefined) {\n      hasEventPageXY = ReactBrowserEventEmitter.supportsEventPageXY();\n    }\n    if (!hasEventPageXY && !isMonitoringScrollValue) {\n      var refresh = ViewportMetrics.refreshScrollValues;\n      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);\n      isMonitoringScrollValue = true;\n    }\n  }\n\n});\n\nmodule.exports = ReactBrowserEventEmitter;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactBrowserEventEmitter.js\n// module id = 27\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\nvar ViewportMetrics = require('./ViewportMetrics');\n\nvar getEventModifierState = require('./getEventModifierState');\n\n/**\n * @interface MouseEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar MouseEventInterface = {\n  screenX: null,\n  screenY: null,\n  clientX: null,\n  clientY: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  getModifierState: getEventModifierState,\n  button: function (event) {\n    // Webkit, Firefox, IE9+\n    // which:  1 2 3\n    // button: 0 1 2 (standard)\n    var button = event.button;\n    if ('which' in event) {\n      return button;\n    }\n    // IE<9\n    // which:  undefined\n    // button: 0 0 0\n    // button: 1 4 2 (onmouseup)\n    return button === 2 ? 2 : button === 4 ? 1 : 0;\n  },\n  buttons: null,\n  relatedTarget: function (event) {\n    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);\n  },\n  // \"Proprietary\" Interface.\n  pageX: function (event) {\n    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;\n  },\n  pageY: function (event) {\n    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);\n\nmodule.exports = SyntheticMouseEvent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticMouseEvent.js\n// module id = 28\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar OBSERVED_ERROR = {};\n\n/**\n * `Transaction` creates a black box that is able to wrap any method such that\n * certain invariants are maintained before and after the method is invoked\n * (Even if an exception is thrown while invoking the wrapped method). Whoever\n * instantiates a transaction can provide enforcers of the invariants at\n * creation time. The `Transaction` class itself will supply one additional\n * automatic invariant for you - the invariant that any transaction instance\n * should not be run while it is already being run. You would typically create a\n * single instance of a `Transaction` for reuse multiple times, that potentially\n * is used to wrap several different methods. Wrappers are extremely simple -\n * they only require implementing two methods.\n *\n * <pre>\n *                       wrappers (injected at creation time)\n *                                      +        +\n *                                      |        |\n *                    +-----------------|--------|--------------+\n *                    |                 v        |              |\n *                    |      +---------------+   |              |\n *                    |   +--|    wrapper1   |---|----+         |\n *                    |   |  +---------------+   v    |         |\n *                    |   |          +-------------+  |         |\n *                    |   |     +----|   wrapper2  |--------+   |\n *                    |   |     |    +-------------+  |     |   |\n *                    |   |     |                     |     |   |\n *                    |   v     v                     v     v   | wrapper\n *                    | +---+ +---+   +---------+   +---+ +---+ | invariants\n * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained\n * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | +---+ +---+   +---------+   +---+ +---+ |\n *                    |  initialize                    close    |\n *                    +-----------------------------------------+\n * </pre>\n *\n * Use cases:\n * - Preserving the input selection ranges before/after reconciliation.\n *   Restoring selection even in the event of an unexpected error.\n * - Deactivating events while rearranging the DOM, preventing blurs/focuses,\n *   while guaranteeing that afterwards, the event system is reactivated.\n * - Flushing a queue of collected DOM mutations to the main UI thread after a\n *   reconciliation takes place in a worker thread.\n * - Invoking any collected `componentDidUpdate` callbacks after rendering new\n *   content.\n * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue\n *   to preserve the `scrollTop` (an automatic scroll aware DOM).\n * - (Future use case): Layout calculations before and after DOM updates.\n *\n * Transactional plugin API:\n * - A module that has an `initialize` method that returns any precomputation.\n * - and a `close` method that accepts the precomputation. `close` is invoked\n *   when the wrapped process is completed, or has failed.\n *\n * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules\n * that implement `initialize` and `close`.\n * @return {Transaction} Single transaction for reuse in thread.\n *\n * @class Transaction\n */\nvar TransactionImpl = {\n  /**\n   * Sets up this instance so that it is prepared for collecting metrics. Does\n   * so such that this setup method may be used on an instance that is already\n   * initialized, in a way that does not consume additional memory upon reuse.\n   * That can be useful if you decide to make your subclass of this mixin a\n   * \"PooledClass\".\n   */\n  reinitializeTransaction: function () {\n    this.transactionWrappers = this.getTransactionWrappers();\n    if (this.wrapperInitData) {\n      this.wrapperInitData.length = 0;\n    } else {\n      this.wrapperInitData = [];\n    }\n    this._isInTransaction = false;\n  },\n\n  _isInTransaction: false,\n\n  /**\n   * @abstract\n   * @return {Array<TransactionWrapper>} Array of transaction wrappers.\n   */\n  getTransactionWrappers: null,\n\n  isInTransaction: function () {\n    return !!this._isInTransaction;\n  },\n\n  /**\n   * Executes the function within a safety window. Use this for the top level\n   * methods that result in large amounts of computation/mutations that would\n   * need to be safety checked. The optional arguments helps prevent the need\n   * to bind in many cases.\n   *\n   * @param {function} method Member of scope to call.\n   * @param {Object} scope Scope to invoke from.\n   * @param {Object?=} a Argument to pass to the method.\n   * @param {Object?=} b Argument to pass to the method.\n   * @param {Object?=} c Argument to pass to the method.\n   * @param {Object?=} d Argument to pass to the method.\n   * @param {Object?=} e Argument to pass to the method.\n   * @param {Object?=} f Argument to pass to the method.\n   *\n   * @return {*} Return value from `method`.\n   */\n  perform: function (method, scope, a, b, c, d, e, f) {\n    !!this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;\n    var errorThrown;\n    var ret;\n    try {\n      this._isInTransaction = true;\n      // Catching errors makes debugging more difficult, so we start with\n      // errorThrown set to true before setting it to false after calling\n      // close -- if it's still set to true in the finally block, it means\n      // one of these calls threw.\n      errorThrown = true;\n      this.initializeAll(0);\n      ret = method.call(scope, a, b, c, d, e, f);\n      errorThrown = false;\n    } finally {\n      try {\n        if (errorThrown) {\n          // If `method` throws, prefer to show that stack trace over any thrown\n          // by invoking `closeAll`.\n          try {\n            this.closeAll(0);\n          } catch (err) {}\n        } else {\n          // Since `method` didn't throw, we don't want to silence the exception\n          // here.\n          this.closeAll(0);\n        }\n      } finally {\n        this._isInTransaction = false;\n      }\n    }\n    return ret;\n  },\n\n  initializeAll: function (startIndex) {\n    var transactionWrappers = this.transactionWrappers;\n    for (var i = startIndex; i < transactionWrappers.length; i++) {\n      var wrapper = transactionWrappers[i];\n      try {\n        // Catching errors makes debugging more difficult, so we start with the\n        // OBSERVED_ERROR state before overwriting it with the real return value\n        // of initialize -- if it's still set to OBSERVED_ERROR in the finally\n        // block, it means wrapper.initialize threw.\n        this.wrapperInitData[i] = OBSERVED_ERROR;\n        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;\n      } finally {\n        if (this.wrapperInitData[i] === OBSERVED_ERROR) {\n          // The initializer for wrapper i threw an error; initialize the\n          // remaining wrappers but silence any exceptions from them to ensure\n          // that the first error is the one to bubble up.\n          try {\n            this.initializeAll(i + 1);\n          } catch (err) {}\n        }\n      }\n    }\n  },\n\n  /**\n   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into\n   * them the respective return values of `this.transactionWrappers.init[i]`\n   * (`close`rs that correspond to initializers that failed will not be\n   * invoked).\n   */\n  closeAll: function (startIndex) {\n    !this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;\n    var transactionWrappers = this.transactionWrappers;\n    for (var i = startIndex; i < transactionWrappers.length; i++) {\n      var wrapper = transactionWrappers[i];\n      var initData = this.wrapperInitData[i];\n      var errorThrown;\n      try {\n        // Catching errors makes debugging more difficult, so we start with\n        // errorThrown set to true before setting it to false after calling\n        // close -- if it's still set to true in the finally block, it means\n        // wrapper.close threw.\n        errorThrown = true;\n        if (initData !== OBSERVED_ERROR && wrapper.close) {\n          wrapper.close.call(this, initData);\n        }\n        errorThrown = false;\n      } finally {\n        if (errorThrown) {\n          // The closer for wrapper i threw an error; close the remaining\n          // wrappers but silence any exceptions from them to ensure that the\n          // first error is the one to bubble up.\n          try {\n            this.closeAll(i + 1);\n          } catch (e) {}\n        }\n      }\n    }\n    this.wrapperInitData.length = 0;\n  }\n};\n\nmodule.exports = TransactionImpl;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/Transaction.js\n// module id = 29\n// module chunks = 0","/**\n * Copyright 2016-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * Based on the escape-html library, which is used under the MIT License below:\n *\n * Copyright (c) 2012-2013 TJ Holowaychuk\n * Copyright (c) 2015 Andreas Lubbe\n * Copyright (c) 2015 Tiancheng \"Timothy\" Gu\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * 'Software'), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n */\n\n'use strict';\n\n// code copied and modified from escape-html\n/**\n * Module variables.\n * @private\n */\n\nvar matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        // \"\n        escape = '&quot;';\n        break;\n      case 38:\n        // &\n        escape = '&amp;';\n        break;\n      case 39:\n        // '\n        escape = '&#x27;'; // modified from escape-html; used to be '&#39'\n        break;\n      case 60:\n        // <\n        escape = '&lt;';\n        break;\n      case 62:\n        // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\n}\n// end code copied and modified from escape-html\n\n\n/**\n * Escapes text to prevent scripting attacks.\n *\n * @param {*} text Text value to escape.\n * @return {string} An escaped string.\n */\nfunction escapeTextContentForBrowser(text) {\n  if (typeof text === 'boolean' || typeof text === 'number') {\n    // this shortcircuit helps perf for types that we know will never have\n    // special characters, especially given that this function is used often\n    // for numeric dom ids.\n    return '' + text;\n  }\n  return escapeHtml(text);\n}\n\nmodule.exports = escapeTextContentForBrowser;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/escapeTextContentForBrowser.js\n// module id = 30\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar DOMNamespaces = require('./DOMNamespaces');\n\nvar WHITESPACE_TEST = /^[ \\r\\n\\t\\f]/;\nvar NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \\r\\n\\t\\f\\/>]/;\n\nvar createMicrosoftUnsafeLocalFunction = require('./createMicrosoftUnsafeLocalFunction');\n\n// SVG temp container for IE lacking innerHTML\nvar reusableSVGContainer;\n\n/**\n * Set the innerHTML property of a node, ensuring that whitespace is preserved\n * even in IE8.\n *\n * @param {DOMElement} node\n * @param {string} html\n * @internal\n */\nvar setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {\n  // IE does not have innerHTML for SVG nodes, so instead we inject the\n  // new markup in a temp node and then move the child nodes across into\n  // the target node\n  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {\n    reusableSVGContainer = reusableSVGContainer || document.createElement('div');\n    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';\n    var svgNode = reusableSVGContainer.firstChild;\n    while (svgNode.firstChild) {\n      node.appendChild(svgNode.firstChild);\n    }\n  } else {\n    node.innerHTML = html;\n  }\n});\n\nif (ExecutionEnvironment.canUseDOM) {\n  // IE8: When updating a just created node with innerHTML only leading\n  // whitespace is removed. When updating an existing node with innerHTML\n  // whitespace in root TextNodes is also collapsed.\n  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html\n\n  // Feature detection; only IE8 is known to behave improperly like this.\n  var testElement = document.createElement('div');\n  testElement.innerHTML = ' ';\n  if (testElement.innerHTML === '') {\n    setInnerHTML = function (node, html) {\n      // Magic theory: IE8 supposedly differentiates between added and updated\n      // nodes when processing innerHTML, innerHTML on updated nodes suffers\n      // from worse whitespace behavior. Re-adding a node like this triggers\n      // the initial and more favorable whitespace behavior.\n      // TODO: What to do on a detached node?\n      if (node.parentNode) {\n        node.parentNode.replaceChild(node, node);\n      }\n\n      // We also implement a workaround for non-visible tags disappearing into\n      // thin air on IE8, this only happens if there is no visible text\n      // in-front of the non-visible tags. Piggyback on the whitespace fix\n      // and simply check if any non-visible tags appear in the source.\n      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {\n        // Recover leading whitespace by temporarily prepending any character.\n        // \\uFEFF has the potential advantage of being zero-width/invisible.\n        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode\n        // in hopes that this is preserved even if \"\\uFEFF\" is transformed to\n        // the actual Unicode character (by Babel, for example).\n        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216\n        node.innerHTML = String.fromCharCode(0xFEFF) + html;\n\n        // deleteData leaves an empty `TextNode` which offsets the index of all\n        // children. Definitely want to avoid this.\n        var textNode = node.firstChild;\n        if (textNode.data.length === 1) {\n          node.removeChild(textNode);\n        } else {\n          textNode.deleteData(0, 1);\n        }\n      } else {\n        node.innerHTML = html;\n      }\n    };\n  }\n  testElement = null;\n}\n\nmodule.exports = setInnerHTML;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/setInnerHTML.js\n// module id = 31\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n * \n */\n\n/*eslint-disable no-self-compare */\n\n'use strict';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Added the nonzero y check to make Flow happy, but it is redundant\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n  }\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqual;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/shallowEqual.js\n// module id = 32\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar DOMLazyTree = require('./DOMLazyTree');\nvar Danger = require('./Danger');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactInstrumentation = require('./ReactInstrumentation');\n\nvar createMicrosoftUnsafeLocalFunction = require('./createMicrosoftUnsafeLocalFunction');\nvar setInnerHTML = require('./setInnerHTML');\nvar setTextContent = require('./setTextContent');\n\nfunction getNodeAfter(parentNode, node) {\n  // Special case for text components, which return [open, close] comments\n  // from getHostNode.\n  if (Array.isArray(node)) {\n    node = node[1];\n  }\n  return node ? node.nextSibling : parentNode.firstChild;\n}\n\n/**\n * Inserts `childNode` as a child of `parentNode` at the `index`.\n *\n * @param {DOMElement} parentNode Parent node in which to insert.\n * @param {DOMElement} childNode Child node to insert.\n * @param {number} index Index at which to insert the child.\n * @internal\n */\nvar insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {\n  // We rely exclusively on `insertBefore(node, null)` instead of also using\n  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so\n  // we are careful to use `null`.)\n  parentNode.insertBefore(childNode, referenceNode);\n});\n\nfunction insertLazyTreeChildAt(parentNode, childTree, referenceNode) {\n  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);\n}\n\nfunction moveChild(parentNode, childNode, referenceNode) {\n  if (Array.isArray(childNode)) {\n    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);\n  } else {\n    insertChildAt(parentNode, childNode, referenceNode);\n  }\n}\n\nfunction removeChild(parentNode, childNode) {\n  if (Array.isArray(childNode)) {\n    var closingComment = childNode[1];\n    childNode = childNode[0];\n    removeDelimitedText(parentNode, childNode, closingComment);\n    parentNode.removeChild(closingComment);\n  }\n  parentNode.removeChild(childNode);\n}\n\nfunction moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {\n  var node = openingComment;\n  while (true) {\n    var nextNode = node.nextSibling;\n    insertChildAt(parentNode, node, referenceNode);\n    if (node === closingComment) {\n      break;\n    }\n    node = nextNode;\n  }\n}\n\nfunction removeDelimitedText(parentNode, startNode, closingComment) {\n  while (true) {\n    var node = startNode.nextSibling;\n    if (node === closingComment) {\n      // The closing comment is removed by ReactMultiChild.\n      break;\n    } else {\n      parentNode.removeChild(node);\n    }\n  }\n}\n\nfunction replaceDelimitedText(openingComment, closingComment, stringText) {\n  var parentNode = openingComment.parentNode;\n  var nodeAfterComment = openingComment.nextSibling;\n  if (nodeAfterComment === closingComment) {\n    // There are no text nodes between the opening and closing comments; insert\n    // a new one if stringText isn't empty.\n    if (stringText) {\n      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);\n    }\n  } else {\n    if (stringText) {\n      // Set the text content of the first node after the opening comment, and\n      // remove all following nodes up until the closing comment.\n      setTextContent(nodeAfterComment, stringText);\n      removeDelimitedText(parentNode, nodeAfterComment, closingComment);\n    } else {\n      removeDelimitedText(parentNode, openingComment, closingComment);\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    ReactInstrumentation.debugTool.onHostOperation({\n      instanceID: ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID,\n      type: 'replace text',\n      payload: stringText\n    });\n  }\n}\n\nvar dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;\nif (process.env.NODE_ENV !== 'production') {\n  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {\n    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);\n    if (prevInstance._debugID !== 0) {\n      ReactInstrumentation.debugTool.onHostOperation({\n        instanceID: prevInstance._debugID,\n        type: 'replace with',\n        payload: markup.toString()\n      });\n    } else {\n      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);\n      if (nextInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onHostOperation({\n          instanceID: nextInstance._debugID,\n          type: 'mount',\n          payload: markup.toString()\n        });\n      }\n    }\n  };\n}\n\n/**\n * Operations for updating with DOM children.\n */\nvar DOMChildrenOperations = {\n\n  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,\n\n  replaceDelimitedText: replaceDelimitedText,\n\n  /**\n   * Updates a component's children by processing a series of updates. The\n   * update configurations are each expected to have a `parentNode` property.\n   *\n   * @param {array<object>} updates List of update configurations.\n   * @internal\n   */\n  processUpdates: function (parentNode, updates) {\n    if (process.env.NODE_ENV !== 'production') {\n      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;\n    }\n\n    for (var k = 0; k < updates.length; k++) {\n      var update = updates[k];\n      switch (update.type) {\n        case 'INSERT_MARKUP':\n          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));\n          if (process.env.NODE_ENV !== 'production') {\n            ReactInstrumentation.debugTool.onHostOperation({\n              instanceID: parentNodeDebugID,\n              type: 'insert child',\n              payload: { toIndex: update.toIndex, content: update.content.toString() }\n            });\n          }\n          break;\n        case 'MOVE_EXISTING':\n          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));\n          if (process.env.NODE_ENV !== 'production') {\n            ReactInstrumentation.debugTool.onHostOperation({\n              instanceID: parentNodeDebugID,\n              type: 'move child',\n              payload: { fromIndex: update.fromIndex, toIndex: update.toIndex }\n            });\n          }\n          break;\n        case 'SET_MARKUP':\n          setInnerHTML(parentNode, update.content);\n          if (process.env.NODE_ENV !== 'production') {\n            ReactInstrumentation.debugTool.onHostOperation({\n              instanceID: parentNodeDebugID,\n              type: 'replace children',\n              payload: update.content.toString()\n            });\n          }\n          break;\n        case 'TEXT_CONTENT':\n          setTextContent(parentNode, update.content);\n          if (process.env.NODE_ENV !== 'production') {\n            ReactInstrumentation.debugTool.onHostOperation({\n              instanceID: parentNodeDebugID,\n              type: 'replace text',\n              payload: update.content.toString()\n            });\n          }\n          break;\n        case 'REMOVE_NODE':\n          removeChild(parentNode, update.fromNode);\n          if (process.env.NODE_ENV !== 'production') {\n            ReactInstrumentation.debugTool.onHostOperation({\n              instanceID: parentNodeDebugID,\n              type: 'remove child',\n              payload: { fromIndex: update.fromIndex }\n            });\n          }\n          break;\n      }\n    }\n  }\n\n};\n\nmodule.exports = DOMChildrenOperations;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/DOMChildrenOperations.js\n// module id = 33\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar DOMNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg'\n};\n\nmodule.exports = DOMNamespaces;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/DOMNamespaces.js\n// module id = 34\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Injectable ordering of event plugins.\n */\nvar eventPluginOrder = null;\n\n/**\n * Injectable mapping from names to event plugin modules.\n */\nvar namesToPlugins = {};\n\n/**\n * Recomputes the plugin list using the injected plugins and plugin ordering.\n *\n * @private\n */\nfunction recomputePluginOrdering() {\n  if (!eventPluginOrder) {\n    // Wait until an `eventPluginOrder` is injected.\n    return;\n  }\n  for (var pluginName in namesToPlugins) {\n    var pluginModule = namesToPlugins[pluginName];\n    var pluginIndex = eventPluginOrder.indexOf(pluginName);\n    !(pluginIndex > -1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;\n    if (EventPluginRegistry.plugins[pluginIndex]) {\n      continue;\n    }\n    !pluginModule.extractEvents ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;\n    EventPluginRegistry.plugins[pluginIndex] = pluginModule;\n    var publishedEvents = pluginModule.eventTypes;\n    for (var eventName in publishedEvents) {\n      !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;\n    }\n  }\n}\n\n/**\n * Publishes an event so that it can be dispatched by the supplied plugin.\n *\n * @param {object} dispatchConfig Dispatch configuration for the event.\n * @param {object} PluginModule Plugin publishing the event.\n * @return {boolean} True if the event was successfully published.\n * @private\n */\nfunction publishEventForPlugin(dispatchConfig, pluginModule, eventName) {\n  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;\n  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;\n\n  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;\n  if (phasedRegistrationNames) {\n    for (var phaseName in phasedRegistrationNames) {\n      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {\n        var phasedRegistrationName = phasedRegistrationNames[phaseName];\n        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);\n      }\n    }\n    return true;\n  } else if (dispatchConfig.registrationName) {\n    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Publishes a registration name that is used to identify dispatched events and\n * can be used with `EventPluginHub.putListener` to register listeners.\n *\n * @param {string} registrationName Registration name to add.\n * @param {object} PluginModule Plugin publishing the event.\n * @private\n */\nfunction publishRegistrationName(registrationName, pluginModule, eventName) {\n  !!EventPluginRegistry.registrationNameModules[registrationName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;\n  EventPluginRegistry.registrationNameModules[registrationName] = pluginModule;\n  EventPluginRegistry.registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;\n\n  if (process.env.NODE_ENV !== 'production') {\n    var lowerCasedName = registrationName.toLowerCase();\n    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;\n\n    if (registrationName === 'onDoubleClick') {\n      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;\n    }\n  }\n}\n\n/**\n * Registers plugins so that they can extract and dispatch events.\n *\n * @see {EventPluginHub}\n */\nvar EventPluginRegistry = {\n\n  /**\n   * Ordered list of injected plugins.\n   */\n  plugins: [],\n\n  /**\n   * Mapping from event name to dispatch config\n   */\n  eventNameDispatchConfigs: {},\n\n  /**\n   * Mapping from registration name to plugin module\n   */\n  registrationNameModules: {},\n\n  /**\n   * Mapping from registration name to event name\n   */\n  registrationNameDependencies: {},\n\n  /**\n   * Mapping from lowercase registration names to the properly cased version,\n   * used to warn in the case of missing event handlers. Available\n   * only in __DEV__.\n   * @type {Object}\n   */\n  possibleRegistrationNames: process.env.NODE_ENV !== 'production' ? {} : null,\n  // Trust the developer to only use possibleRegistrationNames in __DEV__\n\n  /**\n   * Injects an ordering of plugins (by plugin name). This allows the ordering\n   * to be decoupled from injection of the actual plugins so that ordering is\n   * always deterministic regardless of packaging, on-the-fly injection, etc.\n   *\n   * @param {array} InjectedEventPluginOrder\n   * @internal\n   * @see {EventPluginHub.injection.injectEventPluginOrder}\n   */\n  injectEventPluginOrder: function (injectedEventPluginOrder) {\n    !!eventPluginOrder ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;\n    // Clone the ordering so it cannot be dynamically mutated.\n    eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);\n    recomputePluginOrdering();\n  },\n\n  /**\n   * Injects plugins to be used by `EventPluginHub`. The plugin names must be\n   * in the ordering injected by `injectEventPluginOrder`.\n   *\n   * Plugins can be injected as part of page initialization or on-the-fly.\n   *\n   * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n   * @internal\n   * @see {EventPluginHub.injection.injectEventPluginsByName}\n   */\n  injectEventPluginsByName: function (injectedNamesToPlugins) {\n    var isOrderingDirty = false;\n    for (var pluginName in injectedNamesToPlugins) {\n      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {\n        continue;\n      }\n      var pluginModule = injectedNamesToPlugins[pluginName];\n      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {\n        !!namesToPlugins[pluginName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;\n        namesToPlugins[pluginName] = pluginModule;\n        isOrderingDirty = true;\n      }\n    }\n    if (isOrderingDirty) {\n      recomputePluginOrdering();\n    }\n  },\n\n  /**\n   * Looks up the plugin for the supplied event.\n   *\n   * @param {object} event A synthetic event.\n   * @return {?object} The plugin that created the supplied event.\n   * @internal\n   */\n  getPluginModuleForEvent: function (event) {\n    var dispatchConfig = event.dispatchConfig;\n    if (dispatchConfig.registrationName) {\n      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;\n    }\n    if (dispatchConfig.phasedRegistrationNames !== undefined) {\n      // pulling phasedRegistrationNames out of dispatchConfig helps Flow see\n      // that it is not undefined.\n      var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;\n\n      for (var phase in phasedRegistrationNames) {\n        if (!phasedRegistrationNames.hasOwnProperty(phase)) {\n          continue;\n        }\n        var pluginModule = EventPluginRegistry.registrationNameModules[phasedRegistrationNames[phase]];\n        if (pluginModule) {\n          return pluginModule;\n        }\n      }\n    }\n    return null;\n  },\n\n  /**\n   * Exposed for unit testing.\n   * @private\n   */\n  _resetEventPlugins: function () {\n    eventPluginOrder = null;\n    for (var pluginName in namesToPlugins) {\n      if (namesToPlugins.hasOwnProperty(pluginName)) {\n        delete namesToPlugins[pluginName];\n      }\n    }\n    EventPluginRegistry.plugins.length = 0;\n\n    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;\n    for (var eventName in eventNameDispatchConfigs) {\n      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {\n        delete eventNameDispatchConfigs[eventName];\n      }\n    }\n\n    var registrationNameModules = EventPluginRegistry.registrationNameModules;\n    for (var registrationName in registrationNameModules) {\n      if (registrationNameModules.hasOwnProperty(registrationName)) {\n        delete registrationNameModules[registrationName];\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;\n      for (var lowerCasedName in possibleRegistrationNames) {\n        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {\n          delete possibleRegistrationNames[lowerCasedName];\n        }\n      }\n    }\n  }\n\n};\n\nmodule.exports = EventPluginRegistry;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/EventPluginRegistry.js\n// module id = 35\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactErrorUtils = require('./ReactErrorUtils');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\n/**\n * Injected dependencies:\n */\n\n/**\n * - `ComponentTree`: [required] Module that can convert between React instances\n *   and actual node references.\n */\nvar ComponentTree;\nvar TreeTraversal;\nvar injection = {\n  injectComponentTree: function (Injected) {\n    ComponentTree = Injected;\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;\n    }\n  },\n  injectTreeTraversal: function (Injected) {\n    TreeTraversal = Injected;\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;\n    }\n  }\n};\n\nfunction isEndish(topLevelType) {\n  return topLevelType === 'topMouseUp' || topLevelType === 'topTouchEnd' || topLevelType === 'topTouchCancel';\n}\n\nfunction isMoveish(topLevelType) {\n  return topLevelType === 'topMouseMove' || topLevelType === 'topTouchMove';\n}\nfunction isStartish(topLevelType) {\n  return topLevelType === 'topMouseDown' || topLevelType === 'topTouchStart';\n}\n\nvar validateEventDispatches;\nif (process.env.NODE_ENV !== 'production') {\n  validateEventDispatches = function (event) {\n    var dispatchListeners = event._dispatchListeners;\n    var dispatchInstances = event._dispatchInstances;\n\n    var listenersIsArr = Array.isArray(dispatchListeners);\n    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;\n\n    var instancesIsArr = Array.isArray(dispatchInstances);\n    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;\n\n    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;\n  };\n}\n\n/**\n * Dispatch the event to the listener.\n * @param {SyntheticEvent} event SyntheticEvent to handle\n * @param {boolean} simulated If the event is simulated (changes exn behavior)\n * @param {function} listener Application-level callback\n * @param {*} inst Internal component instance\n */\nfunction executeDispatch(event, simulated, listener, inst) {\n  var type = event.type || 'unknown-event';\n  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);\n  if (simulated) {\n    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);\n  } else {\n    ReactErrorUtils.invokeGuardedCallback(type, listener, event);\n  }\n  event.currentTarget = null;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches.\n */\nfunction executeDispatchesInOrder(event, simulated) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchInstances = event._dispatchInstances;\n  if (process.env.NODE_ENV !== 'production') {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and Instances are two parallel arrays that are always in sync.\n      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);\n    }\n  } else if (dispatchListeners) {\n    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);\n  }\n  event._dispatchListeners = null;\n  event._dispatchInstances = null;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches, but stops\n * at the first dispatch execution returning true, and returns that id.\n *\n * @return {?string} id of the first dispatch execution who's listener returns\n * true, or null if no listener returned true.\n */\nfunction executeDispatchesInOrderStopAtTrueImpl(event) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchInstances = event._dispatchInstances;\n  if (process.env.NODE_ENV !== 'production') {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and Instances are two parallel arrays that are always in sync.\n      if (dispatchListeners[i](event, dispatchInstances[i])) {\n        return dispatchInstances[i];\n      }\n    }\n  } else if (dispatchListeners) {\n    if (dispatchListeners(event, dispatchInstances)) {\n      return dispatchInstances;\n    }\n  }\n  return null;\n}\n\n/**\n * @see executeDispatchesInOrderStopAtTrueImpl\n */\nfunction executeDispatchesInOrderStopAtTrue(event) {\n  var ret = executeDispatchesInOrderStopAtTrueImpl(event);\n  event._dispatchInstances = null;\n  event._dispatchListeners = null;\n  return ret;\n}\n\n/**\n * Execution of a \"direct\" dispatch - there must be at most one dispatch\n * accumulated on the event or it is considered an error. It doesn't really make\n * sense for an event with multiple dispatches (bubbled) to keep track of the\n * return values at each dispatch execution, but it does tend to make sense when\n * dealing with \"direct\" dispatches.\n *\n * @return {*} The return value of executing the single dispatch.\n */\nfunction executeDirectDispatch(event) {\n  if (process.env.NODE_ENV !== 'production') {\n    validateEventDispatches(event);\n  }\n  var dispatchListener = event._dispatchListeners;\n  var dispatchInstance = event._dispatchInstances;\n  !!Array.isArray(dispatchListener) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;\n  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;\n  var res = dispatchListener ? dispatchListener(event) : null;\n  event.currentTarget = null;\n  event._dispatchListeners = null;\n  event._dispatchInstances = null;\n  return res;\n}\n\n/**\n * @param {SyntheticEvent} event\n * @return {boolean} True iff number of dispatches accumulated is greater than 0.\n */\nfunction hasDispatches(event) {\n  return !!event._dispatchListeners;\n}\n\n/**\n * General utilities that are useful in creating custom Event Plugins.\n */\nvar EventPluginUtils = {\n  isEndish: isEndish,\n  isMoveish: isMoveish,\n  isStartish: isStartish,\n\n  executeDirectDispatch: executeDirectDispatch,\n  executeDispatchesInOrder: executeDispatchesInOrder,\n  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,\n  hasDispatches: hasDispatches,\n\n  getInstanceFromNode: function (node) {\n    return ComponentTree.getInstanceFromNode(node);\n  },\n  getNodeFromInstance: function (node) {\n    return ComponentTree.getNodeFromInstance(node);\n  },\n  isAncestor: function (a, b) {\n    return TreeTraversal.isAncestor(a, b);\n  },\n  getLowestCommonAncestor: function (a, b) {\n    return TreeTraversal.getLowestCommonAncestor(a, b);\n  },\n  getParentInstance: function (inst) {\n    return TreeTraversal.getParentInstance(inst);\n  },\n  traverseTwoPhase: function (target, fn, arg) {\n    return TreeTraversal.traverseTwoPhase(target, fn, arg);\n  },\n  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {\n    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);\n  },\n\n  injection: injection\n};\n\nmodule.exports = EventPluginUtils;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/EventPluginUtils.js\n// module id = 36\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\n\nfunction escape(key) {\n  var escapeRegex = /[=:]/g;\n  var escaperLookup = {\n    '=': '=0',\n    ':': '=2'\n  };\n  var escapedString = ('' + key).replace(escapeRegex, function (match) {\n    return escaperLookup[match];\n  });\n\n  return '$' + escapedString;\n}\n\n/**\n * Unescape and unwrap key for human-readable display\n *\n * @param {string} key to unescape.\n * @return {string} the unescaped key.\n */\nfunction unescape(key) {\n  var unescapeRegex = /(=0|=2)/g;\n  var unescaperLookup = {\n    '=0': '=',\n    '=2': ':'\n  };\n  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);\n\n  return ('' + keySubstring).replace(unescapeRegex, function (match) {\n    return unescaperLookup[match];\n  });\n}\n\nvar KeyEscapeUtils = {\n  escape: escape,\n  unescape: unescape\n};\n\nmodule.exports = KeyEscapeUtils;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/KeyEscapeUtils.js\n// module id = 37\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactPropTypesSecret = require('./ReactPropTypesSecret');\nvar propTypesFactory = require('prop-types/factory');\n\nvar React = require('react/lib/React');\nvar PropTypes = propTypesFactory(React.isValidElement);\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar hasReadOnlyValue = {\n  'button': true,\n  'checkbox': true,\n  'image': true,\n  'hidden': true,\n  'radio': true,\n  'reset': true,\n  'submit': true\n};\n\nfunction _assertSingleLink(inputProps) {\n  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;\n}\nfunction _assertValueLink(inputProps) {\n  _assertSingleLink(inputProps);\n  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\\'t want to use valueLink.') : _prodInvariant('88') : void 0;\n}\n\nfunction _assertCheckedLink(inputProps) {\n  _assertSingleLink(inputProps);\n  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\\'t want to use checkedLink') : _prodInvariant('89') : void 0;\n}\n\nvar propTypes = {\n  value: function (props, propName, componentName) {\n    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {\n      return null;\n    }\n    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n  },\n  checked: function (props, propName, componentName) {\n    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {\n      return null;\n    }\n    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n  },\n  onChange: PropTypes.func\n};\n\nvar loggedTypeFailures = {};\nfunction getDeclarationErrorAddendum(owner) {\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\n/**\n * Provide a linked `value` attribute for controlled forms. You should not use\n * this outside of the ReactDOM controlled form components.\n */\nvar LinkedValueUtils = {\n  checkPropTypes: function (tagName, props, owner) {\n    for (var propName in propTypes) {\n      if (propTypes.hasOwnProperty(propName)) {\n        var error = propTypes[propName](props, propName, tagName, 'prop', null, ReactPropTypesSecret);\n      }\n      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n        // Only monitor this failure once because there tends to be a lot of the\n        // same error.\n        loggedTypeFailures[error.message] = true;\n\n        var addendum = getDeclarationErrorAddendum(owner);\n        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;\n      }\n    }\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @return {*} current value of the input either from value prop or link.\n   */\n  getValue: function (inputProps) {\n    if (inputProps.valueLink) {\n      _assertValueLink(inputProps);\n      return inputProps.valueLink.value;\n    }\n    return inputProps.value;\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @return {*} current checked status of the input either from checked prop\n   *             or link.\n   */\n  getChecked: function (inputProps) {\n    if (inputProps.checkedLink) {\n      _assertCheckedLink(inputProps);\n      return inputProps.checkedLink.value;\n    }\n    return inputProps.checked;\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @param {SyntheticEvent} event change event to handle\n   */\n  executeOnChange: function (inputProps, event) {\n    if (inputProps.valueLink) {\n      _assertValueLink(inputProps);\n      return inputProps.valueLink.requestChange(event.target.value);\n    } else if (inputProps.checkedLink) {\n      _assertCheckedLink(inputProps);\n      return inputProps.checkedLink.requestChange(event.target.checked);\n    } else if (inputProps.onChange) {\n      return inputProps.onChange.call(undefined, event);\n    }\n  }\n};\n\nmodule.exports = LinkedValueUtils;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/LinkedValueUtils.js\n// module id = 38\n// module chunks = 0","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar injected = false;\n\nvar ReactComponentEnvironment = {\n\n  /**\n   * Optionally injectable hook for swapping out mount images in the middle of\n   * the tree.\n   */\n  replaceNodeWithMarkup: null,\n\n  /**\n   * Optionally injectable hook for processing a queue of child updates. Will\n   * later move into MultiChildComponents.\n   */\n  processChildrenUpdates: null,\n\n  injection: {\n    injectEnvironment: function (environment) {\n      !!injected ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;\n      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;\n      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;\n      injected = true;\n    }\n  }\n\n};\n\nmodule.exports = ReactComponentEnvironment;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactComponentEnvironment.js\n// module id = 39\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar caughtError = null;\n\n/**\n * Call a function while guarding against errors that happens within it.\n *\n * @param {String} name of the guard to use for logging or debugging\n * @param {Function} func The function to invoke\n * @param {*} a First argument\n * @param {*} b Second argument\n */\nfunction invokeGuardedCallback(name, func, a) {\n  try {\n    func(a);\n  } catch (x) {\n    if (caughtError === null) {\n      caughtError = x;\n    }\n  }\n}\n\nvar ReactErrorUtils = {\n  invokeGuardedCallback: invokeGuardedCallback,\n\n  /**\n   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event\n   * handler are sure to be rethrown by rethrowCaughtError.\n   */\n  invokeGuardedCallbackWithCatch: invokeGuardedCallback,\n\n  /**\n   * During execution of guarded functions we will capture the first error which\n   * we will rethrow to be handled by the top level error handler.\n   */\n  rethrowCaughtError: function () {\n    if (caughtError) {\n      var error = caughtError;\n      caughtError = null;\n      throw error;\n    }\n  }\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  /**\n   * To help development we can get better devtools integration by simulating a\n   * real browser event.\n   */\n  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {\n    var fakeNode = document.createElement('react');\n    ReactErrorUtils.invokeGuardedCallback = function (name, func, a) {\n      var boundFunc = func.bind(null, a);\n      var evtType = 'react-' + name;\n      fakeNode.addEventListener(evtType, boundFunc, false);\n      var evt = document.createEvent('Event');\n      evt.initEvent(evtType, false, false);\n      fakeNode.dispatchEvent(evt);\n      fakeNode.removeEventListener(evtType, boundFunc, false);\n    };\n  }\n}\n\nmodule.exports = ReactErrorUtils;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactErrorUtils.js\n// module id = 40\n// module chunks = 0","/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactCurrentOwner = require('react/lib/ReactCurrentOwner');\nvar ReactInstanceMap = require('./ReactInstanceMap');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nfunction enqueueUpdate(internalInstance) {\n  ReactUpdates.enqueueUpdate(internalInstance);\n}\n\nfunction formatUnexpectedArgument(arg) {\n  var type = typeof arg;\n  if (type !== 'object') {\n    return type;\n  }\n  var displayName = arg.constructor && arg.constructor.name || type;\n  var keys = Object.keys(arg);\n  if (keys.length > 0 && keys.length < 20) {\n    return displayName + ' (keys: ' + keys.join(', ') + ')';\n  }\n  return displayName;\n}\n\nfunction getInternalInstanceReadyForUpdate(publicInstance, callerName) {\n  var internalInstance = ReactInstanceMap.get(publicInstance);\n  if (!internalInstance) {\n    if (process.env.NODE_ENV !== 'production') {\n      var ctor = publicInstance.constructor;\n      // Only warn when we have a callerName. Otherwise we should be silent.\n      // We're probably calling from enqueueCallback. We don't want to warn\n      // there because we already warned for the corresponding lifecycle method.\n      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;\n    }\n    return null;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + 'within `render` or another component\\'s constructor). Render methods ' + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;\n  }\n\n  return internalInstance;\n}\n\n/**\n * ReactUpdateQueue allows for state updates to be scheduled into a later\n * reconciliation step.\n */\nvar ReactUpdateQueue = {\n\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    if (process.env.NODE_ENV !== 'production') {\n      var owner = ReactCurrentOwner.current;\n      if (owner !== null) {\n        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;\n        owner._warnedAboutRefsInRender = true;\n      }\n    }\n    var internalInstance = ReactInstanceMap.get(publicInstance);\n    if (internalInstance) {\n      // During componentWillMount and render this will still be null but after\n      // that will always render to something. At least for now. So we can use\n      // this hack.\n      return !!internalInstance._renderedComponent;\n    } else {\n      return false;\n    }\n  },\n\n  /**\n   * Enqueue a callback that will be executed after all the pending updates\n   * have processed.\n   *\n   * @param {ReactClass} publicInstance The instance to use as `this` context.\n   * @param {?function} callback Called after state is updated.\n   * @param {string} callerName Name of the calling function in the public API.\n   * @internal\n   */\n  enqueueCallback: function (publicInstance, callback, callerName) {\n    ReactUpdateQueue.validateCallback(callback, callerName);\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);\n\n    // Previously we would throw an error if we didn't have an internal\n    // instance. Since we want to make it a no-op instead, we mirror the same\n    // behavior we have in other enqueue* methods.\n    // We also need to ignore callbacks in componentWillMount. See\n    // enqueueUpdates.\n    if (!internalInstance) {\n      return null;\n    }\n\n    if (internalInstance._pendingCallbacks) {\n      internalInstance._pendingCallbacks.push(callback);\n    } else {\n      internalInstance._pendingCallbacks = [callback];\n    }\n    // TODO: The callback here is ignored when setState is called from\n    // componentWillMount. Either fix it or disallow doing so completely in\n    // favor of getInitialState. Alternatively, we can disallow\n    // componentWillMount during server-side rendering.\n    enqueueUpdate(internalInstance);\n  },\n\n  enqueueCallbackInternal: function (internalInstance, callback) {\n    if (internalInstance._pendingCallbacks) {\n      internalInstance._pendingCallbacks.push(callback);\n    } else {\n      internalInstance._pendingCallbacks = [callback];\n    }\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance) {\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');\n\n    if (!internalInstance) {\n      return;\n    }\n\n    internalInstance._pendingForceUpdate = true;\n\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState, callback) {\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');\n\n    if (!internalInstance) {\n      return;\n    }\n\n    internalInstance._pendingStateQueue = [completeState];\n    internalInstance._pendingReplaceState = true;\n\n    // Future-proof 15.5\n    if (callback !== undefined && callback !== null) {\n      ReactUpdateQueue.validateCallback(callback, 'replaceState');\n      if (internalInstance._pendingCallbacks) {\n        internalInstance._pendingCallbacks.push(callback);\n      } else {\n        internalInstance._pendingCallbacks = [callback];\n      }\n    }\n\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState) {\n    if (process.env.NODE_ENV !== 'production') {\n      ReactInstrumentation.debugTool.onSetState();\n      process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;\n    }\n\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');\n\n    if (!internalInstance) {\n      return;\n    }\n\n    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);\n    queue.push(partialState);\n\n    enqueueUpdate(internalInstance);\n  },\n\n  enqueueElementInternal: function (internalInstance, nextElement, nextContext) {\n    internalInstance._pendingElement = nextElement;\n    // TODO: introduce _pendingContext instead of setting it directly.\n    internalInstance._context = nextContext;\n    enqueueUpdate(internalInstance);\n  },\n\n  validateCallback: function (callback, callerName) {\n    !(!callback || typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;\n  }\n\n};\n\nmodule.exports = ReactUpdateQueue;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactUpdateQueue.js\n// module id = 41\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n/* globals MSApp */\n\n'use strict';\n\n/**\n * Create a function which has 'unsafe' privileges (required by windows8 apps)\n */\n\nvar createMicrosoftUnsafeLocalFunction = function (func) {\n  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {\n    return function (arg0, arg1, arg2, arg3) {\n      MSApp.execUnsafeLocalFunction(function () {\n        return func(arg0, arg1, arg2, arg3);\n      });\n    };\n  } else {\n    return func;\n  }\n};\n\nmodule.exports = createMicrosoftUnsafeLocalFunction;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/createMicrosoftUnsafeLocalFunction.js\n// module id = 42\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * `charCode` represents the actual \"character code\" and is safe to use with\n * `String.fromCharCode`. As such, only keys that correspond to printable\n * characters produce a valid `charCode`, the only exception to this is Enter.\n * The Tab-key is considered non-printable and does not have a `charCode`,\n * presumably because it does not produce a tab-character in browsers.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {number} Normalized `charCode` property.\n */\n\nfunction getEventCharCode(nativeEvent) {\n  var charCode;\n  var keyCode = nativeEvent.keyCode;\n\n  if ('charCode' in nativeEvent) {\n    charCode = nativeEvent.charCode;\n\n    // FF does not set `charCode` for the Enter-key, check against `keyCode`.\n    if (charCode === 0 && keyCode === 13) {\n      charCode = 13;\n    }\n  } else {\n    // IE8 does not implement `charCode`, but `keyCode` has the correct value.\n    charCode = keyCode;\n  }\n\n  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.\n  // Must not discard the (non-)printable Enter-key.\n  if (charCode >= 32 || charCode === 13) {\n    return charCode;\n  }\n\n  return 0;\n}\n\nmodule.exports = getEventCharCode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/getEventCharCode.js\n// module id = 43\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Translation from modifier key to the associated property in the event.\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers\n */\n\nvar modifierKeyToProp = {\n  'Alt': 'altKey',\n  'Control': 'ctrlKey',\n  'Meta': 'metaKey',\n  'Shift': 'shiftKey'\n};\n\n// IE8 does not implement getModifierState so we simply map it to the only\n// modifier keys exposed by the event itself, does not support Lock-keys.\n// Currently, all major browsers except Chrome seems to support Lock-keys.\nfunction modifierStateGetter(keyArg) {\n  var syntheticEvent = this;\n  var nativeEvent = syntheticEvent.nativeEvent;\n  if (nativeEvent.getModifierState) {\n    return nativeEvent.getModifierState(keyArg);\n  }\n  var keyProp = modifierKeyToProp[keyArg];\n  return keyProp ? !!nativeEvent[keyProp] : false;\n}\n\nfunction getEventModifierState(nativeEvent) {\n  return modifierStateGetter;\n}\n\nmodule.exports = getEventModifierState;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/getEventModifierState.js\n// module id = 44\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Gets the target node from a native browser event by accounting for\n * inconsistencies in browser DOM APIs.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {DOMEventTarget} Target node.\n */\n\nfunction getEventTarget(nativeEvent) {\n  var target = nativeEvent.target || nativeEvent.srcElement || window;\n\n  // Normalize SVG <use> element events #4963\n  if (target.correspondingUseElement) {\n    target = target.correspondingUseElement;\n  }\n\n  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).\n  // @see http://www.quirksmode.org/js/events_properties.html\n  return target.nodeType === 3 ? target.parentNode : target;\n}\n\nmodule.exports = getEventTarget;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/getEventTarget.js\n// module id = 45\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar useHasFeature;\nif (ExecutionEnvironment.canUseDOM) {\n  useHasFeature = document.implementation && document.implementation.hasFeature &&\n  // always returns true in newer browsers as per the standard.\n  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n  document.implementation.hasFeature('', '') !== true;\n}\n\n/**\n * Checks if an event is supported in the current execution environment.\n *\n * NOTE: This will not work correctly for non-generic events such as `change`,\n * `reset`, `load`, `error`, and `select`.\n *\n * Borrows from Modernizr.\n *\n * @param {string} eventNameSuffix Event name, e.g. \"click\".\n * @param {?boolean} capture Check if the capture phase is supported.\n * @return {boolean} True if the event is supported.\n * @internal\n * @license Modernizr 3.0.0pre (Custom Build) | MIT\n */\nfunction isEventSupported(eventNameSuffix, capture) {\n  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {\n    return false;\n  }\n\n  var eventName = 'on' + eventNameSuffix;\n  var isSupported = eventName in document;\n\n  if (!isSupported) {\n    var element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\n\nmodule.exports = isEventSupported;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/isEventSupported.js\n// module id = 46\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Given a `prevElement` and `nextElement`, determines if the existing\n * instance should be updated as opposed to being destroyed or replaced by a new\n * instance. Both arguments are elements. This ensures that this logic can\n * operate on stateless trees without any backing instance.\n *\n * @param {?object} prevElement\n * @param {?object} nextElement\n * @return {boolean} True if the existing instance should be updated.\n * @protected\n */\n\nfunction shouldUpdateReactComponent(prevElement, nextElement) {\n  var prevEmpty = prevElement === null || prevElement === false;\n  var nextEmpty = nextElement === null || nextElement === false;\n  if (prevEmpty || nextEmpty) {\n    return prevEmpty === nextEmpty;\n  }\n\n  var prevType = typeof prevElement;\n  var nextType = typeof nextElement;\n  if (prevType === 'string' || prevType === 'number') {\n    return nextType === 'string' || nextType === 'number';\n  } else {\n    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;\n  }\n}\n\nmodule.exports = shouldUpdateReactComponent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/shouldUpdateReactComponent.js\n// module id = 47\n// module chunks = 0","/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar warning = require('fbjs/lib/warning');\n\nvar validateDOMNesting = emptyFunction;\n\nif (process.env.NODE_ENV !== 'production') {\n  // This validation code was written based on the HTML5 parsing spec:\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\n  //\n  // Note: this does not catch all invalid nesting, nor does it try to (as it's\n  // not clear what practical benefit doing so provides); instead, we warn only\n  // for cases where the parser will give a parse tree differing from what React\n  // intended. For example, <b><div></div></b> is invalid but we don't warn\n  // because it still parses correctly; we do warn for other cases like nested\n  // <p> tags where the beginning of the second element implicitly closes the\n  // first, causing a confusing mess.\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#special\n  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\n  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point\n  // TODO: Distinguish by namespace here -- for <title>, including it here\n  // errs on the side of fewer warnings\n  'foreignObject', 'desc', 'title'];\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope\n  var buttonScopeTags = inScopeTags.concat(['button']);\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags\n  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];\n\n  var emptyAncestorInfo = {\n    current: null,\n\n    formTag: null,\n    aTagInScope: null,\n    buttonTagInScope: null,\n    nobrTagInScope: null,\n    pTagInButtonScope: null,\n\n    listItemTagAutoclosing: null,\n    dlItemTagAutoclosing: null\n  };\n\n  var updatedAncestorInfo = function (oldInfo, tag, instance) {\n    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);\n    var info = { tag: tag, instance: instance };\n\n    if (inScopeTags.indexOf(tag) !== -1) {\n      ancestorInfo.aTagInScope = null;\n      ancestorInfo.buttonTagInScope = null;\n      ancestorInfo.nobrTagInScope = null;\n    }\n    if (buttonScopeTags.indexOf(tag) !== -1) {\n      ancestorInfo.pTagInButtonScope = null;\n    }\n\n    // See rules for 'li', 'dd', 'dt' start tags in\n    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {\n      ancestorInfo.listItemTagAutoclosing = null;\n      ancestorInfo.dlItemTagAutoclosing = null;\n    }\n\n    ancestorInfo.current = info;\n\n    if (tag === 'form') {\n      ancestorInfo.formTag = info;\n    }\n    if (tag === 'a') {\n      ancestorInfo.aTagInScope = info;\n    }\n    if (tag === 'button') {\n      ancestorInfo.buttonTagInScope = info;\n    }\n    if (tag === 'nobr') {\n      ancestorInfo.nobrTagInScope = info;\n    }\n    if (tag === 'p') {\n      ancestorInfo.pTagInButtonScope = info;\n    }\n    if (tag === 'li') {\n      ancestorInfo.listItemTagAutoclosing = info;\n    }\n    if (tag === 'dd' || tag === 'dt') {\n      ancestorInfo.dlItemTagAutoclosing = info;\n    }\n\n    return ancestorInfo;\n  };\n\n  /**\n   * Returns whether\n   */\n  var isTagValidWithParent = function (tag, parentTag) {\n    // First, let's check if we're in an unusual parsing mode...\n    switch (parentTag) {\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect\n      case 'select':\n        return tag === 'option' || tag === 'optgroup' || tag === '#text';\n      case 'optgroup':\n        return tag === 'option' || tag === '#text';\n      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>\n      // but\n      case 'option':\n        return tag === '#text';\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption\n      // No special behavior since these rules fall back to \"in body\" mode for\n      // all except special table nodes which cause bad parsing behavior anyway.\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr\n      case 'tr':\n        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody\n      case 'tbody':\n      case 'thead':\n      case 'tfoot':\n        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup\n      case 'colgroup':\n        return tag === 'col' || tag === 'template';\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable\n      case 'table':\n        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead\n      case 'head':\n        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';\n\n      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element\n      case 'html':\n        return tag === 'head' || tag === 'body';\n      case '#document':\n        return tag === 'html';\n    }\n\n    // Probably in the \"in body\" parsing mode, so we outlaw only tag combos\n    // where the parsing rules cause implicit opens or closes to be added.\n    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n    switch (tag) {\n      case 'h1':\n      case 'h2':\n      case 'h3':\n      case 'h4':\n      case 'h5':\n      case 'h6':\n        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';\n\n      case 'rp':\n      case 'rt':\n        return impliedEndTags.indexOf(parentTag) === -1;\n\n      case 'body':\n      case 'caption':\n      case 'col':\n      case 'colgroup':\n      case 'frame':\n      case 'head':\n      case 'html':\n      case 'tbody':\n      case 'td':\n      case 'tfoot':\n      case 'th':\n      case 'thead':\n      case 'tr':\n        // These tags are only valid with a few parents that have special child\n        // parsing rules -- if we're down here, then none of those matched and\n        // so we allow it only if we don't know what the parent is, as all other\n        // cases are invalid.\n        return parentTag == null;\n    }\n\n    return true;\n  };\n\n  /**\n   * Returns whether\n   */\n  var findInvalidAncestorForTag = function (tag, ancestorInfo) {\n    switch (tag) {\n      case 'address':\n      case 'article':\n      case 'aside':\n      case 'blockquote':\n      case 'center':\n      case 'details':\n      case 'dialog':\n      case 'dir':\n      case 'div':\n      case 'dl':\n      case 'fieldset':\n      case 'figcaption':\n      case 'figure':\n      case 'footer':\n      case 'header':\n      case 'hgroup':\n      case 'main':\n      case 'menu':\n      case 'nav':\n      case 'ol':\n      case 'p':\n      case 'section':\n      case 'summary':\n      case 'ul':\n      case 'pre':\n      case 'listing':\n      case 'table':\n      case 'hr':\n      case 'xmp':\n      case 'h1':\n      case 'h2':\n      case 'h3':\n      case 'h4':\n      case 'h5':\n      case 'h6':\n        return ancestorInfo.pTagInButtonScope;\n\n      case 'form':\n        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;\n\n      case 'li':\n        return ancestorInfo.listItemTagAutoclosing;\n\n      case 'dd':\n      case 'dt':\n        return ancestorInfo.dlItemTagAutoclosing;\n\n      case 'button':\n        return ancestorInfo.buttonTagInScope;\n\n      case 'a':\n        // Spec says something about storing a list of markers, but it sounds\n        // equivalent to this check.\n        return ancestorInfo.aTagInScope;\n\n      case 'nobr':\n        return ancestorInfo.nobrTagInScope;\n    }\n\n    return null;\n  };\n\n  /**\n   * Given a ReactCompositeComponent instance, return a list of its recursive\n   * owners, starting at the root and ending with the instance itself.\n   */\n  var findOwnerStack = function (instance) {\n    if (!instance) {\n      return [];\n    }\n\n    var stack = [];\n    do {\n      stack.push(instance);\n    } while (instance = instance._currentElement._owner);\n    stack.reverse();\n    return stack;\n  };\n\n  var didWarn = {};\n\n  validateDOMNesting = function (childTag, childText, childInstance, ancestorInfo) {\n    ancestorInfo = ancestorInfo || emptyAncestorInfo;\n    var parentInfo = ancestorInfo.current;\n    var parentTag = parentInfo && parentInfo.tag;\n\n    if (childText != null) {\n      process.env.NODE_ENV !== 'production' ? warning(childTag == null, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;\n      childTag = '#text';\n    }\n\n    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;\n    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);\n    var problematic = invalidParent || invalidAncestor;\n\n    if (problematic) {\n      var ancestorTag = problematic.tag;\n      var ancestorInstance = problematic.instance;\n\n      var childOwner = childInstance && childInstance._currentElement._owner;\n      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;\n\n      var childOwners = findOwnerStack(childOwner);\n      var ancestorOwners = findOwnerStack(ancestorOwner);\n\n      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);\n      var i;\n\n      var deepestCommon = -1;\n      for (i = 0; i < minStackLen; i++) {\n        if (childOwners[i] === ancestorOwners[i]) {\n          deepestCommon = i;\n        } else {\n          break;\n        }\n      }\n\n      var UNKNOWN = '(unknown)';\n      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {\n        return inst.getName() || UNKNOWN;\n      });\n      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {\n        return inst.getName() || UNKNOWN;\n      });\n      var ownerInfo = [].concat(\n      // If the parent and child instances have a common owner ancestor, start\n      // with that -- otherwise we just start with the parent's owners.\n      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,\n      // If we're warning about an invalid (non-parent) ancestry, add '...'\n      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');\n\n      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;\n      if (didWarn[warnKey]) {\n        return;\n      }\n      didWarn[warnKey] = true;\n\n      var tagDisplayName = childTag;\n      var whitespaceInfo = '';\n      if (childTag === '#text') {\n        if (/\\S/.test(childText)) {\n          tagDisplayName = 'Text nodes';\n        } else {\n          tagDisplayName = 'Whitespace text nodes';\n          whitespaceInfo = ' Make sure you don\\'t have any extra whitespace between tags on ' + 'each line of your source code.';\n        }\n      } else {\n        tagDisplayName = '<' + childTag + '>';\n      }\n\n      if (invalidParent) {\n        var info = '';\n        if (ancestorTag === 'table' && childTag === 'tr') {\n          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';\n        }\n        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s ' + 'See %s.%s', tagDisplayName, ancestorTag, whitespaceInfo, ownerInfo, info) : void 0;\n      } else {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;\n      }\n    }\n  };\n\n  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;\n\n  // For testing\n  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {\n    ancestorInfo = ancestorInfo || emptyAncestorInfo;\n    var parentInfo = ancestorInfo.current;\n    var parentTag = parentInfo && parentInfo.tag;\n    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);\n  };\n}\n\nmodule.exports = validateDOMNesting;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/validateDOMNesting.js\n// module id = 48\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');\n\nvar canDefineProperty = require('./canDefineProperty');\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction ReactComponent(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  // We initialize the default updater but the real one gets injected by the\n  // renderer.\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nReactComponent.prototype.isReactComponent = {};\n\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\nReactComponent.prototype.setState = function (partialState, callback) {\n  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;\n  this.updater.enqueueSetState(this, partialState);\n  if (callback) {\n    this.updater.enqueueCallback(this, callback, 'setState');\n  }\n};\n\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\nReactComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this);\n  if (callback) {\n    this.updater.enqueueCallback(this, callback, 'forceUpdate');\n  }\n};\n\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\nif (process.env.NODE_ENV !== 'production') {\n  var deprecatedAPIs = {\n    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n  };\n  var defineDeprecationWarning = function (methodName, info) {\n    if (canDefineProperty) {\n      Object.defineProperty(ReactComponent.prototype, methodName, {\n        get: function () {\n          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;\n          return undefined;\n        }\n      });\n    }\n  };\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nmodule.exports = ReactComponent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactComponent.js\n// module id = 49\n// module chunks = 0","/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar warning = require('fbjs/lib/warning');\n\nfunction warnNoop(publicInstance, callerName) {\n  if (process.env.NODE_ENV !== 'production') {\n    var constructor = publicInstance.constructor;\n    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;\n  }\n}\n\n/**\n * This is the abstract API for an update queue.\n */\nvar ReactNoopUpdateQueue = {\n\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    return false;\n  },\n\n  /**\n   * Enqueue a callback that will be executed after all the pending updates\n   * have processed.\n   *\n   * @param {ReactClass} publicInstance The instance to use as `this` context.\n   * @param {?function} callback Called after state is updated.\n   * @internal\n   */\n  enqueueCallback: function (publicInstance, callback) {},\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance) {\n    warnNoop(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState) {\n    warnNoop(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState) {\n    warnNoop(publicInstance, 'setState');\n  }\n};\n\nmodule.exports = ReactNoopUpdateQueue;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactNoopUpdateQueue.js\n// module id = 50\n// module chunks = 0","'use strict';\n\nmodule.exports = require('./lib/React');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/react.js\n// module id = 51\n// module chunks = 0","/**\n  A javascript Bezier curve library by Pomax.\n\n  Based on http://pomax.github.io/bezierinfo\n\n  This code is MIT licensed.\n**/\n(function() {\n  \"use strict\";\n\n  // math-inlining.\n  var abs = Math.abs,\n      min = Math.min,\n      max = Math.max,\n      acos = Math.acos,\n      sqrt = Math.sqrt,\n      pi = Math.PI,\n      // a zero coordinate, which is surprisingly useful\n      ZERO = {x:0,y:0,z:0};\n\n  // quite needed\n  var utils = require('./utils.js');\n\n  // not quite needed, but eventually this'll be useful...\n  var PolyBezier = require('./poly-bezier.js');\n\n  /**\n   * Bezier curve constructor. The constructor argument can be one of three things:\n   *\n   * 1. array/4 of {x:..., y:..., z:...}, z optional\n   * 2. numerical array/8 ordered x1,y1,x2,y2,x3,y3,x4,y4\n   * 3. numerical array/12 ordered x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4\n   *\n   */\n  var Bezier = function(coords) {\n    var args = (coords && coords.forEach) ? coords : [].slice.call(arguments);\n    var coordlen = false;\n    if(typeof args[0] === \"object\") {\n      coordlen = args.length;\n      var newargs = [];\n      args.forEach(function(point) {\n        ['x','y','z'].forEach(function(d) {\n          if(typeof point[d] !== \"undefined\") {\n            newargs.push(point[d]);\n          }\n        });\n      });\n      args = newargs;\n    }\n    var higher = false;\n    var len = args.length;\n    if (coordlen) {\n      if(coordlen>4) {\n        if (arguments.length !== 1) {\n          throw new Error(\"Only new Bezier(point[]) is accepted for 4th and higher order curves\");\n        }\n        higher = true;\n      }\n    } else {\n      if(len!==6 && len!==8 && len!==9 && len!==12) {\n        if (arguments.length !== 1) {\n          throw new Error(\"Only new Bezier(point[]) is accepted for 4th and higher order curves\");\n        }\n      }\n    }\n    var _3d = (!higher && (len === 9 || len === 12)) || (coords && coords[0] && typeof coords[0].z !== \"undefined\");\n    this._3d = _3d;\n    var points = [];\n    for(var idx=0, step=(_3d ? 3 : 2); idx<len; idx+=step) {\n      var point = {\n        x: args[idx],\n        y: args[idx+1]\n      };\n      if(_3d) { point.z = args[idx+2] };\n      points.push(point);\n    }\n    this.order = points.length - 1;\n    this.points = points;\n    var dims = ['x','y'];\n    if(_3d) dims.push('z');\n    this.dims = dims;\n    this.dimlen = dims.length;\n\n    (function(curve) {\n      var order = curve.order;\n      var points = curve.points;\n      var a = utils.align(points, {p1:points[0], p2:points[order]});\n      for(var i=0; i<a.length; i++) {\n        if(abs(a[i].y) > 0.0001) {\n          curve._linear = false;\n          return;\n        }\n      }\n      curve._linear = true;\n    }(this));\n\n    this._t1 = 0;\n    this._t2 = 1;\n    this.update();\n  };\n\n  Bezier.fromSVG = function(svgString) {\n    var list = svgString.match(/[-+]?\\d*\\.?\\d+(?:[eE][-+]?\\d+)?/g).map(parseFloat);\n    var relative = /[cq]/.test(svgString);\n    if(!relative) return new Bezier(list);\n    list = list.map(function(v,i) {\n      return i < 2 ? v : v + list[i % 2];\n    });\n    return new Bezier(list);\n  };\n\n  function getABC(n,S,B,E,t) {\n    if(typeof t === \"undefined\") { t = 0.5; }\n    var u = utils.projectionratio(t,n),\n        um = 1-u,\n        C = {\n          x: u*S.x + um*E.x,\n          y: u*S.y + um*E.y\n        },\n        s = utils.abcratio(t,n),\n        A = {\n          x: B.x + (B.x-C.x)/s,\n          y: B.y + (B.y-C.y)/s\n        };\n    return { A:A, B:B, C:C };\n  }\n\n  Bezier.quadraticFromPoints = function(p1,p2,p3, t) {\n    if(typeof t === \"undefined\") { t = 0.5; }\n    // shortcuts, although they're really dumb\n    if(t===0) { return new Bezier(p2,p2,p3); }\n    if(t===1) { return new Bezier(p1,p2,p2); }\n    // real fitting.\n    var abc = getABC(2,p1,p2,p3,t);\n    return new Bezier(p1, abc.A, p3);\n  };\n\n  Bezier.cubicFromPoints = function(S,B,E, t,d1) {\n    if(typeof t === \"undefined\") { t = 0.5; }\n    var abc = getABC(3,S,B,E,t);\n    if(typeof d1 === \"undefined\") { d1 = utils.dist(B,abc.C); }\n    var d2 = d1 * (1-t)/t;\n\n    var selen = utils.dist(S,E),\n        lx = (E.x-S.x)/selen,\n        ly = (E.y-S.y)/selen,\n        bx1 = d1 * lx,\n        by1 = d1 * ly,\n        bx2 = d2 * lx,\n        by2 = d2 * ly;\n    // derivation of new hull coordinates\n    var e1  = { x: B.x - bx1, y: B.y - by1 },\n        e2  = { x: B.x + bx2, y: B.y + by2 },\n        A = abc.A,\n        v1  = { x: A.x + (e1.x-A.x)/(1-t), y: A.y + (e1.y-A.y)/(1-t) },\n        v2  = { x: A.x + (e2.x-A.x)/(t), y: A.y + (e2.y-A.y)/(t) },\n        nc1 = { x: S.x + (v1.x-S.x)/(t), y: S.y + (v1.y-S.y)/(t) },\n        nc2 = { x: E.x + (v2.x-E.x)/(1-t), y: E.y + (v2.y-E.y)/(1-t) };\n    // ...done\n    return new Bezier(S,nc1,nc2,E);\n  };\n\n  var getUtils = function() {\n    return utils;\n  };\n\n  Bezier.getUtils = getUtils;\n\n  Bezier.prototype = {\n    getUtils: getUtils,\n    valueOf: function() {\n      return this.toString();\n    },\n    toString: function() {\n      return utils.pointsToString(this.points);\n    },\n    toSVG: function(relative) {\n      if(this._3d) return false;\n      var p = this.points,\n          x = p[0].x,\n          y = p[0].y,\n          s = [\"M\", x, y, (this.order===2 ? \"Q\":\"C\")];\n      for(var i=1, last=p.length; i<last; i++) {\n        s.push(p[i].x);\n        s.push(p[i].y);\n      }\n      return s.join(\" \");\n    },\n    update: function() {\n      // one-time compute derivative coordinates\n      this.dpoints = [];\n      for(var p=this.points, d=p.length, c=d-1; d>1; d--, c--) {\n        var list = [];\n        for(var j=0, dpt; j<c; j++) {\n          dpt = {\n            x: c * (p[j+1].x - p[j].x),\n            y: c * (p[j+1].y - p[j].y)\n          };\n          if(this._3d) {\n            dpt.z = c * (p[j+1].z - p[j].z);\n          }\n          list.push(dpt);\n        }\n        this.dpoints.push(list);\n        p = list;\n      };\n      this.computedirection();\n    },\n    computedirection: function() {\n      var points = this.points;\n      var angle = utils.angle(points[0], points[this.order], points[1]);\n      this.clockwise = angle > 0;\n    },\n    length: function() {\n      return utils.length(this.derivative.bind(this));\n    },\n    _lut: [],\n    getLUT: function(steps) {\n      steps = steps || 100;\n      if (this._lut.length === steps) { return this._lut; }\n      this._lut = [];\n      for(var t=0; t<=steps; t++) {\n        this._lut.push(this.compute(t/steps));\n      }\n      return this._lut;\n    },\n    on: function(point, error) {\n      error = error || 5;\n      var lut = this.getLUT(), hits = [], c, t=0;\n      for(var i=0; i<lut.length; i++) {\n        c = lut[i];\n        if (utils.dist(c,point) < error) {\n          hits.push(c)\n          t += i / lut.length;\n        }\n      }\n      if(!hits.length) return false;\n      return t /= hits.length;\n    },\n    project: function(point) {\n      // step 1: coarse check\n      var LUT = this.getLUT(), l = LUT.length-1,\n          closest = utils.closest(LUT, point),\n          mdist = closest.mdist,\n          mpos = closest.mpos;\n      if (mpos===0 || mpos===l) {\n        var t = mpos/l, pt = this.compute(t);\n        pt.t = t;\n        pt.d = mdist;\n        return pt;\n      }\n\n      // step 2: fine check\n      var ft, t, p, d,\n          t1 = (mpos-1)/l,\n          t2 = (mpos+1)/l,\n          step = 0.1/l;\n      mdist += 1;\n      for(t=t1,ft=t; t<t2+step; t+=step) {\n        p = this.compute(t);\n        d = utils.dist(point, p);\n        if (d<mdist) {\n          mdist = d;\n          ft = t;\n        }\n      }\n      p = this.compute(ft);\n      p.t = ft;\n      p.d = mdist;\n      return p;\n    },\n    get: function(t) {\n      return this.compute(t);\n    },\n    point: function(idx) {\n      return this.points[idx];\n    },\n    compute: function(t) {\n      // shortcuts\n      if(t===0) { return this.points[0]; }\n      if(t===1) { return this.points[this.order]; }\n\n      var p = this.points;\n      var mt = 1-t;\n\n      // linear?\n      if(this.order===1) {\n        ret = {\n          x: mt*p[0].x + t*p[1].x,\n          y: mt*p[0].y + t*p[1].y\n        };\n        if (this._3d) { ret.z = mt*p[0].z + t*p[1].z; }\n        return ret;\n      }\n\n      // quadratic/cubic curve?\n      if(this.order<4) {\n        var mt2 = mt*mt,\n            t2 = t*t,\n            a,b,c,d = 0;\n        if(this.order===2) {\n          p = [p[0], p[1], p[2], ZERO];\n          a = mt2;\n          b = mt*t*2;\n          c = t2;\n        }\n        else if(this.order===3) {\n          a = mt2*mt;\n          b = mt2*t*3;\n          c = mt*t2*3;\n          d = t*t2;\n        }\n        var ret = {\n          x: a*p[0].x + b*p[1].x + c*p[2].x + d*p[3].x,\n          y: a*p[0].y + b*p[1].y + c*p[2].y + d*p[3].y\n        };\n        if(this._3d) {\n          ret.z = a*p[0].z + b*p[1].z + c*p[2].z + d*p[3].z;\n        }\n        return ret;\n      }\n\n      // higher order curves: use de Casteljau's computation\n      var dCpts = JSON.parse(JSON.stringify(this.points));\n      while(dCpts.length > 1) {\n        for (var i=0; i<dCpts.length-1; i++) {\n          dCpts[i] = {\n            x: dCpts[i].x + (dCpts[i+1].x - dCpts[i].x) * t,\n            y: dCpts[i].y + (dCpts[i+1].y - dCpts[i].y) * t\n          };\n          if (typeof dCpts[i].z !== \"undefined\") {\n            dCpts[i] = dCpts[i].z + (dCpts[i+1].z - dCpts[i].z) * t\n          }\n        }\n        dCpts.splice(dCpts.length-1, 1);\n      }\n      return dCpts[0];\n    },\n    raise: function() {\n      var p = this.points, np = [p[0]], i, k=p.length, pi, pim;\n      for (var i=1; i<k; i++) {\n        pi = p[i];\n        pim = p[i-1];\n        np[i] = {\n          x: (k-i)/k * pi.x + i/k * pim.x,\n          y: (k-i)/k * pi.y + i/k * pim.y\n        };\n      }\n      np[k] = p[k-1];\n      return new Bezier(np);\n    },\n    derivative: function(t) {\n      var mt = 1-t,\n          a,b,c=0,\n          p = this.dpoints[0];\n      if(this.order===2) { p = [p[0], p[1], ZERO]; a = mt; b = t; }\n      if(this.order===3) { a = mt*mt; b = mt*t*2; c = t*t; }\n      var ret = {\n        x: a*p[0].x + b*p[1].x + c*p[2].x,\n        y: a*p[0].y + b*p[1].y + c*p[2].y\n      };\n      if(this._3d) {\n        ret.z = a*p[0].z + b*p[1].z + c*p[2].z;\n      }\n      return ret;\n    },\n    inflections: function() {\n      return utils.inflections(this.points);\n    },\n    normal: function(t) {\n      return this._3d ? this.__normal3(t) : this.__normal2(t);\n    },\n    __normal2: function(t) {\n      var d = this.derivative(t);\n      var q = sqrt(d.x*d.x + d.y*d.y)\n      return { x: -d.y/q, y: d.x/q };\n    },\n    __normal3: function(t) {\n      // see http://stackoverflow.com/questions/25453159\n      var r1 = this.derivative(t),\n          r2 = this.derivative(t+0.01),\n          q1 = sqrt(r1.x*r1.x + r1.y*r1.y + r1.z*r1.z),\n          q2 = sqrt(r2.x*r2.x + r2.y*r2.y + r2.z*r2.z);\n      r1.x /= q1; r1.y /= q1; r1.z /= q1;\n      r2.x /= q2; r2.y /= q2; r2.z /= q2;\n      // cross product\n      var c = {\n        x: r2.y*r1.z - r2.z*r1.y,\n        y: r2.z*r1.x - r2.x*r1.z,\n        z: r2.x*r1.y - r2.y*r1.x\n      };\n      var m = sqrt(c.x*c.x + c.y*c.y + c.z*c.z);\n      c.x /= m; c.y /= m; c.z /= m;\n      // rotation matrix\n      var R = [   c.x*c.x,   c.x*c.y-c.z, c.x*c.z+c.y,\n                c.x*c.y+c.z,   c.y*c.y,   c.y*c.z-c.x,\n                c.x*c.z-c.y, c.y*c.z+c.x,   c.z*c.z    ];\n      // normal vector:\n      var n = {\n        x: R[0] * r1.x + R[1] * r1.y + R[2] * r1.z,\n        y: R[3] * r1.x + R[4] * r1.y + R[5] * r1.z,\n        z: R[6] * r1.x + R[7] * r1.y + R[8] * r1.z\n      };\n      return n;\n    },\n    hull: function(t) {\n      var p = this.points,\n          _p = [],\n          pt,\n          q = [],\n          idx = 0,\n          i=0,\n          l=0;\n      q[idx++] = p[0];\n      q[idx++] = p[1];\n      q[idx++] = p[2];\n      if(this.order === 3) { q[idx++] = p[3]; }\n      // we lerp between all points at each iteration, until we have 1 point left.\n      while(p.length>1) {\n        _p = [];\n        for(i=0, l=p.length-1; i<l; i++) {\n          pt = utils.lerp(t,p[i],p[i+1]);\n          q[idx++] = pt;\n          _p.push(pt);\n        }\n        p = _p;\n      }\n      return q;\n    },\n    split: function(t1, t2) {\n      // shortcuts\n      if(t1===0 && !!t2) { return this.split(t2).left; }\n      if(t2===1) { return this.split(t1).right; }\n\n      // no shortcut: use \"de Casteljau\" iteration.\n      var q = this.hull(t1);\n      var result = {\n        left: this.order === 2 ? new Bezier([q[0],q[3],q[5]]) : new Bezier([q[0],q[4],q[7],q[9]]),\n        right: this.order === 2 ? new Bezier([q[5],q[4],q[2]]) : new Bezier([q[9],q[8],q[6],q[3]]),\n        span: q\n      };\n\n      // make sure we bind _t1/_t2 information!\n      result.left._t1  = utils.map(0,  0,1, this._t1,this._t2);\n      result.left._t2  = utils.map(t1, 0,1, this._t1,this._t2);\n      result.right._t1 = utils.map(t1, 0,1, this._t1,this._t2);\n      result.right._t2 = utils.map(1,  0,1, this._t1,this._t2);\n\n      // if we have no t2, we're done\n      if(!t2) { return result; }\n\n      // if we have a t2, split again:\n      t2 = utils.map(t2,t1,1,0,1);\n      var subsplit = result.right.split(t2);\n      return subsplit.left;\n    },\n    extrema: function() {\n      var dims = this.dims,\n          result={},\n          roots=[],\n          p, mfn;\n      dims.forEach(function(dim) {\n        mfn = function(v) { return v[dim]; };\n        p = this.dpoints[0].map(mfn);\n        result[dim] = utils.droots(p);\n        if(this.order === 3) {\n          p = this.dpoints[1].map(mfn);\n          result[dim] = result[dim].concat(utils.droots(p));\n        }\n        result[dim] = result[dim].filter(function(t) { return (t>=0 && t<=1); });\n        roots = roots.concat(result[dim].sort());\n      }.bind(this));\n      roots = roots.sort().filter(function(v,idx) { return (roots.indexOf(v) === idx); });\n      result.values = roots;\n      return result;\n    },\n    bbox: function() {\n      var extrema = this.extrema(), result = {};\n      this.dims.forEach(function(d) {\n        result[d] = utils.getminmax(this, d, extrema[d]);\n      }.bind(this));\n      return result;\n    },\n    overlaps: function(curve) {\n      var lbbox = this.bbox(),\n          tbbox = curve.bbox();\n      return utils.bboxoverlap(lbbox,tbbox);\n    },\n    offset: function(t, d) {\n      if(typeof d !== \"undefined\") {\n        var c = this.get(t);\n        var n = this.normal(t);\n        var ret = {\n          c: c,\n          n: n,\n          x: c.x + n.x * d,\n          y: c.y + n.y * d\n        };\n        if(this._3d) {\n          ret.z = c.z + n.z * d;\n        };\n        return ret;\n      }\n      if(this._linear) {\n        var nv = this.normal(0);\n        var coords = this.points.map(function(p) {\n          var ret = {\n            x: p.x + t * nv.x,\n            y: p.y + t * nv.y\n          };\n          if(p.z && n.z) { ret.z = p.z + t * nv.z; }\n          return ret;\n        });\n        return [new Bezier(coords)];\n      }\n      var reduced = this.reduce();\n      return reduced.map(function(s) {\n        return s.scale(t);\n      });\n    },\n    simple: function() {\n      if(this.order===3) {\n        var a1 = utils.angle(this.points[0], this.points[3], this.points[1]);\n        var a2 = utils.angle(this.points[0], this.points[3], this.points[2]);\n        if(a1>0 && a2<0 || a1<0 && a2>0) return false;\n      }\n      var n1 = this.normal(0);\n      var n2 = this.normal(1);\n      var s = n1.x*n2.x + n1.y*n2.y;\n      if(this._3d) { s += n1.z*n2.z; }\n      var angle = abs(acos(s));\n      return angle < pi/3;\n    },\n    reduce: function() {\n      var i, t1=0, t2=0, step=0.01, segment, pass1=[], pass2=[];\n      // first pass: split on extrema\n      var extrema = this.extrema().values;\n      if(extrema.indexOf(0)===-1) { extrema = [0].concat(extrema); }\n      if(extrema.indexOf(1)===-1) { extrema.push(1); }\n\n      for(t1=extrema[0], i=1; i<extrema.length; i++) {\n        t2 = extrema[i];\n        segment = this.split(t1,t2);\n        segment._t1 = t1;\n        segment._t2 = t2;\n        pass1.push(segment);\n        t1 = t2;\n      }\n\n      // second pass: further reduce these segments to simple segments\n      pass1.forEach(function(p1) {\n        t1=0;\n        t2=0;\n        while(t2 <= 1) {\n          for(t2=t1+step; t2<=1+step; t2+=step) {\n            segment = p1.split(t1,t2);\n            if(!segment.simple()) {\n              t2 -= step;\n              if(abs(t1-t2)<step) {\n                // we can never form a reduction\n                return [];\n              }\n              segment = p1.split(t1,t2);\n              segment._t1 = utils.map(t1,0,1,p1._t1,p1._t2);\n              segment._t2 = utils.map(t2,0,1,p1._t1,p1._t2);\n              pass2.push(segment);\n              t1 = t2;\n              break;\n            }\n          }\n        }\n        if(t1<1) {\n          segment = p1.split(t1,1);\n          segment._t1 = utils.map(t1,0,1,p1._t1,p1._t2);\n          segment._t2 = p1._t2;\n          pass2.push(segment);\n        }\n      });\n      return pass2;\n    },\n    scale: function(d) {\n      var order = this.order;\n      var distanceFn = false\n      if(typeof d === \"function\") { distanceFn = d; }\n      if(distanceFn && order === 2) { return this.raise().scale(distanceFn); }\n\n      // TODO: add special handling for degenerate (=linear) curves.\n      var clockwise = this.clockwise;\n      var r1 = distanceFn ? distanceFn(0) : d;\n      var r2 = distanceFn ? distanceFn(1) : d;\n      var v = [ this.offset(0,10), this.offset(1,10) ];\n      var o = utils.lli4(v[0], v[0].c, v[1], v[1].c);\n      if(!o) { throw new Error(\"cannot scale this curve. Try reducing it first.\"); }\n      // move all points by distance 'd' wrt the origin 'o'\n      var points=this.points, np=[];\n\n      // move end points by fixed distance along normal.\n      [0,1].forEach(function(t) {\n        var p = np[t*order] = utils.copy(points[t*order]);\n        p.x += (t?r2:r1) * v[t].n.x;\n        p.y += (t?r2:r1) * v[t].n.y;\n      }.bind(this));\n\n      if (!distanceFn) {\n        // move control points to lie on the intersection of the offset\n        // derivative vector, and the origin-through-control vector\n        [0,1].forEach(function(t) {\n          if(this.order===2 && !!t) return;\n          var p = np[t*order];\n          var d = this.derivative(t);\n          var p2 = { x: p.x + d.x, y: p.y + d.y };\n          np[t+1] = utils.lli4(p, p2, o, points[t+1]);\n        }.bind(this));\n        return new Bezier(np);\n      }\n\n      // move control points by \"however much necessary to\n      // ensure the correct tangent to endpoint\".\n      [0,1].forEach(function(t) {\n        if(this.order===2 && !!t) return;\n        var p = points[t+1];\n        var ov = {\n          x: p.x - o.x,\n          y: p.y - o.y\n        };\n        var rc = distanceFn ? distanceFn((t+1)/order) : d;\n        if(distanceFn && !clockwise) rc = -rc;\n        var m = sqrt(ov.x*ov.x + ov.y*ov.y);\n        ov.x /= m;\n        ov.y /= m;\n        np[t+1] = {\n          x: p.x + rc*ov.x,\n          y: p.y + rc*ov.y\n        }\n      }.bind(this));\n      return new Bezier(np);\n    },\n    outline: function(d1, d2, d3, d4) {\n      d2 = (typeof d2 === \"undefined\") ? d1 : d2;\n      var reduced = this.reduce(),\n          len = reduced.length,\n          fcurves = [],\n          bcurves = [],\n          p,\n          alen = 0,\n          tlen = this.length();\n\n      var graduated = (typeof d3 !== \"undefined\" && typeof d4 !== \"undefined\");\n\n      function linearDistanceFunction(s,e, tlen,alen,slen) {\n        return function (v) {\n          var f1 = alen/tlen, f2 = (alen+slen)/tlen, d = e-s;\n          return utils.map(v, 0,1, s+f1*d, s+f2*d);\n        };\n      };\n\n      // form curve oulines\n      reduced.forEach(function(segment) {\n        slen = segment.length();\n        if (graduated) {\n          fcurves.push(segment.scale(  linearDistanceFunction( d1, d3, tlen,alen,slen)  ));\n          bcurves.push(segment.scale(  linearDistanceFunction(-d2,-d4, tlen,alen,slen)  ));\n        } else {\n          fcurves.push(segment.scale( d1));\n          bcurves.push(segment.scale(-d2));\n        }\n        alen += slen;\n      });\n\n      // reverse the \"return\" outline\n      bcurves = bcurves.map(function(s) {\n        p = s.points;\n        if(p[3]) { s.points = [p[3],p[2],p[1],p[0]]; }\n        else { s.points = [p[2],p[1],p[0]]; }\n        return s;\n      }).reverse();\n\n      // form the endcaps as lines\n      var fs = fcurves[0].points[0],\n          fe = fcurves[len-1].points[fcurves[len-1].points.length-1],\n          bs = bcurves[len-1].points[bcurves[len-1].points.length-1],\n          be = bcurves[0].points[0],\n          ls = utils.makeline(bs,fs),\n          le = utils.makeline(fe,be),\n          segments = [ls].concat(fcurves).concat([le]).concat(bcurves),\n          slen = segments.length;\n\n      return new PolyBezier(segments);\n    },\n    outlineshapes: function(d1, d2, curveIntersectionThreshold) {\n      d2 = d2 || d1;\n      var outline = this.outline(d1,d2).curves;\n      var shapes = [];\n      for(var i=1, len=outline.length; i < len/2; i++) {\n        var shape = utils.makeshape(outline[i], outline[len-i], curveIntersectionThreshold);\n        shape.startcap.virtual = (i > 1);\n        shape.endcap.virtual = (i < len/2-1);\n        shapes.push(shape);\n      }\n      return shapes;\n    },\n    intersects: function(curve, curveIntersectionThreshold) {\n      if(!curve) return this.selfintersects(curveIntersectionThreshold);\n      if(curve.p1 && curve.p2) {\n        return this.lineIntersects(curve);\n      }\n      if(curve instanceof Bezier) { curve = curve.reduce(); }\n      return this.curveintersects(this.reduce(), curve, curveIntersectionThreshold);\n    },\n    lineIntersects: function(line) {\n      var mx = min(line.p1.x, line.p2.x),\n          my = min(line.p1.y, line.p2.y),\n          MX = max(line.p1.x, line.p2.x),\n          MY = max(line.p1.y, line.p2.y),\n          self=this;\n      return utils.roots(this.points, line).filter(function(t) {\n        var p = self.get(t);\n        return utils.between(p.x, mx, MX) && utils.between(p.y, my, MY);\n      });\n    },\n    selfintersects: function(curveIntersectionThreshold) {\n      var reduced = this.reduce();\n      // \"simple\" curves cannot intersect with their direct\n      // neighbour, so for each segment X we check whether\n      // it intersects [0:x-2][x+2:last].\n      var i,len=reduced.length-2,results=[],result,left,right;\n      for(i=0; i<len; i++) {\n        left = reduced.slice(i,i+1);\n        right = reduced.slice(i+2);\n        result = this.curveintersects(left, right, curveIntersectionThreshold);\n        results = results.concat( result );\n      }\n      return results;\n    },\n    curveintersects: function(c1, c2, curveIntersectionThreshold) {\n      var pairs = [];\n      // step 1: pair off any overlapping segments\n      c1.forEach(function(l) {\n        c2.forEach(function(r) {\n          if(l.overlaps(r)) {\n            pairs.push({ left: l, right: r });\n          }\n        });\n      });\n      // step 2: for each pairing, run through the convergence algorithm.\n      var intersections = [];\n      pairs.forEach(function(pair) {\n        var result = utils.pairiteration(pair.left, pair.right, curveIntersectionThreshold);\n        if(result.length > 0) {\n          intersections = intersections.concat(result);\n        }\n      });\n      return intersections;\n    },\n    arcs: function(errorThreshold) {\n      errorThreshold = errorThreshold || 0.5;\n      var circles = [];\n      return this._iterate(errorThreshold, circles);\n    },\n    _error: function(pc, np1, s, e) {\n      var q = (e - s) / 4,\n          c1 = this.get(s + q),\n          c2 = this.get(e - q),\n          ref = utils.dist(pc, np1),\n          d1  = utils.dist(pc, c1),\n          d2  = utils.dist(pc, c2);\n      return abs(d1-ref) + abs(d2-ref);\n    },\n    _iterate: function(errorThreshold, circles) {\n      var s = 0, e = 1, safety;\n      // we do a binary search to find the \"good `t` closest to no-longer-good\"\n      do {\n        safety=0;\n\n        // step 1: start with the maximum possible arc\n        e = 1;\n\n        // points:\n        var np1 = this.get(s), np2, np3, arc, prev_arc;\n\n        // booleans:\n        var curr_good = false, prev_good = false, done;\n\n        // numbers:\n        var m = e, prev_e = 1, step = 0;\n\n        // step 2: find the best possible arc\n        do {\n          prev_good = curr_good;\n          prev_arc = arc;\n          m = (s + e)/2;\n          step++;\n\n          np2 = this.get(m);\n          np3 = this.get(e);\n\n          arc = utils.getccenter(np1, np2, np3);\n\n          //also save the t values\n          arc.interval = {\n            start: s,\n            end: e\n          };\n\n          var error = this._error(arc, np1, s, e);\n          curr_good = (error <= errorThreshold);\n\n          done = prev_good && !curr_good;\n          if(!done) prev_e = e;\n\n          // this arc is fine: we can move 'e' up to see if we can find a wider arc\n          if(curr_good) {\n\n            // if e is already at max, then we're done for this arc.\n            if (e >= 1) {\n              arc.interval.end = prev_e = 1;\n              prev_arc = arc;\n              break;\n            }\n            // if not, move it up by half the iteration distance\n            e = e + (e-s)/2;\n          }\n\n          // this is a bad arc: we need to move 'e' down to find a good arc\n          else {\n            e = m;\n          }\n        }\n        while(!done && safety++<100);\n\n        if(safety>=100) {\n          break;\n        }\n\n        // console.log(\"L835: [F] arc found\", s, prev_e, prev_arc.x, prev_arc.y, prev_arc.s, prev_arc.e);\n\n        prev_arc = (prev_arc ? prev_arc : arc);\n        circles.push(prev_arc);\n        s = prev_e;\n      }\n      while(e < 1);\n      return circles;\n    }\n  };\n\n  module.exports = Bezier;\n\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bezier-js/lib/bezier.js\n// module id = 52\n// module chunks = 0","(function() {\n  \"use strict\";\n\n  // math-inlining.\n  var abs = Math.abs,\n      cos = Math.cos,\n      sin = Math.sin,\n      acos = Math.acos,\n      atan2 = Math.atan2,\n      sqrt = Math.sqrt,\n      pow = Math.pow,\n      // cube root function yielding real roots\n      crt = function(v) { return (v<0) ? -pow(-v,1/3) : pow(v,1/3); },\n      // trig constants\n      pi = Math.PI,\n      tau = 2*pi,\n      quart = pi/2,\n      // float precision significant decimal\n      epsilon = 0.000001,\n      // extremas used in bbox calculation and similar algorithms\n      nMax = Number.MAX_SAFE_INTEGER,\n      nMin = Number.MIN_SAFE_INTEGER;\n\n  // Bezier utility functions\n  var utils = {\n    // Legendre-Gauss abscissae with n=24 (x_i values, defined at i=n as the roots of the nth order Legendre polynomial Pn(x))\n    Tvalues: [\n      -0.0640568928626056260850430826247450385909,\n       0.0640568928626056260850430826247450385909,\n      -0.1911188674736163091586398207570696318404,\n       0.1911188674736163091586398207570696318404,\n      -0.3150426796961633743867932913198102407864,\n       0.3150426796961633743867932913198102407864,\n      -0.4337935076260451384870842319133497124524,\n       0.4337935076260451384870842319133497124524,\n      -0.5454214713888395356583756172183723700107,\n       0.5454214713888395356583756172183723700107,\n      -0.6480936519369755692524957869107476266696,\n       0.6480936519369755692524957869107476266696,\n      -0.7401241915785543642438281030999784255232,\n       0.7401241915785543642438281030999784255232,\n      -0.8200019859739029219539498726697452080761,\n       0.8200019859739029219539498726697452080761,\n      -0.8864155270044010342131543419821967550873,\n       0.8864155270044010342131543419821967550873,\n      -0.9382745520027327585236490017087214496548,\n       0.9382745520027327585236490017087214496548,\n      -0.9747285559713094981983919930081690617411,\n       0.9747285559713094981983919930081690617411,\n      -0.9951872199970213601799974097007368118745,\n       0.9951872199970213601799974097007368118745\n    ],\n\n    // Legendre-Gauss weights with n=24 (w_i values, defined by a function linked to in the Bezier primer article)\n    Cvalues: [\n      0.1279381953467521569740561652246953718517,\n      0.1279381953467521569740561652246953718517,\n      0.1258374563468282961213753825111836887264,\n      0.1258374563468282961213753825111836887264,\n      0.1216704729278033912044631534762624256070,\n      0.1216704729278033912044631534762624256070,\n      0.1155056680537256013533444839067835598622,\n      0.1155056680537256013533444839067835598622,\n      0.1074442701159656347825773424466062227946,\n      0.1074442701159656347825773424466062227946,\n      0.0976186521041138882698806644642471544279,\n      0.0976186521041138882698806644642471544279,\n      0.0861901615319532759171852029837426671850,\n      0.0861901615319532759171852029837426671850,\n      0.0733464814110803057340336152531165181193,\n      0.0733464814110803057340336152531165181193,\n      0.0592985849154367807463677585001085845412,\n      0.0592985849154367807463677585001085845412,\n      0.0442774388174198061686027482113382288593,\n      0.0442774388174198061686027482113382288593,\n      0.0285313886289336631813078159518782864491,\n      0.0285313886289336631813078159518782864491,\n      0.0123412297999871995468056670700372915759,\n      0.0123412297999871995468056670700372915759\n    ],\n\n    arcfn: function(t, derivativeFn) {\n      var d = derivativeFn(t);\n      var l = d.x*d.x + d.y*d.y;\n      if(typeof d.z !== \"undefined\") {\n        l += d.z*d.z;\n      }\n      return sqrt(l);\n    },\n\n    between: function(v, m, M) {\n      return (m <= v && v <= M) || utils.approximately(v, m) || utils.approximately(v, M);\n    },\n\n    approximately: function(a,b,precision) {\n      return abs(a-b) <= (precision || epsilon);\n    },\n\n    length: function(derivativeFn) {\n      var z=0.5,sum=0,len=utils.Tvalues.length,i,t;\n      for(i=0; i<len; i++) {\n        t = z * utils.Tvalues[i] + z;\n        sum += utils.Cvalues[i] * utils.arcfn(t,derivativeFn);\n      }\n      return z * sum;\n    },\n\n    map: function(v, ds,de, ts,te) {\n      var d1 = de-ds, d2 = te-ts, v2 =  v-ds, r = v2/d1;\n      return ts + d2*r;\n    },\n\n    lerp: function(r, v1, v2) {\n      var ret = {\n        x: v1.x + r*(v2.x-v1.x),\n        y: v1.y + r*(v2.y-v1.y)\n      };\n      if(!!v1.z && !!v2.z) {\n        ret.z =  v1.z + r*(v2.z-v1.z);\n      }\n      return ret;\n    },\n\n    pointToString: function(p) {\n      var s = p.x+\"/\"+p.y;\n      if(typeof p.z !== \"undefined\") {\n        s += \"/\"+p.z;\n      }\n      return s;\n    },\n\n    pointsToString: function(points) {\n      return \"[\" + points.map(utils.pointToString).join(\", \") + \"]\";\n    },\n\n    copy: function(obj) {\n      return JSON.parse(JSON.stringify(obj));\n    },\n\n    angle: function(o,v1,v2) {\n      var dx1 = v1.x - o.x,\n          dy1 = v1.y - o.y,\n          dx2 = v2.x - o.x,\n          dy2 = v2.y - o.y,\n          cross = dx1*dy2 - dy1*dx2,\n          dot = dx1*dx2 + dy1*dy2;\n      return atan2(cross, dot);\n    },\n\n    // round as string, to avoid rounding errors\n    round: function(v, d) {\n      var s = '' + v;\n      var pos = s.indexOf(\".\");\n      return parseFloat(s.substring(0,pos+1+d));\n    },\n\n    dist: function(p1, p2) {\n      var dx = p1.x - p2.x,\n          dy = p1.y - p2.y;\n      return sqrt(dx*dx+dy*dy);\n    },\n\n    closest: function(LUT, point) {\n      var mdist = pow(2,63), mpos, d;\n      LUT.forEach(function(p, idx) {\n        d = utils.dist(point, p);\n        if (d<mdist) {\n          mdist = d;\n          mpos = idx;\n        }\n      });\n      return { mdist:mdist, mpos:mpos };\n    },\n\n    abcratio: function(t, n) {\n      // see ratio(t) note on http://pomax.github.io/bezierinfo/#abc\n      if (n!==2 && n!==3) {\n        return false;\n      }\n      if (typeof t === \"undefined\") {\n        t = 0.5;\n      } else if (t===0 || t===1) {\n        return t;\n      }\n      var bottom = pow(t,n) + pow(1-t,n), top = bottom - 1;\n      return abs(top/bottom);\n    },\n\n    projectionratio: function(t, n) {\n      // see u(t) note on http://pomax.github.io/bezierinfo/#abc\n      if (n!==2 && n!==3) {\n        return false;\n      }\n      if (typeof t === \"undefined\") {\n        t = 0.5;\n      } else if (t===0 || t===1) {\n        return t;\n      }\n      var top = pow(1-t, n), bottom = pow(t,n) + top;\n      return top/bottom;\n    },\n\n    lli8: function(x1,y1,x2,y2,x3,y3,x4,y4) {\n      var nx=(x1*y2-y1*x2)*(x3-x4)-(x1-x2)*(x3*y4-y3*x4),\n          ny=(x1*y2-y1*x2)*(y3-y4)-(y1-y2)*(x3*y4-y3*x4),\n          d=(x1-x2)*(y3-y4)-(y1-y2)*(x3-x4);\n      if(d==0) { return false; }\n      return { x: nx/d, y: ny/d };\n    },\n\n    lli4: function(p1,p2,p3,p4) {\n      var x1 = p1.x, y1 = p1.y,\n          x2 = p2.x, y2 = p2.y,\n          x3 = p3.x, y3 = p3.y,\n          x4 = p4.x, y4 = p4.y;\n      return utils.lli8(x1,y1,x2,y2,x3,y3,x4,y4);\n    },\n\n    lli: function(v1, v2) {\n      return utils.lli4(v1,v1.c,v2,v2.c);\n    },\n\n    makeline: function(p1,p2) {\n      var Bezier = require('./bezier');\n      var x1 = p1.x, y1 = p1.y, x2 = p2.x, y2 = p2.y, dx = (x2-x1)/3, dy = (y2-y1)/3;\n      return new Bezier(x1, y1, x1+dx, y1+dy, x1+2*dx, y1+2*dy, x2, y2);\n    },\n\n    findbbox: function(sections) {\n      var mx=nMax,my=nMax,MX=nMin,MY=nMin;\n      sections.forEach(function(s) {\n        var bbox = s.bbox();\n        if(mx > bbox.x.min) mx = bbox.x.min;\n        if(my > bbox.y.min) my = bbox.y.min;\n        if(MX < bbox.x.max) MX = bbox.x.max;\n        if(MY < bbox.y.max) MY = bbox.y.max;\n      });\n      return {\n        x: { min: mx, mid:(mx+MX)/2, max: MX, size:MX-mx },\n        y: { min: my, mid:(my+MY)/2, max: MY, size:MY-my }\n      }\n    },\n\n    shapeintersections: function(s1, bbox1, s2, bbox2, curveIntersectionThreshold) {\n      if(!utils.bboxoverlap(bbox1, bbox2)) return [];\n      var intersections = [];\n      var a1 = [s1.startcap, s1.forward, s1.back, s1.endcap];\n      var a2 = [s2.startcap, s2.forward, s2.back, s2.endcap];\n      a1.forEach(function(l1) {\n        if(l1.virtual) return;\n        a2.forEach(function(l2) {\n          if(l2.virtual) return;\n          var iss = l1.intersects(l2, curveIntersectionThreshold);\n          if(iss.length>0) {\n            iss.c1 = l1;\n            iss.c2 = l2;\n            iss.s1 = s1;\n            iss.s2 = s2;\n            intersections.push(iss);\n          }\n        });\n      });\n      return intersections;\n    },\n\n    makeshape: function(forward, back, curveIntersectionThreshold) {\n      var bpl = back.points.length;\n      var fpl = forward.points.length;\n      var start  = utils.makeline(back.points[bpl-1], forward.points[0]);\n      var end    = utils.makeline(forward.points[fpl-1], back.points[0]);\n      var shape  = {\n        startcap: start,\n        forward: forward,\n        back: back,\n        endcap: end,\n        bbox: utils.findbbox([start, forward, back, end])\n      };\n      var self = utils;\n      shape.intersections = function(s2) {\n        return self.shapeintersections(shape,shape.bbox,s2,s2.bbox, curveIntersectionThreshold);\n      };\n      return shape;\n    },\n\n    getminmax: function(curve, d, list) {\n      if(!list) return { min:0, max:0 };\n      var min=nMax, max=nMin,t,c;\n      if(list.indexOf(0)===-1) { list = [0].concat(list); }\n      if(list.indexOf(1)===-1) { list.push(1); }\n      for(var i=0,len=list.length; i<len; i++) {\n        t = list[i];\n        c = curve.get(t);\n        if(c[d] < min) { min = c[d]; }\n        if(c[d] > max) { max = c[d]; }\n      }\n      return { min:min, mid:(min+max)/2, max:max, size:max-min };\n    },\n\n    align: function(points, line) {\n      var tx = line.p1.x,\n          ty = line.p1.y,\n          a = -atan2(line.p2.y-ty, line.p2.x-tx),\n          d = function(v) {\n            return {\n              x: (v.x-tx)*cos(a) - (v.y-ty)*sin(a),\n              y: (v.x-tx)*sin(a) + (v.y-ty)*cos(a)\n            };\n          };\n      return points.map(d);\n    },\n\n    roots: function(points, line) {\n      line = line || {p1:{x:0,y:0},p2:{x:1,y:0}};\n      var order = points.length - 1;\n      var p = utils.align(points, line);\n      var reduce = function(t) { return 0<=t && t <=1; };\n\n      if (order === 2) {\n        var a = p[0].y,\n            b = p[1].y,\n            c = p[2].y,\n            d = a - 2*b + c;\n        if(d!==0) {\n          var m1 = -sqrt(b*b-a*c),\n              m2 = -a+b,\n              v1 = -( m1+m2)/d,\n              v2 = -(-m1+m2)/d;\n          return [v1, v2].filter(reduce);\n        }\n        else if(b!==c && d===0) {\n          return [ (2*b-c)/2*(b-c) ].filter(reduce);\n        }\n        return [];\n      }\n\n      // see http://www.trans4mind.com/personal_development/mathematics/polynomials/cubicAlgebra.htm\n      var pa = p[0].y,\n          pb = p[1].y,\n          pc = p[2].y,\n          pd = p[3].y,\n          d = (-pa + 3*pb - 3*pc + pd),\n          a = (3*pa - 6*pb + 3*pc) / d,\n          b = (-3*pa + 3*pb) / d,\n          c = pa / d,\n          p = (3*b - a*a)/3,\n          p3 = p/3,\n          q = (2*a*a*a - 9*a*b + 27*c)/27,\n          q2 = q/2,\n          discriminant = q2*q2 + p3*p3*p3,\n          u1,v1,x1,x2,x3;\n       if (discriminant < 0) {\n        var mp3 = -p/3,\n            mp33 = mp3*mp3*mp3,\n            r = sqrt( mp33 ),\n            t = -q/(2*r),\n            cosphi = t<-1 ? -1 : t>1 ? 1 : t,\n            phi = acos(cosphi),\n            crtr = crt(r),\n            t1 = 2*crtr;\n        x1 = t1 * cos(phi/3) - a/3;\n        x2 = t1 * cos((phi+tau)/3) - a/3;\n        x3 = t1 * cos((phi+2*tau)/3) - a/3;\n        return [x1, x2, x3].filter(reduce);\n      } else if(discriminant === 0) {\n        u1 = q2 < 0 ? crt(-q2) : -crt(q2);\n        x1 = 2*u1-a/3;\n        x2 = -u1 - a/3;\n        return [x1,x2].filter(reduce);\n      } else {\n        var sd = sqrt(discriminant);\n        u1 = crt(-q2+sd);\n        v1 = crt(q2+sd);\n        return [u1-v1-a/3].filter(reduce);;\n      }\n    },\n\n    droots: function(p) {\n      // quadratic roots are easy\n      if(p.length === 3) {\n        var a = p[0],\n            b = p[1],\n            c = p[2],\n            d = a - 2*b + c;\n        if(d!==0) {\n          var m1 = -sqrt(b*b-a*c),\n              m2 = -a+b,\n              v1 = -( m1+m2)/d,\n              v2 = -(-m1+m2)/d;\n          return [v1, v2];\n        }\n        else if(b!==c && d===0) {\n          return [(2*b-c)/(2*(b-c))];\n        }\n        return [];\n      }\n\n      // linear roots are even easier\n      if(p.length === 2) {\n        var a = p[0], b = p[1];\n        if(a!==b) {\n          return [a/(a-b)];\n        }\n        return [];\n      }\n    },\n\n    inflections: function(points) {\n      if (points.length<4) return [];\n\n      // FIXME: TODO: add in inflection abstraction for quartic+ curves?\n\n      var p = utils.align(points, { p1: points[0], p2: points.slice(-1)[0] }),\n          a = p[2].x * p[1].y,\n          b = p[3].x * p[1].y,\n          c = p[1].x * p[2].y,\n          d = p[3].x * p[2].y,\n          v1 = 18 * (-3*a + 2*b + 3*c - d),\n          v2 = 18 * (3*a - b - 3*c),\n          v3 = 18 * (c - a);\n\n      if (utils.approximately(v1,0)){\n        if(!utils.approximately(v2,0)){\n          var t = -v3/v2;\n          if (0 <= t && t <= 1)\n             return [t];\n        }\n        return [];\n      }\n\n      var trm = v2*v2 - 4*v1*v3,\n          sq = Math.sqrt(trm),\n          d = 2 * v1;\n\n      if (utils.approximately(d,0)) return [];\n\n      return [(sq-v2)/d, -(v2+sq)/d].filter(function(r) {\n        return (0 <= r && r <= 1);\n      });\n    },\n\n    bboxoverlap: function(b1,b2) {\n      var dims=['x','y'],len=dims.length,i,dim,l,t,d\n      for(i=0; i<len; i++) {\n        dim = dims[i];\n        l = b1[dim].mid;\n        t = b2[dim].mid;\n        d = (b1[dim].size + b2[dim].size)/2;\n        if(abs(l-t) >= d) return false;\n      }\n      return true;\n    },\n\n    expandbox: function(bbox, _bbox) {\n      if(_bbox.x.min < bbox.x.min) { bbox.x.min = _bbox.x.min; }\n      if(_bbox.y.min < bbox.y.min) { bbox.y.min = _bbox.y.min; }\n      if(_bbox.z && _bbox.z.min < bbox.z.min) { bbox.z.min = _bbox.z.min; }\n      if(_bbox.x.max > bbox.x.max) { bbox.x.max = _bbox.x.max; }\n      if(_bbox.y.max > bbox.y.max) { bbox.y.max = _bbox.y.max; }\n      if(_bbox.z && _bbox.z.max > bbox.z.max) { bbox.z.max = _bbox.z.max; }\n      bbox.x.mid = (bbox.x.min + bbox.x.max)/2;\n      bbox.y.mid = (bbox.y.min + bbox.y.max)/2;\n      if(bbox.z) { bbox.z.mid = (bbox.z.min + bbox.z.max)/2; }\n      bbox.x.size = bbox.x.max - bbox.x.min;\n      bbox.y.size = bbox.y.max - bbox.y.min;\n      if(bbox.z) { bbox.z.size = bbox.z.max - bbox.z.min; }\n    },\n\n    pairiteration: function(c1, c2, curveIntersectionThreshold) {\n      var c1b = c1.bbox(),\n          c2b = c2.bbox(),\n          r = 100000,\n          threshold = curveIntersectionThreshold || 0.5;\n      if(c1b.x.size + c1b.y.size < threshold && c2b.x.size + c2b.y.size < threshold) {\n        return [ ((r * (c1._t1+c1._t2)/2)|0)/r + \"/\" + ((r * (c2._t1+c2._t2)/2)|0)/r ];\n      }\n      var cc1 = c1.split(0.5),\n          cc2 = c2.split(0.5),\n          pairs = [\n            {left: cc1.left, right: cc2.left },\n            {left: cc1.left, right: cc2.right },\n            {left: cc1.right, right: cc2.right },\n            {left: cc1.right, right: cc2.left }];\n      pairs = pairs.filter(function(pair) {\n        return utils.bboxoverlap(pair.left.bbox(),pair.right.bbox());\n      });\n      var results = [];\n      if(pairs.length === 0) return results;\n      pairs.forEach(function(pair) {\n        results = results.concat(\n          utils.pairiteration(pair.left, pair.right, threshold)\n        );\n      })\n      results = results.filter(function(v,i) {\n        return results.indexOf(v) === i;\n      });\n      return results;\n    },\n\n    getccenter: function(p1,p2,p3) {\n      var dx1 = (p2.x - p1.x),\n          dy1 = (p2.y - p1.y),\n          dx2 = (p3.x - p2.x),\n          dy2 = (p3.y - p2.y);\n      var dx1p = dx1 * cos(quart) - dy1 * sin(quart),\n          dy1p = dx1 * sin(quart) + dy1 * cos(quart),\n          dx2p = dx2 * cos(quart) - dy2 * sin(quart),\n          dy2p = dx2 * sin(quart) + dy2 * cos(quart);\n      // chord midpoints\n      var mx1 = (p1.x + p2.x)/2,\n          my1 = (p1.y + p2.y)/2,\n          mx2 = (p2.x + p3.x)/2,\n          my2 = (p2.y + p3.y)/2;\n      // midpoint offsets\n      var mx1n = mx1 + dx1p,\n          my1n = my1 + dy1p,\n          mx2n = mx2 + dx2p,\n          my2n = my2 + dy2p;\n      // intersection of these lines:\n      var arc = utils.lli8(mx1,my1,mx1n,my1n, mx2,my2,mx2n,my2n),\n          r = utils.dist(arc,p1),\n          // arc start/end values, over mid point:\n          s = atan2(p1.y - arc.y, p1.x - arc.x),\n          m = atan2(p2.y - arc.y, p2.x - arc.x),\n          e = atan2(p3.y - arc.y, p3.x - arc.x),\n          _;\n      // determine arc direction (cw/ccw correction)\n      if (s<e) {\n        // if s<m<e, arc(s, e)\n        // if m<s<e, arc(e, s + tau)\n        // if s<e<m, arc(e, s + tau)\n        if (s>m || m>e) { s += tau; }\n        if (s>e) { _=e; e=s; s=_; }\n      } else {\n        // if e<m<s, arc(e, s)\n        // if m<e<s, arc(s, e + tau)\n        // if e<s<m, arc(s, e + tau)\n        if (e<m && m<s) { _=e; e=s; s=_; } else { e += tau; }\n      }\n      // assign and done.\n      arc.s = s;\n      arc.e = e;\n      arc.r = r;\n      return arc;\n    }\n  };\n\n  module.exports = utils;\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bezier-js/lib/utils.js\n// module id = 53\n// module chunks = 0","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/buffer/index.js\n// module id = 54\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @typechecks\n */\n\nvar emptyFunction = require('./emptyFunction');\n\n/**\n * Upstream version of event listener. Does not take into account specific\n * nature of platform.\n */\nvar EventListener = {\n  /**\n   * Listen to DOM events during the bubble phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  listen: function listen(target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, false);\n      return {\n        remove: function remove() {\n          target.removeEventListener(eventType, callback, false);\n        }\n      };\n    } else if (target.attachEvent) {\n      target.attachEvent('on' + eventType, callback);\n      return {\n        remove: function remove() {\n          target.detachEvent('on' + eventType, callback);\n        }\n      };\n    }\n  },\n\n  /**\n   * Listen to DOM events during the capture phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  capture: function capture(target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, true);\n      return {\n        remove: function remove() {\n          target.removeEventListener(eventType, callback, true);\n        }\n      };\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');\n      }\n      return {\n        remove: emptyFunction\n      };\n    }\n  },\n\n  registerDefault: function registerDefault() {}\n};\n\nmodule.exports = EventListener;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/EventListener.js\n// module id = 55\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * @param {DOMElement} node input/textarea to focus\n */\n\nfunction focusNode(node) {\n  // IE8 can throw \"Can't move focus to the control because it is invisible,\n  // not enabled, or of a type that does not accept the focus.\" for all kinds of\n  // reasons that are too expensive and fragile to test.\n  try {\n    node.focus();\n  } catch (e) {}\n}\n\nmodule.exports = focusNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/focusNode.js\n// module id = 56\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\n/* eslint-disable fb-www/typeof-undefined */\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n *\n * @param {?DOMDocument} doc Defaults to current document.\n * @return {?DOMElement}\n */\nfunction getActiveElement(doc) /*?DOMElement*/{\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n\nmodule.exports = getActiveElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/getActiveElement.js\n// module id = 57\n// module chunks = 0","/*\r\n\r\n## IMPORTANT NOTE --- IMPORTANT \r\nThe master for this file is located at:\r\nhttps://github.com/joostn/openjscad/tree/gh-pages\r\nThat is the gh-pages branch of the joostn/openjscad project\r\nIf contributing from openjscad.org, please do NOT edit this local file but make pull requests against\r\nabove joostn/gh-pages branch.\r\n## IMPORTANT NOTE --- IMPORTANT NOTE\r\n\r\n\r\n## License\r\n\r\nCopyright (c) 2014 bebbi (elghatta@gmail.com)\r\nCopyright (c) 2013 Eduard Bespalov (edwbes@gmail.com)\r\nCopyright (c) 2012 Joost Nieuwenhuijse (joost@newhouse.nl)\r\nCopyright (c) 2011 Evan Wallace (http://evanw.github.com/csg.js/)\r\nCopyright (c) 2012 Alexandre Girard (https://github.com/alx)\r\n\r\nAll code released under MIT license\r\n\r\n## Overview\r\n\r\nFor an overview of the CSG process see the original csg.js code:\r\nhttp://evanw.github.com/csg.js/\r\n\r\nCSG operations through BSP trees suffer from one problem: heavy fragmentation\r\nof polygons. If two CSG solids of n polygons are unified, the resulting solid may have\r\nin the order of n*n polygons, because each polygon is split by the planes of all other\r\npolygons. After a few operations the number of polygons explodes.\r\n\r\nThis version of CSG.js solves the problem in 3 ways:\r\n\r\n1. Every polygon split is recorded in a tree (CSG.PolygonTreeNode). This is a separate\r\ntree, not to be confused with the CSG tree. If a polygon is split into two parts but in\r\nthe end both fragments have not been discarded by the CSG operation, we can retrieve\r\nthe original unsplit polygon from the tree, instead of the two fragments.\r\n\r\nThis does not completely solve the issue though: if a polygon is split multiple times\r\nthe number of fragments depends on the order of subsequent splits, and we might still\r\nend up with unncessary splits:\r\nSuppose a polygon is first split into A and B, and then into A1, B1, A2, B2. Suppose B2 is\r\ndiscarded. We will end up with 2 polygons: A and B1. Depending on the actual split boundaries\r\nwe could still have joined A and B1 into one polygon. Therefore a second approach is used as well:\r\n\r\n2. After CSG operations all coplanar polygon fragments are joined by a retesselating\r\noperation. See CSG.reTesselated(). Retesselation is done through a\r\nlinear sweep over the polygon surface. The sweep line passes over the y coordinates\r\nof all vertices in the polygon. Polygons are split at each sweep line, and the fragments\r\nare joined horizontally and vertically into larger polygons (making sure that we\r\nwill end up with convex polygons).\r\nThis still doesn't solve the problem completely: due to floating point imprecisions\r\nwe may end up with small gaps between polygons, and polygons may not be exactly coplanar\r\nanymore, and as a result the retesselation algorithm may fail to join those polygons.\r\nTherefore:\r\n\r\n3. A canonicalization algorithm is implemented: it looks for vertices that have\r\napproximately the same coordinates (with a certain tolerance, say 1e-5) and replaces\r\nthem with the same vertex. If polygons share a vertex they will actually point to the\r\nsame CSG.Vertex instance. The same is done for polygon planes. See CSG.canonicalized().\r\n\r\n\r\nPerformance improvements to the original CSG.js:\r\n\r\nReplaced the flip() and invert() methods by flipped() and inverted() which don't\r\nmodify the source object. This allows to get rid of all clone() calls, so that\r\nmultiple polygons can refer to the same CSG.Plane instance etc.\r\n\r\nThe original union() used an extra invert(), clipTo(), invert() sequence just to remove the\r\ncoplanar front faces from b; this is now combined in a single b.clipTo(a, true) call.\r\n\r\nDetection whether a polygon is in front or in back of a plane: for each polygon\r\nwe are caching the coordinates of the bounding sphere. If the bounding sphere is\r\nin front or in back of the plane we don't have to check the individual vertices\r\nanymore.\r\n\r\n\r\nOther additions to the original CSG.js:\r\n\r\nCSG.Vector class has been renamed into CSG.Vector3D\r\n\r\nClasses for 3D lines, 2D vectors, 2D lines, and methods to find the intersection of\r\na line and a plane etc.\r\n\r\nTransformations: CSG.transform(), CSG.translate(), CSG.rotate(), CSG.scale()\r\n\r\nExpanding or contracting a solid: CSG.expand() and CSG.contract(). Creates nice\r\nsmooth corners.\r\n\r\nThe vertex normal has been removed since it complicates retesselation. It's not needed\r\nfor solid CAD anyway.\r\n\r\n*/\r\n\r\n(function(module) {\r\n\r\n    var _CSGDEBUG = false;\r\n\r\n    function fnNumberSort(a, b) {\r\n        return a - b;\r\n    }\r\n\r\n    // # class CSG\r\n    // Holds a binary space partition tree representing a 3D solid. Two solids can\r\n    // be combined using the `union()`, `subtract()`, and `intersect()` methods.\r\n    var CSG = function() {\r\n        this.polygons = [];\r\n        this.properties = new CSG.Properties();\r\n        this.isCanonicalized = true;\r\n        this.isRetesselated = true;\r\n    };\r\n\r\n    CSG.defaultResolution2D = 32;\r\n    CSG.defaultResolution3D = 12;\r\n\r\n    // Construct a CSG solid from a list of `CSG.Polygon` instances.\r\n    CSG.fromPolygons = function(polygons) {\r\n        var csg = new CSG();\r\n        csg.polygons = polygons;\r\n        csg.isCanonicalized = false;\r\n        csg.isRetesselated = false;\r\n        return csg;\r\n    };\r\n\r\n    // Construct a CSG solid from generated slices.\r\n    // Look at CSG.Polygon.prototype.solidFromSlices for details\r\n    CSG.fromSlices = function(options) {\r\n        return (new CSG.Polygon.createFromPoints([\r\n            [0, 0, 0],\r\n            [1, 0, 0],\r\n            [1, 1, 0],\r\n            [0, 1, 0]\r\n        ])).solidFromSlices(options);\r\n    };\r\n\r\n    // create from an untyped object with identical property names:\r\n    CSG.fromObject = function(obj) {\r\n        var polygons = obj.polygons.map(function(p) {\r\n            return CSG.Polygon.fromObject(p);\r\n        });\r\n        var csg = CSG.fromPolygons(polygons);\r\n        csg = csg.canonicalized();\r\n        return csg;\r\n    };\r\n\r\n    // Reconstruct a CSG from the output of toCompactBinary()\r\n    CSG.fromCompactBinary = function(bin) {\r\n        if (bin['class'] != \"CSG\") throw new Error(\"Not a CSG\");\r\n        var planes = [],\r\n            planeData = bin.planeData,\r\n            numplanes = planeData.length / 4,\r\n            arrayindex = 0,\r\n            x, y, z, w, normal, plane;\r\n        for (var planeindex = 0; planeindex < numplanes; planeindex++) {\r\n            x = planeData[arrayindex++];\r\n            y = planeData[arrayindex++];\r\n            z = planeData[arrayindex++];\r\n            w = planeData[arrayindex++];\r\n            normal = CSG.Vector3D.Create(x, y, z);\r\n            plane = new CSG.Plane(normal, w);\r\n            planes.push(plane);\r\n        }\r\n\r\n        var vertices = [],\r\n            vertexData = bin.vertexData,\r\n            numvertices = vertexData.length / 3,\r\n            pos, vertex;\r\n        arrayindex = 0;\r\n        for (var vertexindex = 0; vertexindex < numvertices; vertexindex++) {\r\n            x = vertexData[arrayindex++];\r\n            y = vertexData[arrayindex++];\r\n            z = vertexData[arrayindex++];\r\n            pos = CSG.Vector3D.Create(x, y, z);\r\n            vertex = new CSG.Vertex(pos);\r\n            vertices.push(vertex);\r\n        }\r\n\r\n        var shareds = bin.shared.map(function(shared) {\r\n            return CSG.Polygon.Shared.fromObject(shared);\r\n        });\r\n\r\n        var polygons = [],\r\n            numpolygons = bin.numPolygons,\r\n            numVerticesPerPolygon = bin.numVerticesPerPolygon,\r\n            polygonVertices = bin.polygonVertices,\r\n            polygonPlaneIndexes = bin.polygonPlaneIndexes,\r\n            polygonSharedIndexes = bin.polygonSharedIndexes,\r\n            numpolygonvertices, polygonvertices, shared, polygon; //already defined plane,\r\n        arrayindex = 0;\r\n        for (var polygonindex = 0; polygonindex < numpolygons; polygonindex++) {\r\n            numpolygonvertices = numVerticesPerPolygon[polygonindex];\r\n            polygonvertices = [];\r\n            for (var i = 0; i < numpolygonvertices; i++) {\r\n                polygonvertices.push(vertices[polygonVertices[arrayindex++]]);\r\n            }\r\n            plane = planes[polygonPlaneIndexes[polygonindex]];\r\n            shared = shareds[polygonSharedIndexes[polygonindex]];\r\n            polygon = new CSG.Polygon(polygonvertices, shared, plane);\r\n            polygons.push(polygon);\r\n        }\r\n        var csg = CSG.fromPolygons(polygons);\r\n        csg.isCanonicalized = true;\r\n        csg.isRetesselated = true;\r\n        return csg;\r\n    };\r\n\r\n    CSG.prototype = {\r\n        toPolygons: function() {\r\n            return this.polygons;\r\n        },\r\n\r\n        // Return a new CSG solid representing space in either this solid or in the\r\n        // solid `csg`. Neither this solid nor the solid `csg` are modified.\r\n        //\r\n        //     A.union(B)\r\n        //\r\n        //     +-------+            +-------+\r\n        //     |       |            |       |\r\n        //     |   A   |            |       |\r\n        //     |    +--+----+   =   |       +----+\r\n        //     +----+--+    |       +----+       |\r\n        //          |   B   |            |       |\r\n        //          |       |            |       |\r\n        //          +-------+            +-------+\r\n        //\r\n        union: function(csg) {\r\n            var csgs;\r\n            if (csg instanceof Array) {\r\n                csgs = csg.slice(0);\r\n                csgs.push(this);\r\n            } else {\r\n                csgs = [this, csg];\r\n            }\r\n\r\n            // combine csg pairs in a way that forms a balanced binary tree pattern\r\n            for (var i = 1; i < csgs.length; i += 2) {\r\n                csgs.push(csgs[i-1].unionSub(csgs[i]));\r\n            }\r\n\r\n            return csgs[i - 1].reTesselated().canonicalized();\r\n        },\r\n\r\n        unionSub: function(csg, retesselate, canonicalize) {\r\n            if (!this.mayOverlap(csg)) {\r\n                return this.unionForNonIntersecting(csg);\r\n            } else {\r\n                var a = new CSG.Tree(this.polygons);\r\n                var b = new CSG.Tree(csg.polygons);\r\n                a.clipTo(b, false);\r\n\r\n                // b.clipTo(a, true); // ERROR: this doesn't work\r\n                b.clipTo(a);\r\n                b.invert();\r\n                b.clipTo(a);\r\n                b.invert();\r\n\r\n                var newpolygons = a.allPolygons().concat(b.allPolygons());\r\n                var result = CSG.fromPolygons(newpolygons);\r\n                result.properties = this.properties._merge(csg.properties);\r\n                if (retesselate) result = result.reTesselated();\r\n                if (canonicalize) result = result.canonicalized();\r\n                return result;\r\n            }\r\n        },\r\n\r\n        // Like union, but when we know that the two solids are not intersecting\r\n        // Do not use if you are not completely sure that the solids do not intersect!\r\n        unionForNonIntersecting: function(csg) {\r\n            var newpolygons = this.polygons.concat(csg.polygons);\r\n            var result = CSG.fromPolygons(newpolygons);\r\n            result.properties = this.properties._merge(csg.properties);\r\n            result.isCanonicalized = this.isCanonicalized && csg.isCanonicalized;\r\n            result.isRetesselated = this.isRetesselated && csg.isRetesselated;\r\n            return result;\r\n        },\r\n\r\n        // Return a new CSG solid representing space in this solid but not in the\r\n        // solid `csg`. Neither this solid nor the solid `csg` are modified.\r\n        //\r\n        //     A.subtract(B)\r\n        //\r\n        //     +-------+            +-------+\r\n        //     |       |            |       |\r\n        //     |   A   |            |       |\r\n        //     |    +--+----+   =   |    +--+\r\n        //     +----+--+    |       +----+\r\n        //          |   B   |\r\n        //          |       |\r\n        //          +-------+\r\n        //\r\n        subtract: function(csg) {\r\n            var csgs;\r\n            if (csg instanceof Array) {\r\n                csgs = csg;\r\n            } else {\r\n                csgs = [csg];\r\n            }\r\n            var result = this;\r\n            for (var i = 0; i < csgs.length; i++) {\r\n                var islast = (i == (csgs.length - 1));\r\n                result = result.subtractSub(csgs[i], islast, islast);\r\n            }\r\n            return result;\r\n        },\r\n\r\n        subtractSub: function(csg, retesselate, canonicalize) {\r\n            var a = new CSG.Tree(this.polygons);\r\n            var b = new CSG.Tree(csg.polygons);\r\n            a.invert();\r\n            a.clipTo(b);\r\n            b.clipTo(a, true);\r\n            a.addPolygons(b.allPolygons());\r\n            a.invert();\r\n            var result = CSG.fromPolygons(a.allPolygons());\r\n            result.properties = this.properties._merge(csg.properties);\r\n            if (retesselate) result = result.reTesselated();\r\n            if (canonicalize) result = result.canonicalized();\r\n            return result;\r\n        },\r\n\r\n        // Return a new CSG solid representing space both this solid and in the\r\n        // solid `csg`. Neither this solid nor the solid `csg` are modified.\r\n        //\r\n        //     A.intersect(B)\r\n        //\r\n        //     +-------+\r\n        //     |       |\r\n        //     |   A   |\r\n        //     |    +--+----+   =   +--+\r\n        //     +----+--+    |       +--+\r\n        //          |   B   |\r\n        //          |       |\r\n        //          +-------+\r\n        //\r\n        intersect: function(csg) {\r\n            var csgs;\r\n            if (csg instanceof Array) {\r\n                csgs = csg;\r\n            } else {\r\n                csgs = [csg];\r\n            }\r\n            var result = this;\r\n            for (var i = 0; i < csgs.length; i++) {\r\n                var islast = (i == (csgs.length - 1));\r\n                result = result.intersectSub(csgs[i], islast, islast);\r\n            }\r\n            return result;\r\n        },\r\n\r\n        intersectSub: function(csg, retesselate, canonicalize) {\r\n            var a = new CSG.Tree(this.polygons);\r\n            var b = new CSG.Tree(csg.polygons);\r\n            a.invert();\r\n            b.clipTo(a);\r\n            b.invert();\r\n            a.clipTo(b);\r\n            b.clipTo(a);\r\n            a.addPolygons(b.allPolygons());\r\n            a.invert();\r\n            var result = CSG.fromPolygons(a.allPolygons());\r\n            result.properties = this.properties._merge(csg.properties);\r\n            if (retesselate) result = result.reTesselated();\r\n            if (canonicalize) result = result.canonicalized();\r\n            return result;\r\n        },\r\n\r\n        // Return a new CSG solid with solid and empty space switched. This solid is\r\n        // not modified.\r\n        invert: function() {\r\n            var flippedpolygons = this.polygons.map(function(p) {\r\n                return p.flipped();\r\n            });\r\n            return CSG.fromPolygons(flippedpolygons);\r\n            // TODO: flip properties?\r\n        },\r\n\r\n        // Affine transformation of CSG object. Returns a new CSG object\r\n        transform1: function(matrix4x4) {\r\n            var newpolygons = this.polygons.map(function(p) {\r\n                return p.transform(matrix4x4);\r\n            });\r\n            var result = CSG.fromPolygons(newpolygons);\r\n            result.properties = this.properties._transform(matrix4x4);\r\n            result.isRetesselated = this.isRetesselated;\r\n            return result;\r\n        },\r\n\r\n        transform: function(matrix4x4) {\r\n            var ismirror = matrix4x4.isMirroring();\r\n            var transformedvertices = {};\r\n            var transformedplanes = {};\r\n            var newpolygons = this.polygons.map(function(p) {\r\n                var newplane;\r\n                var plane = p.plane;\r\n                var planetag = plane.getTag();\r\n                if (planetag in transformedplanes) {\r\n                    newplane = transformedplanes[planetag];\r\n                } else {\r\n                    newplane = plane.transform(matrix4x4);\r\n                    transformedplanes[planetag] = newplane;\r\n                }\r\n                var newvertices = p.vertices.map(function(v) {\r\n                    var newvertex;\r\n                    var vertextag = v.getTag();\r\n                    if (vertextag in transformedvertices) {\r\n                        newvertex = transformedvertices[vertextag];\r\n                    } else {\r\n                        newvertex = v.transform(matrix4x4);\r\n                        transformedvertices[vertextag] = newvertex;\r\n                    }\r\n                    return newvertex;\r\n                });\r\n                if (ismirror) newvertices.reverse();\r\n                return new CSG.Polygon(newvertices, p.shared, newplane);\r\n            });\r\n            var result = CSG.fromPolygons(newpolygons);\r\n            result.properties = this.properties._transform(matrix4x4);\r\n            result.isRetesselated = this.isRetesselated;\r\n            result.isCanonicalized = this.isCanonicalized;\r\n            return result;\r\n        },\r\n\r\n        toString: function() {\r\n            var result = \"CSG solid:\\n\";\r\n            this.polygons.map(function(p) {\r\n                result += p.toString();\r\n            });\r\n            return result;\r\n        },\r\n\r\n        // Expand the solid\r\n        // resolution: number of points per 360 degree for the rounded corners\r\n        expand: function(radius, resolution) {\r\n            var result = this.expandedShell(radius, resolution, true);\r\n            result = result.reTesselated();\r\n            result.properties = this.properties; // keep original properties\r\n            return result;\r\n        },\r\n\r\n        // Contract the solid\r\n        // resolution: number of points per 360 degree for the rounded corners\r\n        contract: function(radius, resolution) {\r\n            var expandedshell = this.expandedShell(radius, resolution, false);\r\n            var result = this.subtract(expandedshell);\r\n            result = result.reTesselated();\r\n            result.properties = this.properties; // keep original properties\r\n            return result;\r\n        },\r\n\r\n        // cut the solid at a plane, and stretch the cross-section found along plane normal\r\n        stretchAtPlane: function(normal, point, length) {\r\n            var plane = CSG.Plane.fromNormalAndPoint(normal, point);\r\n            var onb = new CSG.OrthoNormalBasis(plane);\r\n            var crosssect = this.sectionCut(onb);\r\n            var midpiece = crosssect.extrudeInOrthonormalBasis(onb, length);\r\n            var piece1 = this.cutByPlane(plane);\r\n            var piece2 = this.cutByPlane(plane.flipped());\r\n            var result = piece1.union([midpiece, piece2.translate(plane.normal.times(length))]);\r\n            return result;\r\n        },\r\n\r\n\r\n        // Create the expanded shell of the solid:\r\n        // All faces are extruded to get a thickness of 2*radius\r\n        // Cylinders are constructed around every side\r\n        // Spheres are placed on every vertex\r\n        // unionWithThis: if true, the resulting solid will be united with 'this' solid;\r\n        //   the result is a true expansion of the solid\r\n        //   If false, returns only the shell\r\n        expandedShell: function(radius, resolution, unionWithThis) {\r\n            var csg = this.reTesselated();\r\n            var result;\r\n            if (unionWithThis) {\r\n                result = csg;\r\n            } else {\r\n                result = new CSG();\r\n            }\r\n\r\n            // first extrude all polygons:\r\n            csg.polygons.map(function(polygon) {\r\n                var extrudevector = polygon.plane.normal.unit().times(2 * radius);\r\n                var translatedpolygon = polygon.translate(extrudevector.times(-0.5));\r\n                var extrudedface = translatedpolygon.extrude(extrudevector);\r\n                result = result.unionSub(extrudedface, false, false);\r\n            });\r\n\r\n            // Make a list of all unique vertex pairs (i.e. all sides of the solid)\r\n            // For each vertex pair we collect the following:\r\n            //   v1: first coordinate\r\n            //   v2: second coordinate\r\n            //   planenormals: array of normal vectors of all planes touching this side\r\n            var vertexpairs = {}; // map of 'vertex pair tag' to {v1, v2, planenormals}\r\n            csg.polygons.map(function(polygon) {\r\n                var numvertices = polygon.vertices.length;\r\n                var prevvertex = polygon.vertices[numvertices - 1];\r\n                var prevvertextag = prevvertex.getTag();\r\n                for (var i = 0; i < numvertices; i++) {\r\n                    var vertex = polygon.vertices[i];\r\n                    var vertextag = vertex.getTag();\r\n                    var vertextagpair;\r\n                    if (vertextag < prevvertextag) {\r\n                        vertextagpair = vertextag + \"-\" + prevvertextag;\r\n                    } else {\r\n                        vertextagpair = prevvertextag + \"-\" + vertextag;\r\n                    }\r\n                    var obj;\r\n                    if (vertextagpair in vertexpairs) {\r\n                        obj = vertexpairs[vertextagpair];\r\n                    } else {\r\n                        obj = {\r\n                            v1: prevvertex,\r\n                            v2: vertex,\r\n                            planenormals: []\r\n                        };\r\n                        vertexpairs[vertextagpair] = obj;\r\n                    }\r\n                    obj.planenormals.push(polygon.plane.normal);\r\n\r\n                    prevvertextag = vertextag;\r\n                    prevvertex = vertex;\r\n                }\r\n            });\r\n\r\n            // now construct a cylinder on every side\r\n            // The cylinder is always an approximation of a true cylinder: it will have <resolution> polygons\r\n            // around the sides. We will make sure though that the cylinder will have an edge at every\r\n            // face that touches this side. This ensures that we will get a smooth fill even\r\n            // if two edges are at, say, 10 degrees and the resolution is low.\r\n            // Note: the result is not retesselated yet but it really should be!\r\n            for (var vertextagpair in vertexpairs) {\r\n                var vertexpair = vertexpairs[vertextagpair],\r\n                    startpoint = vertexpair.v1.pos,\r\n                    endpoint = vertexpair.v2.pos,\r\n                    // our x,y and z vectors:\r\n                    zbase = endpoint.minus(startpoint).unit(),\r\n                    xbase = vertexpair.planenormals[0].unit(),\r\n                    ybase = xbase.cross(zbase),\r\n\r\n                    // make a list of angles that the cylinder should traverse:\r\n                    angles = [];\r\n\r\n                // first of all equally spaced around the cylinder:\r\n                for (var i = 0; i < resolution; i++) {\r\n                    angles.push(i * Math.PI * 2 / resolution);\r\n                }\r\n\r\n                // and also at every normal of all touching planes:\r\n                for (var i = 0, iMax = vertexpair.planenormals.length; i < iMax; i++) {\r\n                    var planenormal = vertexpair.planenormals[i],\r\n                        si = ybase.dot(planenormal),\r\n                        co = xbase.dot(planenormal),\r\n                        angle = Math.atan2(si, co);\r\n\r\n                    if (angle < 0) angle += Math.PI * 2;\r\n                    angles.push(angle);\r\n                    angle = Math.atan2(-si, -co);\r\n                    if (angle < 0) angle += Math.PI * 2;\r\n                    angles.push(angle);\r\n                }\r\n\r\n                // this will result in some duplicate angles but we will get rid of those later.\r\n                // Sort:\r\n                angles = angles.sort(fnNumberSort);\r\n\r\n                // Now construct the cylinder by traversing all angles:\r\n                var numangles = angles.length,\r\n                    prevp1, prevp2,\r\n                    startfacevertices = [],\r\n                    endfacevertices = [],\r\n                    polygons = [];\r\n                for (var i = -1; i < numangles; i++) {\r\n                    var angle = angles[(i < 0) ? (i + numangles) : i],\r\n                        si = Math.sin(angle),\r\n                        co = Math.cos(angle),\r\n                        p = xbase.times(co * radius).plus(ybase.times(si * radius)),\r\n                        p1 = startpoint.plus(p),\r\n                        p2 = endpoint.plus(p),\r\n                        skip = false;\r\n                    if (i >= 0) {\r\n                        if (p1.distanceTo(prevp1) < 1e-5) {\r\n                            skip = true;\r\n                        }\r\n                    }\r\n                    if (!skip) {\r\n                        if (i >= 0) {\r\n                            startfacevertices.push(new CSG.Vertex(p1));\r\n                            endfacevertices.push(new CSG.Vertex(p2));\r\n                            var polygonvertices = [\r\n                                new CSG.Vertex(prevp2),\r\n                                new CSG.Vertex(p2),\r\n                                new CSG.Vertex(p1),\r\n                                new CSG.Vertex(prevp1)\r\n                            ];\r\n                            var polygon = new CSG.Polygon(polygonvertices);\r\n                            polygons.push(polygon);\r\n                        }\r\n                        prevp1 = p1;\r\n                        prevp2 = p2;\r\n                    }\r\n                }\r\n                endfacevertices.reverse();\r\n                polygons.push(new CSG.Polygon(startfacevertices));\r\n                polygons.push(new CSG.Polygon(endfacevertices));\r\n                var cylinder = CSG.fromPolygons(polygons);\r\n                result = result.unionSub(cylinder, false, false);\r\n            }\r\n\r\n            // make a list of all unique vertices\r\n            // For each vertex we also collect the list of normals of the planes touching the vertices\r\n            var vertexmap = {};\r\n            csg.polygons.map(function(polygon) {\r\n                polygon.vertices.map(function(vertex) {\r\n                    var vertextag = vertex.getTag();\r\n                    var obj;\r\n                    if (vertextag in vertexmap) {\r\n                        obj = vertexmap[vertextag];\r\n                    } else {\r\n                        obj = {\r\n                            pos: vertex.pos,\r\n                            normals: []\r\n                        };\r\n                        vertexmap[vertextag] = obj;\r\n                    }\r\n                    obj.normals.push(polygon.plane.normal);\r\n                });\r\n            });\r\n\r\n            // and build spheres at each vertex\r\n            // We will try to set the x and z axis to the normals of 2 planes\r\n            // This will ensure that our sphere tesselation somewhat matches 2 planes\r\n            for (var vertextag in vertexmap) {\r\n                var vertexobj = vertexmap[vertextag];\r\n                // use the first normal to be the x axis of our sphere:\r\n                var xaxis = vertexobj.normals[0].unit();\r\n                // and find a suitable z axis. We will use the normal which is most perpendicular to the x axis:\r\n                var bestzaxis = null;\r\n                var bestzaxisorthogonality = 0;\r\n                for (var i = 1; i < vertexobj.normals.length; i++) {\r\n                    var normal = vertexobj.normals[i].unit();\r\n                    var cross = xaxis.cross(normal);\r\n                    var crosslength = cross.length();\r\n                    if (crosslength > 0.05) {\r\n                        if (crosslength > bestzaxisorthogonality) {\r\n                            bestzaxisorthogonality = crosslength;\r\n                            bestzaxis = normal;\r\n                        }\r\n                    }\r\n                }\r\n                if (!bestzaxis) {\r\n                    bestzaxis = xaxis.randomNonParallelVector();\r\n                }\r\n                var yaxis = xaxis.cross(bestzaxis).unit();\r\n                var zaxis = yaxis.cross(xaxis);\r\n                var sphere = CSG.sphere({\r\n                    center: vertexobj.pos,\r\n                    radius: radius,\r\n                    resolution: resolution,\r\n                    axes: [xaxis, yaxis, zaxis]\r\n                });\r\n                result = result.unionSub(sphere, false, false);\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        canonicalized: function() {\r\n            if (this.isCanonicalized) {\r\n                return this;\r\n            } else {\r\n                var factory = new CSG.fuzzyCSGFactory();\r\n                var result = factory.getCSG(this);\r\n                result.isCanonicalized = true;\r\n                result.isRetesselated = this.isRetesselated;\r\n                result.properties = this.properties; // keep original properties\r\n                return result;\r\n            }\r\n        },\r\n\r\n        reTesselated: function() {\r\n            if (this.isRetesselated) {\r\n                return this;\r\n            } else {\r\n                var csg = this;\r\n                var polygonsPerPlane = {};\r\n                var isCanonicalized = csg.isCanonicalized;\r\n                var fuzzyfactory = new CSG.fuzzyCSGFactory();\r\n                csg.polygons.map(function(polygon) {\r\n                    var plane = polygon.plane;\r\n                    var shared = polygon.shared;\r\n                    if (!isCanonicalized) {\r\n                        // in order to identify to polygons having the same plane, we need to canonicalize the planes\r\n                        // We don't have to do a full canonizalization (including vertices), to save time only do the planes and the shared data:\r\n                        plane = fuzzyfactory.getPlane(plane);\r\n                        shared = fuzzyfactory.getPolygonShared(shared);\r\n                    }\r\n                    var tag = plane.getTag() + \"/\" + shared.getTag();\r\n                    if (!(tag in polygonsPerPlane)) {\r\n                        polygonsPerPlane[tag] = [polygon];\r\n                    } else {\r\n                        polygonsPerPlane[tag].push(polygon);\r\n                    }\r\n                });\r\n                var destpolygons = [];\r\n                for (var planetag in polygonsPerPlane) {\r\n                    var sourcepolygons = polygonsPerPlane[planetag];\r\n                    if (sourcepolygons.length < 2) {\r\n                        destpolygons = destpolygons.concat(sourcepolygons);\r\n                    } else {\r\n                        var retesselayedpolygons = [];\r\n                        CSG.reTesselateCoplanarPolygons(sourcepolygons, retesselayedpolygons);\r\n                        destpolygons = destpolygons.concat(retesselayedpolygons);\r\n                    }\r\n                }\r\n                var result = CSG.fromPolygons(destpolygons);\r\n                result.isRetesselated = true;\r\n                // result = result.canonicalized();\r\n                result.properties = this.properties; // keep original properties\r\n                return result;\r\n            }\r\n        },\r\n\r\n        // returns an array of two CSG.Vector3Ds (minimum coordinates and maximum coordinates)\r\n        getBounds: function() {\r\n            if (!this.cachedBoundingBox) {\r\n                var minpoint = new CSG.Vector3D(0, 0, 0);\r\n                var maxpoint = new CSG.Vector3D(0, 0, 0);\r\n                var polygons = this.polygons;\r\n                var numpolygons = polygons.length;\r\n                for (var i = 0; i < numpolygons; i++) {\r\n                    var polygon = polygons[i];\r\n                    var bounds = polygon.boundingBox();\r\n                    if (i === 0) {\r\n                        minpoint = bounds[0];\r\n                        maxpoint = bounds[1];\r\n                    } else {\r\n                        minpoint = minpoint.min(bounds[0]);\r\n                        maxpoint = maxpoint.max(bounds[1]);\r\n                    }\r\n                }\r\n                this.cachedBoundingBox = [minpoint, maxpoint];\r\n            }\r\n            return this.cachedBoundingBox;\r\n        },\r\n\r\n        // returns true if there is a possibility that the two solids overlap\r\n        // returns false if we can be sure that they do not overlap\r\n        mayOverlap: function(csg) {\r\n            if ((this.polygons.length === 0) || (csg.polygons.length === 0)) {\r\n                return false;\r\n            } else {\r\n                var mybounds = this.getBounds();\r\n                var otherbounds = csg.getBounds();\r\n                if (mybounds[1].x < otherbounds[0].x) return false;\r\n                if (mybounds[0].x > otherbounds[1].x) return false;\r\n                if (mybounds[1].y < otherbounds[0].y) return false;\r\n                if (mybounds[0].y > otherbounds[1].y) return false;\r\n                if (mybounds[1].z < otherbounds[0].z) return false;\r\n                if (mybounds[0].z > otherbounds[1].z) return false;\r\n                return true;\r\n            }\r\n        },\r\n\r\n        // Cut the solid by a plane. Returns the solid on the back side of the plane\r\n        cutByPlane: function(plane) {\r\n            if (this.polygons.length === 0) {\r\n                return new CSG();\r\n            }\r\n            // Ideally we would like to do an intersection with a polygon of inifinite size\r\n            // but this is not supported by our implementation. As a workaround, we will create\r\n            // a cube, with one face on the plane, and a size larger enough so that the entire\r\n            // solid fits in the cube.\r\n            // find the max distance of any vertex to the center of the plane:\r\n            var planecenter = plane.normal.times(plane.w);\r\n            var maxdistance = 0;\r\n            this.polygons.map(function(polygon) {\r\n                polygon.vertices.map(function(vertex) {\r\n                    var distance = vertex.pos.distanceToSquared(planecenter);\r\n                    if (distance > maxdistance) maxdistance = distance;\r\n                });\r\n            });\r\n            maxdistance = Math.sqrt(maxdistance);\r\n            maxdistance *= 1.01; // make sure it's really larger\r\n            // Now build a polygon on the plane, at any point farther than maxdistance from the plane center:\r\n            var vertices = [];\r\n            var orthobasis = new CSG.OrthoNormalBasis(plane);\r\n            vertices.push(new CSG.Vertex(orthobasis.to3D(new CSG.Vector2D(maxdistance, -maxdistance))));\r\n            vertices.push(new CSG.Vertex(orthobasis.to3D(new CSG.Vector2D(-maxdistance, -maxdistance))));\r\n            vertices.push(new CSG.Vertex(orthobasis.to3D(new CSG.Vector2D(-maxdistance, maxdistance))));\r\n            vertices.push(new CSG.Vertex(orthobasis.to3D(new CSG.Vector2D(maxdistance, maxdistance))));\r\n            var polygon = new CSG.Polygon(vertices, null, plane.flipped());\r\n\r\n            // and extrude the polygon into a cube, backwards of the plane:\r\n            var cube = polygon.extrude(plane.normal.times(-maxdistance));\r\n\r\n            // Now we can do the intersection:\r\n            var result = this.intersect(cube);\r\n            result.properties = this.properties; // keep original properties\r\n            return result;\r\n        },\r\n\r\n        // Connect a solid to another solid, such that two CSG.Connectors become connected\r\n        //   myConnector: a CSG.Connector of this solid\r\n        //   otherConnector: a CSG.Connector to which myConnector should be connected\r\n        //   mirror: false: the 'axis' vectors of the connectors should point in the same direction\r\n        //           true: the 'axis' vectors of the connectors should point in opposite direction\r\n        //   normalrotation: degrees of rotation between the 'normal' vectors of the two\r\n        //                   connectors\r\n        connectTo: function(myConnector, otherConnector, mirror, normalrotation) {\r\n            var matrix = myConnector.getTransformationTo(otherConnector, mirror, normalrotation);\r\n            return this.transform(matrix);\r\n        },\r\n\r\n        // set the .shared property of all polygons\r\n        // Returns a new CSG solid, the original is unmodified!\r\n        setShared: function(shared) {\r\n            var polygons = this.polygons.map(function(p) {\r\n                return new CSG.Polygon(p.vertices, shared, p.plane);\r\n            });\r\n            var result = CSG.fromPolygons(polygons);\r\n            result.properties = this.properties; // keep original properties\r\n            result.isRetesselated = this.isRetesselated;\r\n            result.isCanonicalized = this.isCanonicalized;\r\n            return result;\r\n        },\r\n\r\n        setColor: function(args) {\r\n            var newshared = CSG.Polygon.Shared.fromColor.apply(this, arguments);\r\n            return this.setShared(newshared);\r\n        },\r\n\r\n        toCompactBinary: function() {\r\n            var csg = this.canonicalized(),\r\n                numpolygons = csg.polygons.length,\r\n                numpolygonvertices = 0,\r\n                numvertices = 0,\r\n                vertexmap = {},\r\n                vertices = [],\r\n                numplanes = 0,\r\n                planemap = {},\r\n                polygonindex = 0,\r\n                planes = [],\r\n                shareds = [],\r\n                sharedmap = {},\r\n                numshared = 0;\r\n            // for (var i = 0, iMax = csg.polygons.length; i < iMax; i++) {\r\n            //  var p = csg.polygons[i];\r\n            //  for (var j = 0, jMax = p.length; j < jMax; j++) {\r\n            //      ++numpolygonvertices;\r\n            //      var vertextag = p[j].getTag();\r\n            //      if(!(vertextag in vertexmap)) {\r\n            //          vertexmap[vertextag] = numvertices++;\r\n            //          vertices.push(p[j]);\r\n            //      }\r\n            //  }\r\n            csg.polygons.map(function(p) {\r\n                p.vertices.map(function(v) {\r\n                    ++numpolygonvertices;\r\n                    var vertextag = v.getTag();\r\n                    if (!(vertextag in vertexmap)) {\r\n                        vertexmap[vertextag] = numvertices++;\r\n                        vertices.push(v);\r\n                    }\r\n                });\r\n\r\n                var planetag = p.plane.getTag();\r\n                if (!(planetag in planemap)) {\r\n                    planemap[planetag] = numplanes++;\r\n                    planes.push(p.plane);\r\n                }\r\n                var sharedtag = p.shared.getTag();\r\n                if (!(sharedtag in sharedmap)) {\r\n                    sharedmap[sharedtag] = numshared++;\r\n                    shareds.push(p.shared);\r\n                }\r\n            });\r\n            var numVerticesPerPolygon = new Uint32Array(numpolygons),\r\n                polygonSharedIndexes = new Uint32Array(numpolygons),\r\n                polygonVertices = new Uint32Array(numpolygonvertices),\r\n                polygonPlaneIndexes = new Uint32Array(numpolygons),\r\n                vertexData = new Float64Array(numvertices * 3),\r\n                planeData = new Float64Array(numplanes * 4),\r\n                polygonVerticesIndex = 0;\r\n            for (var polygonindex = 0; polygonindex < numpolygons; ++polygonindex) {\r\n                var p = csg.polygons[polygonindex];\r\n                numVerticesPerPolygon[polygonindex] = p.vertices.length;\r\n                p.vertices.map(function(v) {\r\n                    var vertextag = v.getTag();\r\n                    var vertexindex = vertexmap[vertextag];\r\n                    polygonVertices[polygonVerticesIndex++] = vertexindex;\r\n                });\r\n                var planetag = p.plane.getTag();\r\n                var planeindex = planemap[planetag];\r\n                polygonPlaneIndexes[polygonindex] = planeindex;\r\n                var sharedtag = p.shared.getTag();\r\n                var sharedindex = sharedmap[sharedtag];\r\n                polygonSharedIndexes[polygonindex] = sharedindex;\r\n            }\r\n            var verticesArrayIndex = 0;\r\n            vertices.map(function(v) {\r\n                var pos = v.pos;\r\n                vertexData[verticesArrayIndex++] = pos._x;\r\n                vertexData[verticesArrayIndex++] = pos._y;\r\n                vertexData[verticesArrayIndex++] = pos._z;\r\n            });\r\n            var planesArrayIndex = 0;\r\n            planes.map(function(p) {\r\n                var normal = p.normal;\r\n                planeData[planesArrayIndex++] = normal._x;\r\n                planeData[planesArrayIndex++] = normal._y;\r\n                planeData[planesArrayIndex++] = normal._z;\r\n                planeData[planesArrayIndex++] = p.w;\r\n            });\r\n            var result = {\r\n                \"class\": \"CSG\",\r\n                numPolygons: numpolygons,\r\n                numVerticesPerPolygon: numVerticesPerPolygon,\r\n                polygonPlaneIndexes: polygonPlaneIndexes,\r\n                polygonSharedIndexes: polygonSharedIndexes,\r\n                polygonVertices: polygonVertices,\r\n                vertexData: vertexData,\r\n                planeData: planeData,\r\n                shared: shareds\r\n            };\r\n            return result;\r\n        },\r\n\r\n        // For debugging\r\n        // Creates a new solid with a tiny cube at every vertex of the source solid\r\n        toPointCloud: function(cuberadius) {\r\n            var csg = this.reTesselated();\r\n\r\n            var result = new CSG();\r\n\r\n            // make a list of all unique vertices\r\n            // For each vertex we also collect the list of normals of the planes touching the vertices\r\n            var vertexmap = {};\r\n            csg.polygons.map(function(polygon) {\r\n                polygon.vertices.map(function(vertex) {\r\n                    vertexmap[vertex.getTag()] = vertex.pos;\r\n                });\r\n            });\r\n\r\n            for (var vertextag in vertexmap) {\r\n                var pos = vertexmap[vertextag];\r\n                var cube = CSG.cube({\r\n                    center: pos,\r\n                    radius: cuberadius\r\n                });\r\n                result = result.unionSub(cube, false, false);\r\n            }\r\n            result = result.reTesselated();\r\n            return result;\r\n        },\r\n\r\n        // Get the transformation that transforms this CSG such that it is lying on the z=0 plane,\r\n        // as flat as possible (i.e. the least z-height).\r\n        // So that it is in an orientation suitable for CNC milling\r\n        getTransformationAndInverseTransformationToFlatLying: function() {\r\n            if (this.polygons.length === 0) {\r\n                return new CSG.Matrix4x4(); // unity\r\n            } else {\r\n                // get a list of unique planes in the CSG:\r\n                var csg = this.canonicalized();\r\n                var planemap = {};\r\n                csg.polygons.map(function(polygon) {\r\n                    planemap[polygon.plane.getTag()] = polygon.plane;\r\n                });\r\n                // try each plane in the CSG and find the plane that, when we align it flat onto z=0,\r\n                // gives the least height in z-direction.\r\n                // If two planes give the same height, pick the plane that originally had a normal closest\r\n                // to [0,0,-1].\r\n                var xvector = new CSG.Vector3D(1, 0, 0);\r\n                var yvector = new CSG.Vector3D(0, 1, 0);\r\n                var zvector = new CSG.Vector3D(0, 0, 1);\r\n                var z0connectorx = new CSG.Connector([0, 0, 0], [0, 0, -1], xvector);\r\n                var z0connectory = new CSG.Connector([0, 0, 0], [0, 0, -1], yvector);\r\n                var isfirst = true;\r\n                var minheight = 0;\r\n                var maxdotz = 0;\r\n                var besttransformation, bestinversetransformation;\r\n                for (var planetag in planemap) {\r\n                    var plane = planemap[planetag];\r\n                    var pointonplane = plane.normal.times(plane.w);\r\n                    var transformation, inversetransformation;\r\n                    // We need a normal vecrtor for the transformation\r\n                    // determine which is more perpendicular to the plane normal: x or y?\r\n                    // we will align this as much as possible to the x or y axis vector\r\n                    var xorthogonality = plane.normal.cross(xvector).length();\r\n                    var yorthogonality = plane.normal.cross(yvector).length();\r\n                    if (xorthogonality > yorthogonality) {\r\n                        // x is better:\r\n                        var planeconnector = new CSG.Connector(pointonplane, plane.normal, xvector);\r\n                        transformation = planeconnector.getTransformationTo(z0connectorx, false, 0);\r\n                        inversetransformation = z0connectorx.getTransformationTo(planeconnector, false, 0);\r\n                    } else {\r\n                        // y is better:\r\n                        var planeconnector = new CSG.Connector(pointonplane, plane.normal, yvector);\r\n                        transformation = planeconnector.getTransformationTo(z0connectory, false, 0);\r\n                        inversetransformation = z0connectory.getTransformationTo(planeconnector, false, 0);\r\n                    }\r\n                    var transformedcsg = csg.transform(transformation);\r\n                    var dotz = -plane.normal.dot(zvector);\r\n                    var bounds = transformedcsg.getBounds();\r\n                    var zheight = bounds[1].z - bounds[0].z;\r\n                    var isbetter = isfirst;\r\n                    if (!isbetter) {\r\n                        if (zheight < minheight) {\r\n                            isbetter = true;\r\n                        } else if (zheight == minheight) {\r\n                            if (dotz > maxdotz) isbetter = true;\r\n                        }\r\n                    }\r\n                    if (isbetter) {\r\n                        // translate the transformation around the z-axis and onto the z plane:\r\n                        var translation = new CSG.Vector3D([-0.5 * (bounds[1].x + bounds[0].x), -0.5 * (bounds[1].y + bounds[0].y), -bounds[0].z]);\r\n                        transformation = transformation.multiply(CSG.Matrix4x4.translation(translation));\r\n                        inversetransformation = CSG.Matrix4x4.translation(translation.negated()).multiply(inversetransformation);\r\n                        minheight = zheight;\r\n                        maxdotz = dotz;\r\n                        besttransformation = transformation;\r\n                        bestinversetransformation = inversetransformation;\r\n                    }\r\n                    isfirst = false;\r\n                }\r\n                return [besttransformation, bestinversetransformation];\r\n            }\r\n        },\r\n\r\n        getTransformationToFlatLying: function() {\r\n            var result = this.getTransformationAndInverseTransformationToFlatLying();\r\n            return result[0];\r\n        },\r\n\r\n        lieFlat: function() {\r\n            var transformation = this.getTransformationToFlatLying();\r\n            return this.transform(transformation);\r\n        },\r\n\r\n        // project the 3D CSG onto a plane\r\n        // This returns a 2D CAG with the 'shadow' shape of the 3D solid when projected onto the\r\n        // plane represented by the orthonormal basis\r\n        projectToOrthoNormalBasis: function(orthobasis) {\r\n            var EPS = 1e-5;\r\n            var cags = [];\r\n            this.polygons.filter(function(p) {\r\n                    // only return polys in plane, others may disturb result\r\n                    return p.plane.normal.minus(orthobasis.plane.normal).lengthSquared() < EPS*EPS;\r\n                })\r\n                .map(function(polygon) {\r\n                    var cag = polygon.projectToOrthoNormalBasis(orthobasis);\r\n                    if (cag.sides.length > 0) {\r\n                        cags.push(cag);\r\n                    }\r\n            });\r\n            var result = new CAG().union(cags);\r\n            return result;\r\n        },\r\n\r\n        sectionCut: function(orthobasis) {\r\n            var EPS = 1e-5;\r\n            var plane1 = orthobasis.plane;\r\n            var plane2 = orthobasis.plane.flipped();\r\n            plane1 = new CSG.Plane(plane1.normal, plane1.w);\r\n            plane2 = new CSG.Plane(plane2.normal, plane2.w + 5*EPS);\r\n            var cut3d = this.cutByPlane(plane1);\r\n            cut3d = cut3d.cutByPlane(plane2);\r\n            return cut3d.projectToOrthoNormalBasis(orthobasis);\r\n        },\r\n\r\n        /*\r\n         fixTJunctions:\r\n\r\n         Suppose we have two polygons ACDB and EDGF:\r\n\r\n          A-----B\r\n          |     |\r\n          |     E--F\r\n          |     |  |\r\n          C-----D--G\r\n\r\n         Note that vertex E forms a T-junction on the side BD. In this case some STL slicers will complain\r\n         that the solid is not watertight. This is because the watertightness check is done by checking if\r\n         each side DE is matched by another side ED.\r\n\r\n         This function will return a new solid with ACDB replaced by ACDEB\r\n\r\n         Note that this can create polygons that are slightly non-convex (due to rounding errors). Therefore the result should\r\n         not be used for further CSG operations!\r\n         */\r\n        fixTJunctions: function() {\r\n            var csg = this.canonicalized();\r\n            var sidemap = {};\r\n            for (var polygonindex = 0; polygonindex < csg.polygons.length; polygonindex++) {\r\n                var polygon = csg.polygons[polygonindex];\r\n                var numvertices = polygon.vertices.length;\r\n                if (numvertices >= 3) // should be true\r\n                {\r\n                    var vertex = polygon.vertices[0];\r\n                    var vertextag = vertex.getTag();\r\n                    for (var vertexindex = 0; vertexindex < numvertices; vertexindex++) {\r\n                        var nextvertexindex = vertexindex + 1;\r\n                        if (nextvertexindex == numvertices) nextvertexindex = 0;\r\n                        var nextvertex = polygon.vertices[nextvertexindex];\r\n                        var nextvertextag = nextvertex.getTag();\r\n                        var sidetag = vertextag + \"/\" + nextvertextag;\r\n                        var reversesidetag = nextvertextag + \"/\" + vertextag;\r\n                        if (reversesidetag in sidemap) {\r\n                            // this side matches the same side in another polygon. Remove from sidemap:\r\n                            var ar = sidemap[reversesidetag];\r\n                            ar.splice(-1, 1);\r\n                            if (ar.length === 0) {\r\n                                delete sidemap[reversesidetag];\r\n                            }\r\n                        } else {\r\n                            var sideobj = {\r\n                                vertex0: vertex,\r\n                                vertex1: nextvertex,\r\n                                polygonindex: polygonindex\r\n                            };\r\n                            if (!(sidetag in sidemap)) {\r\n                                sidemap[sidetag] = [sideobj];\r\n                            } else {\r\n                                sidemap[sidetag].push(sideobj);\r\n                            }\r\n                        }\r\n                        vertex = nextvertex;\r\n                        vertextag = nextvertextag;\r\n                    }\r\n                }\r\n            }\r\n            // now sidemap contains 'unmatched' sides\r\n            // i.e. side AB in one polygon does not have a matching side BA in another polygon\r\n            var vertextag2sidestart = {};\r\n            var vertextag2sideend = {};\r\n            var sidestocheck = {};\r\n            var sidemapisempty = true;\r\n            for (var sidetag in sidemap) {\r\n                sidemapisempty = false;\r\n                sidestocheck[sidetag] = true;\r\n                sidemap[sidetag].map(function(sideobj) {\r\n                    var starttag = sideobj.vertex0.getTag();\r\n                    var endtag = sideobj.vertex1.getTag();\r\n                    if (starttag in vertextag2sidestart) {\r\n                        vertextag2sidestart[starttag].push(sidetag);\r\n                    } else {\r\n                        vertextag2sidestart[starttag] = [sidetag];\r\n                    }\r\n                    if (endtag in vertextag2sideend) {\r\n                        vertextag2sideend[endtag].push(sidetag);\r\n                    } else {\r\n                        vertextag2sideend[endtag] = [sidetag];\r\n                    }\r\n                });\r\n            }\r\n\r\n            if (!sidemapisempty) {\r\n                // make a copy of the polygons array, since we are going to modify it:\r\n                var polygons = csg.polygons.slice(0);\r\n\r\n                function addSide(vertex0, vertex1, polygonindex) {\r\n                    var starttag = vertex0.getTag();\r\n                    var endtag = vertex1.getTag();\r\n                    if (starttag == endtag) throw new Error(\"Assertion failed\");\r\n                    var newsidetag = starttag + \"/\" + endtag;\r\n                    var reversesidetag = endtag + \"/\" + starttag;\r\n                    if (reversesidetag in sidemap) {\r\n                        // we have a matching reverse oriented side.\r\n                        // Instead of adding the new side, cancel out the reverse side:\r\n                        // console.log(\"addSide(\"+newsidetag+\") has reverse side:\");\r\n                        deleteSide(vertex1, vertex0, null);\r\n                        return null;\r\n                    }\r\n                    //  console.log(\"addSide(\"+newsidetag+\")\");\r\n                    var newsideobj = {\r\n                        vertex0: vertex0,\r\n                        vertex1: vertex1,\r\n                        polygonindex: polygonindex\r\n                    };\r\n                    if (!(newsidetag in sidemap)) {\r\n                        sidemap[newsidetag] = [newsideobj];\r\n                    } else {\r\n                        sidemap[newsidetag].push(newsideobj);\r\n                    }\r\n                    if (starttag in vertextag2sidestart) {\r\n                        vertextag2sidestart[starttag].push(newsidetag);\r\n                    } else {\r\n                        vertextag2sidestart[starttag] = [newsidetag];\r\n                    }\r\n                    if (endtag in vertextag2sideend) {\r\n                        vertextag2sideend[endtag].push(newsidetag);\r\n                    } else {\r\n                        vertextag2sideend[endtag] = [newsidetag];\r\n                    }\r\n                    return newsidetag;\r\n                }\r\n\r\n                function deleteSide(vertex0, vertex1, polygonindex) {\r\n                    var starttag = vertex0.getTag();\r\n                    var endtag = vertex1.getTag();\r\n                    var sidetag = starttag + \"/\" + endtag;\r\n                    // console.log(\"deleteSide(\"+sidetag+\")\");\r\n                    if (!(sidetag in sidemap)) throw new Error(\"Assertion failed\");\r\n                    var idx = -1;\r\n                    var sideobjs = sidemap[sidetag];\r\n                    for (var i = 0; i < sideobjs.length; i++) {\r\n                        var sideobj = sideobjs[i];\r\n                        if (sideobj.vertex0 != vertex0) continue;\r\n                        if (sideobj.vertex1 != vertex1) continue;\r\n                        if (polygonindex !== null) {\r\n                            if (sideobj.polygonindex != polygonindex) continue;\r\n                        }\r\n                        idx = i;\r\n                        break;\r\n                    }\r\n                    if (idx < 0) throw new Error(\"Assertion failed\");\r\n                    sideobjs.splice(idx, 1);\r\n                    if (sideobjs.length === 0) {\r\n                        delete sidemap[sidetag];\r\n                    }\r\n                    idx = vertextag2sidestart[starttag].indexOf(sidetag);\r\n                    if (idx < 0) throw new Error(\"Assertion failed\");\r\n                    vertextag2sidestart[starttag].splice(idx, 1);\r\n                    if (vertextag2sidestart[starttag].length === 0) {\r\n                        delete vertextag2sidestart[starttag];\r\n                    }\r\n\r\n                    idx = vertextag2sideend[endtag].indexOf(sidetag);\r\n                    if (idx < 0) throw new Error(\"Assertion failed\");\r\n                    vertextag2sideend[endtag].splice(idx, 1);\r\n                    if (vertextag2sideend[endtag].length === 0) {\r\n                        delete vertextag2sideend[endtag];\r\n                    }\r\n                }\r\n\r\n\r\n                while (true) {\r\n                    var sidemapisempty = true;\r\n                    for (var sidetag in sidemap) {\r\n                        sidemapisempty = false;\r\n                        sidestocheck[sidetag] = true;\r\n                    }\r\n                    if (sidemapisempty) break;\r\n                    var donesomething = false;\r\n                    while (true) {\r\n                        var sidetagtocheck = null;\r\n                        for (var sidetag in sidestocheck) {\r\n                            sidetagtocheck = sidetag;\r\n                            break;\r\n                        }\r\n                        if (sidetagtocheck === null) break; // sidestocheck is empty, we're done!\r\n                        var donewithside = true;\r\n                        if (sidetagtocheck in sidemap) {\r\n                            var sideobjs = sidemap[sidetagtocheck];\r\n                            if (sideobjs.length === 0) throw new Error(\"Assertion failed\");\r\n                            var sideobj = sideobjs[0];\r\n                            for (var directionindex = 0; directionindex < 2; directionindex++) {\r\n                                var startvertex = (directionindex === 0) ? sideobj.vertex0 : sideobj.vertex1;\r\n                                var endvertex = (directionindex === 0) ? sideobj.vertex1 : sideobj.vertex0;\r\n                                var startvertextag = startvertex.getTag();\r\n                                var endvertextag = endvertex.getTag();\r\n                                var matchingsides = [];\r\n                                if (directionindex === 0) {\r\n                                    if (startvertextag in vertextag2sideend) {\r\n                                        matchingsides = vertextag2sideend[startvertextag];\r\n                                    }\r\n                                } else {\r\n                                    if (startvertextag in vertextag2sidestart) {\r\n                                        matchingsides = vertextag2sidestart[startvertextag];\r\n                                    }\r\n                                }\r\n                                for (var matchingsideindex = 0; matchingsideindex < matchingsides.length; matchingsideindex++) {\r\n                                    var matchingsidetag = matchingsides[matchingsideindex];\r\n                                    var matchingside = sidemap[matchingsidetag][0];\r\n                                    var matchingsidestartvertex = (directionindex === 0) ? matchingside.vertex0 : matchingside.vertex1;\r\n                                    var matchingsideendvertex = (directionindex === 0) ? matchingside.vertex1 : matchingside.vertex0;\r\n                                    var matchingsidestartvertextag = matchingsidestartvertex.getTag();\r\n                                    var matchingsideendvertextag = matchingsideendvertex.getTag();\r\n                                    if (matchingsideendvertextag != startvertextag) throw new Error(\"Assertion failed\");\r\n                                    if (matchingsidestartvertextag == endvertextag) {\r\n                                        // matchingside cancels sidetagtocheck\r\n                                        deleteSide(startvertex, endvertex, null);\r\n                                        deleteSide(endvertex, startvertex, null);\r\n                                        donewithside = false;\r\n                                        directionindex = 2; // skip reverse direction check\r\n                                        donesomething = true;\r\n                                        break;\r\n                                    } else {\r\n                                        var startpos = startvertex.pos;\r\n                                        var endpos = endvertex.pos;\r\n                                        var checkpos = matchingsidestartvertex.pos;\r\n                                        var direction = checkpos.minus(startpos);\r\n                                        // Now we need to check if endpos is on the line startpos-checkpos:\r\n                                        var t = endpos.minus(startpos).dot(direction) / direction.dot(direction);\r\n                                        if ((t > 0) && (t < 1)) {\r\n                                            var closestpoint = startpos.plus(direction.times(t));\r\n                                            var distancesquared = closestpoint.distanceToSquared(endpos);\r\n                                            if (distancesquared < 1e-10) {\r\n                                                // Yes it's a t-junction! We need to split matchingside in two:\r\n                                                var polygonindex = matchingside.polygonindex;\r\n                                                var polygon = polygons[polygonindex];\r\n                                                // find the index of startvertextag in polygon:\r\n                                                var insertionvertextag = matchingside.vertex1.getTag();\r\n                                                var insertionvertextagindex = -1;\r\n                                                for (var i = 0; i < polygon.vertices.length; i++) {\r\n                                                    if (polygon.vertices[i].getTag() == insertionvertextag) {\r\n                                                        insertionvertextagindex = i;\r\n                                                        break;\r\n                                                    }\r\n                                                }\r\n                                                if (insertionvertextagindex < 0) throw new Error(\"Assertion failed\");\r\n                                                // split the side by inserting the vertex:\r\n                                                var newvertices = polygon.vertices.slice(0);\r\n                                                newvertices.splice(insertionvertextagindex, 0, endvertex);\r\n                                                var newpolygon = new CSG.Polygon(newvertices, polygon.shared /*polygon.plane*/ );\r\n                                                polygons[polygonindex] = newpolygon;\r\n\r\n                                                // remove the original sides from our maps:\r\n                                                // deleteSide(sideobj.vertex0, sideobj.vertex1, null);\r\n                                                deleteSide(matchingside.vertex0, matchingside.vertex1, polygonindex);\r\n                                                var newsidetag1 = addSide(matchingside.vertex0, endvertex, polygonindex);\r\n                                                var newsidetag2 = addSide(endvertex, matchingside.vertex1, polygonindex);\r\n                                                if (newsidetag1 !== null) sidestocheck[newsidetag1] = true;\r\n                                                if (newsidetag2 !== null) sidestocheck[newsidetag2] = true;\r\n                                                donewithside = false;\r\n                                                directionindex = 2; // skip reverse direction check\r\n                                                donesomething = true;\r\n                                                break;\r\n                                            } // if(distancesquared < 1e-10)\r\n                                        } // if( (t > 0) && (t < 1) )\r\n                                    } // if(endingstidestartvertextag == endvertextag)\r\n                                } // for matchingsideindex\r\n                            } // for directionindex\r\n                        } // if(sidetagtocheck in sidemap)\r\n                        if (donewithside) {\r\n                            delete sidestocheck[sidetag];\r\n                        }\r\n                    }\r\n                    if (!donesomething) break;\r\n                }\r\n                var newcsg = CSG.fromPolygons(polygons);\r\n                newcsg.properties = csg.properties;\r\n                newcsg.isCanonicalized = true;\r\n                newcsg.isRetesselated = true;\r\n                csg = newcsg;\r\n            } // if(!sidemapisempty)\r\n            var sidemapisempty = true;\r\n            for (var sidetag in sidemap) {\r\n                sidemapisempty = false;\r\n                break;\r\n            }\r\n            if (!sidemapisempty) {\r\n                // throw new Error(\"!sidemapisempty\");\r\n            OpenJsCad.log(\"!sidemapisempty\");\r\n            }\r\n            return csg;\r\n        },\r\n\r\n        toTriangles: function() {\r\n            var polygons = [];\r\n            this.polygons.forEach(function(poly) {\r\n                var firstVertex = poly.vertices[0];\r\n                for (var i = poly.vertices.length - 3; i >= 0; i--) {\r\n                    polygons.push(new CSG.Polygon([\r\n                            firstVertex, poly.vertices[i + 1], poly.vertices[i + 2]\r\n                        ],\r\n                        poly.shared, poly.plane));\r\n                }\r\n            });\r\n            return polygons;\r\n        },\r\n\r\n        // features: string, or array containing 1 or more strings of: 'volume', 'area'\r\n        // more could be added here (Fourier coeff, moments)\r\n        getFeatures: function(features) {\r\n            if (!(features instanceof Array)) {\r\n                features = [features];\r\n            }\r\n            var result = this.toTriangles().map(function(triPoly) {\r\n                    return triPoly.getTetraFeatures(features);\r\n                })\r\n                .reduce(function(pv, v) {\r\n                    return v.map(function(feat, i) {\r\n                        return feat + (pv === 0 ? 0 : pv[i]);\r\n                    });\r\n                }, 0);\r\n            return (result.length == 1) ? result[0] : result;\r\n        }\r\n    };\r\n\r\n    // Parse an option from the options object\r\n    // If the option is not present, return the default value\r\n    CSG.parseOption = function(options, optionname, defaultvalue) {\r\n        var result = defaultvalue;\r\n        if (options) {\r\n            if (optionname in options) {\r\n                result = options[optionname];\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    // Parse an option and force into a CSG.Vector3D. If a scalar is passed it is converted\r\n    // into a vector with equal x,y,z\r\n    CSG.parseOptionAs3DVector = function(options, optionname, defaultvalue) {\r\n        var result = CSG.parseOption(options, optionname, defaultvalue);\r\n        result = new CSG.Vector3D(result);\r\n        return result;\r\n    };\r\n\r\n    CSG.parseOptionAs3DVectorList = function(options, optionname, defaultvalue) {\r\n        var result = CSG.parseOption(options, optionname, defaultvalue);\r\n        return result.map(function(res) {\r\n            return new CSG.Vector3D(res);\r\n        });\r\n    };\r\n\r\n    // Parse an option and force into a CSG.Vector2D. If a scalar is passed it is converted\r\n    // into a vector with equal x,y\r\n    CSG.parseOptionAs2DVector = function(options, optionname, defaultvalue) {\r\n        var result = CSG.parseOption(options, optionname, defaultvalue);\r\n        result = new CSG.Vector2D(result);\r\n        return result;\r\n    };\r\n\r\n    CSG.parseOptionAsFloat = function(options, optionname, defaultvalue) {\r\n        var result = CSG.parseOption(options, optionname, defaultvalue);\r\n        if (typeof(result) == \"string\") {\r\n            result = Number(result);\r\n        }\r\n        if (isNaN(result) || typeof(result) != \"number\") {\r\n            throw new Error(\"Parameter \" + optionname + \" should be a number\");\r\n        }\r\n        return result;\r\n    };\r\n\r\n    CSG.parseOptionAsInt = function(options, optionname, defaultvalue) {\r\n        var result = CSG.parseOption(options, optionname, defaultvalue);\r\n        result = Number(Math.floor(result));\r\n        if (isNaN(result)) {\r\n            throw new Error(\"Parameter \" + optionname + \" should be a number\");\r\n        }\r\n        return result;\r\n    };\r\n\r\n    CSG.parseOptionAsBool = function(options, optionname, defaultvalue) {\r\n        var result = CSG.parseOption(options, optionname, defaultvalue);\r\n        if (typeof(result) == \"string\") {\r\n            if (result == \"true\") result = true;\r\n            else if (result == \"false\") result = false;\r\n            else if (result == 0) result = false;\r\n        }\r\n        result = !!result;\r\n        return result;\r\n    };\r\n\r\n    // Construct an axis-aligned solid cuboid.\r\n    // Parameters:\r\n    //   center: center of cube (default [0,0,0])\r\n    //   radius: radius of cube (default [1,1,1]), can be specified as scalar or as 3D vector\r\n    //\r\n    // Example code:\r\n    //\r\n    //     var cube = CSG.cube({\r\n    //       center: [0, 0, 0],\r\n    //       radius: 1\r\n    //     });\r\n    CSG.cube = function(options) {\r\n        var c, r;\r\n        options = options || {};\r\n        if (('corner1' in options) || ('corner2' in options)) {\r\n            if (('center' in options) || ('radius' in options)) {\r\n                throw new Error(\"cube: should either give a radius and center parameter, or a corner1 and corner2 parameter\")\r\n            }\r\n            corner1 = CSG.parseOptionAs3DVector(options, \"corner1\", [0, 0, 0]);\r\n            corner2 = CSG.parseOptionAs3DVector(options, \"corner2\", [1, 1, 1]);\r\n            c = corner1.plus(corner2).times(0.5);\r\n            r = corner2.minus(corner1).times(0.5);\r\n        } else {\r\n            c = CSG.parseOptionAs3DVector(options, \"center\", [0, 0, 0]);\r\n            r = CSG.parseOptionAs3DVector(options, \"radius\", [1, 1, 1]);\r\n        }\r\n        r = r.abs(); // negative radii make no sense\r\n        var result = CSG.fromPolygons([\r\n            [\r\n                [0, 4, 6, 2],\r\n                [-1, 0, 0]\r\n            ],\r\n            [\r\n                [1, 3, 7, 5],\r\n                [+1, 0, 0]\r\n            ],\r\n            [\r\n                [0, 1, 5, 4],\r\n                [0, -1, 0]\r\n            ],\r\n            [\r\n                [2, 6, 7, 3],\r\n                [0, +1, 0]\r\n            ],\r\n            [\r\n                [0, 2, 3, 1],\r\n                [0, 0, -1]\r\n            ],\r\n            [\r\n                [4, 5, 7, 6],\r\n                [0, 0, +1]\r\n            ]\r\n        ].map(function(info) {\r\n            //var normal = new CSG.Vector3D(info[1]);\r\n            //var plane = new CSG.Plane(normal, 1);\r\n            var vertices = info[0].map(function(i) {\r\n                var pos = new CSG.Vector3D(\r\n                    c.x + r.x * (2 * !!(i & 1) - 1), c.y + r.y * (2 * !!(i & 2) - 1), c.z + r.z * (2 * !!(i & 4) - 1));\r\n                return new CSG.Vertex(pos);\r\n            });\r\n            return new CSG.Polygon(vertices, null /* , plane */ );\r\n        }));\r\n        result.properties.cube = new CSG.Properties();\r\n        result.properties.cube.center = new CSG.Vector3D(c);\r\n        // add 6 connectors, at the centers of each face:\r\n        result.properties.cube.facecenters = [\r\n            new CSG.Connector(new CSG.Vector3D([r.x, 0, 0]).plus(c), [1, 0, 0], [0, 0, 1]),\r\n            new CSG.Connector(new CSG.Vector3D([-r.x, 0, 0]).plus(c), [-1, 0, 0], [0, 0, 1]),\r\n            new CSG.Connector(new CSG.Vector3D([0, r.y, 0]).plus(c), [0, 1, 0], [0, 0, 1]),\r\n            new CSG.Connector(new CSG.Vector3D([0, -r.y, 0]).plus(c), [0, -1, 0], [0, 0, 1]),\r\n            new CSG.Connector(new CSG.Vector3D([0, 0, r.z]).plus(c), [0, 0, 1], [1, 0, 0]),\r\n            new CSG.Connector(new CSG.Vector3D([0, 0, -r.z]).plus(c), [0, 0, -1], [1, 0, 0])\r\n        ];\r\n        return result;\r\n    };\r\n\r\n    // Construct a solid sphere\r\n    //\r\n    // Parameters:\r\n    //   center: center of sphere (default [0,0,0])\r\n    //   radius: radius of sphere (default 1), must be a scalar\r\n    //   resolution: determines the number of polygons per 360 degree revolution (default 12)\r\n    //   axes: (optional) an array with 3 vectors for the x, y and z base vectors\r\n    //\r\n    // Example usage:\r\n    //\r\n    //     var sphere = CSG.sphere({\r\n    //       center: [0, 0, 0],\r\n    //       radius: 2,\r\n    //       resolution: 32,\r\n    //     });\r\n    CSG.sphere = function(options) {\r\n        options = options || {};\r\n        var center = CSG.parseOptionAs3DVector(options, \"center\", [0, 0, 0]);\r\n        var radius = CSG.parseOptionAsFloat(options, \"radius\", 1);\r\n        var resolution = CSG.parseOptionAsInt(options, \"resolution\", CSG.defaultResolution3D);\r\n        var xvector, yvector, zvector;\r\n        if ('axes' in options) {\r\n            xvector = options.axes[0].unit().times(radius);\r\n            yvector = options.axes[1].unit().times(radius);\r\n            zvector = options.axes[2].unit().times(radius);\r\n        } else {\r\n            xvector = new CSG.Vector3D([1, 0, 0]).times(radius);\r\n            yvector = new CSG.Vector3D([0, -1, 0]).times(radius);\r\n            zvector = new CSG.Vector3D([0, 0, 1]).times(radius);\r\n        }\r\n        if (resolution < 4) resolution = 4;\r\n        var qresolution = Math.round(resolution / 4);\r\n        var prevcylinderpoint;\r\n        var polygons = [];\r\n        for (var slice1 = 0; slice1 <= resolution; slice1++) {\r\n            var angle = Math.PI * 2.0 * slice1 / resolution;\r\n            var cylinderpoint = xvector.times(Math.cos(angle)).plus(yvector.times(Math.sin(angle)));\r\n            if (slice1 > 0) {\r\n                // cylinder vertices:\r\n                var vertices = [];\r\n                var prevcospitch, prevsinpitch;\r\n                for (var slice2 = 0; slice2 <= qresolution; slice2++) {\r\n                    var pitch = 0.5 * Math.PI * slice2 / qresolution;\r\n                    var cospitch = Math.cos(pitch);\r\n                    var sinpitch = Math.sin(pitch);\r\n                    if (slice2 > 0) {\r\n                        vertices = [];\r\n                        vertices.push(new CSG.Vertex(center.plus(prevcylinderpoint.times(prevcospitch).minus(zvector.times(prevsinpitch)))));\r\n                        vertices.push(new CSG.Vertex(center.plus(cylinderpoint.times(prevcospitch).minus(zvector.times(prevsinpitch)))));\r\n                        if (slice2 < qresolution) {\r\n                            vertices.push(new CSG.Vertex(center.plus(cylinderpoint.times(cospitch).minus(zvector.times(sinpitch)))));\r\n                        }\r\n                        vertices.push(new CSG.Vertex(center.plus(prevcylinderpoint.times(cospitch).minus(zvector.times(sinpitch)))));\r\n                        polygons.push(new CSG.Polygon(vertices));\r\n                        vertices = [];\r\n                        vertices.push(new CSG.Vertex(center.plus(prevcylinderpoint.times(prevcospitch).plus(zvector.times(prevsinpitch)))));\r\n                        vertices.push(new CSG.Vertex(center.plus(cylinderpoint.times(prevcospitch).plus(zvector.times(prevsinpitch)))));\r\n                        if (slice2 < qresolution) {\r\n                            vertices.push(new CSG.Vertex(center.plus(cylinderpoint.times(cospitch).plus(zvector.times(sinpitch)))));\r\n                        }\r\n                        vertices.push(new CSG.Vertex(center.plus(prevcylinderpoint.times(cospitch).plus(zvector.times(sinpitch)))));\r\n                        vertices.reverse();\r\n                        polygons.push(new CSG.Polygon(vertices));\r\n                    }\r\n                    prevcospitch = cospitch;\r\n                    prevsinpitch = sinpitch;\r\n                }\r\n            }\r\n            prevcylinderpoint = cylinderpoint;\r\n        }\r\n        var result = CSG.fromPolygons(polygons);\r\n        result.properties.sphere = new CSG.Properties();\r\n        result.properties.sphere.center = new CSG.Vector3D(center);\r\n        result.properties.sphere.facepoint = center.plus(xvector);\r\n        return result;\r\n    };\r\n\r\n    // Construct a solid cylinder.\r\n    //\r\n    // Parameters:\r\n    //   start: start point of cylinder (default [0, -1, 0])\r\n    //   end: end point of cylinder (default [0, 1, 0])\r\n    //   radius: radius of cylinder (default 1), must be a scalar\r\n    //   resolution: determines the number of polygons per 360 degree revolution (default 12)\r\n    //\r\n    // Example usage:\r\n    //\r\n    //     var cylinder = CSG.cylinder({\r\n    //       start: [0, -1, 0],\r\n    //       end: [0, 1, 0],\r\n    //       radius: 1,\r\n    //       resolution: 16\r\n    //     });\r\n    CSG.cylinder = function(options) {\r\n        var s = CSG.parseOptionAs3DVector(options, \"start\", [0, -1, 0]);\r\n        var e = CSG.parseOptionAs3DVector(options, \"end\", [0, 1, 0]);\r\n        var r = CSG.parseOptionAsFloat(options, \"radius\", 1);\r\n        var rEnd = CSG.parseOptionAsFloat(options, \"radiusEnd\", r);\r\n        var rStart = CSG.parseOptionAsFloat(options, \"radiusStart\", r);\r\n        var alpha = CSG.parseOptionAsFloat(options, \"sectorAngle\", 360);\r\n        alpha = alpha > 360 ? alpha % 360 : alpha;\r\n\r\n        if ((rEnd < 0) || (rStart < 0)) {\r\n            throw new Error(\"Radius should be non-negative\");\r\n        }\r\n        if ((rEnd === 0) && (rStart === 0)) {\r\n            throw new Error(\"Either radiusStart or radiusEnd should be positive\");\r\n        }\r\n\r\n        var slices = CSG.parseOptionAsInt(options, \"resolution\", CSG.defaultResolution2D);\r\n        var ray = e.minus(s);\r\n        var axisZ = ray.unit(); //, isY = (Math.abs(axisZ.y) > 0.5);\r\n        var axisX = axisZ.randomNonParallelVector().unit();\r\n\r\n        //  var axisX = new CSG.Vector3D(isY, !isY, 0).cross(axisZ).unit();\r\n        var axisY = axisX.cross(axisZ).unit();\r\n        var start = new CSG.Vertex(s);\r\n        var end = new CSG.Vertex(e);\r\n        var polygons = [];\r\n\r\n        function point(stack, slice, radius) {\r\n            var angle = slice * Math.PI * alpha / 180;\r\n            var out = axisX.times(Math.cos(angle)).plus(axisY.times(Math.sin(angle)));\r\n            var pos = s.plus(ray.times(stack)).plus(out.times(radius));\r\n            return new CSG.Vertex(pos);\r\n        }\r\n        if (alpha > 0) {\r\n            for (var i = 0; i < slices; i++) {\r\n                var t0 = i / slices,\r\n                    t1 = (i + 1) / slices;\r\n                if (rEnd == rStart) {\r\n                    polygons.push(new CSG.Polygon([start, point(0, t0, rEnd), point(0, t1, rEnd)]));\r\n                    polygons.push(new CSG.Polygon([point(0, t1, rEnd), point(0, t0, rEnd), point(1, t0, rEnd), point(1, t1, rEnd)]));\r\n                    polygons.push(new CSG.Polygon([end, point(1, t1, rEnd), point(1, t0, rEnd)]));\r\n                } else {\r\n                    if (rStart > 0) {\r\n                        polygons.push(new CSG.Polygon([start, point(0, t0, rStart), point(0, t1, rStart)]));\r\n                        polygons.push(new CSG.Polygon([point(0, t0, rStart), point(1, t0, rEnd), point(0, t1, rStart)]));\r\n                    }\r\n                    if (rEnd > 0) {\r\n                        polygons.push(new CSG.Polygon([end, point(1, t1, rEnd), point(1, t0, rEnd)]));\r\n                        polygons.push(new CSG.Polygon([point(1, t0, rEnd), point(1, t1, rEnd), point(0, t1, rStart)]));\r\n                    }\r\n                }\r\n            }\r\n            if (alpha < 360) {\r\n                polygons.push(new CSG.Polygon([start, end, point(0, 0, rStart)]));\r\n                polygons.push(new CSG.Polygon([point(0, 0, rStart), end, point(1, 0, rEnd)]));\r\n                polygons.push(new CSG.Polygon([start, point(0, 1, rStart), end]));\r\n                polygons.push(new CSG.Polygon([point(0, 1, rStart), point(1, 1, rEnd), end]));\r\n            }\r\n        }\r\n        var result = CSG.fromPolygons(polygons);\r\n        result.properties.cylinder = new CSG.Properties();\r\n        result.properties.cylinder.start = new CSG.Connector(s, axisZ.negated(), axisX);\r\n        result.properties.cylinder.end = new CSG.Connector(e, axisZ, axisX);\r\n        var cylCenter = s.plus(ray.times(0.5));\r\n        var fptVec = axisX.rotate(s, axisZ, -alpha / 2).times((rStart + rEnd) / 2);\r\n        var fptVec90 = fptVec.cross(axisZ);\r\n        // note this one is NOT a face normal for a cone. - It's horizontal from cyl perspective\r\n        result.properties.cylinder.facepointH = new CSG.Connector(cylCenter.plus(fptVec), fptVec, axisZ);\r\n        result.properties.cylinder.facepointH90 = new CSG.Connector(cylCenter.plus(fptVec90), fptVec90, axisZ);\r\n        return result;\r\n    };\r\n\r\n    // Like a cylinder, but with rounded ends instead of flat\r\n    //\r\n    // Parameters:\r\n    //   start: start point of cylinder (default [0, -1, 0])\r\n    //   end: end point of cylinder (default [0, 1, 0])\r\n    //   radius: radius of cylinder (default 1), must be a scalar\r\n    //   resolution: determines the number of polygons per 360 degree revolution (default 12)\r\n    //   normal: a vector determining the starting angle for tesselation. Should be non-parallel to start.minus(end)\r\n    //\r\n    // Example usage:\r\n    //\r\n    //     var cylinder = CSG.roundedCylinder({\r\n    //       start: [0, -1, 0],\r\n    //       end: [0, 1, 0],\r\n    //       radius: 1,\r\n    //       resolution: 16\r\n    //     });\r\n    CSG.roundedCylinder = function(options) {\r\n        var p1 = CSG.parseOptionAs3DVector(options, \"start\", [0, -1, 0]);\r\n        var p2 = CSG.parseOptionAs3DVector(options, \"end\", [0, 1, 0]);\r\n        var radius = CSG.parseOptionAsFloat(options, \"radius\", 1);\r\n        var direction = p2.minus(p1);\r\n        var defaultnormal;\r\n        if (Math.abs(direction.x) > Math.abs(direction.y)) {\r\n            defaultnormal = new CSG.Vector3D(0, 1, 0);\r\n        } else {\r\n            defaultnormal = new CSG.Vector3D(1, 0, 0);\r\n        }\r\n        var normal = CSG.parseOptionAs3DVector(options, \"normal\", defaultnormal);\r\n        var resolution = CSG.parseOptionAsInt(options, \"resolution\", CSG.defaultResolution3D);\r\n        if (resolution < 4) resolution = 4;\r\n        var polygons = [];\r\n        var qresolution = Math.floor(0.25 * resolution);\r\n        var length = direction.length();\r\n        if (length < 1e-10) {\r\n            return CSG.sphere({\r\n                center: p1,\r\n                radius: radius,\r\n                resolution: resolution\r\n            });\r\n        }\r\n        var zvector = direction.unit().times(radius);\r\n        var xvector = zvector.cross(normal).unit().times(radius);\r\n        var yvector = xvector.cross(zvector).unit().times(radius);\r\n        var prevcylinderpoint;\r\n        for (var slice1 = 0; slice1 <= resolution; slice1++) {\r\n            var angle = Math.PI * 2.0 * slice1 / resolution;\r\n            var cylinderpoint = xvector.times(Math.cos(angle)).plus(yvector.times(Math.sin(angle)));\r\n            if (slice1 > 0) {\r\n                // cylinder vertices:\r\n                var vertices = [];\r\n                vertices.push(new CSG.Vertex(p1.plus(cylinderpoint)));\r\n                vertices.push(new CSG.Vertex(p1.plus(prevcylinderpoint)));\r\n                vertices.push(new CSG.Vertex(p2.plus(prevcylinderpoint)));\r\n                vertices.push(new CSG.Vertex(p2.plus(cylinderpoint)));\r\n                polygons.push(new CSG.Polygon(vertices));\r\n                var prevcospitch, prevsinpitch;\r\n                for (var slice2 = 0; slice2 <= qresolution; slice2++) {\r\n                    var pitch = 0.5 * Math.PI * slice2 / qresolution;\r\n                    //var pitch = Math.asin(slice2/qresolution);\r\n                    var cospitch = Math.cos(pitch);\r\n                    var sinpitch = Math.sin(pitch);\r\n                    if (slice2 > 0) {\r\n                        vertices = [];\r\n                        vertices.push(new CSG.Vertex(p1.plus(prevcylinderpoint.times(prevcospitch).minus(zvector.times(prevsinpitch)))));\r\n                        vertices.push(new CSG.Vertex(p1.plus(cylinderpoint.times(prevcospitch).minus(zvector.times(prevsinpitch)))));\r\n                        if (slice2 < qresolution) {\r\n                            vertices.push(new CSG.Vertex(p1.plus(cylinderpoint.times(cospitch).minus(zvector.times(sinpitch)))));\r\n                        }\r\n                        vertices.push(new CSG.Vertex(p1.plus(prevcylinderpoint.times(cospitch).minus(zvector.times(sinpitch)))));\r\n                        polygons.push(new CSG.Polygon(vertices));\r\n                        vertices = [];\r\n                        vertices.push(new CSG.Vertex(p2.plus(prevcylinderpoint.times(prevcospitch).plus(zvector.times(prevsinpitch)))));\r\n                        vertices.push(new CSG.Vertex(p2.plus(cylinderpoint.times(prevcospitch).plus(zvector.times(prevsinpitch)))));\r\n                        if (slice2 < qresolution) {\r\n                            vertices.push(new CSG.Vertex(p2.plus(cylinderpoint.times(cospitch).plus(zvector.times(sinpitch)))));\r\n                        }\r\n                        vertices.push(new CSG.Vertex(p2.plus(prevcylinderpoint.times(cospitch).plus(zvector.times(sinpitch)))));\r\n                        vertices.reverse();\r\n                        polygons.push(new CSG.Polygon(vertices));\r\n                    }\r\n                    prevcospitch = cospitch;\r\n                    prevsinpitch = sinpitch;\r\n                }\r\n            }\r\n            prevcylinderpoint = cylinderpoint;\r\n        }\r\n        var result = CSG.fromPolygons(polygons);\r\n        var ray = zvector.unit();\r\n        var axisX = xvector.unit();\r\n        result.properties.roundedCylinder = new CSG.Properties();\r\n        result.properties.roundedCylinder.start = new CSG.Connector(p1, ray.negated(), axisX);\r\n        result.properties.roundedCylinder.end = new CSG.Connector(p2, ray, axisX);\r\n        result.properties.roundedCylinder.facepoint = p1.plus(xvector);\r\n        return result;\r\n    };\r\n\r\n    // Construct an axis-aligned solid rounded cuboid.\r\n    // Parameters:\r\n    //   center: center of cube (default [0,0,0])\r\n    //   radius: radius of cube (default [1,1,1]), can be specified as scalar or as 3D vector\r\n    //   roundradius: radius of rounded corners (default 0.2), must be a scalar\r\n    //   resolution: determines the number of polygons per 360 degree revolution (default 8)\r\n    //\r\n    // Example code:\r\n    //\r\n    //     var cube = CSG.roundedCube({\r\n    //       center: [0, 0, 0],\r\n    //       radius: 1,\r\n    //       roundradius: 0.2,\r\n    //       resolution: 8,\r\n    //     });\r\n    CSG.roundedCube = function(options) {\r\n        var EPS = 1e-5;\r\n        var minRR = 1e-2; //minroundradius 1e-3 gives rounding errors already\r\n        var center, cuberadius;\r\n        options = options || {};\r\n        if (('corner1' in options) || ('corner2' in options)) {\r\n            if (('center' in options) || ('radius' in options)) {\r\n                throw new Error(\"roundedCube: should either give a radius and center parameter, or a corner1 and corner2 parameter\");\r\n            }\r\n            corner1 = CSG.parseOptionAs3DVector(options, \"corner1\", [0, 0, 0]);\r\n            corner2 = CSG.parseOptionAs3DVector(options, \"corner2\", [1, 1, 1]);\r\n            center = corner1.plus(corner2).times(0.5);\r\n            cuberadius = corner2.minus(corner1).times(0.5);\r\n        } else {\r\n            center = CSG.parseOptionAs3DVector(options, \"center\", [0, 0, 0]);\r\n            cuberadius = CSG.parseOptionAs3DVector(options, \"radius\", [1, 1, 1]);\r\n        }\r\n        cuberadius = cuberadius.abs(); // negative radii make no sense\r\n        var resolution = CSG.parseOptionAsInt(options, \"resolution\", CSG.defaultResolution3D);\r\n        if (resolution < 4) resolution = 4;\r\n        if (resolution%2 == 1 && resolution < 8) resolution = 8; // avoid ugly\r\n        var roundradius = CSG.parseOptionAs3DVector(options, \"roundradius\", [0.2, 0.2, 0.2]);\r\n        // slight hack for now - total radius stays ok\r\n        roundradius = CSG.Vector3D.Create(Math.max(roundradius.x, minRR), Math.max(roundradius.y, minRR), Math.max(roundradius.z, minRR));\r\n        var innerradius = cuberadius.minus(roundradius);\r\n        if (innerradius.x < 0 || innerradius.y < 0 || innerradius.z < 0) {\r\n            throw('roundradius <= radius!');\r\n        }\r\n        var res = CSG.sphere({radius:1, resolution:resolution});\r\n        res = res.scale(roundradius);\r\n        innerradius.x > EPS && (res = res.stretchAtPlane([1, 0, 0], [0, 0, 0], 2*innerradius.x));\r\n        innerradius.y > EPS && (res = res.stretchAtPlane([0, 1, 0], [0, 0, 0], 2*innerradius.y));\r\n        innerradius.z > EPS && (res = res.stretchAtPlane([0, 0, 1], [0, 0, 0], 2*innerradius.z));\r\n        res = res.translate([-innerradius.x+center.x, -innerradius.y+center.y, -innerradius.z+center.z]);\r\n        res = res.reTesselated();\r\n        res.properties.roundedCube = new CSG.Properties();\r\n        res.properties.roundedCube.center = new CSG.Vertex(center);\r\n        res.properties.roundedCube.facecenters = [\r\n            new CSG.Connector(new CSG.Vector3D([cuberadius.x, 0, 0]).plus(center), [1, 0, 0], [0, 0, 1]),\r\n            new CSG.Connector(new CSG.Vector3D([-cuberadius.x, 0, 0]).plus(center), [-1, 0, 0], [0, 0, 1]),\r\n            new CSG.Connector(new CSG.Vector3D([0, cuberadius.y, 0]).plus(center), [0, 1, 0], [0, 0, 1]),\r\n            new CSG.Connector(new CSG.Vector3D([0, -cuberadius.y, 0]).plus(center), [0, -1, 0], [0, 0, 1]),\r\n            new CSG.Connector(new CSG.Vector3D([0, 0, cuberadius.z]).plus(center), [0, 0, 1], [1, 0, 0]),\r\n            new CSG.Connector(new CSG.Vector3D([0, 0, -cuberadius.z]).plus(center), [0, 0, -1], [1, 0, 0])\r\n        ];\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * polyhedron accepts openscad style arguments. I.e. define face vertices clockwise looking from outside\r\n     */\r\n    CSG.polyhedron = function(options) {\r\n        options = options || {};\r\n        if (('points' in options) !== ('faces' in options)) {\r\n            throw new Error(\"polyhedron needs 'points' and 'faces' arrays\");\r\n        }\r\n        var vertices = CSG.parseOptionAs3DVectorList(options, \"points\", [\r\n                [1, 1, 0],\r\n                [1, -1, 0],\r\n                [-1, -1, 0],\r\n                [-1, 1, 0],\r\n                [0, 0, 1]\r\n            ])\r\n            .map(function(pt) {\r\n                return new CSG.Vertex(pt);\r\n            });\r\n        var faces = CSG.parseOption(options, \"faces\", [\r\n                [0, 1, 4],\r\n                [1, 2, 4],\r\n                [2, 3, 4],\r\n                [3, 0, 4],\r\n                [1, 0, 3],\r\n                [2, 1, 3]\r\n            ]);\r\n        // openscad convention defines inward normals - so we have to invert here\r\n        faces.forEach(function(face) {\r\n            face.reverse();\r\n        });\r\n        var polygons = faces.map(function(face) {\r\n            return new CSG.Polygon(face.map(function(idx) {\r\n                return vertices[idx];\r\n            }));\r\n        });\r\n\r\n        // TODO: facecenters as connectors? probably overkill. Maybe centroid\r\n        // the re-tesselation here happens because it's so easy for a user to\r\n        // create parametrized polyhedrons that end up with 1-2 dimensional polygons.\r\n        // These will create infinite loops at CSG.Tree()\r\n        return CSG.fromPolygons(polygons).reTesselated();\r\n    };\r\n\r\n    CSG.IsFloat = function(n) {\r\n        return (!isNaN(n)) || (n === Infinity) || (n === -Infinity);\r\n    };\r\n\r\n    // solve 2x2 linear equation:\r\n    // [ab][x] = [u]\r\n    // [cd][y]   [v]\r\n    CSG.solve2Linear = function(a, b, c, d, u, v) {\r\n        var det = a * d - b * c;\r\n        var invdet = 1.0 / det;\r\n        var x = u * d - b * v;\r\n        var y = -u * c + a * v;\r\n        x *= invdet;\r\n        y *= invdet;\r\n        return [x, y];\r\n    };\r\n\r\n    // # class Vector3D\r\n    // Represents a 3D vector.\r\n    //\r\n    // Example usage:\r\n    //\r\n    //     new CSG.Vector3D(1, 2, 3);\r\n    //     new CSG.Vector3D([1, 2, 3]);\r\n    //     new CSG.Vector3D({ x: 1, y: 2, z: 3 });\r\n    //     new CSG.Vector3D(1, 2); // assumes z=0\r\n    //     new CSG.Vector3D([1, 2]); // assumes z=0\r\n    CSG.Vector3D = function(x, y, z) {\r\n        if (arguments.length == 3) {\r\n            this._x = parseFloat(x);\r\n            this._y = parseFloat(y);\r\n            this._z = parseFloat(z);\r\n        } else if (arguments.length == 2) {\r\n            this._x = parseFloat(x);\r\n            this._y = parseFloat(y);\r\n            this._z = 0;\r\n        } else {\r\n            var ok = true;\r\n            if (arguments.length == 1) {\r\n                if (typeof(x) == \"object\") {\r\n                    if (x instanceof CSG.Vector3D) {\r\n                        this._x = x._x;\r\n                        this._y = x._y;\r\n                        this._z = x._z;\r\n                    } else if (x instanceof CSG.Vector2D) {\r\n                        this._x = x._x;\r\n                        this._y = x._y;\r\n                        this._z = 0;\r\n                    } else if (x instanceof Array) {\r\n                        if ((x.length < 2) || (x.length > 3)) {\r\n                            ok = false;\r\n                        } else {\r\n                            this._x = parseFloat(x[0]);\r\n                            this._y = parseFloat(x[1]);\r\n                            if (x.length == 3) {\r\n                                this._z = parseFloat(x[2]);\r\n                            } else {\r\n                                this._z = 0;\r\n                            }\r\n                        }\r\n                    } else if (('x' in x) && ('y' in x)) {\r\n                        this._x = parseFloat(x.x);\r\n                        this._y = parseFloat(x.y);\r\n                        if ('z' in x) {\r\n                            this._z = parseFloat(x.z);\r\n                        } else {\r\n                            this._z = 0;\r\n                        }\r\n                    } else ok = false;\r\n                } else {\r\n                    var v = parseFloat(x);\r\n                    this._x = v;\r\n                    this._y = v;\r\n                    this._z = v;\r\n                }\r\n            } else ok = false;\r\n            if (ok) {\r\n                if ((!CSG.IsFloat(this._x)) || (!CSG.IsFloat(this._y)) || (!CSG.IsFloat(this._z))) ok = false;\r\n            }\r\n            if (!ok) {\r\n                throw new Error(\"wrong arguments\");\r\n            }\r\n        }\r\n    };\r\n\r\n    // This does the same as new CSG.Vector3D(x,y,z) but it doesn't go through the constructor\r\n    // and the parameters are not validated. Is much faster.\r\n    CSG.Vector3D.Create = function(x, y, z) {\r\n        var result = Object.create(CSG.Vector3D.prototype);\r\n        result._x = x;\r\n        result._y = y;\r\n        result._z = z;\r\n        return result;\r\n    };\r\n\r\n    CSG.Vector3D.prototype = {\r\n        get x() {\r\n            return this._x;\r\n        },\r\n        get y() {\r\n            return this._y;\r\n        },\r\n        get z() {\r\n            return this._z;\r\n        },\r\n\r\n        set x(v) {\r\n            throw new Error(\"Vector3D is immutable\");\r\n        },\r\n        set y(v) {\r\n            throw new Error(\"Vector3D is immutable\");\r\n        },\r\n        set z(v) {\r\n            throw new Error(\"Vector3D is immutable\");\r\n        },\r\n\r\n        clone: function() {\r\n            return CSG.Vector3D.Create(this._x, this._y, this._z);\r\n        },\r\n\r\n        negated: function() {\r\n            return CSG.Vector3D.Create(-this._x, -this._y, -this._z);\r\n        },\r\n\r\n        abs: function() {\r\n            return CSG.Vector3D.Create(Math.abs(this._x), Math.abs(this._y), Math.abs(this._z));\r\n        },\r\n\r\n        plus: function(a) {\r\n            return CSG.Vector3D.Create(this._x + a._x, this._y + a._y, this._z + a._z);\r\n        },\r\n\r\n        minus: function(a) {\r\n            return CSG.Vector3D.Create(this._x - a._x, this._y - a._y, this._z - a._z);\r\n        },\r\n\r\n        times: function(a) {\r\n            return CSG.Vector3D.Create(this._x * a, this._y * a, this._z * a);\r\n        },\r\n\r\n        dividedBy: function(a) {\r\n            return CSG.Vector3D.Create(this._x / a, this._y / a, this._z / a);\r\n        },\r\n\r\n        dot: function(a) {\r\n            return this._x * a._x + this._y * a._y + this._z * a._z;\r\n        },\r\n\r\n        lerp: function(a, t) {\r\n            return this.plus(a.minus(this).times(t));\r\n        },\r\n\r\n        lengthSquared: function() {\r\n            return this.dot(this);\r\n        },\r\n\r\n        length: function() {\r\n            return Math.sqrt(this.lengthSquared());\r\n        },\r\n\r\n        unit: function() {\r\n            return this.dividedBy(this.length());\r\n        },\r\n\r\n        cross: function(a) {\r\n            return CSG.Vector3D.Create(\r\n                this._y * a._z - this._z * a._y, this._z * a._x - this._x * a._z, this._x * a._y - this._y * a._x);\r\n        },\r\n\r\n        distanceTo: function(a) {\r\n            return this.minus(a).length();\r\n        },\r\n\r\n        distanceToSquared: function(a) {\r\n            return this.minus(a).lengthSquared();\r\n        },\r\n\r\n        equals: function(a) {\r\n            return (this._x == a._x) && (this._y == a._y) && (this._z == a._z);\r\n        },\r\n\r\n        // Right multiply by a 4x4 matrix (the vector is interpreted as a row vector)\r\n        // Returns a new CSG.Vector3D\r\n        multiply4x4: function(matrix4x4) {\r\n            return matrix4x4.leftMultiply1x3Vector(this);\r\n        },\r\n\r\n        transform: function(matrix4x4) {\r\n            return matrix4x4.leftMultiply1x3Vector(this);\r\n        },\r\n\r\n        toString: function() {\r\n            return \"(\" + this._x.toFixed(2) + \", \" + this._y.toFixed(2) + \", \" + this._z.toFixed(2) + \")\";\r\n        },\r\n\r\n        // find a vector that is somewhat perpendicular to this one\r\n        randomNonParallelVector: function() {\r\n            var abs = this.abs();\r\n            if ((abs._x <= abs._y) && (abs._x <= abs._z)) {\r\n                return CSG.Vector3D.Create(1, 0, 0);\r\n            } else if ((abs._y <= abs._x) && (abs._y <= abs._z)) {\r\n                return CSG.Vector3D.Create(0, 1, 0);\r\n            } else {\r\n                return CSG.Vector3D.Create(0, 0, 1);\r\n            }\r\n        },\r\n\r\n        min: function(p) {\r\n            return CSG.Vector3D.Create(\r\n                Math.min(this._x, p._x), Math.min(this._y, p._y), Math.min(this._z, p._z));\r\n        },\r\n\r\n        max: function(p) {\r\n            return CSG.Vector3D.Create(\r\n                Math.max(this._x, p._x), Math.max(this._y, p._y), Math.max(this._z, p._z));\r\n        }\r\n    };\r\n\r\n    // # class Vertex\r\n    // Represents a vertex of a polygon. Use your own vertex class instead of this\r\n    // one to provide additional features like texture coordinates and vertex\r\n    // colors. Custom vertex classes need to provide a `pos` property\r\n    // `flipped()`, and `interpolate()` methods that behave analogous to the ones\r\n    // defined by `CSG.Vertex`.\r\n    CSG.Vertex = function(pos) {\r\n        this.pos = pos;\r\n    };\r\n\r\n    // create from an untyped object with identical property names:\r\n    CSG.Vertex.fromObject = function(obj) {\r\n        var pos = new CSG.Vector3D(obj.pos);\r\n        return new CSG.Vertex(pos);\r\n    };\r\n\r\n    CSG.Vertex.prototype = {\r\n        // Return a vertex with all orientation-specific data (e.g. vertex normal) flipped. Called when the\r\n        // orientation of a polygon is flipped.\r\n        flipped: function() {\r\n            return this;\r\n        },\r\n\r\n        getTag: function() {\r\n            var result = this.tag;\r\n            if (!result) {\r\n                result = CSG.getTag();\r\n                this.tag = result;\r\n            }\r\n            return result;\r\n        },\r\n\r\n        // Create a new vertex between this vertex and `other` by linearly\r\n        // interpolating all properties using a parameter of `t`. Subclasses should\r\n        // override this to interpolate additional properties.\r\n        interpolate: function(other, t) {\r\n            var newpos = this.pos.lerp(other.pos, t);\r\n            return new CSG.Vertex(newpos);\r\n        },\r\n\r\n        // Affine transformation of vertex. Returns a new CSG.Vertex\r\n        transform: function(matrix4x4) {\r\n            var newpos = this.pos.multiply4x4(matrix4x4);\r\n            return new CSG.Vertex(newpos);\r\n        },\r\n\r\n        toString: function() {\r\n            return this.pos.toString();\r\n        }\r\n    };\r\n\r\n    // # class Plane\r\n    // Represents a plane in 3D space.\r\n    CSG.Plane = function(normal, w) {\r\n        this.normal = normal;\r\n        this.w = w;\r\n    };\r\n\r\n    // create from an untyped object with identical property names:\r\n    CSG.Plane.fromObject = function(obj) {\r\n        var normal = new CSG.Vector3D(obj.normal);\r\n        var w = parseFloat(obj.w);\r\n        return new CSG.Plane(normal, w);\r\n    };\r\n\r\n    // `CSG.Plane.EPSILON` is the tolerance used by `splitPolygon()` to decide if a\r\n    // point is on the plane.\r\n    CSG.Plane.EPSILON = 1e-5;\r\n\r\n    CSG.Plane.fromVector3Ds = function(a, b, c) {\r\n        var n = b.minus(a).cross(c.minus(a)).unit();\r\n        return new CSG.Plane(n, n.dot(a));\r\n    };\r\n\r\n    // like fromVector3Ds, but allow the vectors to be on one point or one line\r\n    // in such a case a random plane through the given points is constructed\r\n    CSG.Plane.anyPlaneFromVector3Ds = function(a, b, c) {\r\n        var v1 = b.minus(a);\r\n        var v2 = c.minus(a);\r\n        if (v1.length() < 1e-5) {\r\n            v1 = v2.randomNonParallelVector();\r\n        }\r\n        if (v2.length() < 1e-5) {\r\n            v2 = v1.randomNonParallelVector();\r\n        }\r\n        var normal = v1.cross(v2);\r\n        if (normal.length() < 1e-5) {\r\n            // this would mean that v1 == v2.negated()\r\n            v2 = v1.randomNonParallelVector();\r\n            normal = v1.cross(v2);\r\n        }\r\n        normal = normal.unit();\r\n        return new CSG.Plane(normal, normal.dot(a));\r\n    };\r\n\r\n    CSG.Plane.fromPoints = function(a, b, c) {\r\n        a = new CSG.Vector3D(a);\r\n        b = new CSG.Vector3D(b);\r\n        c = new CSG.Vector3D(c);\r\n        return CSG.Plane.fromVector3Ds(a, b, c);\r\n    };\r\n\r\n    CSG.Plane.fromNormalAndPoint = function(normal, point) {\r\n        normal = new CSG.Vector3D(normal);\r\n        point = new CSG.Vector3D(point);\r\n        normal = normal.unit();\r\n        var w = point.dot(normal);\r\n        return new CSG.Plane(normal, w);\r\n    };\r\n\r\n    CSG.Plane.prototype = {\r\n        flipped: function() {\r\n            return new CSG.Plane(this.normal.negated(), -this.w);\r\n        },\r\n\r\n        getTag: function() {\r\n            var result = this.tag;\r\n            if (!result) {\r\n                result = CSG.getTag();\r\n                this.tag = result;\r\n            }\r\n            return result;\r\n        },\r\n\r\n        equals: function(n) {\r\n            return this.normal.equals(n.normal) && this.w == n.w;\r\n        },\r\n\r\n        transform: function(matrix4x4) {\r\n            var ismirror = matrix4x4.isMirroring();\r\n            // get two vectors in the plane:\r\n            var r = this.normal.randomNonParallelVector();\r\n            var u = this.normal.cross(r);\r\n            var v = this.normal.cross(u);\r\n            // get 3 points in the plane:\r\n            var point1 = this.normal.times(this.w);\r\n            var point2 = point1.plus(u);\r\n            var point3 = point1.plus(v);\r\n            // transform the points:\r\n            point1 = point1.multiply4x4(matrix4x4);\r\n            point2 = point2.multiply4x4(matrix4x4);\r\n            point3 = point3.multiply4x4(matrix4x4);\r\n            // and create a new plane from the transformed points:\r\n            var newplane = CSG.Plane.fromVector3Ds(point1, point2, point3);\r\n            if (ismirror) {\r\n                // the transform is mirroring\r\n                // We should mirror the plane:\r\n                newplane = newplane.flipped();\r\n            }\r\n            return newplane;\r\n        },\r\n\r\n        // Returns object:\r\n        // .type:\r\n        //   0: coplanar-front\r\n        //   1: coplanar-back\r\n        //   2: front\r\n        //   3: back\r\n        //   4: spanning\r\n        // In case the polygon is spanning, returns:\r\n        // .front: a CSG.Polygon of the front part\r\n        // .back: a CSG.Polygon of the back part\r\n        splitPolygon: function(polygon) {\r\n            var result = {\r\n                type: null,\r\n                front: null,\r\n                back: null\r\n            };\r\n            // cache in local vars (speedup):\r\n            var planenormal = this.normal;\r\n            var vertices = polygon.vertices;\r\n            var numvertices = vertices.length;\r\n            if (polygon.plane.equals(this)) {\r\n                result.type = 0;\r\n            } else {\r\n                var EPS = CSG.Plane.EPSILON;\r\n                var thisw = this.w;\r\n                var hasfront = false;\r\n                var hasback = false;\r\n                var vertexIsBack = [];\r\n                var MINEPS = -EPS;\r\n                for (var i = 0; i < numvertices; i++) {\r\n                    var t = planenormal.dot(vertices[i].pos) - thisw;\r\n                    var isback = (t < 0);\r\n                    vertexIsBack.push(isback);\r\n                    if (t > EPS) hasfront = true;\r\n                    if (t < MINEPS) hasback = true;\r\n                }\r\n                if ((!hasfront) && (!hasback)) {\r\n                    // all points coplanar\r\n                    var t = planenormal.dot(polygon.plane.normal);\r\n                    result.type = (t >= 0) ? 0 : 1;\r\n                } else if (!hasback) {\r\n                    result.type = 2;\r\n                } else if (!hasfront) {\r\n                    result.type = 3;\r\n                } else {\r\n                    // spanning\r\n                    result.type = 4;\r\n                    var frontvertices = [],\r\n                        backvertices = [];\r\n                    var isback = vertexIsBack[0];\r\n                    for (var vertexindex = 0; vertexindex < numvertices; vertexindex++) {\r\n                        var vertex = vertices[vertexindex];\r\n                        var nextvertexindex = vertexindex + 1;\r\n                        if (nextvertexindex >= numvertices) nextvertexindex = 0;\r\n                        var nextisback = vertexIsBack[nextvertexindex];\r\n                        if (isback == nextisback) {\r\n                            // line segment is on one side of the plane:\r\n                            if (isback) {\r\n                                backvertices.push(vertex);\r\n                            } else {\r\n                                frontvertices.push(vertex);\r\n                            }\r\n                        } else {\r\n                            // line segment intersects plane:\r\n                            var point = vertex.pos;\r\n                            var nextpoint = vertices[nextvertexindex].pos;\r\n                            var intersectionpoint = this.splitLineBetweenPoints(point, nextpoint);\r\n                            var intersectionvertex = new CSG.Vertex(intersectionpoint);\r\n                            if (isback) {\r\n                                backvertices.push(vertex);\r\n                                backvertices.push(intersectionvertex);\r\n                                frontvertices.push(intersectionvertex);\r\n                            } else {\r\n                                frontvertices.push(vertex);\r\n                                frontvertices.push(intersectionvertex);\r\n                                backvertices.push(intersectionvertex);\r\n                            }\r\n                        }\r\n                        isback = nextisback;\r\n                    } // for vertexindex\r\n                    // remove duplicate vertices:\r\n                    var EPS_SQUARED = CSG.Plane.EPSILON * CSG.Plane.EPSILON;\r\n                    if (backvertices.length >= 3) {\r\n                        var prevvertex = backvertices[backvertices.length - 1];\r\n                        for (var vertexindex = 0; vertexindex < backvertices.length; vertexindex++) {\r\n                            var vertex = backvertices[vertexindex];\r\n                            if (vertex.pos.distanceToSquared(prevvertex.pos) < EPS_SQUARED) {\r\n                                backvertices.splice(vertexindex, 1);\r\n                                vertexindex--;\r\n                            }\r\n                            prevvertex = vertex;\r\n                        }\r\n                    }\r\n                    if (frontvertices.length >= 3) {\r\n                        var prevvertex = frontvertices[frontvertices.length - 1];\r\n                        for (var vertexindex = 0; vertexindex < frontvertices.length; vertexindex++) {\r\n                            var vertex = frontvertices[vertexindex];\r\n                            if (vertex.pos.distanceToSquared(prevvertex.pos) < EPS_SQUARED) {\r\n                                frontvertices.splice(vertexindex, 1);\r\n                                vertexindex--;\r\n                            }\r\n                            prevvertex = vertex;\r\n                        }\r\n                    }\r\n                    if (frontvertices.length >= 3) {\r\n                        result.front = new CSG.Polygon(frontvertices, polygon.shared, polygon.plane);\r\n                    }\r\n                    if (backvertices.length >= 3) {\r\n                        result.back = new CSG.Polygon(backvertices, polygon.shared, polygon.plane);\r\n                    }\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n\r\n        // robust splitting of a line by a plane\r\n        // will work even if the line is parallel to the plane\r\n        splitLineBetweenPoints: function(p1, p2) {\r\n            var direction = p2.minus(p1);\r\n            var labda = (this.w - this.normal.dot(p1)) / this.normal.dot(direction);\r\n            if (isNaN(labda)) labda = 0;\r\n            if (labda > 1) labda = 1;\r\n            if (labda < 0) labda = 0;\r\n            var result = p1.plus(direction.times(labda));\r\n            return result;\r\n        },\r\n\r\n        // returns CSG.Vector3D\r\n        intersectWithLine: function(line3d) {\r\n            return line3d.intersectWithPlane(this);\r\n        },\r\n\r\n        // intersection of two planes\r\n        intersectWithPlane: function(plane) {\r\n            return CSG.Line3D.fromPlanes(this, plane);\r\n        },\r\n\r\n        signedDistanceToPoint: function(point) {\r\n            var t = this.normal.dot(point) - this.w;\r\n            return t;\r\n        },\r\n\r\n        toString: function() {\r\n            return \"[normal: \" + this.normal.toString() + \", w: \" + this.w + \"]\";\r\n        },\r\n\r\n        mirrorPoint: function(point3d) {\r\n            var distance = this.signedDistanceToPoint(point3d);\r\n            var mirrored = point3d.minus(this.normal.times(distance * 2.0));\r\n            return mirrored;\r\n        }\r\n    };\r\n\r\n\r\n    // # class Polygon\r\n    // Represents a convex polygon. The vertices used to initialize a polygon must\r\n    // be coplanar and form a convex loop. They do not have to be `CSG.Vertex`\r\n    // instances but they must behave similarly (duck typing can be used for\r\n    // customization).\r\n    //\r\n    // Each convex polygon has a `shared` property, which is shared between all\r\n    // polygons that are clones of each other or were split from the same polygon.\r\n    // This can be used to define per-polygon properties (such as surface color).\r\n    //\r\n    // The plane of the polygon is calculated from the vertex coordinates\r\n    // To avoid unnecessary recalculation, the plane can alternatively be\r\n    // passed as the third argument\r\n    CSG.Polygon = function(vertices, shared, plane) {\r\n        this.vertices = vertices;\r\n        if (!shared) shared = CSG.Polygon.defaultShared;\r\n        this.shared = shared;\r\n        //var numvertices = vertices.length;\r\n\r\n        if (arguments.length >= 3) {\r\n            this.plane = plane;\r\n        } else {\r\n            this.plane = CSG.Plane.fromVector3Ds(vertices[0].pos, vertices[1].pos, vertices[2].pos);\r\n        }\r\n\r\n        if (_CSGDEBUG) {\r\n            this.checkIfConvex();\r\n        }\r\n    };\r\n\r\n    // create from an untyped object with identical property names:\r\n    CSG.Polygon.fromObject = function(obj) {\r\n        var vertices = obj.vertices.map(function(v) {\r\n            return CSG.Vertex.fromObject(v);\r\n        });\r\n        var shared = CSG.Polygon.Shared.fromObject(obj.shared);\r\n        var plane = CSG.Plane.fromObject(obj.plane);\r\n        return new CSG.Polygon(vertices, shared, plane);\r\n    };\r\n\r\n    CSG.Polygon.prototype = {\r\n        // check whether the polygon is convex (it should be, otherwise we will get unexpected results)\r\n        checkIfConvex: function() {\r\n            if (!CSG.Polygon.verticesConvex(this.vertices, this.plane.normal)) {\r\n                CSG.Polygon.verticesConvex(this.vertices, this.plane.normal);\r\n                throw new Error(\"Not convex!\");\r\n            }\r\n        },\r\n\r\n        setColor: function(args) {\r\n            var newshared = CSG.Polygon.Shared.fromColor.apply(this, arguments);\r\n            this.shared = newshared;\r\n            return this;\r\n        },\r\n\r\n        getSignedVolume: function() {\r\n            var signedVolume = 0;\r\n            for (var i = 0; i < this.vertices.length - 2; i++) {\r\n                signedVolume += this.vertices[0].pos.dot(this.vertices[i+1].pos\r\n                    .cross(this.vertices[i+2].pos));\r\n            }\r\n            signedVolume /= 6;\r\n            return signedVolume;\r\n        },\r\n\r\n        // Note: could calculate vectors only once to speed up\r\n        getArea: function() {\r\n            var polygonArea = 0;\r\n            for (var i = 0; i < this.vertices.length - 2; i++) {\r\n                polygonArea += this.vertices[i+1].pos.minus(this.vertices[0].pos)\r\n                    .cross(this.vertices[i+2].pos.minus(this.vertices[i+1].pos)).length();\r\n            }\r\n            polygonArea /= 2;\r\n            return polygonArea;\r\n        },\r\n\r\n\r\n        // accepts array of features to calculate\r\n        // returns array of results\r\n        getTetraFeatures: function(features) {\r\n            var result = [];\r\n            features.forEach(function(feature) {\r\n                if (feature == 'volume') {\r\n                    result.push(this.getSignedVolume());\r\n                } else if (feature == 'area') {\r\n                    result.push(this.getArea());\r\n                }\r\n            }, this);\r\n            return result;\r\n        },\r\n\r\n        // Extrude a polygon into the direction offsetvector\r\n        // Returns a CSG object\r\n        extrude: function(offsetvector) {\r\n            var newpolygons = [];\r\n\r\n            var polygon1 = this;\r\n            var direction = polygon1.plane.normal.dot(offsetvector);\r\n            if (direction > 0) {\r\n                polygon1 = polygon1.flipped();\r\n            }\r\n            newpolygons.push(polygon1);\r\n            var polygon2 = polygon1.translate(offsetvector);\r\n            var numvertices = this.vertices.length;\r\n            for (var i = 0; i < numvertices; i++) {\r\n                var sidefacepoints = [];\r\n                var nexti = (i < (numvertices - 1)) ? i + 1 : 0;\r\n                sidefacepoints.push(polygon1.vertices[i].pos);\r\n                sidefacepoints.push(polygon2.vertices[i].pos);\r\n                sidefacepoints.push(polygon2.vertices[nexti].pos);\r\n                sidefacepoints.push(polygon1.vertices[nexti].pos);\r\n                var sidefacepolygon = CSG.Polygon.createFromPoints(sidefacepoints, this.shared);\r\n                newpolygons.push(sidefacepolygon);\r\n            }\r\n            polygon2 = polygon2.flipped();\r\n            newpolygons.push(polygon2);\r\n            return CSG.fromPolygons(newpolygons);\r\n        },\r\n\r\n        translate: function(offset) {\r\n            return this.transform(CSG.Matrix4x4.translation(offset));\r\n        },\r\n\r\n        // returns an array with a CSG.Vector3D (center point) and a radius\r\n        boundingSphere: function() {\r\n            if (!this.cachedBoundingSphere) {\r\n                var box = this.boundingBox();\r\n                var middle = box[0].plus(box[1]).times(0.5);\r\n                var radius3 = box[1].minus(middle);\r\n                var radius = radius3.length();\r\n                this.cachedBoundingSphere = [middle, radius];\r\n            }\r\n            return this.cachedBoundingSphere;\r\n        },\r\n\r\n        // returns an array of two CSG.Vector3Ds (minimum coordinates and maximum coordinates)\r\n        boundingBox: function() {\r\n            if (!this.cachedBoundingBox) {\r\n                var minpoint, maxpoint;\r\n                var vertices = this.vertices;\r\n                var numvertices = vertices.length;\r\n                if (numvertices === 0) {\r\n                    minpoint = new CSG.Vector3D(0, 0, 0);\r\n                } else {\r\n                    minpoint = vertices[0].pos;\r\n                }\r\n                maxpoint = minpoint;\r\n                for (var i = 1; i < numvertices; i++) {\r\n                    var point = vertices[i].pos;\r\n                    minpoint = minpoint.min(point);\r\n                    maxpoint = maxpoint.max(point);\r\n                }\r\n                this.cachedBoundingBox = [minpoint, maxpoint];\r\n            }\r\n            return this.cachedBoundingBox;\r\n        },\r\n\r\n        flipped: function() {\r\n            var newvertices = this.vertices.map(function(v) {\r\n                return v.flipped();\r\n            });\r\n            newvertices.reverse();\r\n            var newplane = this.plane.flipped();\r\n            return new CSG.Polygon(newvertices, this.shared, newplane);\r\n        },\r\n\r\n        // Affine transformation of polygon. Returns a new CSG.Polygon\r\n        transform: function(matrix4x4) {\r\n            var newvertices = this.vertices.map(function(v) {\r\n                return v.transform(matrix4x4);\r\n            });\r\n            var newplane = this.plane.transform(matrix4x4);\r\n            if (matrix4x4.isMirroring()) {\r\n                // need to reverse the vertex order\r\n                // in order to preserve the inside/outside orientation:\r\n                newvertices.reverse();\r\n            }\r\n            return new CSG.Polygon(newvertices, this.shared, newplane);\r\n        },\r\n\r\n        toString: function() {\r\n            var result = \"Polygon plane: \" + this.plane.toString() + \"\\n\";\r\n            this.vertices.map(function(vertex) {\r\n                result += \"  \" + vertex.toString() + \"\\n\";\r\n            });\r\n            return result;\r\n        },\r\n\r\n        // project the 3D polygon onto a plane\r\n        projectToOrthoNormalBasis: function(orthobasis) {\r\n            var points2d = this.vertices.map(function(vertex) {\r\n                return orthobasis.to2D(vertex.pos);\r\n            });\r\n            var result = CAG.fromPointsNoCheck(points2d);\r\n            var area = result.area();\r\n            if (Math.abs(area) < 1e-5) {\r\n                // the polygon was perpendicular to the orthnormal plane. The resulting 2D polygon would be degenerate\r\n                // return an empty area instead:\r\n                result = new CAG();\r\n            } else if (area < 0) {\r\n                result = result.flipped();\r\n            }\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Creates solid from slices (CSG.Polygon) by generating walls\r\n         * @param {Object} options Solid generating options\r\n         *  - numslices {Number} Number of slices to be generated\r\n         *  - callback(t, slice) {Function} Callback function generating slices.\r\n         *          arguments: t = [0..1], slice = [0..numslices - 1]\r\n         *          return: CSG.Polygon or null to skip\r\n         *  - loop {Boolean} no flats, only walls, it's used to generate solids like a tor\r\n         */\r\n        solidFromSlices: function(options) {\r\n            var polygons = [],\r\n                csg = null,\r\n                prev = null,\r\n                bottom = null,\r\n                top = null,\r\n                numSlices = 2,\r\n                bLoop = false,\r\n                fnCallback,\r\n                flipped = null;\r\n\r\n            if (options) {\r\n                bLoop = Boolean(options['loop']);\r\n\r\n                if (options.numslices)\r\n                    numSlices = options.numslices;\r\n\r\n                if (options.callback)\r\n                    fnCallback = options.callback;\r\n            }\r\n            if (!fnCallback) {\r\n                var square = new CSG.Polygon.createFromPoints([\r\n                    [0, 0, 0],\r\n                    [1, 0, 0],\r\n                    [1, 1, 0],\r\n                    [0, 1, 0]\r\n                ]);\r\n                fnCallback = function(t, slice) {\r\n                    return t == 0 || t == 1 ? square.translate([0, 0, t]) : null;\r\n                }\r\n            }\r\n            for (var i = 0, iMax = numSlices - 1; i <= iMax; i++) {\r\n                csg = fnCallback.call(this, i / iMax, i);\r\n                if (csg) {\r\n                    if (!(csg instanceof CSG.Polygon)) {\r\n                        throw new Error(\"CSG.Polygon.solidFromSlices callback error: CSG.Polygon expected\");\r\n                    }\r\n                    csg.checkIfConvex();\r\n\r\n                    if (prev) { //generate walls\r\n                        if (flipped === null) { //not generated yet\r\n                            flipped = prev.plane.signedDistanceToPoint(csg.vertices[0].pos) < 0;\r\n                        }\r\n                        this._addWalls(polygons, prev, csg, flipped);\r\n\r\n                    } else { //the first - will be a bottom\r\n                        bottom = csg;\r\n                    }\r\n                    prev = csg;\r\n                } //callback can return null to skip that slice\r\n            }\r\n            top = csg;\r\n\r\n            if (bLoop) {\r\n                var bSameTopBottom = bottom.vertices.length == top.vertices.length &&\r\n                    bottom.vertices.every(function(v, index) {\r\n                        return v.pos.equals(top.vertices[index].pos)\r\n                    });\r\n                //if top and bottom are not the same -\r\n                //generate walls between them\r\n                if (!bSameTopBottom) {\r\n                    this._addWalls(polygons, top, bottom, flipped);\r\n                } //else - already generated\r\n            } else {\r\n                //save top and bottom\r\n                //TODO: flip if necessary\r\n                polygons.unshift(flipped ? bottom : bottom.flipped());\r\n                polygons.push(flipped ? top.flipped() : top);\r\n            }\r\n            return CSG.fromPolygons(polygons);\r\n        },\r\n        /**\r\n         *\r\n         * @param walls Array of wall polygons\r\n         * @param bottom Bottom polygon\r\n         * @param top Top polygon\r\n         */\r\n        _addWalls: function(walls, bottom, top, bFlipped) {\r\n            var bottomPoints = bottom.vertices.slice(0), //make a copy\r\n                topPoints = top.vertices.slice(0), //make a copy\r\n                color = top.shared || null;\r\n\r\n            //check if bottom perimeter is closed\r\n            if (!bottomPoints[0].pos.equals(bottomPoints[bottomPoints.length - 1].pos)) {\r\n                bottomPoints.push(bottomPoints[0]);\r\n            }\r\n\r\n            //check if top perimeter is closed\r\n            if (!topPoints[0].pos.equals(topPoints[topPoints.length - 1].pos)) {\r\n                topPoints.push(topPoints[0]);\r\n            }\r\n            if (bFlipped) {\r\n                bottomPoints = bottomPoints.reverse();\r\n                topPoints = topPoints.reverse();\r\n            }\r\n\r\n            var iTopLen = topPoints.length - 1,\r\n                iBotLen = bottomPoints.length - 1,\r\n                iExtra = iTopLen - iBotLen, //how many extra triangles we need\r\n                bMoreTops = iExtra > 0,\r\n                bMoreBottoms = iExtra < 0;\r\n\r\n            var aMin = []; //indexes to start extra triangles (polygon with minimal square)\r\n            //init - we need exactly /iExtra/ small triangles\r\n            for (var i = Math.abs(iExtra); i > 0; i--) {\r\n                aMin.push({\r\n                    len: Infinity,\r\n                    index: -1\r\n                });\r\n            }\r\n\r\n            var len;\r\n            if (bMoreBottoms) {\r\n                for (var i = 0; i < iBotLen; i++) {\r\n                    len = bottomPoints[i].pos.distanceToSquared(bottomPoints[i + 1].pos);\r\n                    //find the element to replace\r\n                    for (var j = aMin.length - 1; j >= 0; j--) {\r\n                        if (aMin[j].len > len) {\r\n                            aMin[j].len = len;\r\n                            aMin.index = j;\r\n                            break;\r\n                        }\r\n                    } //for\r\n                }\r\n            } else if (bMoreTops) {\r\n                for (var i = 0; i < iTopLen; i++) {\r\n                    len = topPoints[i].pos.distanceToSquared(topPoints[i + 1].pos);\r\n                    //find the element to replace\r\n                    for (var j = aMin.length - 1; j >= 0; j--) {\r\n                        if (aMin[j].len > len) {\r\n                            aMin[j].len = len;\r\n                            aMin.index = j;\r\n                            break;\r\n                        }\r\n                    } //for\r\n                }\r\n            } //if\r\n            //sort by index\r\n            aMin.sort(fnSortByIndex);\r\n            var getTriangle = function addWallsPutTriangle(pointA, pointB, pointC, color) {\r\n                return new CSG.Polygon([pointA, pointB, pointC], color);\r\n                //return bFlipped ? triangle.flipped() : triangle;\r\n            };\r\n\r\n            var bpoint = bottomPoints[0],\r\n                tpoint = topPoints[0],\r\n                secondPoint,\r\n                nBotFacet, nTopFacet; //length of triangle facet side\r\n            for (var iB = 0, iT = 0, iMax = iTopLen + iBotLen; iB + iT < iMax;) {\r\n                if (aMin.length) {\r\n                    if (bMoreTops && iT == aMin[0].index) { //one vertex is on the bottom, 2 - on the top\r\n                        secondPoint = topPoints[++iT];\r\n                        //console.log('<<< extra top: ' + secondPoint + ', ' + tpoint + ', bottom: ' + bpoint);\r\n                        walls.push(getTriangle(\r\n                            secondPoint, tpoint, bpoint, color\r\n                        ));\r\n                        tpoint = secondPoint;\r\n                        aMin.shift();\r\n                        continue;\r\n                    } else if (bMoreBottoms && iB == aMin[0].index) {\r\n                        secondPoint = bottomPoints[++iB];\r\n                        walls.push(getTriangle(\r\n                            tpoint, bpoint, secondPoint, color\r\n                        ));\r\n                        bpoint = secondPoint;\r\n                        aMin.shift();\r\n                        continue;\r\n                    }\r\n                }\r\n                //choose the shortest path\r\n                if (iB < iBotLen) { //one vertex is on the top, 2 - on the bottom\r\n                    nBotFacet = tpoint.pos.distanceToSquared(bottomPoints[iB + 1].pos);\r\n                } else {\r\n                    nBotFacet = Infinity;\r\n                }\r\n                if (iT < iTopLen) { //one vertex is on the bottom, 2 - on the top\r\n                    nTopFacet = bpoint.pos.distanceToSquared(topPoints[iT + 1].pos);\r\n                } else {\r\n                    nTopFacet = Infinity;\r\n                }\r\n                if (nBotFacet <= nTopFacet) {\r\n                    secondPoint = bottomPoints[++iB];\r\n                    walls.push(getTriangle(\r\n                        tpoint, bpoint, secondPoint, color\r\n                    ));\r\n                    bpoint = secondPoint;\r\n                } else if (iT < iTopLen) { //nTopFacet < Infinity\r\n                    secondPoint = topPoints[++iT];\r\n                    //console.log('<<< top: ' + secondPoint + ', ' + tpoint + ', bottom: ' + bpoint);\r\n                    walls.push(getTriangle(\r\n                        secondPoint, tpoint, bpoint, color\r\n                    ));\r\n                    tpoint = secondPoint;\r\n                };\r\n            }\r\n            return walls;\r\n        }\r\n    };\r\n\r\n    CSG.Polygon.verticesConvex = function(vertices, planenormal) {\r\n        var numvertices = vertices.length;\r\n        if (numvertices > 2) {\r\n            var prevprevpos = vertices[numvertices - 2].pos;\r\n            var prevpos = vertices[numvertices - 1].pos;\r\n            for (var i = 0; i < numvertices; i++) {\r\n                var pos = vertices[i].pos;\r\n                if (!CSG.Polygon.isConvexPoint(prevprevpos, prevpos, pos, planenormal)) {\r\n                    return false;\r\n                }\r\n                prevprevpos = prevpos;\r\n                prevpos = pos;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n\r\n    // Create a polygon from the given points\r\n    CSG.Polygon.createFromPoints = function(points, shared, plane) {\r\n        var normal;\r\n        if (arguments.length < 3) {\r\n            // initially set a dummy vertex normal:\r\n            normal = new CSG.Vector3D(0, 0, 0);\r\n        } else {\r\n            normal = plane.normal;\r\n        }\r\n        var vertices = [];\r\n        points.map(function(p) {\r\n            var vec = new CSG.Vector3D(p);\r\n            var vertex = new CSG.Vertex(vec);\r\n            vertices.push(vertex);\r\n        });\r\n        var polygon;\r\n        if (arguments.length < 3) {\r\n            polygon = new CSG.Polygon(vertices, shared);\r\n        } else {\r\n            polygon = new CSG.Polygon(vertices, shared, plane);\r\n        }\r\n        return polygon;\r\n    };\r\n\r\n    // calculate whether three points form a convex corner\r\n    //  prevpoint, point, nextpoint: the 3 coordinates (CSG.Vector3D instances)\r\n    //  normal: the normal vector of the plane\r\n    CSG.Polygon.isConvexPoint = function(prevpoint, point, nextpoint, normal) {\r\n        var crossproduct = point.minus(prevpoint).cross(nextpoint.minus(point));\r\n        var crossdotnormal = crossproduct.dot(normal);\r\n        return (crossdotnormal >= 0);\r\n    };\r\n\r\n    CSG.Polygon.isStrictlyConvexPoint = function(prevpoint, point, nextpoint, normal) {\r\n        var crossproduct = point.minus(prevpoint).cross(nextpoint.minus(point));\r\n        var crossdotnormal = crossproduct.dot(normal);\r\n        return (crossdotnormal >= 1e-5);\r\n    };\r\n\r\n    // # class CSG.Polygon.Shared\r\n    // Holds the shared properties for each polygon (currently only color)\r\n    // Constructor expects a 4 element array [r,g,b,a], values from 0 to 1, or null\r\n    CSG.Polygon.Shared = function(color) {\r\n        if(color !== null)\r\n        {\r\n            if (color.length != 4) {\r\n                throw new Error(\"Expecting 4 element array\");\r\n            }\r\n        }\r\n        this.color = color;\r\n    };\r\n\r\n    CSG.Polygon.Shared.fromObject = function(obj) {\r\n        return new CSG.Polygon.Shared(obj.color);\r\n    };\r\n\r\n    // Create CSG.Polygon.Shared from a color, can be called as follows:\r\n    // var s = CSG.Polygon.Shared.fromColor(r,g,b [,a])\r\n    // var s = CSG.Polygon.Shared.fromColor([r,g,b [,a]])\r\n    CSG.Polygon.Shared.fromColor = function(args) {\r\n        var color;\r\n        if(arguments.length == 1) {\r\n            color = arguments[0].slice(); // make deep copy\r\n        }\r\n        else {\r\n            color = [];\r\n            for(var i=0; i < arguments.length; i++) {\r\n                color.push(arguments[i]);\r\n            }\r\n        }\r\n        if(color.length == 3) {\r\n            color.push(1);\r\n        } else if(color.length != 4) {\r\n            throw new Error(\"setColor expects either an array with 3 or 4 elements, or 3 or 4 parameters.\");\r\n        }\r\n        return new CSG.Polygon.Shared(color);\r\n    };\r\n\r\n    CSG.Polygon.Shared.prototype = {\r\n        getTag: function() {\r\n            var result = this.tag;\r\n            if (!result) {\r\n                result = CSG.getTag();\r\n                this.tag = result;\r\n            }\r\n            return result;\r\n        },\r\n        // get a string uniquely identifying this object\r\n        getHash: function() {\r\n            if (!this.color) return \"null\";\r\n            return this.color.join(\"/\");\r\n        }\r\n    };\r\n\r\n    CSG.Polygon.defaultShared = new CSG.Polygon.Shared(null);\r\n\r\n    // # class PolygonTreeNode\r\n    // This class manages hierarchical splits of polygons\r\n    // At the top is a root node which doesn hold a polygon, only child PolygonTreeNodes\r\n    // Below that are zero or more 'top' nodes; each holds a polygon. The polygons can be in different planes\r\n    // splitByPlane() splits a node by a plane. If the plane intersects the polygon, two new child nodes\r\n    // are created holding the splitted polygon.\r\n    // getPolygons() retrieves the polygon from the tree. If for PolygonTreeNode the polygon is split but\r\n    // the two split parts (child nodes) are still intact, then the unsplit polygon is returned.\r\n    // This ensures that we can safely split a polygon into many fragments. If the fragments are untouched,\r\n    //  getPolygons() will return the original unsplit polygon instead of the fragments.\r\n    // remove() removes a polygon from the tree. Once a polygon is removed, the parent polygons are invalidated\r\n    // since they are no longer intact.\r\n    // constructor creates the root node:\r\n    CSG.PolygonTreeNode = function() {\r\n        this.parent = null;\r\n        this.children = [];\r\n        this.polygon = null;\r\n        this.removed = false;\r\n    };\r\n\r\n    CSG.PolygonTreeNode.prototype = {\r\n        // fill the tree with polygons. Should be called on the root node only; child nodes must\r\n        // always be a derivate (split) of the parent node.\r\n        addPolygons: function(polygons) {\r\n            if (!this.isRootNode())\r\n            // new polygons can only be added to root node; children can only be splitted polygons\r\n                throw new Error(\"Assertion failed\");\r\n            var _this = this;\r\n            polygons.map(function(polygon) {\r\n                _this.addChild(polygon);\r\n            });\r\n        },\r\n\r\n        // remove a node\r\n        // - the siblings become toplevel nodes\r\n        // - the parent is removed recursively\r\n        remove: function() {\r\n            if (!this.removed) {\r\n                this.removed = true;\r\n\r\n                if (_CSGDEBUG) {\r\n                    if (this.isRootNode()) throw new Error(\"Assertion failed\"); // can't remove root node\r\n                    if (this.children.length) throw new Error(\"Assertion failed\"); // we shouldn't remove nodes with children\r\n                }\r\n\r\n                // remove ourselves from the parent's children list:\r\n                var parentschildren = this.parent.children;\r\n                var i = parentschildren.indexOf(this);\r\n                if (i < 0) throw new Error(\"Assertion failed\");\r\n                parentschildren.splice(i, 1);\r\n\r\n                // invalidate the parent's polygon, and of all parents above it:\r\n                this.parent.recursivelyInvalidatePolygon();\r\n            }\r\n        },\r\n\r\n        isRemoved: function() {\r\n            return this.removed;\r\n        },\r\n\r\n        isRootNode: function() {\r\n            return !this.parent;\r\n        },\r\n\r\n        // invert all polygons in the tree. Call on the root node\r\n        invert: function() {\r\n            if (!this.isRootNode()) throw new Error(\"Assertion failed\"); // can only call this on the root node\r\n            this.invertSub();\r\n        },\r\n\r\n        getPolygon: function() {\r\n            if (!this.polygon) throw new Error(\"Assertion failed\"); // doesn't have a polygon, which means that it has been broken down\r\n            return this.polygon;\r\n        },\r\n\r\n        getPolygons: function(result) {\r\n            var children = [this];\r\n            var queue = [children];\r\n            var i, j, l, node;\r\n            for (i = 0; i < queue.length; ++i ) { // queue size can change in loop, don't cache length\r\n                children = queue[i];\r\n                for (j = 0, l = children.length; j < l; j++) { // ok to cache length\r\n                    node = children[j];\r\n                    if (node.polygon) {\r\n                        // the polygon hasn't been broken yet. We can ignore the children and return our polygon:\r\n                        result.push(node.polygon);\r\n                    } else {\r\n                        // our polygon has been split up and broken, so gather all subpolygons from the children\r\n                        queue.push(node.children);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        // split the node by a plane; add the resulting nodes to the frontnodes and backnodes array\r\n        // If the plane doesn't intersect the polygon, the 'this' object is added to one of the arrays\r\n        // If the plane does intersect the polygon, two new child nodes are created for the front and back fragments,\r\n        //  and added to both arrays.\r\n        splitByPlane: function(plane, coplanarfrontnodes, coplanarbacknodes, frontnodes, backnodes) {\r\n            if (this.children.length) {\r\n                var queue = [this.children], i, j, l, node, nodes;\r\n                for (i = 0; i < queue.length; i++) { // queue.length can increase, do not cache\r\n                    nodes = queue[i];\r\n                    for (j = 0, l = nodes.length; j < l; j++) { // ok to cache length\r\n                        node = nodes[j];\r\n                        if (node.children.length) {\r\n                            queue.push(node.children);\r\n                        } else {\r\n                            // no children. Split the polygon:\r\n                            node._splitByPlane(plane, coplanarfrontnodes, coplanarbacknodes, frontnodes, backnodes);\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                this._splitByPlane(plane, coplanarfrontnodes, coplanarbacknodes, frontnodes, backnodes);\r\n            }\r\n        },\r\n\r\n        // only to be called for nodes with no children\r\n        _splitByPlane: function (plane, coplanarfrontnodes, coplanarbacknodes, frontnodes, backnodes) {\r\n            var polygon = this.polygon;\r\n            if (polygon) {\r\n                var bound = polygon.boundingSphere();\r\n                var sphereradius = bound[1] + 1e-4;\r\n                var planenormal = plane.normal;\r\n                var spherecenter = bound[0];\r\n                var d = planenormal.dot(spherecenter) - plane.w;\r\n                if (d > sphereradius) {\r\n                    frontnodes.push(this);\r\n                } else if (d < -sphereradius) {\r\n                    backnodes.push(this);\r\n                } else {\r\n                    var splitresult = plane.splitPolygon(polygon);\r\n                    switch (splitresult.type) {\r\n                        case 0:\r\n                            // coplanar front:\r\n                            coplanarfrontnodes.push(this);\r\n                            break;\r\n\r\n                        case 1:\r\n                            // coplanar back:\r\n                            coplanarbacknodes.push(this);\r\n                            break;\r\n\r\n                        case 2:\r\n                            // front:\r\n                            frontnodes.push(this);\r\n                            break;\r\n\r\n                        case 3:\r\n                            // back:\r\n                            backnodes.push(this);\r\n                            break;\r\n\r\n                        case 4:\r\n                            // spanning:\r\n                            if (splitresult.front) {\r\n                                var frontnode = this.addChild(splitresult.front);\r\n                                frontnodes.push(frontnode);\r\n                            }\r\n                            if (splitresult.back) {\r\n                                var backnode = this.addChild(splitresult.back);\r\n                                backnodes.push(backnode);\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n\r\n        // PRIVATE methods from here:\r\n        // add child to a node\r\n        // this should be called whenever the polygon is split\r\n        // a child should be created for every fragment of the split polygon\r\n        // returns the newly created child\r\n        addChild: function(polygon) {\r\n            var newchild = new CSG.PolygonTreeNode();\r\n            newchild.parent = this;\r\n            newchild.polygon = polygon;\r\n            this.children.push(newchild);\r\n            return newchild;\r\n        },\r\n\r\n        invertSub: function() {\r\n            var children = [this];\r\n            var queue = [children];\r\n            var i, j, l, node;\r\n            for (i = 0; i < queue.length; i++) {\r\n                children = queue[i];\r\n                for (j = 0, l = children.length; j < l; j++) {\r\n                    node = children[j];\r\n                    if (node.polygon) {\r\n                        node.polygon = node.polygon.flipped();\r\n                    }\r\n                    queue.push(node.children);\r\n                }\r\n            }\r\n        },\r\n\r\n        recursivelyInvalidatePolygon: function() {\r\n            var node = this;\r\n            while (node.polygon) {\r\n                node.polygon = null;\r\n                if (node.parent) {\r\n                    node = node.parent;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n\r\n    // # class Tree\r\n    // This is the root of a BSP tree\r\n    // We are using this separate class for the root of the tree, to hold the PolygonTreeNode root\r\n    // The actual tree is kept in this.rootnode\r\n    CSG.Tree = function(polygons) {\r\n        this.polygonTree = new CSG.PolygonTreeNode();\r\n        this.rootnode = new CSG.Node(null);\r\n        if (polygons) this.addPolygons(polygons);\r\n    };\r\n\r\n    CSG.Tree.prototype = {\r\n        invert: function() {\r\n            this.polygonTree.invert();\r\n            this.rootnode.invert();\r\n        },\r\n\r\n        // Remove all polygons in this BSP tree that are inside the other BSP tree\r\n        // `tree`.\r\n        clipTo: function(tree, alsoRemovecoplanarFront) {\r\n            alsoRemovecoplanarFront = alsoRemovecoplanarFront ? true : false;\r\n            this.rootnode.clipTo(tree, alsoRemovecoplanarFront);\r\n        },\r\n\r\n        allPolygons: function() {\r\n            var result = [];\r\n            this.polygonTree.getPolygons(result);\r\n            return result;\r\n        },\r\n\r\n        addPolygons: function(polygons) {\r\n            var _this = this;\r\n            var polygontreenodes = polygons.map(function(p) {\r\n                return _this.polygonTree.addChild(p);\r\n            });\r\n            this.rootnode.addPolygonTreeNodes(polygontreenodes);\r\n        }\r\n    };\r\n\r\n    // # class Node\r\n    // Holds a node in a BSP tree. A BSP tree is built from a collection of polygons\r\n    // by picking a polygon to split along.\r\n    // Polygons are not stored directly in the tree, but in PolygonTreeNodes, stored in\r\n    // this.polygontreenodes. Those PolygonTreeNodes are children of the owning\r\n    // CSG.Tree.polygonTree\r\n    // This is not a leafy BSP tree since there is\r\n    // no distinction between internal and leaf nodes.\r\n    CSG.Node = function(parent) {\r\n        this.plane = null;\r\n        this.front = null;\r\n        this.back = null;\r\n        this.polygontreenodes = [];\r\n        this.parent = parent;\r\n    };\r\n\r\n    CSG.Node.prototype = {\r\n        // Convert solid space to empty space and empty space to solid space.\r\n        invert: function() {\r\n            var queue = [this];\r\n            var i, node;\r\n            for (var i = 0; i < queue.length; i++) {\r\n                node = queue[i];\r\n                if(node.plane) node.plane = node.plane.flipped();\r\n                if(node.front) queue.push(node.front);\r\n                if(node.back) queue.push(node.back);\r\n                var temp = node.front;\r\n                node.front = node.back;\r\n                node.back = temp;\r\n            }\r\n        },\r\n\r\n        // clip polygontreenodes to our plane\r\n        // calls remove() for all clipped PolygonTreeNodes\r\n        clipPolygons: function(polygontreenodes, alsoRemovecoplanarFront) {\r\n            var args = {'node': this, 'polygontreenodes': polygontreenodes }\r\n            var node;\r\n            var stack = [];\r\n\r\n            do {\r\n                node = args.node;\r\n                polygontreenodes = args.polygontreenodes;\r\n\r\n                // begin \"function\"\r\n                if(node.plane) {\r\n                    var backnodes = [];\r\n                    var frontnodes = [];\r\n                    var coplanarfrontnodes = alsoRemovecoplanarFront ? backnodes : frontnodes;\r\n                    var plane = node.plane;\r\n                    var numpolygontreenodes = polygontreenodes.length;\r\n                    for(i = 0; i < numpolygontreenodes; i++) {\r\n                        var node1 = polygontreenodes[i];\r\n                        if(!node1.isRemoved()) {\r\n                            node1.splitByPlane(plane, coplanarfrontnodes, backnodes, frontnodes, backnodes);\r\n                        }\r\n                    }\r\n\r\n                    if(node.front && (frontnodes.length > 0)) {\r\n                        stack.push({'node': node.front, 'polygontreenodes': frontnodes});\r\n                    }\r\n                    var numbacknodes = backnodes.length;\r\n                    if (node.back && (numbacknodes > 0)) {\r\n                        stack.push({'node': node.back, 'polygontreenodes': backnodes});\r\n                    } else {\r\n                        // there's nothing behind this plane. Delete the nodes behind this plane:\r\n                        for (var i = 0; i < numbacknodes; i++) {\r\n                            backnodes[i].remove();\r\n                        }\r\n                    }\r\n                }\r\n                args = stack.pop();\r\n            } while (typeof(args) !== 'undefined');\r\n        },\r\n\r\n        // Remove all polygons in this BSP tree that are inside the other BSP tree\r\n        // `tree`.\r\n        clipTo: function(tree, alsoRemovecoplanarFront) {\r\n            var node = this, stack = [];\r\n            do {\r\n                if(node.polygontreenodes.length > 0) {\r\n                    tree.rootnode.clipPolygons(node.polygontreenodes, alsoRemovecoplanarFront);\r\n                }\r\n                if(node.front) stack.push(node.front);\r\n                if(node.back) stack.push(node.back);\r\n                node = stack.pop();\r\n            } while(typeof(node) !== 'undefined');\r\n        },\r\n\r\n        addPolygonTreeNodes: function(polygontreenodes) {\r\n            var args = {'node': this, 'polygontreenodes': polygontreenodes };\r\n            var node;\r\n            var stack = [];\r\n            do {\r\n                node = args.node;\r\n                polygontreenodes = args.polygontreenodes;\r\n\r\n                if (polygontreenodes.length === 0) {\r\n                    args = stack.pop();\r\n                    continue;\r\n                }\r\n                var _this = node;\r\n                if (!node.plane) {\r\n                    var bestplane = polygontreenodes[0].getPolygon().plane;\r\n                    node.plane = bestplane;\r\n                }\r\n                var frontnodes = [];\r\n                var backnodes = [];\r\n\r\n                for (var i = 0, n = polygontreenodes.length ; i < n; ++i) {\r\n                    polygontreenodes[i].splitByPlane(_this.plane, _this.polygontreenodes, backnodes, frontnodes, backnodes);\r\n                }\r\n\r\n                if (frontnodes.length > 0) {\r\n                    if (!node.front) node.front = new CSG.Node(node);\r\n                    stack.push({'node': node.front, 'polygontreenodes': frontnodes});\r\n                }\r\n                if (backnodes.length > 0) {\r\n                    if (!node.back) node.back = new CSG.Node(node);\r\n                    stack.push({'node': node.back, 'polygontreenodes': backnodes});\r\n                }\r\n\r\n                args = stack.pop();\r\n            } while (typeof(args) !== 'undefined');\r\n        },\r\n\r\n        getParentPlaneNormals: function(normals, maxdepth) {\r\n            if (maxdepth > 0) {\r\n                if (this.parent) {\r\n                    normals.push(this.parent.plane.normal);\r\n                    this.parent.getParentPlaneNormals(normals, maxdepth - 1);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    //////////\r\n    // # class Matrix4x4:\r\n    // Represents a 4x4 matrix. Elements are specified in row order\r\n    CSG.Matrix4x4 = function(elements) {\r\n        if (arguments.length >= 1) {\r\n            this.elements = elements;\r\n        } else {\r\n            // if no arguments passed: create unity matrix\r\n            this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n        }\r\n    };\r\n\r\n    CSG.Matrix4x4.prototype = {\r\n        plus: function(m) {\r\n            var r = [];\r\n            for (var i = 0; i < 16; i++) {\r\n                r[i] = this.elements[i] + m.elements[i];\r\n            }\r\n            return new CSG.Matrix4x4(r);\r\n        },\r\n\r\n        minus: function(m) {\r\n            var r = [];\r\n            for (var i = 0; i < 16; i++) {\r\n                r[i] = this.elements[i] - m.elements[i];\r\n            }\r\n            return new CSG.Matrix4x4(r);\r\n        },\r\n\r\n        // right multiply by another 4x4 matrix:\r\n        multiply: function(m) {\r\n            // cache elements in local variables, for speedup:\r\n            var this0 = this.elements[0];\r\n            var this1 = this.elements[1];\r\n            var this2 = this.elements[2];\r\n            var this3 = this.elements[3];\r\n            var this4 = this.elements[4];\r\n            var this5 = this.elements[5];\r\n            var this6 = this.elements[6];\r\n            var this7 = this.elements[7];\r\n            var this8 = this.elements[8];\r\n            var this9 = this.elements[9];\r\n            var this10 = this.elements[10];\r\n            var this11 = this.elements[11];\r\n            var this12 = this.elements[12];\r\n            var this13 = this.elements[13];\r\n            var this14 = this.elements[14];\r\n            var this15 = this.elements[15];\r\n            var m0 = m.elements[0];\r\n            var m1 = m.elements[1];\r\n            var m2 = m.elements[2];\r\n            var m3 = m.elements[3];\r\n            var m4 = m.elements[4];\r\n            var m5 = m.elements[5];\r\n            var m6 = m.elements[6];\r\n            var m7 = m.elements[7];\r\n            var m8 = m.elements[8];\r\n            var m9 = m.elements[9];\r\n            var m10 = m.elements[10];\r\n            var m11 = m.elements[11];\r\n            var m12 = m.elements[12];\r\n            var m13 = m.elements[13];\r\n            var m14 = m.elements[14];\r\n            var m15 = m.elements[15];\r\n\r\n            var result = [];\r\n            result[0] = this0 * m0 + this1 * m4 + this2 * m8 + this3 * m12;\r\n            result[1] = this0 * m1 + this1 * m5 + this2 * m9 + this3 * m13;\r\n            result[2] = this0 * m2 + this1 * m6 + this2 * m10 + this3 * m14;\r\n            result[3] = this0 * m3 + this1 * m7 + this2 * m11 + this3 * m15;\r\n            result[4] = this4 * m0 + this5 * m4 + this6 * m8 + this7 * m12;\r\n            result[5] = this4 * m1 + this5 * m5 + this6 * m9 + this7 * m13;\r\n            result[6] = this4 * m2 + this5 * m6 + this6 * m10 + this7 * m14;\r\n            result[7] = this4 * m3 + this5 * m7 + this6 * m11 + this7 * m15;\r\n            result[8] = this8 * m0 + this9 * m4 + this10 * m8 + this11 * m12;\r\n            result[9] = this8 * m1 + this9 * m5 + this10 * m9 + this11 * m13;\r\n            result[10] = this8 * m2 + this9 * m6 + this10 * m10 + this11 * m14;\r\n            result[11] = this8 * m3 + this9 * m7 + this10 * m11 + this11 * m15;\r\n            result[12] = this12 * m0 + this13 * m4 + this14 * m8 + this15 * m12;\r\n            result[13] = this12 * m1 + this13 * m5 + this14 * m9 + this15 * m13;\r\n            result[14] = this12 * m2 + this13 * m6 + this14 * m10 + this15 * m14;\r\n            result[15] = this12 * m3 + this13 * m7 + this14 * m11 + this15 * m15;\r\n            return new CSG.Matrix4x4(result);\r\n        },\r\n\r\n        clone: function() {\r\n            var elements = this.elements.map(function(p) {\r\n                return p;\r\n            });\r\n            return new CSG.Matrix4x4(elements);\r\n        },\r\n\r\n        // Right multiply the matrix by a CSG.Vector3D (interpreted as 3 row, 1 column)\r\n        // (result = M*v)\r\n        // Fourth element is taken as 1\r\n        rightMultiply1x3Vector: function(v) {\r\n            var v0 = v._x;\r\n            var v1 = v._y;\r\n            var v2 = v._z;\r\n            var v3 = 1;\r\n            var x = v0 * this.elements[0] + v1 * this.elements[1] + v2 * this.elements[2] + v3 * this.elements[3];\r\n            var y = v0 * this.elements[4] + v1 * this.elements[5] + v2 * this.elements[6] + v3 * this.elements[7];\r\n            var z = v0 * this.elements[8] + v1 * this.elements[9] + v2 * this.elements[10] + v3 * this.elements[11];\r\n            var w = v0 * this.elements[12] + v1 * this.elements[13] + v2 * this.elements[14] + v3 * this.elements[15];\r\n            // scale such that fourth element becomes 1:\r\n            if (w != 1) {\r\n                var invw = 1.0 / w;\r\n                x *= invw;\r\n                y *= invw;\r\n                z *= invw;\r\n            }\r\n            return new CSG.Vector3D(x, y, z);\r\n        },\r\n\r\n        // Multiply a CSG.Vector3D (interpreted as 3 column, 1 row) by this matrix\r\n        // (result = v*M)\r\n        // Fourth element is taken as 1\r\n        leftMultiply1x3Vector: function(v) {\r\n            var v0 = v._x;\r\n            var v1 = v._y;\r\n            var v2 = v._z;\r\n            var v3 = 1;\r\n            var x = v0 * this.elements[0] + v1 * this.elements[4] + v2 * this.elements[8] + v3 * this.elements[12];\r\n            var y = v0 * this.elements[1] + v1 * this.elements[5] + v2 * this.elements[9] + v3 * this.elements[13];\r\n            var z = v0 * this.elements[2] + v1 * this.elements[6] + v2 * this.elements[10] + v3 * this.elements[14];\r\n            var w = v0 * this.elements[3] + v1 * this.elements[7] + v2 * this.elements[11] + v3 * this.elements[15];\r\n            // scale such that fourth element becomes 1:\r\n            if (w != 1) {\r\n                var invw = 1.0 / w;\r\n                x *= invw;\r\n                y *= invw;\r\n                z *= invw;\r\n            }\r\n            return new CSG.Vector3D(x, y, z);\r\n        },\r\n\r\n        // Right multiply the matrix by a CSG.Vector2D (interpreted as 2 row, 1 column)\r\n        // (result = M*v)\r\n        // Fourth element is taken as 1\r\n        rightMultiply1x2Vector: function(v) {\r\n            var v0 = v.x;\r\n            var v1 = v.y;\r\n            var v2 = 0;\r\n            var v3 = 1;\r\n            var x = v0 * this.elements[0] + v1 * this.elements[1] + v2 * this.elements[2] + v3 * this.elements[3];\r\n            var y = v0 * this.elements[4] + v1 * this.elements[5] + v2 * this.elements[6] + v3 * this.elements[7];\r\n            var z = v0 * this.elements[8] + v1 * this.elements[9] + v2 * this.elements[10] + v3 * this.elements[11];\r\n            var w = v0 * this.elements[12] + v1 * this.elements[13] + v2 * this.elements[14] + v3 * this.elements[15];\r\n            // scale such that fourth element becomes 1:\r\n            if (w != 1) {\r\n                var invw = 1.0 / w;\r\n                x *= invw;\r\n                y *= invw;\r\n                z *= invw;\r\n            }\r\n            return new CSG.Vector2D(x, y);\r\n        },\r\n\r\n        // Multiply a CSG.Vector2D (interpreted as 2 column, 1 row) by this matrix\r\n        // (result = v*M)\r\n        // Fourth element is taken as 1\r\n        leftMultiply1x2Vector: function(v) {\r\n            var v0 = v.x;\r\n            var v1 = v.y;\r\n            var v2 = 0;\r\n            var v3 = 1;\r\n            var x = v0 * this.elements[0] + v1 * this.elements[4] + v2 * this.elements[8] + v3 * this.elements[12];\r\n            var y = v0 * this.elements[1] + v1 * this.elements[5] + v2 * this.elements[9] + v3 * this.elements[13];\r\n            var z = v0 * this.elements[2] + v1 * this.elements[6] + v2 * this.elements[10] + v3 * this.elements[14];\r\n            var w = v0 * this.elements[3] + v1 * this.elements[7] + v2 * this.elements[11] + v3 * this.elements[15];\r\n            // scale such that fourth element becomes 1:\r\n            if (w != 1) {\r\n                var invw = 1.0 / w;\r\n                x *= invw;\r\n                y *= invw;\r\n                z *= invw;\r\n            }\r\n            return new CSG.Vector2D(x, y);\r\n        },\r\n\r\n        // determine whether this matrix is a mirroring transformation\r\n        isMirroring: function() {\r\n            var u = new CSG.Vector3D(this.elements[0], this.elements[4], this.elements[8]);\r\n            var v = new CSG.Vector3D(this.elements[1], this.elements[5], this.elements[9]);\r\n            var w = new CSG.Vector3D(this.elements[2], this.elements[6], this.elements[10]);\r\n\r\n            // for a true orthogonal, non-mirrored base, u.cross(v) == w\r\n            // If they have an opposite direction then we are mirroring\r\n            var mirrorvalue = u.cross(v).dot(w);\r\n            var ismirror = (mirrorvalue < 0);\r\n            return ismirror;\r\n        }\r\n    };\r\n\r\n    // return the unity matrix\r\n    CSG.Matrix4x4.unity = function() {\r\n        return new CSG.Matrix4x4();\r\n    };\r\n\r\n    // Create a rotation matrix for rotating around the x axis\r\n    CSG.Matrix4x4.rotationX = function(degrees) {\r\n        var radians = degrees * Math.PI * (1.0 / 180.0);\r\n        var cos = Math.cos(radians);\r\n        var sin = Math.sin(radians);\r\n        var els = [\r\n            1, 0, 0, 0, 0, cos, sin, 0, 0, -sin, cos, 0, 0, 0, 0, 1\r\n        ];\r\n        return new CSG.Matrix4x4(els);\r\n    };\r\n\r\n    // Create a rotation matrix for rotating around the y axis\r\n    CSG.Matrix4x4.rotationY = function(degrees) {\r\n        var radians = degrees * Math.PI * (1.0 / 180.0);\r\n        var cos = Math.cos(radians);\r\n        var sin = Math.sin(radians);\r\n        var els = [\r\n            cos, 0, -sin, 0, 0, 1, 0, 0, sin, 0, cos, 0, 0, 0, 0, 1\r\n        ];\r\n        return new CSG.Matrix4x4(els);\r\n    };\r\n\r\n    // Create a rotation matrix for rotating around the z axis\r\n    CSG.Matrix4x4.rotationZ = function(degrees) {\r\n        var radians = degrees * Math.PI * (1.0 / 180.0);\r\n        var cos = Math.cos(radians);\r\n        var sin = Math.sin(radians);\r\n        var els = [\r\n            cos, sin, 0, 0, -sin, cos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1\r\n        ];\r\n        return new CSG.Matrix4x4(els);\r\n    };\r\n\r\n    // Matrix for rotation about arbitrary point and axis\r\n    CSG.Matrix4x4.rotation = function(rotationCenter, rotationAxis, degrees) {\r\n        rotationCenter = new CSG.Vector3D(rotationCenter);\r\n        rotationAxis = new CSG.Vector3D(rotationAxis);\r\n        var rotationPlane = CSG.Plane.fromNormalAndPoint(rotationAxis, rotationCenter);\r\n        var orthobasis = new CSG.OrthoNormalBasis(rotationPlane);\r\n        var transformation = CSG.Matrix4x4.translation(rotationCenter.negated());\r\n        transformation = transformation.multiply(orthobasis.getProjectionMatrix());\r\n        transformation = transformation.multiply(CSG.Matrix4x4.rotationZ(degrees));\r\n        transformation = transformation.multiply(orthobasis.getInverseProjectionMatrix());\r\n        transformation = transformation.multiply(CSG.Matrix4x4.translation(rotationCenter));\r\n        return transformation;\r\n    };\r\n\r\n    // Create an affine matrix for translation:\r\n    CSG.Matrix4x4.translation = function(v) {\r\n        // parse as CSG.Vector3D, so we can pass an array or a CSG.Vector3D\r\n        var vec = new CSG.Vector3D(v);\r\n        var els = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, vec.x, vec.y, vec.z, 1];\r\n        return new CSG.Matrix4x4(els);\r\n    };\r\n\r\n    // Create an affine matrix for mirroring into an arbitrary plane:\r\n    CSG.Matrix4x4.mirroring = function(plane) {\r\n        var nx = plane.normal.x;\r\n        var ny = plane.normal.y;\r\n        var nz = plane.normal.z;\r\n        var w = plane.w;\r\n        var els = [\r\n            (1.0 - 2.0 * nx * nx), (-2.0 * ny * nx), (-2.0 * nz * nx), 0,\r\n            (-2.0 * nx * ny), (1.0 - 2.0 * ny * ny), (-2.0 * nz * ny), 0,\r\n            (-2.0 * nx * nz), (-2.0 * ny * nz), (1.0 - 2.0 * nz * nz), 0,\r\n            (2.0 * nx * w), (2.0 * ny * w), (2.0 * nz * w), 1\r\n        ];\r\n        return new CSG.Matrix4x4(els);\r\n    };\r\n\r\n    // Create an affine matrix for scaling:\r\n    CSG.Matrix4x4.scaling = function(v) {\r\n        // parse as CSG.Vector3D, so we can pass an array or a CSG.Vector3D\r\n        var vec = new CSG.Vector3D(v);\r\n        var els = [\r\n            vec.x, 0, 0, 0, 0, vec.y, 0, 0, 0, 0, vec.z, 0, 0, 0, 0, 1\r\n        ];\r\n        return new CSG.Matrix4x4(els);\r\n    };\r\n\r\n    ///////////////////////////////////////////////////\r\n    // # class Vector2D:\r\n    // Represents a 2 element vector\r\n    CSG.Vector2D = function(x, y) {\r\n        if (arguments.length == 2) {\r\n            this._x = parseFloat(x);\r\n            this._y = parseFloat(y);\r\n        } else {\r\n            var ok = true;\r\n            if (arguments.length == 1) {\r\n                if (typeof(x) == \"object\") {\r\n                    if (x instanceof CSG.Vector2D) {\r\n                        this._x = x._x;\r\n                        this._y = x._y;\r\n                    } else if (x instanceof Array) {\r\n                        this._x = parseFloat(x[0]);\r\n                        this._y = parseFloat(x[1]);\r\n                    } else if (('x' in x) && ('y' in x)) {\r\n                        this._x = parseFloat(x.x);\r\n                        this._y = parseFloat(x.y);\r\n                    } else ok = false;\r\n                } else {\r\n                    var v = parseFloat(x);\r\n                    this._x = v;\r\n                    this._y = v;\r\n                }\r\n            } else ok = false;\r\n            if (ok) {\r\n                if ((!CSG.IsFloat(this._x)) || (!CSG.IsFloat(this._y))) ok = false;\r\n            }\r\n            if (!ok) {\r\n                throw new Error(\"wrong arguments\");\r\n            }\r\n        }\r\n    };\r\n\r\n    CSG.Vector2D.fromAngle = function(radians) {\r\n        return CSG.Vector2D.fromAngleRadians(radians);\r\n    };\r\n\r\n    CSG.Vector2D.fromAngleDegrees = function(degrees) {\r\n        var radians = Math.PI * degrees / 180;\r\n        return CSG.Vector2D.fromAngleRadians(radians);\r\n    };\r\n\r\n    CSG.Vector2D.fromAngleRadians = function(radians) {\r\n        return CSG.Vector2D.Create(Math.cos(radians), Math.sin(radians));\r\n    };\r\n\r\n    // This does the same as new CSG.Vector2D(x,y) but it doesn't go through the constructor\r\n    // and the parameters are not validated. Is much faster.\r\n    CSG.Vector2D.Create = function(x, y) {\r\n        var result = Object.create(CSG.Vector2D.prototype);\r\n        result._x = x;\r\n        result._y = y;\r\n        return result;\r\n    };\r\n\r\n    CSG.Vector2D.prototype = {\r\n        get x() {\r\n            return this._x;\r\n        },\r\n        get y() {\r\n            return this._y;\r\n        },\r\n\r\n        set x(v) {\r\n            throw new Error(\"Vector2D is immutable\");\r\n        },\r\n        set y(v) {\r\n            throw new Error(\"Vector2D is immutable\");\r\n        },\r\n\r\n        // extend to a 3D vector by adding a z coordinate:\r\n        toVector3D: function(z) {\r\n            return new CSG.Vector3D(this._x, this._y, z);\r\n        },\r\n\r\n        equals: function(a) {\r\n            return (this._x == a._x) && (this._y == a._y);\r\n        },\r\n\r\n        clone: function() {\r\n            return CSG.Vector2D.Create(this._x, this._y);\r\n        },\r\n\r\n        negated: function() {\r\n            return CSG.Vector2D.Create(-this._x, -this._y);\r\n        },\r\n\r\n        plus: function(a) {\r\n            return CSG.Vector2D.Create(this._x + a._x, this._y + a._y);\r\n        },\r\n\r\n        minus: function(a) {\r\n            return CSG.Vector2D.Create(this._x - a._x, this._y - a._y);\r\n        },\r\n\r\n        times: function(a) {\r\n            return CSG.Vector2D.Create(this._x * a, this._y * a);\r\n        },\r\n\r\n        dividedBy: function(a) {\r\n            return CSG.Vector2D.Create(this._x / a, this._y / a);\r\n        },\r\n\r\n        dot: function(a) {\r\n            return this._x * a._x + this._y * a._y;\r\n        },\r\n\r\n        lerp: function(a, t) {\r\n            return this.plus(a.minus(this).times(t));\r\n        },\r\n\r\n        length: function() {\r\n            return Math.sqrt(this.dot(this));\r\n        },\r\n\r\n        distanceTo: function(a) {\r\n            return this.minus(a).length();\r\n        },\r\n\r\n        distanceToSquared: function(a) {\r\n            return this.minus(a).lengthSquared();\r\n        },\r\n\r\n        lengthSquared: function() {\r\n            return this.dot(this);\r\n        },\r\n\r\n        unit: function() {\r\n            return this.dividedBy(this.length());\r\n        },\r\n\r\n        cross: function(a) {\r\n            return this._x * a._y - this._y * a._x;\r\n        },\r\n\r\n        // returns the vector rotated by 90 degrees clockwise\r\n        normal: function() {\r\n            return CSG.Vector2D.Create(this._y, -this._x);\r\n        },\r\n\r\n        // Right multiply by a 4x4 matrix (the vector is interpreted as a row vector)\r\n        // Returns a new CSG.Vector2D\r\n        multiply4x4: function(matrix4x4) {\r\n            return matrix4x4.leftMultiply1x2Vector(this);\r\n        },\r\n\r\n        transform: function(matrix4x4) {\r\n            return matrix4x4.leftMultiply1x2Vector(this);\r\n        },\r\n\r\n        angle: function() {\r\n            return this.angleRadians();\r\n        },\r\n\r\n        angleDegrees: function() {\r\n            var radians = this.angleRadians();\r\n            return 180 * radians / Math.PI;\r\n        },\r\n\r\n        angleRadians: function() {\r\n            // y=sin, x=cos\r\n            return Math.atan2(this._y, this._x);\r\n        },\r\n\r\n        min: function(p) {\r\n            return CSG.Vector2D.Create(\r\n                Math.min(this._x, p._x), Math.min(this._y, p._y));\r\n        },\r\n\r\n        max: function(p) {\r\n            return CSG.Vector2D.Create(\r\n                Math.max(this._x, p._x), Math.max(this._y, p._y));\r\n        },\r\n\r\n        toString: function() {\r\n            return \"(\" + this._x.toFixed(2) + \", \" + this._y.toFixed(2) + \")\";\r\n        },\r\n\r\n        abs: function() {\r\n            return CSG.Vector2D.Create(Math.abs(this._x), Math.abs(this._y));\r\n        },\r\n    };\r\n\r\n\r\n    // # class Line2D\r\n    // Represents a directional line in 2D space\r\n    // A line is parametrized by its normal vector (perpendicular to the line, rotated 90 degrees counter clockwise)\r\n    // and w. The line passes through the point <normal>.times(w).\r\n    // normal must be a unit vector!\r\n    // Equation: p is on line if normal.dot(p)==w\r\n    CSG.Line2D = function(normal, w) {\r\n        normal = new CSG.Vector2D(normal);\r\n        w = parseFloat(w);\r\n        var l = normal.length();\r\n        // normalize:\r\n        w *= l;\r\n        normal = normal.times(1.0 / l);\r\n        this.normal = normal;\r\n        this.w = w;\r\n    };\r\n\r\n    CSG.Line2D.fromPoints = function(p1, p2) {\r\n        p1 = new CSG.Vector2D(p1);\r\n        p2 = new CSG.Vector2D(p2);\r\n        var direction = p2.minus(p1);\r\n        var normal = direction.normal().negated().unit();\r\n        var w = p1.dot(normal);\r\n        return new CSG.Line2D(normal, w);\r\n    };\r\n\r\n    CSG.Line2D.prototype = {\r\n        // same line but opposite direction:\r\n        reverse: function() {\r\n            return new CSG.Line2D(this.normal.negated(), -this.w);\r\n        },\r\n\r\n        equals: function(l) {\r\n            return (l.normal.equals(this.normal) && (l.w == this.w));\r\n        },\r\n\r\n        origin: function() {\r\n            return this.normal.times(this.w);\r\n        },\r\n\r\n        direction: function() {\r\n            return this.normal.normal();\r\n        },\r\n\r\n        xAtY: function(y) {\r\n            // (py == y) && (normal * p == w)\r\n            // -> px = (w - normal._y * y) / normal.x\r\n            var x = (this.w - this.normal._y * y) / this.normal.x;\r\n            return x;\r\n        },\r\n\r\n        absDistanceToPoint: function(point) {\r\n            point = new CSG.Vector2D(point);\r\n            var point_projected = point.dot(this.normal);\r\n            var distance = Math.abs(point_projected - this.w);\r\n            return distance;\r\n        },\r\n        /*FIXME: has error - origin is not defined, the method is never used\r\n         closestPoint: function(point) {\r\n             point = new CSG.Vector2D(point);\r\n             var vector = point.dot(this.direction());\r\n             return origin.plus(vector);\r\n         },\r\n         */\r\n\r\n        // intersection between two lines, returns point as Vector2D\r\n        intersectWithLine: function(line2d) {\r\n            var point = CSG.solve2Linear(this.normal.x, this.normal.y, line2d.normal.x, line2d.normal.y, this.w, line2d.w);\r\n            point = new CSG.Vector2D(point); // make  vector2d\r\n            return point;\r\n        },\r\n\r\n        transform: function(matrix4x4) {\r\n            var origin = new CSG.Vector2D(0, 0);\r\n            var pointOnPlane = this.normal.times(this.w);\r\n            var neworigin = origin.multiply4x4(matrix4x4);\r\n            var neworiginPlusNormal = this.normal.multiply4x4(matrix4x4);\r\n            var newnormal = neworiginPlusNormal.minus(neworigin);\r\n            var newpointOnPlane = pointOnPlane.multiply4x4(matrix4x4);\r\n            var neww = newnormal.dot(newpointOnPlane);\r\n            return new CSG.Line2D(newnormal, neww);\r\n        }\r\n    };\r\n\r\n    // # class Line3D\r\n    // Represents a line in 3D space\r\n    // direction must be a unit vector\r\n    // point is a random point on the line\r\n    CSG.Line3D = function(point, direction) {\r\n        point = new CSG.Vector3D(point);\r\n        direction = new CSG.Vector3D(direction);\r\n        this.point = point;\r\n        this.direction = direction.unit();\r\n    };\r\n\r\n    CSG.Line3D.fromPoints = function(p1, p2) {\r\n        p1 = new CSG.Vector3D(p1);\r\n        p2 = new CSG.Vector3D(p2);\r\n        var direction = p2.minus(p1);\r\n        return new CSG.Line3D(p1, direction);\r\n    };\r\n\r\n    CSG.Line3D.fromPlanes = function(p1, p2) {\r\n        var direction = p1.normal.cross(p2.normal);\r\n        var l = direction.length();\r\n        if (l < 1e-10) {\r\n            throw new Error(\"Parallel planes\");\r\n        }\r\n        direction = direction.times(1.0 / l);\r\n\r\n        var mabsx = Math.abs(direction.x);\r\n        var mabsy = Math.abs(direction.y);\r\n        var mabsz = Math.abs(direction.z);\r\n        var origin;\r\n        if ((mabsx >= mabsy) && (mabsx >= mabsz)) {\r\n            // direction vector is mostly pointing towards x\r\n            // find a point p for which x is zero:\r\n            var r = CSG.solve2Linear(p1.normal.y, p1.normal.z, p2.normal.y, p2.normal.z, p1.w, p2.w);\r\n            origin = new CSG.Vector3D(0, r[0], r[1]);\r\n        } else if ((mabsy >= mabsx) && (mabsy >= mabsz)) {\r\n            // find a point p for which y is zero:\r\n            var r = CSG.solve2Linear(p1.normal.x, p1.normal.z, p2.normal.x, p2.normal.z, p1.w, p2.w);\r\n            origin = new CSG.Vector3D(r[0], 0, r[1]);\r\n        } else {\r\n            // find a point p for which z is zero:\r\n            var r = CSG.solve2Linear(p1.normal.x, p1.normal.y, p2.normal.x, p2.normal.y, p1.w, p2.w);\r\n            origin = new CSG.Vector3D(r[0], r[1], 0);\r\n        }\r\n        return new CSG.Line3D(origin, direction);\r\n    };\r\n\r\n\r\n    CSG.Line3D.prototype = {\r\n        intersectWithPlane: function(plane) {\r\n            // plane: plane.normal * p = plane.w\r\n            // line: p=line.point + labda * line.direction\r\n            var labda = (plane.w - plane.normal.dot(this.point)) / plane.normal.dot(this.direction);\r\n            var point = this.point.plus(this.direction.times(labda));\r\n            return point;\r\n        },\r\n\r\n        clone: function(line) {\r\n            return new CSG.Line3D(this.point.clone(), this.direction.clone());\r\n        },\r\n\r\n        reverse: function() {\r\n            return new CSG.Line3D(this.point.clone(), this.direction.negated());\r\n        },\r\n\r\n        transform: function(matrix4x4) {\r\n            var newpoint = this.point.multiply4x4(matrix4x4);\r\n            var pointPlusDirection = this.point.plus(this.direction);\r\n            var newPointPlusDirection = pointPlusDirection.multiply4x4(matrix4x4);\r\n            var newdirection = newPointPlusDirection.minus(newpoint);\r\n            return new CSG.Line3D(newpoint, newdirection);\r\n        },\r\n\r\n        closestPointOnLine: function(point) {\r\n            point = new CSG.Vector3D(point);\r\n            var t = point.minus(this.point).dot(this.direction) / this.direction.dot(this.direction);\r\n            var closestpoint = this.point.plus(this.direction.times(t));\r\n            return closestpoint;\r\n        },\r\n\r\n        distanceToPoint: function(point) {\r\n            point = new CSG.Vector3D(point);\r\n            var closestpoint = this.closestPointOnLine(point);\r\n            var distancevector = point.minus(closestpoint);\r\n            var distance = distancevector.length();\r\n            return distance;\r\n        },\r\n\r\n        equals: function(line3d) {\r\n            if (!this.direction.equals(line3d.direction)) return false;\r\n            var distance = this.distanceToPoint(line3d.point);\r\n            if (distance > 1e-8) return false;\r\n            return true;\r\n        }\r\n    };\r\n\r\n\r\n    // # class OrthoNormalBasis\r\n    // Reprojects points on a 3D plane onto a 2D plane\r\n    // or from a 2D plane back onto the 3D plane\r\n    CSG.OrthoNormalBasis = function(plane, rightvector) {\r\n        if (arguments.length < 2) {\r\n            // choose an arbitrary right hand vector, making sure it is somewhat orthogonal to the plane normal:\r\n            rightvector = plane.normal.randomNonParallelVector();\r\n        } else {\r\n            rightvector = new CSG.Vector3D(rightvector);\r\n        }\r\n        this.v = plane.normal.cross(rightvector).unit();\r\n        this.u = this.v.cross(plane.normal);\r\n        this.plane = plane;\r\n        this.planeorigin = plane.normal.times(plane.w);\r\n    };\r\n\r\n    // Get an orthonormal basis for the standard XYZ planes.\r\n    // Parameters: the names of two 3D axes. The 2d x axis will map to the first given 3D axis, the 2d y \r\n    // axis will map to the second.\r\n    // Prepend the axis with a \"-\" to invert the direction of this axis.\r\n    // For example: CSG.OrthoNormalBasis.GetCartesian(\"-Y\",\"Z\")\r\n    //   will return an orthonormal basis where the 2d X axis maps to the 3D inverted Y axis, and\r\n    //   the 2d Y axis maps to the 3D Z axis.\r\n    CSG.OrthoNormalBasis.GetCartesian = function(xaxisid, yaxisid) {\r\n        var axisid = xaxisid + \"/\" + yaxisid;\r\n        var planenormal, rightvector;\r\n        if (axisid == \"X/Y\") {\r\n            planenormal = [0, 0, 1];\r\n            rightvector = [1, 0, 0];\r\n        } else if (axisid == \"Y/-X\") {\r\n            planenormal = [0, 0, 1];\r\n            rightvector = [0, 1, 0];\r\n        } else if (axisid == \"-X/-Y\") {\r\n            planenormal = [0, 0, 1];\r\n            rightvector = [-1, 0, 0];\r\n        } else if (axisid == \"-Y/X\") {\r\n            planenormal = [0, 0, 1];\r\n            rightvector = [0, -1, 0];\r\n        } else if (axisid == \"-X/Y\") {\r\n            planenormal = [0, 0, -1];\r\n            rightvector = [-1, 0, 0];\r\n        } else if (axisid == \"-Y/-X\") {\r\n            planenormal = [0, 0, -1];\r\n            rightvector = [0, -1, 0];\r\n        } else if (axisid == \"X/-Y\") {\r\n            planenormal = [0, 0, -1];\r\n            rightvector = [1, 0, 0];\r\n        } else if (axisid == \"Y/X\") {\r\n            planenormal = [0, 0, -1];\r\n            rightvector = [0, 1, 0];\r\n        } else if (axisid == \"X/Z\") {\r\n            planenormal = [0, -1, 0];\r\n            rightvector = [1, 0, 0];\r\n        } else if (axisid == \"Z/-X\") {\r\n            planenormal = [0, -1, 0];\r\n            rightvector = [0, 0, 1];\r\n        } else if (axisid == \"-X/-Z\") {\r\n            planenormal = [0, -1, 0];\r\n            rightvector = [-1, 0, 0];\r\n        } else if (axisid == \"-Z/X\") {\r\n            planenormal = [0, -1, 0];\r\n            rightvector = [0, 0, -1];\r\n        } else if (axisid == \"-X/Z\") {\r\n            planenormal = [0, 1, 0];\r\n            rightvector = [-1, 0, 0];\r\n        } else if (axisid == \"-Z/-X\") {\r\n            planenormal = [0, 1, 0];\r\n            rightvector = [0, 0, -1];\r\n        } else if (axisid == \"X/-Z\") {\r\n            planenormal = [0, 1, 0];\r\n            rightvector = [1, 0, 0];\r\n        } else if (axisid == \"Z/X\") {\r\n            planenormal = [0, 1, 0];\r\n            rightvector = [0, 0, 1];\r\n        } else if (axisid == \"Y/Z\") {\r\n            planenormal = [1, 0, 0];\r\n            rightvector = [0, 1, 0];\r\n        } else if (axisid == \"Z/-Y\") {\r\n            planenormal = [1, 0, 0];\r\n            rightvector = [0, 0, 1];\r\n        } else if (axisid == \"-Y/-Z\") {\r\n            planenormal = [1, 0, 0];\r\n            rightvector = [0, -1, 0];\r\n        } else if (axisid == \"-Z/Y\") {\r\n            planenormal = [1, 0, 0];\r\n            rightvector = [0, 0, -1];\r\n        } else if (axisid == \"-Y/Z\") {\r\n            planenormal = [-1, 0, 0];\r\n            rightvector = [0, -1, 0];\r\n        } else if (axisid == \"-Z/-Y\") {\r\n            planenormal = [-1, 0, 0];\r\n            rightvector = [0, 0, -1];\r\n        } else if (axisid == \"Y/-Z\") {\r\n            planenormal = [-1, 0, 0];\r\n            rightvector = [0, 1, 0];\r\n        } else if (axisid == \"Z/Y\") {\r\n            planenormal = [-1, 0, 0];\r\n            rightvector = [0, 0, 1];\r\n        } else {\r\n            throw new Error(\"CSG.OrthoNormalBasis.GetCartesian: invalid combination of axis identifiers. Should pass two string arguments from [X,Y,Z,-X,-Y,-Z], being two different axes.\");\r\n        }\r\n        return new CSG.OrthoNormalBasis(new CSG.Plane(new CSG.Vector3D(planenormal), 0), new CSG.Vector3D(rightvector));\r\n    };\r\n\r\n    /*\r\n    // test code for CSG.OrthoNormalBasis.GetCartesian()\r\n    CSG.OrthoNormalBasis.GetCartesian_Test=function() {\r\n      var axisnames=[\"X\",\"Y\",\"Z\",\"-X\",\"-Y\",\"-Z\"];\r\n      var axisvectors=[[1,0,0], [0,1,0], [0,0,1], [-1,0,0], [0,-1,0], [0,0,-1]];\r\n      for(var axis1=0; axis1 < 3; axis1++) {\r\n        for(var axis1inverted=0; axis1inverted < 2; axis1inverted++) {\r\n          var axis1name=axisnames[axis1+3*axis1inverted];\r\n          var axis1vector=axisvectors[axis1+3*axis1inverted];\r\n          for(var axis2=0; axis2 < 3; axis2++) {\r\n            if(axis2 != axis1) {\r\n              for(var axis2inverted=0; axis2inverted < 2; axis2inverted++) {\r\n                var axis2name=axisnames[axis2+3*axis2inverted];\r\n                var axis2vector=axisvectors[axis2+3*axis2inverted];\r\n                var orthobasis=CSG.OrthoNormalBasis.GetCartesian(axis1name, axis2name);\r\n                var test1=orthobasis.to3D(new CSG.Vector2D([1,0]));\r\n                var test2=orthobasis.to3D(new CSG.Vector2D([0,1]));\r\n                var expected1=new CSG.Vector3D(axis1vector);\r\n                var expected2=new CSG.Vector3D(axis2vector);\r\n                var d1=test1.distanceTo(expected1);\r\n                var d2=test2.distanceTo(expected2);\r\n                if( (d1 > 0.01) || (d2 > 0.01) ) {\r\n                  throw new Error(\"Wrong!\");\r\n      }}}}}}\r\n      throw new Error(\"OK\");\r\n    };\r\n    */\r\n\r\n    // The z=0 plane, with the 3D x and y vectors mapped to the 2D x and y vector\r\n    CSG.OrthoNormalBasis.Z0Plane = function() {\r\n        var plane = new CSG.Plane(new CSG.Vector3D([0, 0, 1]), 0);\r\n        return new CSG.OrthoNormalBasis(plane, new CSG.Vector3D([1, 0, 0]));\r\n    };\r\n\r\n    CSG.OrthoNormalBasis.prototype = {\r\n        getProjectionMatrix: function() {\r\n            return new CSG.Matrix4x4([\r\n                this.u.x, this.v.x, this.plane.normal.x, 0,\r\n                this.u.y, this.v.y, this.plane.normal.y, 0,\r\n                this.u.z, this.v.z, this.plane.normal.z, 0,\r\n                0, 0, -this.plane.w, 1\r\n            ]);\r\n        },\r\n\r\n        getInverseProjectionMatrix: function() {\r\n            var p = this.plane.normal.times(this.plane.w);\r\n            return new CSG.Matrix4x4([\r\n                this.u.x, this.u.y, this.u.z, 0,\r\n                this.v.x, this.v.y, this.v.z, 0,\r\n                this.plane.normal.x, this.plane.normal.y, this.plane.normal.z, 0,\r\n                p.x, p.y, p.z, 1\r\n            ]);\r\n        },\r\n\r\n        to2D: function(vec3) {\r\n            return new CSG.Vector2D(vec3.dot(this.u), vec3.dot(this.v));\r\n        },\r\n\r\n        to3D: function(vec2) {\r\n            return this.planeorigin.plus(this.u.times(vec2.x)).plus(this.v.times(vec2.y));\r\n        },\r\n\r\n        line3Dto2D: function(line3d) {\r\n            var a = line3d.point;\r\n            var b = line3d.direction.plus(a);\r\n            var a2d = this.to2D(a);\r\n            var b2d = this.to2D(b);\r\n            return CSG.Line2D.fromPoints(a2d, b2d);\r\n        },\r\n\r\n        line2Dto3D: function(line2d) {\r\n            var a = line2d.origin();\r\n            var b = line2d.direction().plus(a);\r\n            var a3d = this.to3D(a);\r\n            var b3d = this.to3D(b);\r\n            return CSG.Line3D.fromPoints(a3d, b3d);\r\n        },\r\n\r\n        transform: function(matrix4x4) {\r\n            // todo: this may not work properly in case of mirroring\r\n            var newplane = this.plane.transform(matrix4x4);\r\n            var rightpoint_transformed = this.u.transform(matrix4x4);\r\n            var origin_transformed = new CSG.Vector3D(0, 0, 0).transform(matrix4x4);\r\n            var newrighthandvector = rightpoint_transformed.minus(origin_transformed);\r\n            var newbasis = new CSG.OrthoNormalBasis(newplane, newrighthandvector);\r\n            return newbasis;\r\n        }\r\n    };\r\n\r\n    function insertSorted(array, element, comparefunc) {\r\n        var leftbound = 0;\r\n        var rightbound = array.length;\r\n        while (rightbound > leftbound) {\r\n            var testindex = Math.floor((leftbound + rightbound) / 2);\r\n            var testelement = array[testindex];\r\n            var compareresult = comparefunc(element, testelement);\r\n            if (compareresult > 0) // element > testelement\r\n            {\r\n                leftbound = testindex + 1;\r\n            } else {\r\n                rightbound = testindex;\r\n            }\r\n        }\r\n        array.splice(leftbound, 0, element);\r\n    }\r\n\r\n    // Get the x coordinate of a point with a certain y coordinate, interpolated between two\r\n    // points (CSG.Vector2D).\r\n    // Interpolation is robust even if the points have the same y coordinate\r\n    CSG.interpolateBetween2DPointsForY = function(point1, point2, y) {\r\n        var f1 = y - point1.y;\r\n        var f2 = point2.y - point1.y;\r\n        if (f2 < 0) {\r\n            f1 = -f1;\r\n            f2 = -f2;\r\n        }\r\n        var t;\r\n        if (f1 <= 0) {\r\n            t = 0.0;\r\n        } else if (f1 >= f2) {\r\n            t = 1.0;\r\n        } else if (f2 < 1e-10) {\r\n            t = 0.5;\r\n        } else {\r\n            t = f1 / f2;\r\n        }\r\n        var result = point1.x + t * (point2.x - point1.x);\r\n        return result;\r\n    };\r\n\r\n    // Retesselation function for a set of coplanar polygons. See the introduction at the top of\r\n    // this file.\r\n    CSG.reTesselateCoplanarPolygons = function(sourcepolygons, destpolygons) {\r\n        var EPS = 1e-5;\r\n\r\n        var numpolygons = sourcepolygons.length;\r\n        if (numpolygons > 0) {\r\n            var plane = sourcepolygons[0].plane;\r\n            var shared = sourcepolygons[0].shared;\r\n            var orthobasis = new CSG.OrthoNormalBasis(plane);\r\n            var polygonvertices2d = []; // array of array of CSG.Vector2D\r\n            var polygontopvertexindexes = []; // array of indexes of topmost vertex per polygon\r\n            var topy2polygonindexes = {};\r\n            var ycoordinatetopolygonindexes = {};\r\n\r\n            var xcoordinatebins = {};\r\n            var ycoordinatebins = {};\r\n\r\n            // convert all polygon vertices to 2D\r\n            // Make a list of all encountered y coordinates\r\n            // And build a map of all polygons that have a vertex at a certain y coordinate:\r\n            var ycoordinateBinningFactor = 1.0 / EPS * 10;\r\n            for (var polygonindex = 0; polygonindex < numpolygons; polygonindex++) {\r\n                var poly3d = sourcepolygons[polygonindex];\r\n                var vertices2d = [];\r\n                var numvertices = poly3d.vertices.length;\r\n                var minindex = -1;\r\n                if (numvertices > 0) {\r\n                    var miny, maxy, maxindex;\r\n                    for (var i = 0; i < numvertices; i++) {\r\n                        var pos2d = orthobasis.to2D(poly3d.vertices[i].pos);\r\n                        // perform binning of y coordinates: If we have multiple vertices very\r\n                        // close to each other, give them the same y coordinate:\r\n                        var ycoordinatebin = Math.floor(pos2d.y * ycoordinateBinningFactor);\r\n                        var newy;\r\n                        if (ycoordinatebin in ycoordinatebins) {\r\n                            newy = ycoordinatebins[ycoordinatebin];\r\n                        } else if (ycoordinatebin + 1 in ycoordinatebins) {\r\n                            newy = ycoordinatebins[ycoordinatebin + 1];\r\n                        } else if (ycoordinatebin - 1 in ycoordinatebins) {\r\n                            newy = ycoordinatebins[ycoordinatebin - 1];\r\n                        } else {\r\n                            newy = pos2d.y;\r\n                            ycoordinatebins[ycoordinatebin] = pos2d.y;\r\n                        }\r\n                        pos2d = CSG.Vector2D.Create(pos2d.x, newy);\r\n                        vertices2d.push(pos2d);\r\n                        var y = pos2d.y;\r\n                        if ((i === 0) || (y < miny)) {\r\n                            miny = y;\r\n                            minindex = i;\r\n                        }\r\n                        if ((i === 0) || (y > maxy)) {\r\n                            maxy = y;\r\n                            maxindex = i;\r\n                        }\r\n                        if (!(y in ycoordinatetopolygonindexes)) {\r\n                            ycoordinatetopolygonindexes[y] = {};\r\n                        }\r\n                        ycoordinatetopolygonindexes[y][polygonindex] = true;\r\n                    }\r\n                    if (miny >= maxy) {\r\n                        // degenerate polygon, all vertices have same y coordinate. Just ignore it from now:\r\n                        vertices2d = [];\r\n                        numvertices = 0;\r\n                        minindex = -1;\r\n                    } else {\r\n                        if (!(miny in topy2polygonindexes)) {\r\n                            topy2polygonindexes[miny] = [];\r\n                        }\r\n                        topy2polygonindexes[miny].push(polygonindex);\r\n                    }\r\n                } // if(numvertices > 0)\r\n                // reverse the vertex order:\r\n                vertices2d.reverse();\r\n                minindex = numvertices - minindex - 1;\r\n                polygonvertices2d.push(vertices2d);\r\n                polygontopvertexindexes.push(minindex);\r\n            }\r\n            var ycoordinates = [];\r\n            for (var ycoordinate in ycoordinatetopolygonindexes) ycoordinates.push(ycoordinate);\r\n            ycoordinates.sort(fnNumberSort);\r\n\r\n            // Now we will iterate over all y coordinates, from lowest to highest y coordinate\r\n            // activepolygons: source polygons that are 'active', i.e. intersect with our y coordinate\r\n            //   Is sorted so the polygons are in left to right order\r\n            // Each element in activepolygons has these properties:\r\n            //        polygonindex: the index of the source polygon (i.e. an index into the sourcepolygons\r\n            //                      and polygonvertices2d arrays)\r\n            //        leftvertexindex: the index of the vertex at the left side of the polygon (lowest x)\r\n            //                         that is at or just above the current y coordinate\r\n            //        rightvertexindex: dito at right hand side of polygon\r\n            //        topleft, bottomleft: coordinates of the left side of the polygon crossing the current y coordinate\r\n            //        topright, bottomright: coordinates of the right hand side of the polygon crossing the current y coordinate\r\n            var activepolygons = [];\r\n            var prevoutpolygonrow = [];\r\n            for (var yindex = 0; yindex < ycoordinates.length; yindex++) {\r\n                var newoutpolygonrow = [];\r\n                var ycoordinate_as_string = ycoordinates[yindex];\r\n                var ycoordinate = Number(ycoordinate_as_string);\r\n\r\n                // update activepolygons for this y coordinate:\r\n                // - Remove any polygons that end at this y coordinate\r\n                // - update leftvertexindex and rightvertexindex (which point to the current vertex index\r\n                //   at the the left and right side of the polygon\r\n                // Iterate over all polygons that have a corner at this y coordinate:\r\n                var polygonindexeswithcorner = ycoordinatetopolygonindexes[ycoordinate_as_string];\r\n                for (var activepolygonindex = 0; activepolygonindex < activepolygons.length; ++activepolygonindex) {\r\n                    var activepolygon = activepolygons[activepolygonindex];\r\n                    var polygonindex = activepolygon.polygonindex;\r\n                    if (polygonindexeswithcorner[polygonindex]) {\r\n                        // this active polygon has a corner at this y coordinate:\r\n                        var vertices2d = polygonvertices2d[polygonindex];\r\n                        var numvertices = vertices2d.length;\r\n                        var newleftvertexindex = activepolygon.leftvertexindex;\r\n                        var newrightvertexindex = activepolygon.rightvertexindex;\r\n                        // See if we need to increase leftvertexindex or decrease rightvertexindex:\r\n                        while (true) {\r\n                            var nextleftvertexindex = newleftvertexindex + 1;\r\n                            if (nextleftvertexindex >= numvertices) nextleftvertexindex = 0;\r\n                            if (vertices2d[nextleftvertexindex].y != ycoordinate) break;\r\n                            newleftvertexindex = nextleftvertexindex;\r\n                        }\r\n                        var nextrightvertexindex = newrightvertexindex - 1;\r\n                        if (nextrightvertexindex < 0) nextrightvertexindex = numvertices - 1;\r\n                        if (vertices2d[nextrightvertexindex].y == ycoordinate) {\r\n                            newrightvertexindex = nextrightvertexindex;\r\n                        }\r\n                        if ((newleftvertexindex != activepolygon.leftvertexindex) && (newleftvertexindex == newrightvertexindex)) {\r\n                            // We have increased leftvertexindex or decreased rightvertexindex, and now they point to the same vertex\r\n                            // This means that this is the bottom point of the polygon. We'll remove it:\r\n                            activepolygons.splice(activepolygonindex, 1);\r\n                            --activepolygonindex;\r\n                        } else {\r\n                            activepolygon.leftvertexindex = newleftvertexindex;\r\n                            activepolygon.rightvertexindex = newrightvertexindex;\r\n                            activepolygon.topleft = vertices2d[newleftvertexindex];\r\n                            activepolygon.topright = vertices2d[newrightvertexindex];\r\n                            var nextleftvertexindex = newleftvertexindex + 1;\r\n                            if (nextleftvertexindex >= numvertices) nextleftvertexindex = 0;\r\n                            activepolygon.bottomleft = vertices2d[nextleftvertexindex];\r\n                            var nextrightvertexindex = newrightvertexindex - 1;\r\n                            if (nextrightvertexindex < 0) nextrightvertexindex = numvertices - 1;\r\n                            activepolygon.bottomright = vertices2d[nextrightvertexindex];\r\n                        }\r\n                    } // if polygon has corner here\r\n                } // for activepolygonindex\r\n                var nextycoordinate;\r\n                if (yindex >= ycoordinates.length - 1) {\r\n                    // last row, all polygons must be finished here:\r\n                    activepolygons = [];\r\n                    nextycoordinate = null;\r\n                } else // yindex < ycoordinates.length-1\r\n                {\r\n                    nextycoordinate = Number(ycoordinates[yindex + 1]);\r\n                    var middleycoordinate = 0.5 * (ycoordinate + nextycoordinate);\r\n                    // update activepolygons by adding any polygons that start here:\r\n                    var startingpolygonindexes = topy2polygonindexes[ycoordinate_as_string];\r\n                    for (var polygonindex_key in startingpolygonindexes) {\r\n                        var polygonindex = startingpolygonindexes[polygonindex_key];\r\n                        var vertices2d = polygonvertices2d[polygonindex];\r\n                        var numvertices = vertices2d.length;\r\n                        var topvertexindex = polygontopvertexindexes[polygonindex];\r\n                        // the top of the polygon may be a horizontal line. In that case topvertexindex can point to any point on this line.\r\n                        // Find the left and right topmost vertices which have the current y coordinate:\r\n                        var topleftvertexindex = topvertexindex;\r\n                        while (true) {\r\n                            var i = topleftvertexindex + 1;\r\n                            if (i >= numvertices) i = 0;\r\n                            if (vertices2d[i].y != ycoordinate) break;\r\n                            if (i == topvertexindex) break; // should not happen, but just to prevent endless loops\r\n                            topleftvertexindex = i;\r\n                        }\r\n                        var toprightvertexindex = topvertexindex;\r\n                        while (true) {\r\n                            var i = toprightvertexindex - 1;\r\n                            if (i < 0) i = numvertices - 1;\r\n                            if (vertices2d[i].y != ycoordinate) break;\r\n                            if (i == topleftvertexindex) break; // should not happen, but just to prevent endless loops\r\n                            toprightvertexindex = i;\r\n                        }\r\n                        var nextleftvertexindex = topleftvertexindex + 1;\r\n                        if (nextleftvertexindex >= numvertices) nextleftvertexindex = 0;\r\n                        var nextrightvertexindex = toprightvertexindex - 1;\r\n                        if (nextrightvertexindex < 0) nextrightvertexindex = numvertices - 1;\r\n                        var newactivepolygon = {\r\n                            polygonindex: polygonindex,\r\n                            leftvertexindex: topleftvertexindex,\r\n                            rightvertexindex: toprightvertexindex,\r\n                            topleft: vertices2d[topleftvertexindex],\r\n                            topright: vertices2d[toprightvertexindex],\r\n                            bottomleft: vertices2d[nextleftvertexindex],\r\n                            bottomright: vertices2d[nextrightvertexindex],\r\n                        };\r\n                        insertSorted(activepolygons, newactivepolygon, function(el1, el2) {\r\n                            var x1 = CSG.interpolateBetween2DPointsForY(\r\n                                el1.topleft, el1.bottomleft, middleycoordinate);\r\n                            var x2 = CSG.interpolateBetween2DPointsForY(\r\n                                el2.topleft, el2.bottomleft, middleycoordinate);\r\n                            if (x1 > x2) return 1;\r\n                            if (x1 < x2) return -1;\r\n                            return 0;\r\n                        });\r\n                    } // for(var polygonindex in startingpolygonindexes)\r\n                } //  yindex < ycoordinates.length-1\r\n                //if( (yindex == ycoordinates.length-1) || (nextycoordinate - ycoordinate > EPS) )\r\n                if (true) {\r\n                    // Now activepolygons is up to date\r\n                    // Build the output polygons for the next row in newoutpolygonrow:\r\n                    for (var activepolygon_key in activepolygons) {\r\n                        var activepolygon = activepolygons[activepolygon_key];\r\n                        var polygonindex = activepolygon.polygonindex;\r\n                        var vertices2d = polygonvertices2d[polygonindex];\r\n                        var numvertices = vertices2d.length;\r\n\r\n                        var x = CSG.interpolateBetween2DPointsForY(activepolygon.topleft, activepolygon.bottomleft, ycoordinate);\r\n                        var topleft = CSG.Vector2D.Create(x, ycoordinate);\r\n                        x = CSG.interpolateBetween2DPointsForY(activepolygon.topright, activepolygon.bottomright, ycoordinate);\r\n                        var topright = CSG.Vector2D.Create(x, ycoordinate);\r\n                        x = CSG.interpolateBetween2DPointsForY(activepolygon.topleft, activepolygon.bottomleft, nextycoordinate);\r\n                        var bottomleft = CSG.Vector2D.Create(x, nextycoordinate);\r\n                        x = CSG.interpolateBetween2DPointsForY(activepolygon.topright, activepolygon.bottomright, nextycoordinate);\r\n                        var bottomright = CSG.Vector2D.Create(x, nextycoordinate);\r\n                        var outpolygon = {\r\n                            topleft: topleft,\r\n                            topright: topright,\r\n                            bottomleft: bottomleft,\r\n                            bottomright: bottomright,\r\n                            leftline: CSG.Line2D.fromPoints(topleft, bottomleft),\r\n                            rightline: CSG.Line2D.fromPoints(bottomright, topright)\r\n                        };\r\n                        if (newoutpolygonrow.length > 0) {\r\n                            var prevoutpolygon = newoutpolygonrow[newoutpolygonrow.length - 1];\r\n                            var d1 = outpolygon.topleft.distanceTo(prevoutpolygon.topright);\r\n                            var d2 = outpolygon.bottomleft.distanceTo(prevoutpolygon.bottomright);\r\n                            if ((d1 < EPS) && (d2 < EPS)) {\r\n                                // we can join this polygon with the one to the left:\r\n                                outpolygon.topleft = prevoutpolygon.topleft;\r\n                                outpolygon.leftline = prevoutpolygon.leftline;\r\n                                outpolygon.bottomleft = prevoutpolygon.bottomleft;\r\n                                newoutpolygonrow.splice(newoutpolygonrow.length - 1, 1);\r\n                            }\r\n                        }\r\n                        newoutpolygonrow.push(outpolygon);\r\n                    } // for(activepolygon in activepolygons)\r\n                    if (yindex > 0) {\r\n                        // try to match the new polygons against the previous row:\r\n                        var prevcontinuedindexes = {};\r\n                        var matchedindexes = {};\r\n                        for (var i = 0; i < newoutpolygonrow.length; i++) {\r\n                            var thispolygon = newoutpolygonrow[i];\r\n                            for (var ii = 0; ii < prevoutpolygonrow.length; ii++) {\r\n                                if (!matchedindexes[ii]) // not already processed?\r\n                                {\r\n                                    // We have a match if the sidelines are equal or if the top coordinates\r\n                                    // are on the sidelines of the previous polygon\r\n                                    var prevpolygon = prevoutpolygonrow[ii];\r\n                                    if (prevpolygon.bottomleft.distanceTo(thispolygon.topleft) < EPS) {\r\n                                        if (prevpolygon.bottomright.distanceTo(thispolygon.topright) < EPS) {\r\n                                            // Yes, the top of this polygon matches the bottom of the previous:\r\n                                            matchedindexes[ii] = true;\r\n                                            // Now check if the joined polygon would remain convex:\r\n                                            var d1 = thispolygon.leftline.direction().x - prevpolygon.leftline.direction().x;\r\n                                            var d2 = thispolygon.rightline.direction().x - prevpolygon.rightline.direction().x;\r\n                                            var leftlinecontinues = Math.abs(d1) < EPS;\r\n                                            var rightlinecontinues = Math.abs(d2) < EPS;\r\n                                            var leftlineisconvex = leftlinecontinues || (d1 >= 0);\r\n                                            var rightlineisconvex = rightlinecontinues || (d2 >= 0);\r\n                                            if (leftlineisconvex && rightlineisconvex) {\r\n                                                // yes, both sides have convex corners:\r\n                                                // This polygon will continue the previous polygon\r\n                                                thispolygon.outpolygon = prevpolygon.outpolygon;\r\n                                                thispolygon.leftlinecontinues = leftlinecontinues;\r\n                                                thispolygon.rightlinecontinues = rightlinecontinues;\r\n                                                prevcontinuedindexes[ii] = true;\r\n                                            }\r\n                                            break;\r\n                                        }\r\n                                    }\r\n                                } // if(!prevcontinuedindexes[ii])\r\n                            } // for ii\r\n                        } // for i\r\n                        for (var ii = 0; ii < prevoutpolygonrow.length; ii++) {\r\n                            if (!prevcontinuedindexes[ii]) {\r\n                                // polygon ends here\r\n                                // Finish the polygon with the last point(s):\r\n                                var prevpolygon = prevoutpolygonrow[ii];\r\n                                prevpolygon.outpolygon.rightpoints.push(prevpolygon.bottomright);\r\n                                if (prevpolygon.bottomright.distanceTo(prevpolygon.bottomleft) > EPS) {\r\n                                    // polygon ends with a horizontal line:\r\n                                    prevpolygon.outpolygon.leftpoints.push(prevpolygon.bottomleft);\r\n                                }\r\n                                // reverse the left half so we get a counterclockwise circle:\r\n                                prevpolygon.outpolygon.leftpoints.reverse();\r\n                                var points2d = prevpolygon.outpolygon.rightpoints.concat(prevpolygon.outpolygon.leftpoints);\r\n                                var vertices3d = [];\r\n                                points2d.map(function(point2d) {\r\n                                    var point3d = orthobasis.to3D(point2d);\r\n                                    var vertex3d = new CSG.Vertex(point3d);\r\n                                    vertices3d.push(vertex3d);\r\n                                });\r\n                                var polygon = new CSG.Polygon(vertices3d, shared, plane);\r\n                                destpolygons.push(polygon);\r\n                            }\r\n                        }\r\n                    } // if(yindex > 0)\r\n                    for (var i = 0; i < newoutpolygonrow.length; i++) {\r\n                        var thispolygon = newoutpolygonrow[i];\r\n                        if (!thispolygon.outpolygon) {\r\n                            // polygon starts here:\r\n                            thispolygon.outpolygon = {\r\n                                leftpoints: [],\r\n                                rightpoints: []\r\n                            };\r\n                            thispolygon.outpolygon.leftpoints.push(thispolygon.topleft);\r\n                            if (thispolygon.topleft.distanceTo(thispolygon.topright) > EPS) {\r\n                                // we have a horizontal line at the top:\r\n                                thispolygon.outpolygon.rightpoints.push(thispolygon.topright);\r\n                            }\r\n                        } else {\r\n                            // continuation of a previous row\r\n                            if (!thispolygon.leftlinecontinues) {\r\n                                thispolygon.outpolygon.leftpoints.push(thispolygon.topleft);\r\n                            }\r\n                            if (!thispolygon.rightlinecontinues) {\r\n                                thispolygon.outpolygon.rightpoints.push(thispolygon.topright);\r\n                            }\r\n                        }\r\n                    }\r\n                    prevoutpolygonrow = newoutpolygonrow;\r\n                }\r\n            } // for yindex\r\n        } // if(numpolygons > 0)\r\n    };\r\n\r\n    ////////////////////////////////\r\n    // ## class fuzzyFactory\r\n    // This class acts as a factory for objects. We can search for an object with approximately\r\n    // the desired properties (say a rectangle with width 2 and height 1)\r\n    // The lookupOrCreate() method looks for an existing object (for example it may find an existing rectangle\r\n    // with width 2.0001 and height 0.999. If no object is found, the user supplied callback is\r\n    // called, which should generate a new object. The new object is inserted into the database\r\n    // so it can be found by future lookupOrCreate() calls.\r\n    // Constructor:\r\n    //   numdimensions: the number of parameters for each object\r\n    //     for example for a 2D rectangle this would be 2\r\n    //   tolerance: The maximum difference for each parameter allowed to be considered a match\r\n    CSG.fuzzyFactory = function(numdimensions, tolerance) {\r\n        this.lookuptable = {};\r\n        this.multiplier = 1.0 / tolerance;\r\n    };\r\n\r\n    CSG.fuzzyFactory.prototype = {\r\n        // var obj = f.lookupOrCreate([el1, el2, el3], function(elements) {/* create the new object */});\r\n        // Performs a fuzzy lookup of the object with the specified elements.\r\n        // If found, returns the existing object\r\n        // If not found, calls the supplied callback function which should create a new object with\r\n        // the specified properties. This object is inserted in the lookup database.\r\n        lookupOrCreate: function(els, creatorCallback) {\r\n            var hash = \"\";\r\n            var multiplier = this.multiplier;\r\n            els.forEach(function(el) {\r\n                var valueQuantized = Math.round(el * multiplier);\r\n                hash += valueQuantized + \"/\";\r\n            });\r\n            if (hash in this.lookuptable) {\r\n                return this.lookuptable[hash];\r\n            } else {\r\n                var object = creatorCallback(els);\r\n                var hashparts = els.map(function(el) {\r\n                    var q0 = Math.floor(el * multiplier);\r\n                    var q1 = q0 + 1;\r\n                    return [\"\" + q0 + \"/\", \"\" + q1 + \"/\"];\r\n                });\r\n                var numelements = els.length;\r\n                var numhashes = 1 << numelements;\r\n                for (var hashmask = 0; hashmask < numhashes; ++hashmask) {\r\n                    var hashmask_shifted = hashmask;\r\n                    hash = \"\";\r\n                    hashparts.forEach(function(hashpart) {\r\n                        hash += hashpart[hashmask_shifted & 1];\r\n                        hashmask_shifted >>= 1;\r\n                    });\r\n                    this.lookuptable[hash] = object;\r\n                }\r\n                return object;\r\n            }\r\n        },\r\n    };\r\n\r\n\r\n    //////////////////////////////////////\r\n    CSG.fuzzyCSGFactory = function() {\r\n        this.vertexfactory = new CSG.fuzzyFactory(3, 1e-5);\r\n        this.planefactory = new CSG.fuzzyFactory(4, 1e-5);\r\n        this.polygonsharedfactory = {};\r\n    };\r\n\r\n    CSG.fuzzyCSGFactory.prototype = {\r\n        getPolygonShared: function(sourceshared) {\r\n            var hash = sourceshared.getHash();\r\n            if (hash in this.polygonsharedfactory) {\r\n                return this.polygonsharedfactory[hash];\r\n            } else {\r\n                this.polygonsharedfactory[hash] = sourceshared;\r\n                return sourceshared;\r\n            }\r\n        },\r\n\r\n        getVertex: function(sourcevertex) {\r\n            var elements = [sourcevertex.pos._x, sourcevertex.pos._y, sourcevertex.pos._z];\r\n            var result = this.vertexfactory.lookupOrCreate(elements, function(els) {\r\n                return sourcevertex;\r\n            });\r\n            return result;\r\n        },\r\n\r\n        getPlane: function(sourceplane) {\r\n            var elements = [sourceplane.normal._x, sourceplane.normal._y, sourceplane.normal._z, sourceplane.w];\r\n            var result = this.planefactory.lookupOrCreate(elements, function(els) {\r\n                return sourceplane;\r\n            });\r\n            return result;\r\n        },\r\n\r\n        getPolygon: function(sourcepolygon) {\r\n            var newplane = this.getPlane(sourcepolygon.plane);\r\n            var newshared = this.getPolygonShared(sourcepolygon.shared);\r\n            var _this = this;\r\n            var newvertices = sourcepolygon.vertices.map(function(vertex) {\r\n                return _this.getVertex(vertex);\r\n            });\r\n            // two vertices that were originally very close may now have become\r\n            // truly identical (referring to the same CSG.Vertex object).\r\n            // Remove duplicate vertices:\r\n            var newvertices_dedup = [];\r\n            if(newvertices.length > 0) {\r\n                var prevvertextag = newvertices[newvertices.length-1].getTag();\r\n                newvertices.forEach(function(vertex) {\r\n                    var vertextag = vertex.getTag();\r\n                    if(vertextag != prevvertextag)\r\n                    {\r\n                        newvertices_dedup.push(vertex);\r\n                    }\r\n                    prevvertextag = vertextag;\r\n                });\r\n            }\r\n            // If it's degenerate, remove all vertices:\r\n            if(newvertices_dedup.length < 3) {\r\n                newvertices_dedup = [];\r\n            }\r\n            return new CSG.Polygon(newvertices_dedup, newshared, newplane);\r\n        },\r\n\r\n        getCSG: function(sourcecsg) {\r\n            var _this = this;\r\n            var newpolygons = [];\r\n            sourcecsg.polygons.forEach(function(polygon) {\r\n                var newpolygon = _this.getPolygon(polygon);\r\n                // see getPolygon above: we may get a polygon with no vertices, discard it:\r\n                if(newpolygon.vertices.length >= 3)\r\n                {\r\n                    newpolygons.push(newpolygon);\r\n                }\r\n            });\r\n            return CSG.fromPolygons(newpolygons);\r\n        }\r\n    };\r\n\r\n    //////////////////////////////////////\r\n    // Tag factory: we can request a unique tag through CSG.getTag()\r\n    CSG.staticTag = 1;\r\n\r\n    CSG.getTag = function() {\r\n        return CSG.staticTag++;\r\n    };\r\n\r\n    //////////////////////////////////////\r\n    // # Class Properties\r\n    // This class is used to store properties of a solid\r\n    // A property can for example be a CSG.Vertex, a CSG.Plane or a CSG.Line3D\r\n    // Whenever an affine transform is applied to the CSG solid, all its properties are\r\n    // transformed as well.\r\n    // The properties can be stored in a complex nested structure (using arrays and objects)\r\n    CSG.Properties = function() {};\r\n\r\n    CSG.Properties.prototype = {\r\n        _transform: function(matrix4x4) {\r\n            var result = new CSG.Properties();\r\n            CSG.Properties.transformObj(this, result, matrix4x4);\r\n            return result;\r\n        },\r\n        _merge: function(otherproperties) {\r\n            var result = new CSG.Properties();\r\n            CSG.Properties.cloneObj(this, result);\r\n            CSG.Properties.addFrom(result, otherproperties);\r\n            return result;\r\n        }\r\n    };\r\n\r\n    CSG.Properties.transformObj = function(source, result, matrix4x4) {\r\n        for (var propertyname in source) {\r\n            if (propertyname == \"_transform\") continue;\r\n            if (propertyname == \"_merge\") continue;\r\n            var propertyvalue = source[propertyname];\r\n            var transformed = propertyvalue;\r\n            if (typeof(propertyvalue) == \"object\") {\r\n                if (('transform' in propertyvalue) && (typeof(propertyvalue.transform) == \"function\")) {\r\n                    transformed = propertyvalue.transform(matrix4x4);\r\n                } else if (propertyvalue instanceof Array) {\r\n                    transformed = [];\r\n                    CSG.Properties.transformObj(propertyvalue, transformed, matrix4x4);\r\n                } else if (propertyvalue instanceof CSG.Properties) {\r\n                    transformed = new CSG.Properties();\r\n                    CSG.Properties.transformObj(propertyvalue, transformed, matrix4x4);\r\n                }\r\n            }\r\n            result[propertyname] = transformed;\r\n        }\r\n    };\r\n\r\n    CSG.Properties.cloneObj = function(source, result) {\r\n        for (var propertyname in source) {\r\n            if (propertyname == \"_transform\") continue;\r\n            if (propertyname == \"_merge\") continue;\r\n            var propertyvalue = source[propertyname];\r\n            var cloned = propertyvalue;\r\n            if (typeof(propertyvalue) == \"object\") {\r\n                if (propertyvalue instanceof Array) {\r\n                    cloned = [];\r\n                    for (var i = 0; i < propertyvalue.length; i++) {\r\n                        cloned.push(propertyvalue[i]);\r\n                    }\r\n                } else if (propertyvalue instanceof CSG.Properties) {\r\n                    cloned = new CSG.Properties();\r\n                    CSG.Properties.cloneObj(propertyvalue, cloned);\r\n                }\r\n            }\r\n            result[propertyname] = cloned;\r\n        }\r\n    };\r\n\r\n    CSG.Properties.addFrom = function(result, otherproperties) {\r\n        for (var propertyname in otherproperties) {\r\n            if (propertyname == \"_transform\") continue;\r\n            if (propertyname == \"_merge\") continue;\r\n            if ((propertyname in result) &&\r\n                (typeof(result[propertyname]) == \"object\") &&\r\n                (result[propertyname] instanceof CSG.Properties) &&\r\n                (typeof(otherproperties[propertyname]) == \"object\") &&\r\n                (otherproperties[propertyname] instanceof CSG.Properties)) {\r\n                CSG.Properties.addFrom(result[propertyname], otherproperties[propertyname]);\r\n            } else if (!(propertyname in result)) {\r\n                result[propertyname] = otherproperties[propertyname];\r\n            }\r\n        }\r\n    };\r\n\r\n    //////////////////////////////////////\r\n    // # class Connector\r\n    // A connector allows to attach two objects at predefined positions\r\n    // For example a servo motor and a servo horn:\r\n    // Both can have a Connector called 'shaft'\r\n    // The horn can be moved and rotated such that the two connectors match\r\n    // and the horn is attached to the servo motor at the proper position.\r\n    // Connectors are stored in the properties of a CSG solid so they are\r\n    // ge the same transformations applied as the solid\r\n    CSG.Connector = function(point, axisvector, normalvector) {\r\n        this.point = new CSG.Vector3D(point);\r\n        this.axisvector = new CSG.Vector3D(axisvector).unit();\r\n        this.normalvector = new CSG.Vector3D(normalvector).unit();\r\n    };\r\n\r\n    CSG.Connector.prototype = {\r\n        normalized: function() {\r\n            var axisvector = this.axisvector.unit();\r\n            // make the normal vector truly normal:\r\n            var n = this.normalvector.cross(axisvector).unit();\r\n            var normalvector = axisvector.cross(n);\r\n            return new CSG.Connector(this.point, axisvector, normalvector);\r\n        },\r\n\r\n        transform: function(matrix4x4) {\r\n            var point = this.point.multiply4x4(matrix4x4);\r\n            var axisvector = this.point.plus(this.axisvector).multiply4x4(matrix4x4).minus(point);\r\n            var normalvector = this.point.plus(this.normalvector).multiply4x4(matrix4x4).minus(point);\r\n            return new CSG.Connector(point, axisvector, normalvector);\r\n        },\r\n\r\n        // Get the transformation matrix to connect this Connector to another connector\r\n        //   other: a CSG.Connector to which this connector should be connected\r\n        //   mirror: false: the 'axis' vectors of the connectors should point in the same direction\r\n        //           true: the 'axis' vectors of the connectors should point in opposite direction\r\n        //   normalrotation: degrees of rotation between the 'normal' vectors of the two\r\n        //                   connectors\r\n        getTransformationTo: function(other, mirror, normalrotation) {\r\n            mirror = mirror ? true : false;\r\n            normalrotation = normalrotation ? Number(normalrotation) : 0;\r\n            var us = this.normalized();\r\n            other = other.normalized();\r\n            // shift to the origin:\r\n            var transformation = CSG.Matrix4x4.translation(this.point.negated());\r\n            // construct the plane crossing through the origin and the two axes:\r\n            var axesplane = CSG.Plane.anyPlaneFromVector3Ds(\r\n                new CSG.Vector3D(0, 0, 0), us.axisvector, other.axisvector);\r\n            var axesbasis = new CSG.OrthoNormalBasis(axesplane);\r\n            var angle1 = axesbasis.to2D(us.axisvector).angle();\r\n            var angle2 = axesbasis.to2D(other.axisvector).angle();\r\n            var rotation = 180.0 * (angle2 - angle1) / Math.PI;\r\n            if (mirror) rotation += 180.0;\r\n            transformation = transformation.multiply(axesbasis.getProjectionMatrix());\r\n            transformation = transformation.multiply(CSG.Matrix4x4.rotationZ(rotation));\r\n            transformation = transformation.multiply(axesbasis.getInverseProjectionMatrix());\r\n            var usAxesAligned = us.transform(transformation);\r\n            // Now we have done the transformation for aligning the axes.\r\n            // We still need to align the normals:\r\n            var normalsplane = CSG.Plane.fromNormalAndPoint(other.axisvector, new CSG.Vector3D(0, 0, 0));\r\n            var normalsbasis = new CSG.OrthoNormalBasis(normalsplane);\r\n            angle1 = normalsbasis.to2D(usAxesAligned.normalvector).angle();\r\n            angle2 = normalsbasis.to2D(other.normalvector).angle();\r\n            rotation = 180.0 * (angle2 - angle1) / Math.PI;\r\n            rotation += normalrotation;\r\n            transformation = transformation.multiply(normalsbasis.getProjectionMatrix());\r\n            transformation = transformation.multiply(CSG.Matrix4x4.rotationZ(rotation));\r\n            transformation = transformation.multiply(normalsbasis.getInverseProjectionMatrix());\r\n            // and translate to the destination point:\r\n            transformation = transformation.multiply(CSG.Matrix4x4.translation(other.point));\r\n            // var usAligned = us.transform(transformation);\r\n            return transformation;\r\n        },\r\n\r\n        axisLine: function() {\r\n            return new CSG.Line3D(this.point, this.axisvector);\r\n        },\r\n\r\n        // creates a new Connector, with the connection point moved in the direction of the axisvector\r\n        extend: function(distance) {\r\n            var newpoint = this.point.plus(this.axisvector.unit().times(distance));\r\n            return new CSG.Connector(newpoint, this.axisvector, this.normalvector);\r\n        }\r\n    };\r\n\r\n    CSG.ConnectorList = function(connectors) {\r\n        this.connectors_ = connectors ? connectors.slice() : [];\r\n    };\r\n\r\n    CSG.ConnectorList.defaultNormal = [0, 0, 1];\r\n\r\n    CSG.ConnectorList.fromPath2D = function(path2D, arg1, arg2) {\r\n        if (arguments.length === 3) {\r\n            return CSG.ConnectorList._fromPath2DTangents(path2D, arg1, arg2);\r\n        } else if (arguments.length == 2) {\r\n            return CSG.ConnectorList._fromPath2DExplicit(path2D, arg1);\r\n        } else {\r\n            throw(\"call with path2D and either 2 direction vectors, or a function returning direction vectors\");\r\n        }\r\n    };\r\n\r\n    /*\r\n     * calculate the connector axisvectors by calculating the \"tangent\" for path2D.\r\n     * This is undefined for start and end points, so axis for these have to be manually\r\n     * provided.\r\n     */\r\n    CSG.ConnectorList._fromPath2DTangents = function(path2D, start, end) {\r\n        // path2D\r\n        var axis;\r\n        var pathLen = path2D.points.length;\r\n        var result = new CSG.ConnectorList([new CSG.Connector(path2D.points[0],\r\n            start, CSG.ConnectorList.defaultNormal)]);\r\n        // middle points\r\n        path2D.points.slice(1, pathLen - 1).forEach(function(p2, i) {\r\n            axis = path2D.points[i + 2].minus(path2D.points[i]).toVector3D(0);\r\n            result.appendConnector(new CSG.Connector(p2.toVector3D(0), axis,\r\n              CSG.ConnectorList.defaultNormal));\r\n        }, this);\r\n        result.appendConnector(new CSG.Connector(path2D.points[pathLen - 1], end,\r\n          CSG.ConnectorList.defaultNormal));\r\n        result.closed = path2D.closed;\r\n        return result;\r\n    };\r\n\r\n    /*\r\n     * angleIsh: either a static angle, or a function(point) returning an angle\r\n     */\r\n    CSG.ConnectorList._fromPath2DExplicit = function(path2D, angleIsh) {\r\n        function getAngle(angleIsh, pt, i) {\r\n            if (typeof angleIsh == 'function') {\r\n                angleIsh = angleIsh(pt, i);\r\n            }\r\n            return angleIsh;\r\n        }\r\n        var result = new CSG.ConnectorList(\r\n            path2D.points.map(function(p2, i) {\r\n                return new CSG.Connector(p2.toVector3D(0),\r\n                    CSG.Vector3D.Create(1, 0, 0).rotateZ(getAngle(angleIsh, p2, i)),\r\n                      CSG.ConnectorList.defaultNormal);\r\n            }, this)\r\n        );\r\n        result.closed = path2D.closed;\r\n        return result;\r\n    };\r\n\r\n\r\n    CSG.ConnectorList.prototype = {\r\n        setClosed: function(bool) {\r\n            this.closed = !!closed;\r\n        },\r\n        appendConnector: function(conn) {\r\n            this.connectors_.push(conn);\r\n        },\r\n        /*\r\n         * arguments: cagish: a cag or a function(connector) returning a cag\r\n         *            closed: whether the 3d path defined by connectors location\r\n         *              should be closed or stay open\r\n         *              Note: don't duplicate connectors in the path\r\n         * TODO: consider an option \"maySelfIntersect\" to close & force union all single segments\r\n         */\r\n        followWith: function(cagish) {\r\n            this.verify();\r\n            function getCag(cagish, connector) {\r\n                if (typeof cagish == \"function\") {\r\n                    cagish = cagish(connector.point, connector.axisvector, connector.normalvector);\r\n                }\r\n                return cagish;\r\n            }\r\n\r\n            var polygons = [], currCag;\r\n            var prevConnector = this.connectors_[this.connectors_.length - 1];\r\n            var prevCag = getCag(cagish, prevConnector);\r\n            // add walls\r\n            this.connectors_.forEach(function(connector, notFirst) {\r\n                currCag = getCag(cagish, connector);\r\n                if (notFirst || this.closed) {\r\n                    polygons.push.apply(polygons, prevCag._toWallPolygons({\r\n                        toConnector1: prevConnector, toConnector2: connector, cag: currCag}));\r\n                } else {\r\n                    // it is the first, and shape not closed -> build start wall\r\n                    polygons.push.apply(polygons,\r\n                        currCag._toPlanePolygons({toConnector: connector, flipped: true}));\r\n                }\r\n                if (notFirst == this.connectors_.length - 1 && !this.closed) {\r\n                    // build end wall\r\n                    polygons.push.apply(polygons,\r\n                        currCag._toPlanePolygons({toConnector: connector}));\r\n                }\r\n                prevCag = currCag;\r\n                prevConnector = connector;\r\n            }, this);\r\n            return CSG.fromPolygons(polygons).reTesselated().canonicalized();\r\n        },\r\n        /*\r\n         * general idea behind these checks: connectors need to have smooth transition from one to another\r\n         * TODO: add a check that 2 follow-on CAGs are not intersecting\r\n         */\r\n        verify: function() {\r\n            var connI, connI1, dPosToAxis, axisToNextAxis;\r\n            for (var i = 0; i < this.connectors_.length - 1; i++) {\r\n                connI = this.connectors_[i], connI1 = this.connectors_[i + 1];\r\n                if (connI1.point.minus(connI.point).dot(connI.axisvector) <= 0) {\r\n                    throw(\"Invalid ConnectorList. Each connectors position needs to be within a <90deg range of previous connectors axisvector\");\r\n                }\r\n                if (connI.axisvector.dot(connI1.axisvector) <= 0) {\r\n                    throw(\"invalid ConnectorList. No neighboring connectors axisvectors may span a >=90deg angle\");\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    //////////////////////////////////////\r\n    // # Class Path2D\r\n    CSG.Path2D = function(points, closed) {\r\n        closed = !!closed;\r\n        points = points || [];\r\n        // re-parse the points into CSG.Vector2D\r\n        // and remove any duplicate points\r\n        var prevpoint = null;\r\n        if (closed && (points.length > 0)) {\r\n            prevpoint = new CSG.Vector2D(points[points.length - 1]);\r\n        }\r\n        var newpoints = [];\r\n        points.map(function(point) {\r\n            point = new CSG.Vector2D(point);\r\n            var skip = false;\r\n            if (prevpoint !== null) {\r\n                var distance = point.distanceTo(prevpoint);\r\n                skip = distance < 1e-5;\r\n            }\r\n            if (!skip) newpoints.push(point);\r\n            prevpoint = point;\r\n        });\r\n        this.points = newpoints;\r\n        this.closed = closed;\r\n    };\r\n\r\n    /*\r\n    Construct a (part of a) circle. Parameters:\r\n      options.center: the center point of the arc (CSG.Vector2D or array [x,y])\r\n      options.radius: the circle radius (float)\r\n      options.startangle: the starting angle of the arc, in degrees\r\n        0 degrees corresponds to [1,0]\r\n        90 degrees to [0,1]\r\n        and so on\r\n      options.endangle: the ending angle of the arc, in degrees\r\n      options.resolution: number of points per 360 degree of rotation\r\n      options.maketangent: adds two extra tiny line segments at both ends of the circle\r\n        this ensures that the gradients at the edges are tangent to the circle\r\n    Returns a CSG.Path2D. The path is not closed (even if it is a 360 degree arc).\r\n    close() the resulting path if you want to create a true circle.\r\n    */\r\n    CSG.Path2D.arc = function(options) {\r\n        var center = CSG.parseOptionAs2DVector(options, \"center\", 0);\r\n        var radius = CSG.parseOptionAsFloat(options, \"radius\", 1);\r\n        var startangle = CSG.parseOptionAsFloat(options, \"startangle\", 0);\r\n        var endangle = CSG.parseOptionAsFloat(options, \"endangle\", 360);\r\n        var resolution = CSG.parseOptionAsInt(options, \"resolution\", CSG.defaultResolution2D);\r\n        var maketangent = CSG.parseOptionAsBool(options, \"maketangent\", false);\r\n        // no need to make multiple turns:\r\n        while (endangle - startangle >= 720) {\r\n            endangle -= 360;\r\n        }\r\n        while (endangle - startangle <= -720) {\r\n            endangle += 360;\r\n        }\r\n        var points = [],\r\n            point;\r\n        var absangledif = Math.abs(endangle - startangle);\r\n        if (absangledif < 1e-5) {\r\n            point = CSG.Vector2D.fromAngle(startangle / 180.0 * Math.PI).times(radius);\r\n            points.push(point.plus(center));\r\n        } else {\r\n            var numsteps = Math.floor(resolution * absangledif / 360) + 1;\r\n            var edgestepsize = numsteps * 0.5 / absangledif; // step size for half a degree\r\n            if (edgestepsize > 0.25) edgestepsize = 0.25;\r\n            var numsteps_mod = maketangent ? (numsteps + 2) : numsteps;\r\n            for (var i = 0; i <= numsteps_mod; i++) {\r\n                var step = i;\r\n                if (maketangent) {\r\n                    step = (i - 1) * (numsteps - 2 * edgestepsize) / numsteps + edgestepsize;\r\n                    if (step < 0) step = 0;\r\n                    if (step > numsteps) step = numsteps;\r\n                }\r\n                var angle = startangle + step * (endangle - startangle) / numsteps;\r\n                point = CSG.Vector2D.fromAngle(angle / 180.0 * Math.PI).times(radius);\r\n                points.push(point.plus(center));\r\n            }\r\n        }\r\n        return new CSG.Path2D(points, false);\r\n    };\r\n\r\n    CSG.Path2D.prototype = {\r\n        concat: function(otherpath) {\r\n            if (this.closed || otherpath.closed) {\r\n                throw new Error(\"Paths must not be closed\");\r\n            }\r\n            var newpoints = this.points.concat(otherpath.points);\r\n            return new CSG.Path2D(newpoints);\r\n        },\r\n\r\n        appendPoint: function(point) {\r\n            if (this.closed) {\r\n                throw new Error(\"Path must not be closed\");\r\n            }\r\n            point = new CSG.Vector2D(point); // cast to Vector2D\r\n            var newpoints = this.points.concat([point]);\r\n            return new CSG.Path2D(newpoints);\r\n        },\r\n\r\n        appendPoints: function(points) {\r\n            if (this.closed) {\r\n                throw new Error(\"Path must not be closed\");\r\n            }\r\n            var newpoints = this.points;\r\n            points.forEach(function(point) {\r\n                newpoints.push(new CSG.Vector2D(point)); // cast to Vector2D\r\n            })\r\n            return new CSG.Path2D(newpoints);\r\n        },\r\n\r\n        close: function() {\r\n            return new CSG.Path2D(this.points, true);\r\n        },\r\n\r\n        // Extrude the path by following it with a rectangle (upright, perpendicular to the path direction)\r\n        // Returns a CSG solid\r\n        //   width: width of the extrusion, in the z=0 plane\r\n        //   height: height of the extrusion in the z direction\r\n        //   resolution: number of segments per 360 degrees for the curve in a corner\r\n        rectangularExtrude: function(width, height, resolution) {\r\n            var cag = this.expandToCAG(width / 2, resolution);\r\n            var result = cag.extrude({\r\n                offset: [0, 0, height]\r\n            });\r\n            return result;\r\n        },\r\n\r\n        // Expand the path to a CAG\r\n        // This traces the path with a circle with radius pathradius\r\n        expandToCAG: function(pathradius, resolution) {\r\n            var sides = [];\r\n            var numpoints = this.points.length;\r\n            var startindex = 0;\r\n            if (this.closed && (numpoints > 2)) startindex = -1;\r\n            var prevvertex;\r\n            for (var i = startindex; i < numpoints; i++) {\r\n                var pointindex = i;\r\n                if (pointindex < 0) pointindex = numpoints - 1;\r\n                var point = this.points[pointindex];\r\n                var vertex = new CAG.Vertex(point);\r\n                if (i > startindex) {\r\n                    var side = new CAG.Side(prevvertex, vertex);\r\n                    sides.push(side);\r\n                }\r\n                prevvertex = vertex;\r\n            }\r\n            var shellcag = CAG.fromSides(sides);\r\n            var expanded = shellcag.expandedShell(pathradius, resolution);\r\n            return expanded;\r\n        },\r\n\r\n        innerToCAG: function() {\r\n            if (!this.closed) throw new Error(\"The path should be closed!\");\r\n            return CAG.fromPoints(this.points);\r\n        },\r\n\r\n        transform: function(matrix4x4) {\r\n            var newpoints = this.points.map(function(point) {\r\n                return point.multiply4x4(matrix4x4);\r\n            });\r\n            return new CSG.Path2D(newpoints, this.closed);\r\n        },\r\n\r\n        appendBezier: function(controlpoints, options) {\r\n            if (arguments.length < 2) {\r\n                options = {};\r\n            }\r\n            if (this.closed) {\r\n                throw new Error(\"Path must not be closed\");\r\n            }\r\n            if (!(controlpoints instanceof Array)) {\r\n                throw new Error(\"appendBezier: should pass an array of control points\")\r\n            }\r\n            if (controlpoints.length < 1) {\r\n                throw new Error(\"appendBezier: need at least 1 control point\")\r\n            }\r\n            if (this.points.length < 1) {\r\n                throw new Error(\"appendBezier: path must already contain a point (the endpoint of the path is used as the starting point for the bezier curve)\");\r\n            }\r\n            var resolution = CSG.parseOptionAsInt(options, \"resolution\", CSG.defaultResolution2D);\r\n            if (resolution < 4) resolution = 4;\r\n            var factorials = [];\r\n            var controlpoints_parsed = [];\r\n            controlpoints_parsed.push(this.points[this.points.length - 1]); // start at the previous end point\r\n            for (var i = 0; i < controlpoints.length; ++i) {\r\n                var p = controlpoints[i];\r\n                if (p === null) {\r\n                    // we can pass null as the first control point. In that case a smooth gradient is ensured:\r\n                    if (i != 0) {\r\n                        throw new Error(\"appendBezier: null can only be passed as the first control point\");\r\n                    }\r\n                    if (controlpoints.length < 2) {\r\n                        throw new Error(\"appendBezier: null can only be passed if there is at least one more control point\");\r\n                    }\r\n                    var lastBezierControlPoint;\r\n                    if ('lastBezierControlPoint' in this) {\r\n                        lastBezierControlPoint = this.lastBezierControlPoint;\r\n                    } else {\r\n                        if (this.points.length < 2) {\r\n                            throw new Error(\"appendBezier: null is passed as a control point but this requires a previous bezier curve or at least two points in the existing path\");\r\n                        }\r\n                        lastBezierControlPoint = this.points[this.points.length - 2];\r\n                    }\r\n                    // mirror the last bezier control point:\r\n                    p = this.points[this.points.length - 1].times(2).minus(lastBezierControlPoint);\r\n                } else {\r\n                    p = new CSG.Vector2D(p); // cast to Vector2D\r\n                }\r\n                controlpoints_parsed.push(p);\r\n            }\r\n            var bezier_order = controlpoints_parsed.length - 1;\r\n            var fact = 1;\r\n            for (var i = 0; i <= bezier_order; ++i) {\r\n                if (i > 0) fact *= i;\r\n                factorials.push(fact);\r\n            }\r\n            var binomials = [];\r\n            for (var i = 0; i <= bezier_order; ++i) {\r\n                var binomial = factorials[bezier_order] / (factorials[i] * factorials[bezier_order - i]);\r\n                binomials.push(binomial);\r\n            }\r\n            var getPointForT = function(t) {\r\n                var t_k = 1; // = pow(t,k)\r\n                var one_minus_t_n_minus_k = Math.pow(1 - t, bezier_order); // = pow( 1-t, bezier_order - k)\r\n                var inv_1_minus_t = (t != 1) ? (1 / (1 - t)) : 1;\r\n                var point = new CSG.Vector2D(0, 0);\r\n                for (var k = 0; k <= bezier_order; ++k) {\r\n                    if (k == bezier_order) one_minus_t_n_minus_k = 1;\r\n                    var bernstein_coefficient = binomials[k] * t_k * one_minus_t_n_minus_k;\r\n                    point = point.plus(controlpoints_parsed[k].times(bernstein_coefficient));\r\n                    t_k *= t;\r\n                    one_minus_t_n_minus_k *= inv_1_minus_t;\r\n                }\r\n                return point;\r\n            };\r\n            var newpoints = [];\r\n            var newpoints_t = [];\r\n            var numsteps = bezier_order + 1;\r\n            for (var i = 0; i < numsteps; ++i) {\r\n                var t = i / (numsteps - 1);\r\n                var point = getPointForT(t);\r\n                newpoints.push(point);\r\n                newpoints_t.push(t);\r\n            }\r\n            // subdivide each segment until the angle at each vertex becomes small enough:\r\n            var subdivide_base = 1;\r\n            var maxangle = Math.PI * 2 / resolution; // segments may have differ no more in angle than this\r\n            var maxsinangle = Math.sin(maxangle);\r\n            while (subdivide_base < newpoints.length - 1) {\r\n                var dir1 = newpoints[subdivide_base].minus(newpoints[subdivide_base - 1]).unit();\r\n                var dir2 = newpoints[subdivide_base + 1].minus(newpoints[subdivide_base]).unit();\r\n                var sinangle = dir1.cross(dir2); // this is the sine of the angle\r\n                if (Math.abs(sinangle) > maxsinangle) {\r\n                    // angle is too big, we need to subdivide\r\n                    var t0 = newpoints_t[subdivide_base - 1];\r\n                    var t1 = newpoints_t[subdivide_base + 1];\r\n                    var t0_new = t0 + (t1 - t0) * 1 / 3;\r\n                    var t1_new = t0 + (t1 - t0) * 2 / 3;\r\n                    var point0_new = getPointForT(t0_new);\r\n                    var point1_new = getPointForT(t1_new);\r\n                    // remove the point at subdivide_base and replace with 2 new points:\r\n                    newpoints.splice(subdivide_base, 1, point0_new, point1_new);\r\n                    newpoints_t.splice(subdivide_base, 1, t0_new, t1_new);\r\n                    // re - evaluate the angles, starting at the previous junction since it has changed:\r\n                    subdivide_base--;\r\n                    if (subdivide_base < 1) subdivide_base = 1;\r\n                } else {\r\n                    ++subdivide_base;\r\n                }\r\n            }\r\n            // append to the previous points, but skip the first new point because it is identical to the last point:\r\n            newpoints = this.points.concat(newpoints.slice(1));\r\n            var result = new CSG.Path2D(newpoints);\r\n            result.lastBezierControlPoint = controlpoints_parsed[controlpoints_parsed.length - 2];\r\n            return result;\r\n        },\r\n\r\n        /*\r\n         options:\r\n         .resolution // smoothness of the arc (number of segments per 360 degree of rotation)\r\n         // to create a circular arc:\r\n         .radius\r\n         // to create an elliptical arc:\r\n         .xradius\r\n         .yradius\r\n         .xaxisrotation  // the rotation (in degrees) of the x axis of the ellipse with respect to the x axis of our coordinate system\r\n         // this still leaves 4 possible arcs between the two given points. The following two flags select which one we draw:\r\n         .clockwise // = true | false (default is false). Two of the 4 solutions draw clockwise with respect to the center point, the other 2 counterclockwise\r\n         .large     // = true | false (default is false). Two of the 4 solutions are an arc longer than 180 degrees, the other two are <= 180 degrees\r\n         This implementation follows the SVG arc specs. For the details see\r\n         http://www.w3.org/TR/SVG/paths.html#PathDataEllipticalArcCommands\r\n         */\r\n        appendArc: function(endpoint, options) {\r\n            if (arguments.length < 2) {\r\n                options = {};\r\n            }\r\n            if (this.closed) {\r\n                throw new Error(\"Path must not be closed\");\r\n            }\r\n            if (this.points.length < 1) {\r\n                throw new Error(\"appendArc: path must already contain a point (the endpoint of the path is used as the starting point for the arc)\");\r\n            }\r\n            var resolution = CSG.parseOptionAsInt(options, \"resolution\", CSG.defaultResolution2D);\r\n            if (resolution < 4) resolution = 4;\r\n            var xradius, yradius;\r\n            if (('xradius' in options) || ('yradius' in options)) {\r\n                if ('radius' in options) {\r\n                    throw new Error(\"Should either give an xradius and yradius parameter, or a radius parameter\");\r\n                }\r\n                xradius = CSG.parseOptionAsFloat(options, \"xradius\", 0);\r\n                yradius = CSG.parseOptionAsFloat(options, \"yradius\", 0);\r\n            } else {\r\n                xradius = CSG.parseOptionAsFloat(options, \"radius\", 0);\r\n                yradius = xradius;\r\n            }\r\n            var xaxisrotation = CSG.parseOptionAsFloat(options, \"xaxisrotation\", 0);\r\n            var clockwise = CSG.parseOptionAsBool(options, \"clockwise\", false);\r\n            var largearc = CSG.parseOptionAsBool(options, \"large\", false);\r\n            var startpoint = this.points[this.points.length - 1];\r\n            endpoint = new CSG.Vector2D(endpoint);\r\n\r\n            var sweep_flag = !clockwise;\r\n            var newpoints = [];\r\n            if ((xradius == 0) || (yradius == 0)) {\r\n                // http://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes:\r\n                // If rx = 0 or ry = 0, then treat this as a straight line from (x1, y1) to (x2, y2) and stop\r\n                newpoints.push(endpoint);\r\n            } else {\r\n                xradius = Math.abs(xradius);\r\n                yradius = Math.abs(yradius);\r\n\r\n                // see http://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes :\r\n                var phi = xaxisrotation * Math.PI / 180.0;\r\n                var cosphi = Math.cos(phi);\r\n                var sinphi = Math.sin(phi);\r\n                var minushalfdistance = startpoint.minus(endpoint).times(0.5);\r\n                // F.6.5.1:\r\n                var start_translated = new CSG.Vector2D(cosphi * minushalfdistance.x + sinphi * minushalfdistance.y, -sinphi * minushalfdistance.x + cosphi * minushalfdistance.y);\r\n                // F.6.6.2:\r\n                var biglambda = start_translated.x * start_translated.x / (xradius * xradius) + start_translated.y * start_translated.y / (yradius * yradius);\r\n                if (biglambda > 1) {\r\n                    // F.6.6.3:\r\n                    var sqrtbiglambda = Math.sqrt(biglambda);\r\n                    xradius *= sqrtbiglambda;\r\n                    yradius *= sqrtbiglambda;\r\n                }\r\n                // F.6.5.2:\r\n                var multiplier1 = Math.sqrt((xradius * xradius * yradius * yradius - xradius * xradius * start_translated.y * start_translated.y - yradius * yradius * start_translated.x * start_translated.x) / (xradius * xradius * start_translated.y * start_translated.y + yradius * yradius * start_translated.x * start_translated.x));\r\n                if (sweep_flag == largearc) multiplier1 = -multiplier1;\r\n                var center_translated = new CSG.Vector2D(xradius * start_translated.y / yradius, -yradius * start_translated.x / xradius).times(multiplier1);\r\n                // F.6.5.3:\r\n                var center = new CSG.Vector2D(cosphi * center_translated.x - sinphi * center_translated.y, sinphi * center_translated.x + cosphi * center_translated.y).plus((startpoint.plus(endpoint)).times(0.5));\r\n                // F.6.5.5:\r\n                var vec1 = new CSG.Vector2D((start_translated.x - center_translated.x) / xradius, (start_translated.y - center_translated.y) / yradius);\r\n                var vec2 = new CSG.Vector2D((-start_translated.x - center_translated.x) / xradius, (-start_translated.y - center_translated.y) / yradius);\r\n                var theta1 = vec1.angleRadians();\r\n                var theta2 = vec2.angleRadians();\r\n                var deltatheta = theta2 - theta1;\r\n                deltatheta = deltatheta % (2 * Math.PI);\r\n                if ((!sweep_flag) && (deltatheta > 0)) {\r\n                    deltatheta -= 2 * Math.PI;\r\n                } else if ((sweep_flag) && (deltatheta < 0)) {\r\n                    deltatheta += 2 * Math.PI;\r\n                }\r\n\r\n                // Ok, we have the center point and angle range (from theta1, deltatheta radians) so we can create the ellipse\r\n                var numsteps = Math.ceil(Math.abs(deltatheta) / (2 * Math.PI) * resolution) + 1;\r\n                if (numsteps < 1) numsteps = 1;\r\n                for (var step = 1; step <= numsteps; step++) {\r\n                    var theta = theta1 + step / numsteps * deltatheta;\r\n                    var costheta = Math.cos(theta);\r\n                    var sintheta = Math.sin(theta);\r\n                    // F.6.3.1:\r\n                    var point = new CSG.Vector2D(cosphi * xradius * costheta - sinphi * yradius * sintheta, sinphi * xradius * costheta + cosphi * yradius * sintheta).plus(center);\r\n                    newpoints.push(point);\r\n                }\r\n            }\r\n            newpoints = this.points.concat(newpoints);\r\n            var result = new CSG.Path2D(newpoints);\r\n            return result;\r\n        },\r\n    };\r\n\r\n    // Add several convenience methods to the classes that support a transform() method:\r\n    CSG.addTransformationMethodsToPrototype = function(prot) {\r\n        prot.mirrored = function(plane) {\r\n            return this.transform(CSG.Matrix4x4.mirroring(plane));\r\n        };\r\n\r\n        prot.mirroredX = function() {\r\n            var plane = new CSG.Plane(CSG.Vector3D.Create(1, 0, 0), 0);\r\n            return this.mirrored(plane);\r\n        };\r\n\r\n        prot.mirroredY = function() {\r\n            var plane = new CSG.Plane(CSG.Vector3D.Create(0, 1, 0), 0);\r\n            return this.mirrored(plane);\r\n        };\r\n\r\n        prot.mirroredZ = function() {\r\n            var plane = new CSG.Plane(CSG.Vector3D.Create(0, 0, 1), 0);\r\n            return this.mirrored(plane);\r\n        };\r\n\r\n        prot.translate = function(v) {\r\n            return this.transform(CSG.Matrix4x4.translation(v));\r\n        };\r\n\r\n        prot.scale = function(f) {\r\n            return this.transform(CSG.Matrix4x4.scaling(f));\r\n        };\r\n\r\n        prot.rotateX = function(deg) {\r\n            return this.transform(CSG.Matrix4x4.rotationX(deg));\r\n        };\r\n\r\n        prot.rotateY = function(deg) {\r\n            return this.transform(CSG.Matrix4x4.rotationY(deg));\r\n        };\r\n\r\n        prot.rotateZ = function(deg) {\r\n            return this.transform(CSG.Matrix4x4.rotationZ(deg));\r\n        };\r\n\r\n        prot.rotate = function(rotationCenter, rotationAxis, degrees) {\r\n            return this.transform(CSG.Matrix4x4.rotation(rotationCenter, rotationAxis, degrees));\r\n        };\r\n\r\n        prot.rotateEulerAngles = function(alpha, beta, gamma, position) {\r\n            position = position || [0,0,0];\r\n\r\n            var Rz1 = CSG.Matrix4x4.rotationZ(alpha);\r\n            var Rx  = CSG.Matrix4x4.rotationX(beta);\r\n            var Rz2 = CSG.Matrix4x4.rotationZ(gamma);\r\n            var T   = CSG.Matrix4x4.translation(new CSG.Vector3D(position));\r\n\r\n            return this.transform(Rz2.multiply(Rx).multiply(Rz1).multiply(T));\r\n        };\r\n    };\r\n\r\n    // TODO: consider generalization and adding to addTransformationMethodsToPrototype\r\n    CSG.addCenteringToPrototype = function(prot, axes) {\r\n        prot.center = function(cAxes) {\r\n            cAxes = Array.prototype.map.call(arguments, function(a) {\r\n                return a.toLowerCase();\r\n            });\r\n            // no args: center on all axes\r\n            if (!cAxes.length) {\r\n                cAxes = axes.slice();\r\n            }\r\n            var b = this.getBounds();\r\n            return this.translate(axes.map(function(a) {\r\n                return cAxes.indexOf(a) > -1 ?\r\n                    -(b[0][a] + b[1][a])/2 : 0;\r\n            }));\r\n        };\r\n    };\r\n\r\n    //////////////////\r\n    // CAG: solid area geometry: like CSG but 2D\r\n    // Each area consists of a number of sides\r\n    // Each side is a line between 2 points\r\n    var CAG = function() {\r\n        this.sides = [];\r\n    };\r\n\r\n    // Construct a CAG from a list of `CAG.Side` instances.\r\n    CAG.fromSides = function(sides) {\r\n        var cag = new CAG();\r\n        cag.sides = sides;\r\n        return cag;\r\n    };\r\n\r\n    // Construct a CAG from a list of points (a polygon)\r\n    // Rotation direction of the points is not relevant. Points can be a convex or concave polygon.\r\n    // Polygon must not self intersect\r\n    CAG.fromPoints = function(points) {\r\n        var numpoints = points.length;\r\n        if (numpoints < 3) throw new Error(\"CAG shape needs at least 3 points\");\r\n        var sides = [];\r\n        var prevpoint = new CSG.Vector2D(points[numpoints - 1]);\r\n        var prevvertex = new CAG.Vertex(prevpoint);\r\n        points.map(function(p) {\r\n            var point = new CSG.Vector2D(p);\r\n            var vertex = new CAG.Vertex(point);\r\n            var side = new CAG.Side(prevvertex, vertex);\r\n            sides.push(side);\r\n            prevvertex = vertex;\r\n        });\r\n        var result = CAG.fromSides(sides);\r\n        if (result.isSelfIntersecting()) {\r\n            throw new Error(\"Polygon is self intersecting!\");\r\n        }\r\n        var area = result.area();\r\n        if (Math.abs(area) < 1e-5) {\r\n            throw new Error(\"Degenerate polygon!\");\r\n        }\r\n        if (area < 0) {\r\n            result = result.flipped();\r\n        }\r\n        result = result.canonicalized();\r\n        return result;\r\n    };\r\n\r\n    // Like CAG.fromPoints but does not check if it's a valid polygon.\r\n    // Points should rotate counter clockwise\r\n    CAG.fromPointsNoCheck = function(points) {\r\n        var sides = [];\r\n        var prevpoint = new CSG.Vector2D(points[points.length - 1]);\r\n        var prevvertex = new CAG.Vertex(prevpoint);\r\n        points.map(function(p) {\r\n            var point = new CSG.Vector2D(p);\r\n            var vertex = new CAG.Vertex(point);\r\n            var side = new CAG.Side(prevvertex, vertex);\r\n            sides.push(side);\r\n            prevvertex = vertex;\r\n        });\r\n        return CAG.fromSides(sides);\r\n    };\r\n\r\n    // Converts a CSG to a CAG. The CSG must consist of polygons with only z coordinates +1 and -1\r\n    // as constructed by CAG._toCSGWall(-1, 1). This is so we can use the 3D union(), intersect() etc\r\n    CAG.fromFakeCSG = function(csg) {\r\n        var sides = csg.polygons.map(function(p) {\r\n            return CAG.Side._fromFakePolygon(p);\r\n            })\r\n            .filter(function(s) {\r\n                return s !== null;\r\n        });\r\n        return CAG.fromSides(sides);\r\n    };\r\n\r\n    // see if the line between p0start and p0end intersects with the line between p1start and p1end\r\n    // returns true if the lines strictly intersect, the end points are not counted!\r\n    CAG.linesIntersect = function(p0start, p0end, p1start, p1end) {\r\n        if (p0end.equals(p1start) || p1end.equals(p0start)) {\r\n            var d = p1end.minus(p1start).unit().plus(p0end.minus(p0start).unit()).length();\r\n            if (d < 1e-5) {\r\n                return true;\r\n            }\r\n        } else {\r\n            var d0 = p0end.minus(p0start);\r\n            var d1 = p1end.minus(p1start);\r\n            if (Math.abs(d0.cross(d1)) < 1e-9) return false; // lines are parallel\r\n            var alphas = CSG.solve2Linear(-d0.x, d1.x, -d0.y, d1.y, p0start.x - p1start.x, p0start.y - p1start.y);\r\n            if ((alphas[0] > 1e-6) && (alphas[0] < 0.999999) && (alphas[1] > 1e-5) && (alphas[1] < 0.999999)) return true;\r\n            //    if( (alphas[0] >= 0) && (alphas[0] <= 1) && (alphas[1] >= 0) && (alphas[1] <= 1) ) return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    /* Construct a circle\r\n    options:\r\n      center: a 2D center point\r\n      radius: a scalar\r\n      resolution: number of sides per 360 degree rotation\r\n    returns a CAG object\r\n    */\r\n    CAG.circle = function(options) {\r\n        options = options || {};\r\n        var center = CSG.parseOptionAs2DVector(options, \"center\", [0, 0]);\r\n        var radius = CSG.parseOptionAsFloat(options, \"radius\", 1);\r\n        var resolution = CSG.parseOptionAsInt(options, \"resolution\", CSG.defaultResolution2D);\r\n        var sides = [];\r\n        var prevvertex;\r\n        for (var i = 0; i <= resolution; i++) {\r\n            var radians = 2 * Math.PI * i / resolution;\r\n            var point = CSG.Vector2D.fromAngleRadians(radians).times(radius).plus(center);\r\n            var vertex = new CAG.Vertex(point);\r\n            if (i > 0) {\r\n                sides.push(new CAG.Side(prevvertex, vertex));\r\n            }\r\n            prevvertex = vertex;\r\n        }\r\n        return CAG.fromSides(sides);\r\n    };\r\n\r\n    /* Construct a rectangle\r\n    options:\r\n      center: a 2D center point\r\n      radius: a 2D vector with width and height\r\n      returns a CAG object\r\n    */\r\n    CAG.rectangle = function(options) {\r\n        options = options || {};\r\n        var c, r;\r\n        if (('corner1' in options) || ('corner2' in options)) {\r\n            if (('center' in options) || ('radius' in options)) {\r\n                throw new Error(\"rectangle: should either give a radius and center parameter, or a corner1 and corner2 parameter\")\r\n            }\r\n            corner1 = CSG.parseOptionAs2DVector(options, \"corner1\", [0, 0]);\r\n            corner2 = CSG.parseOptionAs2DVector(options, \"corner2\", [1, 1]);\r\n            c = corner1.plus(corner2).times(0.5);\r\n            r = corner2.minus(corner1).times(0.5);\r\n        } else {\r\n            c = CSG.parseOptionAs2DVector(options, \"center\", [0, 0]);\r\n            r = CSG.parseOptionAs2DVector(options, \"radius\", [1, 1]);\r\n        }\r\n        r = r.abs(); // negative radii make no sense\r\n        var rswap = new CSG.Vector2D(r.x, -r.y);\r\n        var points = [\r\n            c.plus(r), c.plus(rswap), c.minus(r), c.minus(rswap)\r\n        ];\r\n        return CAG.fromPoints(points);\r\n    };\r\n\r\n    //     var r = CSG.roundedRectangle({\r\n    //       center: [0, 0],\r\n    //       radius: [2, 1],\r\n    //       roundradius: 0.2,\r\n    //       resolution: 8,\r\n    //     });\r\n    CAG.roundedRectangle = function(options) {\r\n        options = options || {};\r\n        var center, radius;\r\n        if (('corner1' in options) || ('corner2' in options)) {\r\n            if (('center' in options) || ('radius' in options)) {\r\n                throw new Error(\"roundedRectangle: should either give a radius and center parameter, or a corner1 and corner2 parameter\")\r\n            }\r\n            corner1 = CSG.parseOptionAs2DVector(options, \"corner1\", [0, 0]);\r\n            corner2 = CSG.parseOptionAs2DVector(options, \"corner2\", [1, 1]);\r\n            center = corner1.plus(corner2).times(0.5);\r\n            radius = corner2.minus(corner1).times(0.5);\r\n        } else {\r\n            center = CSG.parseOptionAs2DVector(options, \"center\", [0, 0]);\r\n            radius = CSG.parseOptionAs2DVector(options, \"radius\", [1, 1]);\r\n        }\r\n        radius = radius.abs(); // negative radii make no sense\r\n        var roundradius = CSG.parseOptionAsFloat(options, \"roundradius\", 0.2);\r\n        var resolution = CSG.parseOptionAsInt(options, \"resolution\", CSG.defaultResolution2D);\r\n        var maxroundradius = Math.min(radius.x, radius.y);\r\n        maxroundradius -= 0.1;\r\n        roundradius = Math.min(roundradius, maxroundradius);\r\n        roundradius = Math.max(0, roundradius);\r\n        radius = new CSG.Vector2D(radius.x - roundradius, radius.y - roundradius);\r\n        var rect = CAG.rectangle({\r\n            center: center,\r\n            radius: radius\r\n        });\r\n        if (roundradius > 0) {\r\n            rect = rect.expand(roundradius, resolution);\r\n        }\r\n        return rect;\r\n    };\r\n\r\n    // Reconstruct a CAG from the output of toCompactBinary()\r\n    CAG.fromCompactBinary = function(bin) {\r\n        if (bin['class'] != \"CAG\") throw new Error(\"Not a CAG\");\r\n        var vertices = [];\r\n        var vertexData = bin.vertexData;\r\n        var numvertices = vertexData.length / 2;\r\n        var arrayindex = 0;\r\n        for (var vertexindex = 0; vertexindex < numvertices; vertexindex++) {\r\n            var x = vertexData[arrayindex++];\r\n            var y = vertexData[arrayindex++];\r\n            var pos = new CSG.Vector2D(x, y);\r\n            var vertex = new CAG.Vertex(pos);\r\n            vertices.push(vertex);\r\n        }\r\n\r\n        var sides = [];\r\n        var numsides = bin.sideVertexIndices.length / 2;\r\n        arrayindex = 0;\r\n        for (var sideindex = 0; sideindex < numsides; sideindex++) {\r\n            var vertexindex0 = bin.sideVertexIndices[arrayindex++];\r\n            var vertexindex1 = bin.sideVertexIndices[arrayindex++];\r\n            var side = new CAG.Side(vertices[vertexindex0], vertices[vertexindex1]);\r\n            sides.push(side);\r\n        }\r\n        var cag = CAG.fromSides(sides);\r\n        cag.isCanonicalized = true;\r\n        return cag;\r\n    };\r\n\r\n    function fnSortByIndex(a, b) {\r\n        return a.index - b.index;\r\n    }\r\n\r\n    CAG.prototype = {\r\n        toString: function() {\r\n            var result = \"CAG (\" + this.sides.length + \" sides):\\n\";\r\n            this.sides.map(function(side) {\r\n                result += \"  \" + side.toString() + \"\\n\";\r\n            });\r\n            return result;\r\n        },\r\n\r\n        _toCSGWall: function(z0, z1) {\r\n            var polygons = this.sides.map(function(side) {\r\n                return side.toPolygon3D(z0, z1);\r\n            });\r\n            return CSG.fromPolygons(polygons);\r\n        },\r\n\r\n        _toVector3DPairs: function(m) {\r\n            // transform m\r\n            var pairs = this.sides.map(function(side) {\r\n                var p0 = side.vertex0.pos, p1 = side.vertex1.pos;\r\n                return [CSG.Vector3D.Create(p0.x, p0.y, 0),\r\n                    CSG.Vector3D.Create(p1.x, p1.y, 0)];\r\n            });\r\n            if (typeof m != 'undefined') {\r\n                pairs = pairs.map(function(pair) {\r\n                    return pair.map(function(v) {\r\n                        return v.transform(m);\r\n                    });\r\n                });\r\n            }\r\n            return pairs;\r\n        },\r\n\r\n        /*\r\n         * transform a cag into the polygons of a corresponding 3d plane, positioned per options\r\n         * Accepts a connector for plane positioning, or optionally\r\n         * single translation, axisVector, normalVector arguments\r\n         * (toConnector has precedence over single arguments if provided)\r\n         */\r\n        _toPlanePolygons: function(options) {\r\n            var flipped = options.flipped || false;\r\n            // reference connector for transformation\r\n            var origin = [0, 0, 0], defaultAxis = [0, 0, 1], defaultNormal = [0, 1, 0];\r\n            var thisConnector = new CSG.Connector(origin, defaultAxis, defaultNormal);\r\n            // translated connector per options\r\n            var translation = options.translation || origin;\r\n            var axisVector = options.axisVector || defaultAxis;\r\n            var normalVector = options.normalVector || defaultNormal;\r\n            // will override above if options has toConnector\r\n            var toConnector = options.toConnector ||\r\n                new CSG.Connector(translation, axisVector, normalVector);\r\n            // resulting transform\r\n            var m = thisConnector.getTransformationTo(toConnector, false, 0);\r\n            // create plane as a (partial non-closed) CSG in XY plane\r\n            var bounds = this.getBounds();\r\n            bounds[0] = bounds[0].minus(new CSG.Vector2D(1, 1));\r\n            bounds[1] = bounds[1].plus(new CSG.Vector2D(1, 1));\r\n            var csgshell = this._toCSGWall(-1, 1);\r\n            var csgplane = CSG.fromPolygons([new CSG.Polygon([\r\n                new CSG.Vertex(new CSG.Vector3D(bounds[0].x, bounds[0].y, 0)),\r\n                new CSG.Vertex(new CSG.Vector3D(bounds[1].x, bounds[0].y, 0)),\r\n                new CSG.Vertex(new CSG.Vector3D(bounds[1].x, bounds[1].y, 0)),\r\n                new CSG.Vertex(new CSG.Vector3D(bounds[0].x, bounds[1].y, 0))\r\n            ])]);\r\n            if (flipped) {\r\n                csgplane = csgplane.invert();\r\n            }\r\n            // intersectSub -> prevent premature retesselate/canonicalize\r\n            csgplane = csgplane.intersectSub(csgshell);\r\n            // only keep the polygons in the z plane:\r\n            var polys = csgplane.polygons.filter(function(polygon) {\r\n                return Math.abs(polygon.plane.normal.z) > 0.99;\r\n            });\r\n            // finally, position the plane per passed transformations\r\n            return polys.map(function(poly) {\r\n                return poly.transform(m);\r\n            });\r\n        },\r\n\r\n\r\n        /*\r\n         * given 2 connectors, this returns all polygons of a \"wall\" between 2\r\n         * copies of this cag, positioned in 3d space as \"bottom\" and\r\n         * \"top\" plane per connectors toConnector1, and toConnector2, respectively \r\n         */\r\n        _toWallPolygons: function(options) {\r\n            // normals are going to be correct as long as toConn2.point - toConn1.point\r\n            // points into cag normal direction (check in caller)\r\n            // arguments: options.toConnector1, options.toConnector2, options.cag\r\n            //     walls go from toConnector1 to toConnector2\r\n            //     optionally, target cag to point to - cag needs to have same number of sides as this!\r\n            var origin = [0, 0, 0], defaultAxis = [0, 0, 1], defaultNormal = [0, 1, 0];\r\n            var thisConnector = new CSG.Connector(origin, defaultAxis, defaultNormal);\r\n            // arguments:\r\n            var toConnector1 = options.toConnector1;\r\n            // var toConnector2 = new CSG.Connector([0, 0, -30], defaultAxis, defaultNormal);\r\n            var toConnector2 = options.toConnector2;\r\n            if (!(toConnector1 instanceof CSG.Connector && toConnector2 instanceof CSG.Connector)) {\r\n                throw('could not parse CSG.Connector arguments toConnector1 or toConnector2');\r\n            }\r\n            if (options.cag) {\r\n                if (options.cag.sides.length != this.sides.length) {\r\n                    throw('target cag needs same sides count as start cag');\r\n                }\r\n            }\r\n            // target cag is same as this unless specified\r\n            var toCag = options.cag || this;\r\n            var m1 = thisConnector.getTransformationTo(toConnector1, false, 0);\r\n            var m2 = thisConnector.getTransformationTo(toConnector2, false, 0);\r\n            var vps1 = this._toVector3DPairs(m1);\r\n            var vps2 = toCag._toVector3DPairs(m2);\r\n\r\n            var polygons = [];\r\n            vps1.forEach(function(vp1, i) {\r\n                polygons.push(new CSG.Polygon([\r\n                    new CSG.Vertex(vps2[i][1]), new CSG.Vertex(vps2[i][0]), new CSG.Vertex(vp1[0])]));\r\n                polygons.push(new CSG.Polygon([\r\n                    new CSG.Vertex(vps2[i][1]), new CSG.Vertex(vp1[0]), new CSG.Vertex(vp1[1])]));\r\n            });\r\n            return polygons;\r\n        },\r\n\r\n        union: function(cag) {\r\n            var cags;\r\n            if (cag instanceof Array) {\r\n                cags = cag;\r\n            } else {\r\n                cags = [cag];\r\n            }\r\n            var r = this._toCSGWall(-1, 1);\r\n            var r = r.union(\r\n                cags.map(function(cag) {\r\n                    return cag._toCSGWall(-1, 1).reTesselated();\r\n                }), false, false)\r\n            return CAG.fromFakeCSG(r).canonicalized();\r\n        },\r\n\r\n        subtract: function(cag) {\r\n            var cags;\r\n            if (cag instanceof Array) {\r\n                cags = cag;\r\n            } else {\r\n                cags = [cag];\r\n            }\r\n            var r = this._toCSGWall(-1, 1);\r\n            cags.map(function(cag) {\r\n                r = r.subtractSub(cag._toCSGWall(-1, 1), false, false);\r\n            });\r\n            r = r.reTesselated();\r\n            r = r.canonicalized();\r\n            r = CAG.fromFakeCSG(r);\r\n            r = r.canonicalized();\r\n            return r;\r\n        },\r\n\r\n        intersect: function(cag) {\r\n            var cags;\r\n            if (cag instanceof Array) {\r\n                cags = cag;\r\n            } else {\r\n                cags = [cag];\r\n            }\r\n            var r = this._toCSGWall(-1, 1);\r\n            cags.map(function(cag) {\r\n                r = r.intersectSub(cag._toCSGWall(-1, 1), false, false);\r\n            });\r\n            r = r.reTesselated();\r\n            r = r.canonicalized();\r\n            r = CAG.fromFakeCSG(r);\r\n            r = r.canonicalized();\r\n            return r;\r\n        },\r\n\r\n        transform: function(matrix4x4) {\r\n            var ismirror = matrix4x4.isMirroring();\r\n            var newsides = this.sides.map(function(side) {\r\n                return side.transform(matrix4x4);\r\n            });\r\n            var result = CAG.fromSides(newsides);\r\n            if (ismirror) {\r\n                result = result.flipped();\r\n            }\r\n            return result;\r\n        },\r\n\r\n        // see http://local.wasp.uwa.edu.au/~pbourke/geometry/polyarea/ :\r\n        // Area of the polygon. For a counter clockwise rotating polygon the area is positive, otherwise negative\r\n        // Note(bebbi): this looks wrong. See polygon getArea()\r\n        area: function() {\r\n            var polygonArea = 0;\r\n            this.sides.map(function(side) {\r\n                polygonArea += side.vertex0.pos.cross(side.vertex1.pos);\r\n            });\r\n            polygonArea *= 0.5;\r\n            return polygonArea;\r\n        },\r\n\r\n        flipped: function() {\r\n            var newsides = this.sides.map(function(side) {\r\n                return side.flipped();\r\n            });\r\n            newsides.reverse();\r\n            return CAG.fromSides(newsides);\r\n        },\r\n\r\n        getBounds: function() {\r\n            var minpoint;\r\n            if (this.sides.length === 0) {\r\n                minpoint = new CSG.Vector2D(0, 0);\r\n            } else {\r\n                minpoint = this.sides[0].vertex0.pos;\r\n            }\r\n            var maxpoint = minpoint;\r\n            this.sides.map(function(side) {\r\n                minpoint = minpoint.min(side.vertex0.pos);\r\n                minpoint = minpoint.min(side.vertex1.pos);\r\n                maxpoint = maxpoint.max(side.vertex0.pos);\r\n                maxpoint = maxpoint.max(side.vertex1.pos);\r\n            });\r\n            return [minpoint, maxpoint];\r\n        },\r\n\r\n        isSelfIntersecting: function(debug) {\r\n            var numsides = this.sides.length;\r\n            for (var i = 0; i < numsides; i++) {\r\n                var side0 = this.sides[i];\r\n                for (var ii = i + 1; ii < numsides; ii++) {\r\n                    var side1 = this.sides[ii];\r\n                    if (CAG.linesIntersect(side0.vertex0.pos, side0.vertex1.pos, side1.vertex0.pos, side1.vertex1.pos)) {\r\n                        if (debug) { OpenJsCad.log(side0); OpenJsCad.log(side1);}\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n\r\n        expandedShell: function(radius, resolution) {\r\n            resolution = resolution || 8;\r\n            if (resolution < 4) resolution = 4;\r\n            var cags = [];\r\n            var pointmap = {};\r\n            var cag = this.canonicalized();\r\n            cag.sides.map(function(side) {\r\n                var d = side.vertex1.pos.minus(side.vertex0.pos);\r\n                var dl = d.length();\r\n                if (dl > 1e-5) {\r\n                    d = d.times(1.0 / dl);\r\n                    var normal = d.normal().times(radius);\r\n                    var shellpoints = [\r\n                        side.vertex1.pos.plus(normal),\r\n                        side.vertex1.pos.minus(normal),\r\n                        side.vertex0.pos.minus(normal),\r\n                        side.vertex0.pos.plus(normal)\r\n                    ];\r\n                    //      var newcag = CAG.fromPointsNoCheck(shellpoints);\r\n                    var newcag = CAG.fromPoints(shellpoints);\r\n                    cags.push(newcag);\r\n                    for (var step = 0; step < 2; step++) {\r\n                        var p1 = (step === 0) ? side.vertex0.pos : side.vertex1.pos;\r\n                        var p2 = (step === 0) ? side.vertex1.pos : side.vertex0.pos;\r\n                        var tag = p1.x + \" \" + p1.y;\r\n                        if (!(tag in pointmap)) {\r\n                            pointmap[tag] = [];\r\n                        }\r\n                        pointmap[tag].push({\r\n                            \"p1\": p1,\r\n                            \"p2\": p2\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n            for (var tag in pointmap) {\r\n                var m = pointmap[tag];\r\n                var angle1, angle2;\r\n                var pcenter = m[0].p1;\r\n                if (m.length == 2) {\r\n                    var end1 = m[0].p2;\r\n                    var end2 = m[1].p2;\r\n                    angle1 = end1.minus(pcenter).angleDegrees();\r\n                    angle2 = end2.minus(pcenter).angleDegrees();\r\n                    if (angle2 < angle1) angle2 += 360;\r\n                    if (angle2 >= (angle1 + 360)) angle2 -= 360;\r\n                    if (angle2 < angle1 + 180) {\r\n                        var t = angle2;\r\n                        angle2 = angle1 + 360;\r\n                        angle1 = t;\r\n                    }\r\n                    angle1 += 90;\r\n                    angle2 -= 90;\r\n                } else {\r\n                    angle1 = 0;\r\n                    angle2 = 360;\r\n                }\r\n                var fullcircle = (angle2 > angle1 + 359.999);\r\n                if (fullcircle) {\r\n                    angle1 = 0;\r\n                    angle2 = 360;\r\n                }\r\n                if (angle2 > (angle1 + 1e-5)) {\r\n                    var points = [];\r\n                    if (!fullcircle) {\r\n                        points.push(pcenter);\r\n                    }\r\n                    var numsteps = Math.round(resolution * (angle2 - angle1) / 360);\r\n                    if (numsteps < 1) numsteps = 1;\r\n                    for (var step = 0; step <= numsteps; step++) {\r\n                        var angle = angle1 + step / numsteps * (angle2 - angle1);\r\n                        if (step == numsteps) angle = angle2; // prevent rounding errors\r\n                        var point = pcenter.plus(CSG.Vector2D.fromAngleDegrees(angle).times(radius));\r\n                        if ((!fullcircle) || (step > 0)) {\r\n                            points.push(point);\r\n                        }\r\n                    }\r\n                    var newcag = CAG.fromPointsNoCheck(points);\r\n                    cags.push(newcag);\r\n                }\r\n            }\r\n            var result = new CAG();\r\n            result = result.union(cags);\r\n            return result;\r\n        },\r\n\r\n        expand: function(radius, resolution) {\r\n            var result = this.union(this.expandedShell(radius, resolution));\r\n            return result;\r\n        },\r\n\r\n        contract: function(radius, resolution) {\r\n            var result = this.subtract(this.expandedShell(radius, resolution));\r\n            return result;\r\n        },\r\n\r\n        // extrude the CAG in a certain plane. \r\n        // Giving just a plane is not enough, multiple different extrusions in the same plane would be possible\r\n        // by rotating around the plane's origin. An additional right-hand vector should be specified as well,\r\n        // and this is exactly a CSG.OrthoNormalBasis.\r\n        // orthonormalbasis: characterizes the plane in which to extrude\r\n        // depth: thickness of the extruded shape. Extrusion is done from the plane towards above (unless \r\n        // symmetrical option is set, see below)\r\n        //\r\n        // options:\r\n        //   {symmetrical: true}  // extrude symmetrically in two directions about the plane\r\n        extrudeInOrthonormalBasis: function(orthonormalbasis, depth, options) {\r\n            // first extrude in the regular Z plane:\r\n            if (!(orthonormalbasis instanceof CSG.OrthoNormalBasis)) {\r\n                throw new Error(\"extrudeInPlane: the first parameter should be a CSG.OrthoNormalBasis\");\r\n            }\r\n            var extruded = this.extrude({\r\n                offset: [0, 0, depth]\r\n            });\r\n            if(CSG.parseOptionAsBool(options, \"symmetrical\", false))\r\n            {\r\n                extruded = extruded.translate([0,0,-depth/2]);\r\n            }\r\n            var matrix = orthonormalbasis.getInverseProjectionMatrix();\r\n            extruded = extruded.transform(matrix);\r\n            return extruded;\r\n        },\r\n\r\n        // Extrude in a standard cartesian plane, specified by two axis identifiers. Each identifier can be\r\n        // one of [\"X\",\"Y\",\"Z\",\"-X\",\"-Y\",\"-Z\"]\r\n        // The 2d x axis will map to the first given 3D axis, the 2d y axis will map to the second.\r\n        // See CSG.OrthoNormalBasis.GetCartesian for details.\r\n        extrudeInPlane: function(axis1, axis2, depth, options) {\r\n            return this.extrudeInOrthonormalBasis(CSG.OrthoNormalBasis.GetCartesian(axis1, axis2), depth, options);\r\n        },\r\n\r\n        // extruded=cag.extrude({offset: [0,0,10], twistangle: 360, twiststeps: 100});\r\n        // linear extrusion of 2D shape, with optional twist\r\n        // The 2d shape is placed in in z=0 plane and extruded into direction <offset> (a CSG.Vector3D)\r\n        // The final face is rotated <twistangle> degrees. Rotation is done around the origin of the 2d shape (i.e. x=0, y=0)\r\n        // twiststeps determines the resolution of the twist (should be >= 1)\r\n        // returns a CSG object\r\n        extrude: function(options) {\r\n            if (this.sides.length == 0) {\r\n                // empty!\r\n                return new CSG();\r\n            }\r\n            var offsetVector = CSG.parseOptionAs3DVector(options, \"offset\", [0, 0, 1]);\r\n            var twistangle = CSG.parseOptionAsFloat(options, \"twistangle\", 0);\r\n            var twiststeps = CSG.parseOptionAsInt(options, \"twiststeps\", CSG.defaultResolution3D);\r\n            if (offsetVector.z == 0) {\r\n                throw('offset cannot be orthogonal to Z axis');\r\n            }\r\n            if (twistangle == 0 || twiststeps < 1) {\r\n                twiststeps = 1;\r\n            }\r\n            var normalVector = CSG.Vector3D.Create(0, 1, 0);\r\n\r\n            var polygons = [];\r\n            // bottom and top\r\n            polygons = polygons.concat(this._toPlanePolygons({translation: [0, 0, 0],\r\n                normalVector: normalVector, flipped: !(offsetVector.z < 0)}));\r\n            polygons = polygons.concat(this._toPlanePolygons({translation: offsetVector,\r\n                normalVector: normalVector.rotateZ(twistangle), flipped: offsetVector.z < 0}));\r\n            // walls\r\n            for (var i = 0; i < twiststeps; i++) {\r\n                var c1 = new CSG.Connector(offsetVector.times(i / twiststeps), [0, 0, offsetVector.z],\r\n                    normalVector.rotateZ(i * twistangle/twiststeps));\r\n                var c2 = new CSG.Connector(offsetVector.times((i + 1) / twiststeps), [0, 0, offsetVector.z],\r\n                    normalVector.rotateZ((i + 1) * twistangle/twiststeps));\r\n                polygons = polygons.concat(this._toWallPolygons({toConnector1: c1, toConnector2: c2}));\r\n            }\r\n\r\n            return CSG.fromPolygons(polygons);\r\n        },\r\n\r\n        /*\r\n         * extrude CAG to 3d object by rotating the origin around the y axis\r\n         * (and turning everything into XY plane)\r\n         * arguments: options dict with angle and resolution, both optional\r\n         */\r\n        rotateExtrude: function(options) {\r\n            var alpha = CSG.parseOptionAsFloat(options, \"angle\", 360);\r\n            var resolution = CSG.parseOptionAsInt(options, \"resolution\", CSG.defaultResolution3D);\r\n\r\n            var EPS = 1e-5;\r\n\r\n            alpha = alpha > 360 ? alpha % 360 : alpha;\r\n            var origin = [0, 0, 0];\r\n            var axisV = CSG.Vector3D.Create(0, 1, 0);\r\n            var normalV = [0, 0, 1];\r\n            var polygons = [];\r\n            // planes only needed if alpha > 0\r\n            var connS = new CSG.Connector(origin, axisV, normalV);\r\n            if (alpha > 0 && alpha < 360) {\r\n                // we need to rotate negative to satisfy wall function condition of\r\n                // building in the direction of axis vector\r\n                var connE = new CSG.Connector(origin, axisV.rotateZ(-alpha), normalV);\r\n                polygons = polygons.concat(\r\n                    this._toPlanePolygons({toConnector: connS, flipped: true}));\r\n                polygons = polygons.concat(\r\n                    this._toPlanePolygons({toConnector: connE}));\r\n            }\r\n            var connT1 = connS, connT2;\r\n            var step = alpha/resolution;\r\n            for (var a = step; a <= alpha + EPS; a += step) {\r\n                connT2 = new CSG.Connector(origin, axisV.rotateZ(-a), normalV);\r\n                polygons = polygons.concat(this._toWallPolygons(\r\n                    {toConnector1: connT1, toConnector2: connT2}));\r\n                connT1 = connT2;\r\n            }\r\n            return CSG.fromPolygons(polygons).reTesselated();\r\n        },\r\n\r\n        // check if we are a valid CAG (for debugging)\r\n        // NOTE(bebbi) uneven side count doesn't work because rounding with EPS isn't taken into account\r\n        check: function() {\r\n            var EPS = 1e-5;\r\n            var errors = [];\r\n            if (this.isSelfIntersecting(true)) {\r\n                errors.push(\"Self intersects\");\r\n            }\r\n            var pointcount = {};\r\n            this.sides.map(function(side) {\r\n                function mappoint(p) {\r\n                    var tag = p.x + \" \" + p.y;\r\n                    if (!(tag in pointcount)) pointcount[tag] = 0;\r\n                    pointcount[tag] ++;\r\n                }\r\n                mappoint(side.vertex0.pos);\r\n                mappoint(side.vertex1.pos);\r\n            });\r\n            for (var tag in pointcount) {\r\n                var count = pointcount[tag];\r\n                if (count & 1) {\r\n                    errors.push(\"Uneven number of sides (\" + count + \") for point \" + tag);\r\n                }\r\n            }\r\n            var area = this.area();\r\n            if (area < EPS*EPS) {\r\n                errors.push(\"Area is \" + area);\r\n            }\r\n            if (errors.length > 0) {\r\n                var ertxt = \"\";\r\n                errors.map(function(err) {\r\n                    ertxt += err + \"\\n\";\r\n                });\r\n                throw new Error(ertxt);\r\n            }\r\n        },\r\n\r\n        canonicalized: function() {\r\n            if (this.isCanonicalized) {\r\n                return this;\r\n            } else {\r\n                var factory = new CAG.fuzzyCAGFactory();\r\n                var result = factory.getCAG(this);\r\n                result.isCanonicalized = true;\r\n                return result;\r\n            }\r\n        },\r\n\r\n        toCompactBinary: function() {\r\n            var cag = this.canonicalized();\r\n            var numsides = cag.sides.length;\r\n            var vertexmap = {};\r\n            var vertices = [];\r\n            var numvertices = 0;\r\n            var sideVertexIndices = new Uint32Array(2 * numsides);\r\n            var sidevertexindicesindex = 0;\r\n            cag.sides.map(function(side) {\r\n                [side.vertex0, side.vertex1].map(function(v) {\r\n                    var vertextag = v.getTag();\r\n                    var vertexindex;\r\n                    if (!(vertextag in vertexmap)) {\r\n                        vertexindex = numvertices++;\r\n                        vertexmap[vertextag] = vertexindex;\r\n                        vertices.push(v);\r\n                    } else {\r\n                        vertexindex = vertexmap[vertextag];\r\n                    }\r\n                    sideVertexIndices[sidevertexindicesindex++] = vertexindex;\r\n                });\r\n            });\r\n            var vertexData = new Float64Array(numvertices * 2);\r\n            var verticesArrayIndex = 0;\r\n            vertices.map(function(v) {\r\n                var pos = v.pos;\r\n                vertexData[verticesArrayIndex++] = pos._x;\r\n                vertexData[verticesArrayIndex++] = pos._y;\r\n            });\r\n            var result = {\r\n                'class': \"CAG\",\r\n                sideVertexIndices: sideVertexIndices,\r\n                vertexData: vertexData\r\n            };\r\n            return result;\r\n        },\r\n\r\n        getOutlinePaths: function() {\r\n            var cag = this.canonicalized();\r\n            var sideTagToSideMap = {};\r\n            var startVertexTagToSideTagMap = {};\r\n            cag.sides.map(function(side) {\r\n                var sidetag = side.getTag();\r\n                sideTagToSideMap[sidetag] = side;\r\n                var startvertextag = side.vertex0.getTag();\r\n                if (!(startvertextag in startVertexTagToSideTagMap)) {\r\n                    startVertexTagToSideTagMap[startvertextag] = [];\r\n                }\r\n                startVertexTagToSideTagMap[startvertextag].push(sidetag);\r\n            });\r\n            var paths = [];\r\n            while (true) {\r\n                var startsidetag = null;\r\n                for (var aVertexTag in startVertexTagToSideTagMap) {\r\n                    var sidesForThisVertex = startVertexTagToSideTagMap[aVertexTag];\r\n                    startsidetag = sidesForThisVertex[0];\r\n                    sidesForThisVertex.splice(0, 1);\r\n                    if (sidesForThisVertex.length === 0) {\r\n                        delete startVertexTagToSideTagMap[aVertexTag];\r\n                    }\r\n                    break;\r\n                }\r\n                if (startsidetag === null) break; // we've had all sides\r\n                var connectedVertexPoints = [];\r\n                var sidetag = startsidetag;\r\n                var thisside = sideTagToSideMap[sidetag];\r\n                var startvertextag = thisside.vertex0.getTag();\r\n                while (true) {\r\n                    connectedVertexPoints.push(thisside.vertex0.pos);\r\n                    var nextvertextag = thisside.vertex1.getTag();\r\n                    if (nextvertextag == startvertextag) break; // we've closed the polygon\r\n                    if (!(nextvertextag in startVertexTagToSideTagMap)) {\r\n                        throw new Error(\"Area is not closed!\");\r\n                    }\r\n                    var nextpossiblesidetags = startVertexTagToSideTagMap[nextvertextag];\r\n                    var nextsideindex = -1;\r\n                    if (nextpossiblesidetags.length == 1) {\r\n                        nextsideindex = 0;\r\n                    } else {\r\n                        // more than one side starting at the same vertex. This means we have\r\n                        // two shapes touching at the same corner\r\n                        var bestangle = null;\r\n                        var thisangle = thisside.direction().angleDegrees();\r\n                        for (var sideindex = 0; sideindex < nextpossiblesidetags.length; sideindex++) {\r\n                            var nextpossiblesidetag = nextpossiblesidetags[sideindex];\r\n                            var possibleside = sideTagToSideMap[nextpossiblesidetag];\r\n                            var angle = possibleside.direction().angleDegrees();\r\n                            var angledif = angle - thisangle;\r\n                            if (angledif < -180) angledif += 360;\r\n                            if (angledif >= 180) angledif -= 360;\r\n                            if ((nextsideindex < 0) || (angledif > bestangle)) {\r\n                                nextsideindex = sideindex;\r\n                                bestangle = angledif;\r\n                            }\r\n                        }\r\n                    }\r\n                    var nextsidetag = nextpossiblesidetags[nextsideindex];\r\n                    nextpossiblesidetags.splice(nextsideindex, 1);\r\n                    if (nextpossiblesidetags.length === 0) {\r\n                        delete startVertexTagToSideTagMap[nextvertextag];\r\n                    }\r\n                    thisside = sideTagToSideMap[nextsidetag];\r\n                } // inner loop\r\n                var path = new CSG.Path2D(connectedVertexPoints, true);\r\n                paths.push(path);\r\n            } // outer loop\r\n            return paths;\r\n        },\r\n\r\n        /*\r\n        cag = cag.overCutInsideCorners(cutterradius);\r\n\r\n        Using a CNC router it's impossible to cut out a true sharp inside corner. The inside corner\r\n        will be rounded due to the radius of the cutter. This function compensates for this by creating\r\n        an extra cutout at each inner corner so that the actual cut out shape will be at least as large\r\n        as needed.\r\n        */\r\n        overCutInsideCorners: function(cutterradius) {\r\n            var cag = this.canonicalized();\r\n            // for each vertex determine the 'incoming' side and 'outgoing' side:\r\n            var pointmap = {}; // tag => {pos: coord, from: [], to: []}\r\n            cag.sides.map(function(side) {\r\n                if (!(side.vertex0.getTag() in pointmap)) {\r\n                    pointmap[side.vertex0.getTag()] = {\r\n                        pos: side.vertex0.pos,\r\n                        from: [],\r\n                        to: []\r\n                    };\r\n                }\r\n                pointmap[side.vertex0.getTag()].to.push(side.vertex1.pos);\r\n                if (!(side.vertex1.getTag() in pointmap)) {\r\n                    pointmap[side.vertex1.getTag()] = {\r\n                        pos: side.vertex1.pos,\r\n                        from: [],\r\n                        to: []\r\n                    };\r\n                }\r\n                pointmap[side.vertex1.getTag()].from.push(side.vertex0.pos);\r\n            });\r\n            // overcut all sharp corners:\r\n            var cutouts = [];\r\n            for (var pointtag in pointmap) {\r\n                var pointobj = pointmap[pointtag];\r\n                if ((pointobj.from.length == 1) && (pointobj.to.length == 1)) {\r\n                    // ok, 1 incoming side and 1 outgoing side:\r\n                    var fromcoord = pointobj.from[0];\r\n                    var pointcoord = pointobj.pos;\r\n                    var tocoord = pointobj.to[0];\r\n                    var v1 = pointcoord.minus(fromcoord).unit();\r\n                    var v2 = tocoord.minus(pointcoord).unit();\r\n                    var crossproduct = v1.cross(v2);\r\n                    var isInnerCorner = (crossproduct < 0.001);\r\n                    if (isInnerCorner) {\r\n                        // yes it's a sharp corner:\r\n                        var alpha = v2.angleRadians() - v1.angleRadians() + Math.PI;\r\n                        if (alpha < 0) {\r\n                            alpha += 2 * Math.PI;\r\n                        } else if (alpha >= 2 * Math.PI) {\r\n                            alpha -= 2 * Math.PI;\r\n                        }\r\n                        var midvector = v2.minus(v1).unit();\r\n                        var circlesegmentangle = 30 / 180 * Math.PI; // resolution of the circle: segments of 30 degrees\r\n                        // we need to increase the radius slightly so that our imperfect circle will contain a perfect circle of cutterradius\r\n                        var radiuscorrected = cutterradius / Math.cos(circlesegmentangle / 2);\r\n                        var circlecenter = pointcoord.plus(midvector.times(radiuscorrected));\r\n                        // we don't need to create a full circle; a pie is enough. Find the angles for the pie:\r\n                        var startangle = alpha + midvector.angleRadians();\r\n                        var deltaangle = 2 * (Math.PI - alpha);\r\n                        var numsteps = 2 * Math.ceil(deltaangle / circlesegmentangle / 2); // should be even\r\n                        // build the pie:\r\n                        var points = [circlecenter];\r\n                        for (var i = 0; i <= numsteps; i++) {\r\n                            var angle = startangle + i / numsteps * deltaangle;\r\n                            var p = CSG.Vector2D.fromAngleRadians(angle).times(radiuscorrected).plus(circlecenter);\r\n                            points.push(p);\r\n                        }\r\n                        cutouts.push(CAG.fromPoints(points));\r\n                    }\r\n                }\r\n            }\r\n            var result = cag.subtract(cutouts);\r\n            return result;\r\n        }\r\n    };\r\n\r\n    CAG.Vertex = function(pos) {\r\n        this.pos = pos;\r\n    };\r\n\r\n    CAG.Vertex.prototype = {\r\n        toString: function() {\r\n            return \"(\" + this.pos.x.toFixed(2) + \",\" + this.pos.y.toFixed(2) + \")\";\r\n        },\r\n        getTag: function() {\r\n            var result = this.tag;\r\n            if (!result) {\r\n                result = CSG.getTag();\r\n                this.tag = result;\r\n            }\r\n            return result;\r\n        }\r\n    };\r\n\r\n    CAG.Side = function(vertex0, vertex1) {\r\n        if (!(vertex0 instanceof CAG.Vertex)) throw new Error(\"Assertion failed\");\r\n        if (!(vertex1 instanceof CAG.Vertex)) throw new Error(\"Assertion failed\");\r\n        this.vertex0 = vertex0;\r\n        this.vertex1 = vertex1;\r\n    };\r\n\r\n    CAG.Side._fromFakePolygon = function(polygon) {\r\n        polygon.vertices.forEach(function(v) {\r\n            if (!((v.pos.z >= -1.001) && (v.pos.z < -0.999)) && !((v.pos.z >= 0.999) && (v.pos.z < 1.001))) {\r\n                throw(\"Assertion failed: _fromFakePolygon expects abs z values of 1\");\r\n            }\r\n        })\r\n        // this can happen based on union, seems to be residuals -\r\n        // return null and handle in caller\r\n        if (polygon.vertices.length < 4) {\r\n            return null;\r\n        }\r\n        var reverse = false;\r\n        var vert1Indices = [];\r\n        var pts2d = polygon.vertices.filter(function(v, i) {\r\n            if (v.pos.z > 0) {\r\n                vert1Indices.push(i);\r\n                return true;\r\n            }\r\n        })\r\n        .map(function(v) {\r\n            return new CSG.Vector2D(v.pos.x, v.pos.y);\r\n        });\r\n        if (pts2d.length != 2) {\r\n            throw('Assertion failed: _fromFakePolygon: not enough points found')\r\n        }\r\n        var d = vert1Indices[1] - vert1Indices[0];\r\n        if (d == 1 || d == 3) {\r\n            if (d == 1) {\r\n                pts2d.reverse();\r\n            }\r\n        } else {\r\n            throw('Assertion failed: _fromFakePolygon: unknown index ordering');\r\n        }\r\n        var result = new CAG.Side(new CAG.Vertex(pts2d[0]), new CAG.Vertex(pts2d[1]));\r\n        return result;\r\n    };\r\n\r\n    CAG.Side.prototype = {\r\n        toString: function() {\r\n            return this.vertex0 + \" -> \" + this.vertex1;\r\n        },\r\n\r\n        toPolygon3D: function(z0, z1) {\r\n            var vertices = [\r\n                new CSG.Vertex(this.vertex0.pos.toVector3D(z0)),\r\n                new CSG.Vertex(this.vertex1.pos.toVector3D(z0)),\r\n                new CSG.Vertex(this.vertex1.pos.toVector3D(z1)),\r\n                new CSG.Vertex(this.vertex0.pos.toVector3D(z1))\r\n            ];\r\n            return new CSG.Polygon(vertices);\r\n        },\r\n\r\n        transform: function(matrix4x4) {\r\n            var newp1 = this.vertex0.pos.transform(matrix4x4);\r\n            var newp2 = this.vertex1.pos.transform(matrix4x4);\r\n            return new CAG.Side(new CAG.Vertex(newp1), new CAG.Vertex(newp2));\r\n        },\r\n\r\n        flipped: function() {\r\n            return new CAG.Side(this.vertex1, this.vertex0);\r\n        },\r\n\r\n        direction: function() {\r\n            return this.vertex1.pos.minus(this.vertex0.pos);\r\n        },\r\n\r\n        getTag: function() {\r\n            var result = this.tag;\r\n            if (!result) {\r\n                result = CSG.getTag();\r\n                this.tag = result;\r\n            }\r\n            return result;\r\n        },\r\n\r\n        lengthSquared: function() {\r\n            var x = this.vertex1.pos.x - this.vertex0.pos.x,\r\n                y = this.vertex1.pos.y - this.vertex0.pos.y;\r\n            return x * x + y * y;\r\n        },\r\n\r\n        length: function() {\r\n            return Math.sqrt(this.lengthSquared());\r\n        }\r\n    };\r\n\r\n    //////////////////////////////////////\r\n    CAG.fuzzyCAGFactory = function() {\r\n        this.vertexfactory = new CSG.fuzzyFactory(2, 1e-5);\r\n    };\r\n\r\n    CAG.fuzzyCAGFactory.prototype = {\r\n        getVertex: function(sourcevertex) {\r\n            var elements = [sourcevertex.pos._x, sourcevertex.pos._y];\r\n            var result = this.vertexfactory.lookupOrCreate(elements, function(els) {\r\n                return sourcevertex;\r\n            });\r\n            return result;\r\n        },\r\n\r\n        getSide: function(sourceside) {\r\n            var vertex0 = this.getVertex(sourceside.vertex0);\r\n            var vertex1 = this.getVertex(sourceside.vertex1);\r\n            return new CAG.Side(vertex0, vertex1);\r\n        },\r\n\r\n        getCAG: function(sourcecag) {\r\n            var _this = this;\r\n            var newsides = sourcecag.sides.map(function(side) {\r\n                return _this.getSide(side);\r\n            })\r\n            // remove bad sides (mostly a user input issue)\r\n            .filter(function(side) {\r\n                return side.length() > 1e-5;\r\n            });\r\n            return CAG.fromSides(newsides);\r\n        }\r\n    };\r\n\r\n    //////////////////////////////////////\r\n    CSG.addTransformationMethodsToPrototype(CSG.prototype);\r\n    CSG.addTransformationMethodsToPrototype(CSG.Vector2D.prototype);\r\n    CSG.addTransformationMethodsToPrototype(CSG.Vector3D.prototype);\r\n    CSG.addTransformationMethodsToPrototype(CSG.Vertex.prototype);\r\n    CSG.addTransformationMethodsToPrototype(CSG.Plane.prototype);\r\n    CSG.addTransformationMethodsToPrototype(CSG.Polygon.prototype);\r\n    CSG.addTransformationMethodsToPrototype(CSG.Line3D.prototype);\r\n    CSG.addTransformationMethodsToPrototype(CSG.Connector.prototype);\r\n    CSG.addTransformationMethodsToPrototype(CSG.Path2D.prototype);\r\n    CSG.addTransformationMethodsToPrototype(CSG.Line2D.prototype);\r\n    CSG.addTransformationMethodsToPrototype(CAG.prototype);\r\n    CSG.addTransformationMethodsToPrototype(CAG.Side.prototype);\r\n    CSG.addTransformationMethodsToPrototype(CSG.OrthoNormalBasis.prototype);\r\n\r\n    CSG.addCenteringToPrototype(CSG.prototype, ['x', 'y', 'z']);\r\n    CSG.addCenteringToPrototype(CAG.prototype, ['x', 'y']);\r\n\r\n    /*\r\n    2D polygons are now supported through the CAG class.\r\n    With many improvements (see documentation):\r\n      - shapes do no longer have to be convex\r\n      - union/intersect/subtract is supported\r\n      - expand / contract are supported\r\n\r\n    But we'll keep CSG.Polygon2D as a stub for backwards compatibility\r\n    */\r\n    CSG.Polygon2D = function(points) {\r\n        var cag = CAG.fromPoints(points);\r\n        this.sides = cag.sides;\r\n    };\r\n    CSG.Polygon2D.prototype = CAG.prototype;\r\n\r\n\r\n\r\n    module.CSG = CSG;\r\n    module.CAG = CAG;\r\n})(this); //module to export to\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/openjscad-csg/src/csg.js\n// module id = 58\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 59\n// module chunks = 0","'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('not a function');\n  }\n  this._45 = 0;\n  this._81 = 0;\n  this._65 = null;\n  this._54 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._10 = null;\nPromise._97 = null;\nPromise._61 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n};\nfunction handle(self, deferred) {\n  while (self._81 === 3) {\n    self = self._65;\n  }\n  if (Promise._10) {\n    Promise._10(self);\n  }\n  if (self._81 === 0) {\n    if (self._45 === 0) {\n      self._45 = 1;\n      self._54 = deferred;\n      return;\n    }\n    if (self._45 === 1) {\n      self._45 = 2;\n      self._54 = [self._54, deferred];\n      return;\n    }\n    self._54.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._81 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._81 === 1) {\n        resolve(deferred.promise, self._65);\n      } else {\n        reject(deferred.promise, self._65);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._65);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._81 = 3;\n      self._65 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._81 = 1;\n  self._65 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._81 = 2;\n  self._65 = newValue;\n  if (Promise._97) {\n    Promise._97(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._45 === 1) {\n    handle(self, self._54);\n    self._54 = null;\n  }\n  if (self._45 === 2) {\n    for (var i = 0; i < self._54.length; i++) {\n      handle(self, self._54[i]);\n    }\n    self._54 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  })\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise/lib/core.js\n// module id = 60\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n// React 15.5 references this module, and assumes PropTypes are still callable in production.\n// Therefore we re-export development-only version with all the PropTypes checks here.\n// However if one is migrating to the `prop-types` npm library, they will go through the\n// `index.js` entry point, and it will branch depending on the environment.\nvar factory = require('./factoryWithTypeCheckers');\nmodule.exports = function(isValidElement) {\n  // It is still allowed in 15.5.\n  var throwOnDirectAccess = false;\n  return factory(isValidElement, throwOnDirectAccess);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/factory.js\n// module id = 61\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * CSS properties which accept numbers but are not in units of \"px\".\n */\n\nvar isUnitlessNumber = {\n  animationIterationCount: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  flexOrder: true,\n  gridRow: true,\n  gridColumn: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n\n  // SVG-related properties\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true\n};\n\n/**\n * @param {string} prefix vendor-specific prefix, eg: Webkit\n * @param {string} key style name, eg: transitionDuration\n * @return {string} style name prefixed with `prefix`, properly camelCased, eg:\n * WebkitTransitionDuration\n */\nfunction prefixKey(prefix, key) {\n  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n}\n\n/**\n * Support style names that may come passed in prefixed by adding permutations\n * of vendor prefixes.\n */\nvar prefixes = ['Webkit', 'ms', 'Moz', 'O'];\n\n// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an\n// infinite loop, because it iterates over the newly added props too.\nObject.keys(isUnitlessNumber).forEach(function (prop) {\n  prefixes.forEach(function (prefix) {\n    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];\n  });\n});\n\n/**\n * Most style properties can be unset by doing .style[prop] = '' but IE8\n * doesn't like doing that with shorthand properties so for the properties that\n * IE8 breaks on, which are listed here, we instead unset each of the\n * individual properties. See http://bugs.jquery.com/ticket/12385.\n * The 4-value 'clock' properties like margin, padding, border-width seem to\n * behave without any problems. Curiously, list-style works too without any\n * special prodding.\n */\nvar shorthandPropertyExpansions = {\n  background: {\n    backgroundAttachment: true,\n    backgroundColor: true,\n    backgroundImage: true,\n    backgroundPositionX: true,\n    backgroundPositionY: true,\n    backgroundRepeat: true\n  },\n  backgroundPosition: {\n    backgroundPositionX: true,\n    backgroundPositionY: true\n  },\n  border: {\n    borderWidth: true,\n    borderStyle: true,\n    borderColor: true\n  },\n  borderBottom: {\n    borderBottomWidth: true,\n    borderBottomStyle: true,\n    borderBottomColor: true\n  },\n  borderLeft: {\n    borderLeftWidth: true,\n    borderLeftStyle: true,\n    borderLeftColor: true\n  },\n  borderRight: {\n    borderRightWidth: true,\n    borderRightStyle: true,\n    borderRightColor: true\n  },\n  borderTop: {\n    borderTopWidth: true,\n    borderTopStyle: true,\n    borderTopColor: true\n  },\n  font: {\n    fontStyle: true,\n    fontVariant: true,\n    fontWeight: true,\n    fontSize: true,\n    lineHeight: true,\n    fontFamily: true\n  },\n  outline: {\n    outlineWidth: true,\n    outlineStyle: true,\n    outlineColor: true\n  }\n};\n\nvar CSSProperty = {\n  isUnitlessNumber: isUnitlessNumber,\n  shorthandPropertyExpansions: shorthandPropertyExpansions\n};\n\nmodule.exports = CSSProperty;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/CSSProperty.js\n// module id = 62\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PooledClass = require('./PooledClass');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * A specialized pseudo-event module to help keep track of components waiting to\n * be notified when their DOM representations are available for use.\n *\n * This implements `PooledClass`, so you should never need to instantiate this.\n * Instead, use `CallbackQueue.getPooled()`.\n *\n * @class ReactMountReady\n * @implements PooledClass\n * @internal\n */\n\nvar CallbackQueue = function () {\n  function CallbackQueue(arg) {\n    _classCallCheck(this, CallbackQueue);\n\n    this._callbacks = null;\n    this._contexts = null;\n    this._arg = arg;\n  }\n\n  /**\n   * Enqueues a callback to be invoked when `notifyAll` is invoked.\n   *\n   * @param {function} callback Invoked when `notifyAll` is invoked.\n   * @param {?object} context Context to call `callback` with.\n   * @internal\n   */\n\n\n  CallbackQueue.prototype.enqueue = function enqueue(callback, context) {\n    this._callbacks = this._callbacks || [];\n    this._callbacks.push(callback);\n    this._contexts = this._contexts || [];\n    this._contexts.push(context);\n  };\n\n  /**\n   * Invokes all enqueued callbacks and clears the queue. This is invoked after\n   * the DOM representation of a component has been created or updated.\n   *\n   * @internal\n   */\n\n\n  CallbackQueue.prototype.notifyAll = function notifyAll() {\n    var callbacks = this._callbacks;\n    var contexts = this._contexts;\n    var arg = this._arg;\n    if (callbacks && contexts) {\n      !(callbacks.length === contexts.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;\n      this._callbacks = null;\n      this._contexts = null;\n      for (var i = 0; i < callbacks.length; i++) {\n        callbacks[i].call(contexts[i], arg);\n      }\n      callbacks.length = 0;\n      contexts.length = 0;\n    }\n  };\n\n  CallbackQueue.prototype.checkpoint = function checkpoint() {\n    return this._callbacks ? this._callbacks.length : 0;\n  };\n\n  CallbackQueue.prototype.rollback = function rollback(len) {\n    if (this._callbacks && this._contexts) {\n      this._callbacks.length = len;\n      this._contexts.length = len;\n    }\n  };\n\n  /**\n   * Resets the internal queue.\n   *\n   * @internal\n   */\n\n\n  CallbackQueue.prototype.reset = function reset() {\n    this._callbacks = null;\n    this._contexts = null;\n  };\n\n  /**\n   * `PooledClass` looks for this.\n   */\n\n\n  CallbackQueue.prototype.destructor = function destructor() {\n    this.reset();\n  };\n\n  return CallbackQueue;\n}();\n\nmodule.exports = PooledClass.addPoolingTo(CallbackQueue);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/CallbackQueue.js\n// module id = 63\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar DOMProperty = require('./DOMProperty');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactInstrumentation = require('./ReactInstrumentation');\n\nvar quoteAttributeValueForBrowser = require('./quoteAttributeValueForBrowser');\nvar warning = require('fbjs/lib/warning');\n\nvar VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');\nvar illegalAttributeNameCache = {};\nvar validatedAttributeNameCache = {};\n\nfunction isAttributeNameSafe(attributeName) {\n  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {\n    return true;\n  }\n  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {\n    return false;\n  }\n  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {\n    validatedAttributeNameCache[attributeName] = true;\n    return true;\n  }\n  illegalAttributeNameCache[attributeName] = true;\n  process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;\n  return false;\n}\n\nfunction shouldIgnoreValue(propertyInfo, value) {\n  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;\n}\n\n/**\n * Operations for dealing with DOM properties.\n */\nvar DOMPropertyOperations = {\n\n  /**\n   * Creates markup for the ID property.\n   *\n   * @param {string} id Unescaped ID.\n   * @return {string} Markup string.\n   */\n  createMarkupForID: function (id) {\n    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);\n  },\n\n  setAttributeForID: function (node, id) {\n    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);\n  },\n\n  createMarkupForRoot: function () {\n    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=\"\"';\n  },\n\n  setAttributeForRoot: function (node) {\n    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');\n  },\n\n  /**\n   * Creates markup for a property.\n   *\n   * @param {string} name\n   * @param {*} value\n   * @return {?string} Markup string, or null if the property was invalid.\n   */\n  createMarkupForProperty: function (name, value) {\n    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n    if (propertyInfo) {\n      if (shouldIgnoreValue(propertyInfo, value)) {\n        return '';\n      }\n      var attributeName = propertyInfo.attributeName;\n      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {\n        return attributeName + '=\"\"';\n      }\n      return attributeName + '=' + quoteAttributeValueForBrowser(value);\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      if (value == null) {\n        return '';\n      }\n      return name + '=' + quoteAttributeValueForBrowser(value);\n    }\n    return null;\n  },\n\n  /**\n   * Creates markup for a custom property.\n   *\n   * @param {string} name\n   * @param {*} value\n   * @return {string} Markup string, or empty string if the property was invalid.\n   */\n  createMarkupForCustomAttribute: function (name, value) {\n    if (!isAttributeNameSafe(name) || value == null) {\n      return '';\n    }\n    return name + '=' + quoteAttributeValueForBrowser(value);\n  },\n\n  /**\n   * Sets the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   * @param {*} value\n   */\n  setValueForProperty: function (node, name, value) {\n    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n    if (propertyInfo) {\n      var mutationMethod = propertyInfo.mutationMethod;\n      if (mutationMethod) {\n        mutationMethod(node, value);\n      } else if (shouldIgnoreValue(propertyInfo, value)) {\n        this.deleteValueForProperty(node, name);\n        return;\n      } else if (propertyInfo.mustUseProperty) {\n        // Contrary to `setAttribute`, object properties are properly\n        // `toString`ed by IE8/9.\n        node[propertyInfo.propertyName] = value;\n      } else {\n        var attributeName = propertyInfo.attributeName;\n        var namespace = propertyInfo.attributeNamespace;\n        // `setAttribute` with objects becomes only `[object]` in IE8/9,\n        // ('' + value) makes it output the correct toString()-value.\n        if (namespace) {\n          node.setAttributeNS(namespace, attributeName, '' + value);\n        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {\n          node.setAttribute(attributeName, '');\n        } else {\n          node.setAttribute(attributeName, '' + value);\n        }\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      DOMPropertyOperations.setValueForAttribute(node, name, value);\n      return;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var payload = {};\n      payload[name] = value;\n      ReactInstrumentation.debugTool.onHostOperation({\n        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,\n        type: 'update attribute',\n        payload: payload\n      });\n    }\n  },\n\n  setValueForAttribute: function (node, name, value) {\n    if (!isAttributeNameSafe(name)) {\n      return;\n    }\n    if (value == null) {\n      node.removeAttribute(name);\n    } else {\n      node.setAttribute(name, '' + value);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var payload = {};\n      payload[name] = value;\n      ReactInstrumentation.debugTool.onHostOperation({\n        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,\n        type: 'update attribute',\n        payload: payload\n      });\n    }\n  },\n\n  /**\n   * Deletes an attributes from a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   */\n  deleteValueForAttribute: function (node, name) {\n    node.removeAttribute(name);\n    if (process.env.NODE_ENV !== 'production') {\n      ReactInstrumentation.debugTool.onHostOperation({\n        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,\n        type: 'remove attribute',\n        payload: name\n      });\n    }\n  },\n\n  /**\n   * Deletes the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   */\n  deleteValueForProperty: function (node, name) {\n    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n    if (propertyInfo) {\n      var mutationMethod = propertyInfo.mutationMethod;\n      if (mutationMethod) {\n        mutationMethod(node, undefined);\n      } else if (propertyInfo.mustUseProperty) {\n        var propName = propertyInfo.propertyName;\n        if (propertyInfo.hasBooleanValue) {\n          node[propName] = false;\n        } else {\n          node[propName] = '';\n        }\n      } else {\n        node.removeAttribute(propertyInfo.attributeName);\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      node.removeAttribute(name);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      ReactInstrumentation.debugTool.onHostOperation({\n        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,\n        type: 'remove attribute',\n        payload: name\n      });\n    }\n  }\n\n};\n\nmodule.exports = DOMPropertyOperations;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/DOMPropertyOperations.js\n// module id = 64\n// module chunks = 0","/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactDOMComponentFlags = {\n  hasCachedChildNodes: 1 << 0\n};\n\nmodule.exports = ReactDOMComponentFlags;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMComponentFlags.js\n// module id = 65\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar LinkedValueUtils = require('./LinkedValueUtils');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar warning = require('fbjs/lib/warning');\n\nvar didWarnValueLink = false;\nvar didWarnValueDefaultValue = false;\n\nfunction updateOptionsIfPendingUpdateAndMounted() {\n  if (this._rootNodeID && this._wrapperState.pendingUpdate) {\n    this._wrapperState.pendingUpdate = false;\n\n    var props = this._currentElement.props;\n    var value = LinkedValueUtils.getValue(props);\n\n    if (value != null) {\n      updateOptions(this, Boolean(props.multiple), value);\n    }\n  }\n}\n\nfunction getDeclarationErrorAddendum(owner) {\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\nvar valuePropNames = ['value', 'defaultValue'];\n\n/**\n * Validation function for `value` and `defaultValue`.\n * @private\n */\nfunction checkSelectPropTypes(inst, props) {\n  var owner = inst._currentElement._owner;\n  LinkedValueUtils.checkPropTypes('select', props, owner);\n\n  if (props.valueLink !== undefined && !didWarnValueLink) {\n    process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;\n    didWarnValueLink = true;\n  }\n\n  for (var i = 0; i < valuePropNames.length; i++) {\n    var propName = valuePropNames[i];\n    if (props[propName] == null) {\n      continue;\n    }\n    var isArray = Array.isArray(props[propName]);\n    if (props.multiple && !isArray) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;\n    } else if (!props.multiple && isArray) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;\n    }\n  }\n}\n\n/**\n * @param {ReactDOMComponent} inst\n * @param {boolean} multiple\n * @param {*} propValue A stringable (with `multiple`, a list of stringables).\n * @private\n */\nfunction updateOptions(inst, multiple, propValue) {\n  var selectedValue, i;\n  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;\n\n  if (multiple) {\n    selectedValue = {};\n    for (i = 0; i < propValue.length; i++) {\n      selectedValue['' + propValue[i]] = true;\n    }\n    for (i = 0; i < options.length; i++) {\n      var selected = selectedValue.hasOwnProperty(options[i].value);\n      if (options[i].selected !== selected) {\n        options[i].selected = selected;\n      }\n    }\n  } else {\n    // Do not set `select.value` as exact behavior isn't consistent across all\n    // browsers for all cases.\n    selectedValue = '' + propValue;\n    for (i = 0; i < options.length; i++) {\n      if (options[i].value === selectedValue) {\n        options[i].selected = true;\n        return;\n      }\n    }\n    if (options.length) {\n      options[0].selected = true;\n    }\n  }\n}\n\n/**\n * Implements a <select> host component that allows optionally setting the\n * props `value` and `defaultValue`. If `multiple` is false, the prop must be a\n * stringable. If `multiple` is true, the prop must be an array of stringables.\n *\n * If `value` is not supplied (or null/undefined), user actions that change the\n * selected option will trigger updates to the rendered options.\n *\n * If it is supplied (and not null/undefined), the rendered options will not\n * update in response to user actions. Instead, the `value` prop must change in\n * order for the rendered options to update.\n *\n * If `defaultValue` is provided, any options with the supplied values will be\n * selected.\n */\nvar ReactDOMSelect = {\n  getHostProps: function (inst, props) {\n    return _assign({}, props, {\n      onChange: inst._wrapperState.onChange,\n      value: undefined\n    });\n  },\n\n  mountWrapper: function (inst, props) {\n    if (process.env.NODE_ENV !== 'production') {\n      checkSelectPropTypes(inst, props);\n    }\n\n    var value = LinkedValueUtils.getValue(props);\n    inst._wrapperState = {\n      pendingUpdate: false,\n      initialValue: value != null ? value : props.defaultValue,\n      listeners: null,\n      onChange: _handleChange.bind(inst),\n      wasMultiple: Boolean(props.multiple)\n    };\n\n    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;\n      didWarnValueDefaultValue = true;\n    }\n  },\n\n  getSelectValueContext: function (inst) {\n    // ReactDOMOption looks at this initial value so the initial generated\n    // markup has correct `selected` attributes\n    return inst._wrapperState.initialValue;\n  },\n\n  postUpdateWrapper: function (inst) {\n    var props = inst._currentElement.props;\n\n    // After the initial mount, we control selected-ness manually so don't pass\n    // this value down\n    inst._wrapperState.initialValue = undefined;\n\n    var wasMultiple = inst._wrapperState.wasMultiple;\n    inst._wrapperState.wasMultiple = Boolean(props.multiple);\n\n    var value = LinkedValueUtils.getValue(props);\n    if (value != null) {\n      inst._wrapperState.pendingUpdate = false;\n      updateOptions(inst, Boolean(props.multiple), value);\n    } else if (wasMultiple !== Boolean(props.multiple)) {\n      // For simplicity, reapply `defaultValue` if `multiple` is toggled.\n      if (props.defaultValue != null) {\n        updateOptions(inst, Boolean(props.multiple), props.defaultValue);\n      } else {\n        // Revert the select back to its default unselected state.\n        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');\n      }\n    }\n  }\n};\n\nfunction _handleChange(event) {\n  var props = this._currentElement.props;\n  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n\n  if (this._rootNodeID) {\n    this._wrapperState.pendingUpdate = true;\n  }\n  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);\n  return returnValue;\n}\n\nmodule.exports = ReactDOMSelect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMSelect.js\n// module id = 66\n// module chunks = 0","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar emptyComponentFactory;\n\nvar ReactEmptyComponentInjection = {\n  injectEmptyComponentFactory: function (factory) {\n    emptyComponentFactory = factory;\n  }\n};\n\nvar ReactEmptyComponent = {\n  create: function (instantiate) {\n    return emptyComponentFactory(instantiate);\n  }\n};\n\nReactEmptyComponent.injection = ReactEmptyComponentInjection;\n\nmodule.exports = ReactEmptyComponent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactEmptyComponent.js\n// module id = 67\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar ReactFeatureFlags = {\n  // When true, call console.time() before and .timeEnd() after each top-level\n  // render (both initial renders and updates). Useful when looking at prod-mode\n  // timeline profiles in Chrome, for example.\n  logTopLevelRenders: false\n};\n\nmodule.exports = ReactFeatureFlags;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactFeatureFlags.js\n// module id = 68\n// module chunks = 0","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar genericComponentClass = null;\nvar textComponentClass = null;\n\nvar ReactHostComponentInjection = {\n  // This accepts a class that receives the tag string. This is a catch all\n  // that can render any kind of tag.\n  injectGenericComponentClass: function (componentClass) {\n    genericComponentClass = componentClass;\n  },\n  // This accepts a text component class that takes the text string to be\n  // rendered as props.\n  injectTextComponentClass: function (componentClass) {\n    textComponentClass = componentClass;\n  }\n};\n\n/**\n * Get a host internal component class for a specific tag.\n *\n * @param {ReactElement} element The element to create.\n * @return {function} The internal class constructor function.\n */\nfunction createInternalComponent(element) {\n  !genericComponentClass ? process.env.NODE_ENV !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;\n  return new genericComponentClass(element);\n}\n\n/**\n * @param {ReactText} text\n * @return {ReactComponent}\n */\nfunction createInstanceForText(text) {\n  return new textComponentClass(text);\n}\n\n/**\n * @param {ReactComponent} component\n * @return {boolean}\n */\nfunction isTextComponent(component) {\n  return component instanceof textComponentClass;\n}\n\nvar ReactHostComponent = {\n  createInternalComponent: createInternalComponent,\n  createInstanceForText: createInstanceForText,\n  isTextComponent: isTextComponent,\n  injection: ReactHostComponentInjection\n};\n\nmodule.exports = ReactHostComponent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactHostComponent.js\n// module id = 69\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactDOMSelection = require('./ReactDOMSelection');\n\nvar containsNode = require('fbjs/lib/containsNode');\nvar focusNode = require('fbjs/lib/focusNode');\nvar getActiveElement = require('fbjs/lib/getActiveElement');\n\nfunction isInDocument(node) {\n  return containsNode(document.documentElement, node);\n}\n\n/**\n * @ReactInputSelection: React input selection module. Based on Selection.js,\n * but modified to be suitable for react and has a couple of bug fixes (doesn't\n * assume buttons have range selections allowed).\n * Input selection module for React.\n */\nvar ReactInputSelection = {\n\n  hasSelectionCapabilities: function (elem) {\n    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');\n  },\n\n  getSelectionInformation: function () {\n    var focusedElem = getActiveElement();\n    return {\n      focusedElem: focusedElem,\n      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null\n    };\n  },\n\n  /**\n   * @restoreSelection: If any selection information was potentially lost,\n   * restore it. This is useful when performing operations that could remove dom\n   * nodes and place them back in, resulting in focus being lost.\n   */\n  restoreSelection: function (priorSelectionInformation) {\n    var curFocusedElem = getActiveElement();\n    var priorFocusedElem = priorSelectionInformation.focusedElem;\n    var priorSelectionRange = priorSelectionInformation.selectionRange;\n    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {\n      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {\n        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);\n      }\n      focusNode(priorFocusedElem);\n    }\n  },\n\n  /**\n   * @getSelection: Gets the selection bounds of a focused textarea, input or\n   * contentEditable node.\n   * -@input: Look up selection bounds of this input\n   * -@return {start: selectionStart, end: selectionEnd}\n   */\n  getSelection: function (input) {\n    var selection;\n\n    if ('selectionStart' in input) {\n      // Modern browser with input or textarea.\n      selection = {\n        start: input.selectionStart,\n        end: input.selectionEnd\n      };\n    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {\n      // IE8 input.\n      var range = document.selection.createRange();\n      // There can only be one selection per document in IE, so it must\n      // be in our element.\n      if (range.parentElement() === input) {\n        selection = {\n          start: -range.moveStart('character', -input.value.length),\n          end: -range.moveEnd('character', -input.value.length)\n        };\n      }\n    } else {\n      // Content editable or old IE textarea.\n      selection = ReactDOMSelection.getOffsets(input);\n    }\n\n    return selection || { start: 0, end: 0 };\n  },\n\n  /**\n   * @setSelection: Sets the selection bounds of a textarea or input and focuses\n   * the input.\n   * -@input     Set selection bounds of this input or textarea\n   * -@offsets   Object of same form that is returned from get*\n   */\n  setSelection: function (input, offsets) {\n    var start = offsets.start;\n    var end = offsets.end;\n    if (end === undefined) {\n      end = start;\n    }\n\n    if ('selectionStart' in input) {\n      input.selectionStart = start;\n      input.selectionEnd = Math.min(end, input.value.length);\n    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {\n      var range = input.createTextRange();\n      range.collapse(true);\n      range.moveStart('character', start);\n      range.moveEnd('character', end - start);\n      range.select();\n    } else {\n      ReactDOMSelection.setOffsets(input, offsets);\n    }\n  }\n};\n\nmodule.exports = ReactInputSelection;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactInputSelection.js\n// module id = 70\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar DOMLazyTree = require('./DOMLazyTree');\nvar DOMProperty = require('./DOMProperty');\nvar React = require('react/lib/React');\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\nvar ReactCurrentOwner = require('react/lib/ReactCurrentOwner');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactDOMContainerInfo = require('./ReactDOMContainerInfo');\nvar ReactDOMFeatureFlags = require('./ReactDOMFeatureFlags');\nvar ReactFeatureFlags = require('./ReactFeatureFlags');\nvar ReactInstanceMap = require('./ReactInstanceMap');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar ReactMarkupChecksum = require('./ReactMarkupChecksum');\nvar ReactReconciler = require('./ReactReconciler');\nvar ReactUpdateQueue = require('./ReactUpdateQueue');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar instantiateReactComponent = require('./instantiateReactComponent');\nvar invariant = require('fbjs/lib/invariant');\nvar setInnerHTML = require('./setInnerHTML');\nvar shouldUpdateReactComponent = require('./shouldUpdateReactComponent');\nvar warning = require('fbjs/lib/warning');\n\nvar ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;\nvar ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;\n\nvar ELEMENT_NODE_TYPE = 1;\nvar DOC_NODE_TYPE = 9;\nvar DOCUMENT_FRAGMENT_NODE_TYPE = 11;\n\nvar instancesByReactRootID = {};\n\n/**\n * Finds the index of the first character\n * that's not common between the two given strings.\n *\n * @return {number} the index of the character where the strings diverge\n */\nfunction firstDifferenceIndex(string1, string2) {\n  var minLen = Math.min(string1.length, string2.length);\n  for (var i = 0; i < minLen; i++) {\n    if (string1.charAt(i) !== string2.charAt(i)) {\n      return i;\n    }\n  }\n  return string1.length === string2.length ? -1 : minLen;\n}\n\n/**\n * @param {DOMElement|DOMDocument} container DOM element that may contain\n * a React component\n * @return {?*} DOM element that may have the reactRoot ID, or null.\n */\nfunction getReactRootElementInContainer(container) {\n  if (!container) {\n    return null;\n  }\n\n  if (container.nodeType === DOC_NODE_TYPE) {\n    return container.documentElement;\n  } else {\n    return container.firstChild;\n  }\n}\n\nfunction internalGetID(node) {\n  // If node is something like a window, document, or text node, none of\n  // which support attributes or a .getAttribute method, gracefully return\n  // the empty string, as if the attribute were missing.\n  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';\n}\n\n/**\n * Mounts this component and inserts it into the DOM.\n *\n * @param {ReactComponent} componentInstance The instance to mount.\n * @param {DOMElement} container DOM element to mount into.\n * @param {ReactReconcileTransaction} transaction\n * @param {boolean} shouldReuseMarkup If true, do not insert markup\n */\nfunction mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {\n  var markerName;\n  if (ReactFeatureFlags.logTopLevelRenders) {\n    var wrappedElement = wrapperInstance._currentElement.props.child;\n    var type = wrappedElement.type;\n    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);\n    console.time(markerName);\n  }\n\n  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0 /* parentDebugID */\n  );\n\n  if (markerName) {\n    console.timeEnd(markerName);\n  }\n\n  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;\n  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);\n}\n\n/**\n * Batched mount.\n *\n * @param {ReactComponent} componentInstance The instance to mount.\n * @param {DOMElement} container DOM element to mount into.\n * @param {boolean} shouldReuseMarkup If true, do not insert markup\n */\nfunction batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {\n  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(\n  /* useCreateElement */\n  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);\n  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);\n  ReactUpdates.ReactReconcileTransaction.release(transaction);\n}\n\n/**\n * Unmounts a component and removes it from the DOM.\n *\n * @param {ReactComponent} instance React component instance.\n * @param {DOMElement} container DOM element to unmount from.\n * @final\n * @internal\n * @see {ReactMount.unmountComponentAtNode}\n */\nfunction unmountComponentFromNode(instance, container, safely) {\n  if (process.env.NODE_ENV !== 'production') {\n    ReactInstrumentation.debugTool.onBeginFlush();\n  }\n  ReactReconciler.unmountComponent(instance, safely);\n  if (process.env.NODE_ENV !== 'production') {\n    ReactInstrumentation.debugTool.onEndFlush();\n  }\n\n  if (container.nodeType === DOC_NODE_TYPE) {\n    container = container.documentElement;\n  }\n\n  // http://jsperf.com/emptying-a-node\n  while (container.lastChild) {\n    container.removeChild(container.lastChild);\n  }\n}\n\n/**\n * True if the supplied DOM node has a direct React-rendered child that is\n * not a React root element. Useful for warning in `render`,\n * `unmountComponentAtNode`, etc.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM element contains a direct child that was\n * rendered by React but is not a root element.\n * @internal\n */\nfunction hasNonRootReactChild(container) {\n  var rootEl = getReactRootElementInContainer(container);\n  if (rootEl) {\n    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);\n    return !!(inst && inst._hostParent);\n  }\n}\n\n/**\n * True if the supplied DOM node is a React DOM element and\n * it has been rendered by another copy of React.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM has been rendered by another copy of React\n * @internal\n */\nfunction nodeIsRenderedByOtherInstance(container) {\n  var rootEl = getReactRootElementInContainer(container);\n  return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));\n}\n\n/**\n * True if the supplied DOM node is a valid node element.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM is a valid DOM node.\n * @internal\n */\nfunction isValidContainer(node) {\n  return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));\n}\n\n/**\n * True if the supplied DOM node is a valid React node element.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM is a valid React DOM node.\n * @internal\n */\nfunction isReactNode(node) {\n  return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));\n}\n\nfunction getHostRootInstanceInContainer(container) {\n  var rootEl = getReactRootElementInContainer(container);\n  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);\n  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;\n}\n\nfunction getTopLevelWrapperInContainer(container) {\n  var root = getHostRootInstanceInContainer(container);\n  return root ? root._hostContainerInfo._topLevelWrapper : null;\n}\n\n/**\n * Temporary (?) hack so that we can store all top-level pending updates on\n * composites instead of having to worry about different types of components\n * here.\n */\nvar topLevelRootCounter = 1;\nvar TopLevelWrapper = function () {\n  this.rootID = topLevelRootCounter++;\n};\nTopLevelWrapper.prototype.isReactComponent = {};\nif (process.env.NODE_ENV !== 'production') {\n  TopLevelWrapper.displayName = 'TopLevelWrapper';\n}\nTopLevelWrapper.prototype.render = function () {\n  return this.props.child;\n};\nTopLevelWrapper.isReactTopLevelWrapper = true;\n\n/**\n * Mounting is the process of initializing a React component by creating its\n * representative DOM elements and inserting them into a supplied `container`.\n * Any prior content inside `container` is destroyed in the process.\n *\n *   ReactMount.render(\n *     component,\n *     document.getElementById('container')\n *   );\n *\n *   <div id=\"container\">                   <-- Supplied `container`.\n *     <div data-reactid=\".3\">              <-- Rendered reactRoot of React\n *       // ...                                 component.\n *     </div>\n *   </div>\n *\n * Inside of `container`, the first element rendered is the \"reactRoot\".\n */\nvar ReactMount = {\n\n  TopLevelWrapper: TopLevelWrapper,\n\n  /**\n   * Used by devtools. The keys are not important.\n   */\n  _instancesByReactRootID: instancesByReactRootID,\n\n  /**\n   * This is a hook provided to support rendering React components while\n   * ensuring that the apparent scroll position of its `container` does not\n   * change.\n   *\n   * @param {DOMElement} container The `container` being rendered into.\n   * @param {function} renderCallback This must be called once to do the render.\n   */\n  scrollMonitor: function (container, renderCallback) {\n    renderCallback();\n  },\n\n  /**\n   * Take a component that's already mounted into the DOM and replace its props\n   * @param {ReactComponent} prevComponent component instance already in the DOM\n   * @param {ReactElement} nextElement component instance to render\n   * @param {DOMElement} container container to render into\n   * @param {?function} callback function triggered on completion\n   */\n  _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {\n    ReactMount.scrollMonitor(container, function () {\n      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);\n      if (callback) {\n        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);\n      }\n    });\n\n    return prevComponent;\n  },\n\n  /**\n   * Render a new component into the DOM. Hooked by hooks!\n   *\n   * @param {ReactElement} nextElement element to render\n   * @param {DOMElement} container container to render into\n   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion\n   * @return {ReactComponent} nextComponent\n   */\n  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {\n    // Various parts of our code (such as ReactCompositeComponent's\n    // _renderValidatedComponent) assume that calls to render aren't nested;\n    // verify that that's the case.\n    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;\n\n    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;\n\n    ReactBrowserEventEmitter.ensureScrollValueMonitoring();\n    var componentInstance = instantiateReactComponent(nextElement, false);\n\n    // The initial render is synchronous but any updates that happen during\n    // rendering, in componentWillMount or componentDidMount, will be batched\n    // according to the current batching strategy.\n\n    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);\n\n    var wrapperID = componentInstance._instance.rootID;\n    instancesByReactRootID[wrapperID] = componentInstance;\n\n    return componentInstance;\n  },\n\n  /**\n   * Renders a React component into the DOM in the supplied `container`.\n   *\n   * If the React component was previously rendered into `container`, this will\n   * perform an update on it and only mutate the DOM as necessary to reflect the\n   * latest React component.\n   *\n   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.\n   * @param {ReactElement} nextElement Component element to render.\n   * @param {DOMElement} container DOM element to render into.\n   * @param {?function} callback function triggered on completion\n   * @return {ReactComponent} Component instance rendered in `container`.\n   */\n  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {\n    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;\n    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);\n  },\n\n  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {\n    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');\n    !React.isValidElement(nextElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing a string like \\'div\\', pass ' + 'React.createElement(\\'div\\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' :\n    // Check if it quacks like an element\n    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? ' Instead of passing a string like \\'div\\', pass ' + 'React.createElement(\\'div\\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;\n\n    process.env.NODE_ENV !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;\n\n    var nextWrappedElement = React.createElement(TopLevelWrapper, { child: nextElement });\n\n    var nextContext;\n    if (parentComponent) {\n      var parentInst = ReactInstanceMap.get(parentComponent);\n      nextContext = parentInst._processChildContext(parentInst._context);\n    } else {\n      nextContext = emptyObject;\n    }\n\n    var prevComponent = getTopLevelWrapperInContainer(container);\n\n    if (prevComponent) {\n      var prevWrappedElement = prevComponent._currentElement;\n      var prevElement = prevWrappedElement.props.child;\n      if (shouldUpdateReactComponent(prevElement, nextElement)) {\n        var publicInst = prevComponent._renderedComponent.getPublicInstance();\n        var updatedCallback = callback && function () {\n          callback.call(publicInst);\n        };\n        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);\n        return publicInst;\n      } else {\n        ReactMount.unmountComponentAtNode(container);\n      }\n    }\n\n    var reactRootElement = getReactRootElementInContainer(container);\n    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);\n    var containerHasNonRootReactChild = hasNonRootReactChild(container);\n\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;\n\n      if (!containerHasReactMarkup || reactRootElement.nextSibling) {\n        var rootElementSibling = reactRootElement;\n        while (rootElementSibling) {\n          if (internalGetID(rootElementSibling)) {\n            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;\n            break;\n          }\n          rootElementSibling = rootElementSibling.nextSibling;\n        }\n      }\n    }\n\n    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;\n    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();\n    if (callback) {\n      callback.call(component);\n    }\n    return component;\n  },\n\n  /**\n   * Renders a React component into the DOM in the supplied `container`.\n   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render\n   *\n   * If the React component was previously rendered into `container`, this will\n   * perform an update on it and only mutate the DOM as necessary to reflect the\n   * latest React component.\n   *\n   * @param {ReactElement} nextElement Component element to render.\n   * @param {DOMElement} container DOM element to render into.\n   * @param {?function} callback function triggered on completion\n   * @return {ReactComponent} Component instance rendered in `container`.\n   */\n  render: function (nextElement, container, callback) {\n    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);\n  },\n\n  /**\n   * Unmounts and destroys the React component rendered in the `container`.\n   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode\n   *\n   * @param {DOMElement} container DOM element containing a React component.\n   * @return {boolean} True if a component was found in and unmounted from\n   *                   `container`\n   */\n  unmountComponentAtNode: function (container) {\n    // Various parts of our code (such as ReactCompositeComponent's\n    // _renderValidatedComponent) assume that calls to render aren't nested;\n    // verify that that's the case. (Strictly speaking, unmounting won't cause a\n    // render but we still don't expect to be in a render call here.)\n    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;\n\n    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;\n\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(!nodeIsRenderedByOtherInstance(container), 'unmountComponentAtNode(): The node you\\'re attempting to unmount ' + 'was rendered by another copy of React.') : void 0;\n    }\n\n    var prevComponent = getTopLevelWrapperInContainer(container);\n    if (!prevComponent) {\n      // Check if the node being unmounted was rendered by React, but isn't a\n      // root node.\n      var containerHasNonRootReactChild = hasNonRootReactChild(container);\n\n      // Check if the container itself is a React root node.\n      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);\n\n      if (process.env.NODE_ENV !== 'production') {\n        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;\n      }\n\n      return false;\n    }\n    delete instancesByReactRootID[prevComponent._instance.rootID];\n    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);\n    return true;\n  },\n\n  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {\n    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;\n\n    if (shouldReuseMarkup) {\n      var rootElement = getReactRootElementInContainer(container);\n      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {\n        ReactDOMComponentTree.precacheNode(instance, rootElement);\n        return;\n      } else {\n        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n\n        var rootMarkup = rootElement.outerHTML;\n        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);\n\n        var normalizedMarkup = markup;\n        if (process.env.NODE_ENV !== 'production') {\n          // because rootMarkup is retrieved from the DOM, various normalizations\n          // will have occurred which will not be present in `markup`. Here,\n          // insert markup into a <div> or <iframe> depending on the container\n          // type to perform the same normalizations before comparing.\n          var normalizer;\n          if (container.nodeType === ELEMENT_NODE_TYPE) {\n            normalizer = document.createElement('div');\n            normalizer.innerHTML = markup;\n            normalizedMarkup = normalizer.innerHTML;\n          } else {\n            normalizer = document.createElement('iframe');\n            document.body.appendChild(normalizer);\n            normalizer.contentDocument.write(markup);\n            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;\n            document.body.removeChild(normalizer);\n          }\n        }\n\n        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);\n        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);\n\n        !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\\n%s', difference) : _prodInvariant('42', difference) : void 0;\n\n        if (process.env.NODE_ENV !== 'production') {\n          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\\n%s', difference) : void 0;\n        }\n      }\n    }\n\n    !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\\'re trying to render a component to the document but you didn\\'t use server rendering. We can\\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;\n\n    if (transaction.useCreateElement) {\n      while (container.lastChild) {\n        container.removeChild(container.lastChild);\n      }\n      DOMLazyTree.insertTreeBefore(container, markup, null);\n    } else {\n      setInnerHTML(container, markup);\n      ReactDOMComponentTree.precacheNode(instance, container.firstChild);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);\n      if (hostNode._debugID !== 0) {\n        ReactInstrumentation.debugTool.onHostOperation({\n          instanceID: hostNode._debugID,\n          type: 'mount',\n          payload: markup.toString()\n        });\n      }\n    }\n  }\n};\n\nmodule.exports = ReactMount;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactMount.js\n// module id = 71\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar React = require('react/lib/React');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar ReactNodeTypes = {\n  HOST: 0,\n  COMPOSITE: 1,\n  EMPTY: 2,\n\n  getType: function (node) {\n    if (node === null || node === false) {\n      return ReactNodeTypes.EMPTY;\n    } else if (React.isValidElement(node)) {\n      if (typeof node.type === 'function') {\n        return ReactNodeTypes.COMPOSITE;\n      } else {\n        return ReactNodeTypes.HOST;\n      }\n    }\n    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;\n  }\n};\n\nmodule.exports = ReactNodeTypes;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactNodeTypes.js\n// module id = 72\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ViewportMetrics = {\n\n  currentScrollLeft: 0,\n\n  currentScrollTop: 0,\n\n  refreshScrollValues: function (scrollPosition) {\n    ViewportMetrics.currentScrollLeft = scrollPosition.x;\n    ViewportMetrics.currentScrollTop = scrollPosition.y;\n  }\n\n};\n\nmodule.exports = ViewportMetrics;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ViewportMetrics.js\n// module id = 73\n// module chunks = 0","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Accumulates items that must not be null or undefined into the first one. This\n * is used to conserve memory by avoiding array allocations, and thus sacrifices\n * API cleanness. Since `current` can be null before being passed in and not\n * null after this function, make sure to assign it back to `current`:\n *\n * `a = accumulateInto(a, b);`\n *\n * This API should be sparingly used. Try `accumulate` for something cleaner.\n *\n * @return {*|array<*>} An accumulation of items.\n */\n\nfunction accumulateInto(current, next) {\n  !(next != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;\n\n  if (current == null) {\n    return next;\n  }\n\n  // Both are not empty. Warning: Never call x.concat(y) when you are not\n  // certain that x is an Array (x could be a string with concat method).\n  if (Array.isArray(current)) {\n    if (Array.isArray(next)) {\n      current.push.apply(current, next);\n      return current;\n    }\n    current.push(next);\n    return current;\n  }\n\n  if (Array.isArray(next)) {\n    // A bit too dangerous to mutate `next`.\n    return [current].concat(next);\n  }\n\n  return [current, next];\n}\n\nmodule.exports = accumulateInto;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/accumulateInto.js\n// module id = 74\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n/**\n * @param {array} arr an \"accumulation\" of items which is either an Array or\n * a single item. Useful when paired with the `accumulate` module. This is a\n * simple utility that allows us to reason about a collection of items, but\n * handling the case when there is exactly one item (and we do not need to\n * allocate an array).\n */\n\nfunction forEachAccumulated(arr, cb, scope) {\n  if (Array.isArray(arr)) {\n    arr.forEach(cb, scope);\n  } else if (arr) {\n    cb.call(scope, arr);\n  }\n}\n\nmodule.exports = forEachAccumulated;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/forEachAccumulated.js\n// module id = 75\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactNodeTypes = require('./ReactNodeTypes');\n\nfunction getHostComponentFromComposite(inst) {\n  var type;\n\n  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {\n    inst = inst._renderedComponent;\n  }\n\n  if (type === ReactNodeTypes.HOST) {\n    return inst._renderedComponent;\n  } else if (type === ReactNodeTypes.EMPTY) {\n    return null;\n  }\n}\n\nmodule.exports = getHostComponentFromComposite;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/getHostComponentFromComposite.js\n// module id = 76\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar contentKey = null;\n\n/**\n * Gets the key used to access text content on a DOM node.\n *\n * @return {?string} Key used to access text content.\n * @internal\n */\nfunction getTextContentAccessor() {\n  if (!contentKey && ExecutionEnvironment.canUseDOM) {\n    // Prefer textContent to innerText because many browsers support both but\n    // SVG <text> elements don't support innerText even when <div> does.\n    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';\n  }\n  return contentKey;\n}\n\nmodule.exports = getTextContentAccessor;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/getTextContentAccessor.js\n// module id = 77\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar ReactCompositeComponent = require('./ReactCompositeComponent');\nvar ReactEmptyComponent = require('./ReactEmptyComponent');\nvar ReactHostComponent = require('./ReactHostComponent');\n\nvar getNextDebugID = require('react/lib/getNextDebugID');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\n// To avoid a cyclic dependency, we create the final class in this module\nvar ReactCompositeComponentWrapper = function (element) {\n  this.construct(element);\n};\n\nfunction getDeclarationErrorAddendum(owner) {\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\n/**\n * Check if the type reference is a known internal type. I.e. not a user\n * provided composite type.\n *\n * @param {function} type\n * @return {boolean} Returns true if this is a valid internal type.\n */\nfunction isInternalComponentType(type) {\n  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';\n}\n\n/**\n * Given a ReactNode, create an instance that will actually be mounted.\n *\n * @param {ReactNode} node\n * @param {boolean} shouldHaveDebugID\n * @return {object} A new instance of the element's constructor.\n * @protected\n */\nfunction instantiateReactComponent(node, shouldHaveDebugID) {\n  var instance;\n\n  if (node === null || node === false) {\n    instance = ReactEmptyComponent.create(instantiateReactComponent);\n  } else if (typeof node === 'object') {\n    var element = node;\n    var type = element.type;\n    if (typeof type !== 'function' && typeof type !== 'string') {\n      var info = '';\n      if (process.env.NODE_ENV !== 'production') {\n        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n          info += ' You likely forgot to export your component from the file ' + 'it\\'s defined in.';\n        }\n      }\n      info += getDeclarationErrorAddendum(element._owner);\n      !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type, info) : _prodInvariant('130', type == null ? type : typeof type, info) : void 0;\n    }\n\n    // Special case string values\n    if (typeof element.type === 'string') {\n      instance = ReactHostComponent.createInternalComponent(element);\n    } else if (isInternalComponentType(element.type)) {\n      // This is temporarily available for custom components that are not string\n      // representations. I.e. ART. Once those are updated to use the string\n      // representation, we can drop this code path.\n      instance = new element.type(element);\n\n      // We renamed this. Allow the old name for compat. :(\n      if (!instance.getHostNode) {\n        instance.getHostNode = instance.getNativeNode;\n      }\n    } else {\n      instance = new ReactCompositeComponentWrapper(element);\n    }\n  } else if (typeof node === 'string' || typeof node === 'number') {\n    instance = ReactHostComponent.createInstanceForText(node);\n  } else {\n    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;\n  }\n\n  // These two fields are used by the DOM and ART diffing algorithms\n  // respectively. Instead of using expandos on components, we should be\n  // storing the state needed by the diffing algorithms elsewhere.\n  instance._mountIndex = 0;\n  instance._mountImage = null;\n\n  if (process.env.NODE_ENV !== 'production') {\n    instance._debugID = shouldHaveDebugID ? getNextDebugID() : 0;\n  }\n\n  // Internal instances should fully constructed at this point, so they should\n  // not get any new fields added to them at this point.\n  if (process.env.NODE_ENV !== 'production') {\n    if (Object.preventExtensions) {\n      Object.preventExtensions(instance);\n    }\n  }\n\n  return instance;\n}\n\n_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent, {\n  _instantiateReactComponent: instantiateReactComponent\n});\n\nmodule.exports = instantiateReactComponent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/instantiateReactComponent.js\n// module id = 78\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n/**\n * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary\n */\n\nvar supportedInputTypes = {\n  'color': true,\n  'date': true,\n  'datetime': true,\n  'datetime-local': true,\n  'email': true,\n  'month': true,\n  'number': true,\n  'password': true,\n  'range': true,\n  'search': true,\n  'tel': true,\n  'text': true,\n  'time': true,\n  'url': true,\n  'week': true\n};\n\nfunction isTextInputElement(elem) {\n  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n\n  if (nodeName === 'input') {\n    return !!supportedInputTypes[elem.type];\n  }\n\n  if (nodeName === 'textarea') {\n    return true;\n  }\n\n  return false;\n}\n\nmodule.exports = isTextInputElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/isTextInputElement.js\n// module id = 79\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar escapeTextContentForBrowser = require('./escapeTextContentForBrowser');\nvar setInnerHTML = require('./setInnerHTML');\n\n/**\n * Set the textContent property of a node, ensuring that whitespace is preserved\n * even in IE8. innerText is a poor substitute for textContent and, among many\n * issues, inserts <br> instead of the literal newline chars. innerHTML behaves\n * as it should.\n *\n * @param {DOMElement} node\n * @param {string} text\n * @internal\n */\nvar setTextContent = function (node, text) {\n  if (text) {\n    var firstChild = node.firstChild;\n\n    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {\n      firstChild.nodeValue = text;\n      return;\n    }\n  }\n  node.textContent = text;\n};\n\nif (ExecutionEnvironment.canUseDOM) {\n  if (!('textContent' in document.documentElement)) {\n    setTextContent = function (node, text) {\n      if (node.nodeType === 3) {\n        node.nodeValue = text;\n        return;\n      }\n      setInnerHTML(node, escapeTextContentForBrowser(text));\n    };\n  }\n}\n\nmodule.exports = setTextContent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/setTextContent.js\n// module id = 80\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactCurrentOwner = require('react/lib/ReactCurrentOwner');\nvar REACT_ELEMENT_TYPE = require('./ReactElementSymbol');\n\nvar getIteratorFn = require('./getIteratorFn');\nvar invariant = require('fbjs/lib/invariant');\nvar KeyEscapeUtils = require('./KeyEscapeUtils');\nvar warning = require('fbjs/lib/warning');\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n\n/**\n * This is inlined from ReactElement since this file is shared between\n * isomorphic and renderers. We could extract this to a\n *\n */\n\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\nvar didWarnAboutMaps = false;\n\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\nfunction getComponentKey(component, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (component && typeof component === 'object' && component.key != null) {\n    // Explicit key\n    return KeyEscapeUtils.escape(component.key);\n  }\n  // Implicit key determined by the index in the set\n  return index.toString(36);\n}\n\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  if (children === null || type === 'string' || type === 'number' ||\n  // The following is inlined from ReactElement. This means we can optimize\n  // some checks. React Fiber also inlines this logic for similar purposes.\n  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {\n    callback(traverseContext, children,\n    // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows.\n    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getComponentKey(child, i);\n      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n    if (iteratorFn) {\n      var iterator = iteratorFn.call(children);\n      var step;\n      if (iteratorFn !== children.entries) {\n        var ii = 0;\n        while (!(step = iterator.next()).done) {\n          child = step.value;\n          nextName = nextNamePrefix + getComponentKey(child, ii++);\n          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n        }\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          var mapsAsChildrenAddendum = '';\n          if (ReactCurrentOwner.current) {\n            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();\n            if (mapsAsChildrenOwnerName) {\n              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';\n            }\n          }\n          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;\n          didWarnAboutMaps = true;\n        }\n        // Iterator will provide entry [k,v] tuples rather than values.\n        while (!(step = iterator.next()).done) {\n          var entry = step.value;\n          if (entry) {\n            child = entry[1];\n            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);\n            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n          }\n        }\n      }\n    } else if (type === 'object') {\n      var addendum = '';\n      if (process.env.NODE_ENV !== 'production') {\n        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';\n        if (children._isReactElement) {\n          addendum = ' It looks like you\\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';\n        }\n        if (ReactCurrentOwner.current) {\n          var name = ReactCurrentOwner.current.getName();\n          if (name) {\n            addendum += ' Check the render method of `' + name + '`.';\n          }\n        }\n      }\n      var childrenString = String(children);\n      !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n}\n\nmodule.exports = traverseAllChildren;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/traverseAllChildren.js\n// module id = 81\n// module chunks = 0","/**\n * Copyright 2016-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nfunction isNative(fn) {\n  // Based on isNative() from Lodash\n  var funcToString = Function.prototype.toString;\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  var reIsNative = RegExp('^' + funcToString\n  // Take an example native function source for comparison\n  .call(hasOwnProperty)\n  // Strip regex characters so we can use it for regex\n  .replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n  // Remove hasOwnProperty from the template to make it generic\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n  try {\n    var source = funcToString.call(fn);\n    return reIsNative.test(source);\n  } catch (err) {\n    return false;\n  }\n}\n\nvar canUseCollections =\n// Array.from\ntypeof Array.from === 'function' &&\n// Map\ntypeof Map === 'function' && isNative(Map) &&\n// Map.prototype.keys\nMap.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) &&\n// Set\ntypeof Set === 'function' && isNative(Set) &&\n// Set.prototype.keys\nSet.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);\n\nvar setItem;\nvar getItem;\nvar removeItem;\nvar getItemIDs;\nvar addRoot;\nvar removeRoot;\nvar getRootIDs;\n\nif (canUseCollections) {\n  var itemMap = new Map();\n  var rootIDSet = new Set();\n\n  setItem = function (id, item) {\n    itemMap.set(id, item);\n  };\n  getItem = function (id) {\n    return itemMap.get(id);\n  };\n  removeItem = function (id) {\n    itemMap['delete'](id);\n  };\n  getItemIDs = function () {\n    return Array.from(itemMap.keys());\n  };\n\n  addRoot = function (id) {\n    rootIDSet.add(id);\n  };\n  removeRoot = function (id) {\n    rootIDSet['delete'](id);\n  };\n  getRootIDs = function () {\n    return Array.from(rootIDSet.keys());\n  };\n} else {\n  var itemByKey = {};\n  var rootByKey = {};\n\n  // Use non-numeric keys to prevent V8 performance issues:\n  // https://github.com/facebook/react/pull/7232\n  var getKeyFromID = function (id) {\n    return '.' + id;\n  };\n  var getIDFromKey = function (key) {\n    return parseInt(key.substr(1), 10);\n  };\n\n  setItem = function (id, item) {\n    var key = getKeyFromID(id);\n    itemByKey[key] = item;\n  };\n  getItem = function (id) {\n    var key = getKeyFromID(id);\n    return itemByKey[key];\n  };\n  removeItem = function (id) {\n    var key = getKeyFromID(id);\n    delete itemByKey[key];\n  };\n  getItemIDs = function () {\n    return Object.keys(itemByKey).map(getIDFromKey);\n  };\n\n  addRoot = function (id) {\n    var key = getKeyFromID(id);\n    rootByKey[key] = true;\n  };\n  removeRoot = function (id) {\n    var key = getKeyFromID(id);\n    delete rootByKey[key];\n  };\n  getRootIDs = function () {\n    return Object.keys(rootByKey).map(getIDFromKey);\n  };\n}\n\nvar unmountedIDs = [];\n\nfunction purgeDeep(id) {\n  var item = getItem(id);\n  if (item) {\n    var childIDs = item.childIDs;\n\n    removeItem(id);\n    childIDs.forEach(purgeDeep);\n  }\n}\n\nfunction describeComponentFrame(name, source, ownerName) {\n  return '\\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');\n}\n\nfunction getDisplayName(element) {\n  if (element == null) {\n    return '#empty';\n  } else if (typeof element === 'string' || typeof element === 'number') {\n    return '#text';\n  } else if (typeof element.type === 'string') {\n    return element.type;\n  } else {\n    return element.type.displayName || element.type.name || 'Unknown';\n  }\n}\n\nfunction describeID(id) {\n  var name = ReactComponentTreeHook.getDisplayName(id);\n  var element = ReactComponentTreeHook.getElement(id);\n  var ownerID = ReactComponentTreeHook.getOwnerID(id);\n  var ownerName;\n  if (ownerID) {\n    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);\n  }\n  process.env.NODE_ENV !== 'production' ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;\n  return describeComponentFrame(name, element && element._source, ownerName);\n}\n\nvar ReactComponentTreeHook = {\n  onSetChildren: function (id, nextChildIDs) {\n    var item = getItem(id);\n    !item ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;\n    item.childIDs = nextChildIDs;\n\n    for (var i = 0; i < nextChildIDs.length; i++) {\n      var nextChildID = nextChildIDs[i];\n      var nextChild = getItem(nextChildID);\n      !nextChild ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;\n      !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;\n      !nextChild.isMounted ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;\n      if (nextChild.parentID == null) {\n        nextChild.parentID = id;\n        // TODO: This shouldn't be necessary but mounting a new root during in\n        // componentWillMount currently causes not-yet-mounted components to\n        // be purged from our tree data so their parent id is missing.\n      }\n      !(nextChild.parentID === id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;\n    }\n  },\n  onBeforeMountComponent: function (id, element, parentID) {\n    var item = {\n      element: element,\n      parentID: parentID,\n      text: null,\n      childIDs: [],\n      isMounted: false,\n      updateCount: 0\n    };\n    setItem(id, item);\n  },\n  onBeforeUpdateComponent: function (id, element) {\n    var item = getItem(id);\n    if (!item || !item.isMounted) {\n      // We may end up here as a result of setState() in componentWillUnmount().\n      // In this case, ignore the element.\n      return;\n    }\n    item.element = element;\n  },\n  onMountComponent: function (id) {\n    var item = getItem(id);\n    !item ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;\n    item.isMounted = true;\n    var isRoot = item.parentID === 0;\n    if (isRoot) {\n      addRoot(id);\n    }\n  },\n  onUpdateComponent: function (id) {\n    var item = getItem(id);\n    if (!item || !item.isMounted) {\n      // We may end up here as a result of setState() in componentWillUnmount().\n      // In this case, ignore the element.\n      return;\n    }\n    item.updateCount++;\n  },\n  onUnmountComponent: function (id) {\n    var item = getItem(id);\n    if (item) {\n      // We need to check if it exists.\n      // `item` might not exist if it is inside an error boundary, and a sibling\n      // error boundary child threw while mounting. Then this instance never\n      // got a chance to mount, but it still gets an unmounting event during\n      // the error boundary cleanup.\n      item.isMounted = false;\n      var isRoot = item.parentID === 0;\n      if (isRoot) {\n        removeRoot(id);\n      }\n    }\n    unmountedIDs.push(id);\n  },\n  purgeUnmountedComponents: function () {\n    if (ReactComponentTreeHook._preventPurging) {\n      // Should only be used for testing.\n      return;\n    }\n\n    for (var i = 0; i < unmountedIDs.length; i++) {\n      var id = unmountedIDs[i];\n      purgeDeep(id);\n    }\n    unmountedIDs.length = 0;\n  },\n  isMounted: function (id) {\n    var item = getItem(id);\n    return item ? item.isMounted : false;\n  },\n  getCurrentStackAddendum: function (topElement) {\n    var info = '';\n    if (topElement) {\n      var name = getDisplayName(topElement);\n      var owner = topElement._owner;\n      info += describeComponentFrame(name, topElement._source, owner && owner.getName());\n    }\n\n    var currentOwner = ReactCurrentOwner.current;\n    var id = currentOwner && currentOwner._debugID;\n\n    info += ReactComponentTreeHook.getStackAddendumByID(id);\n    return info;\n  },\n  getStackAddendumByID: function (id) {\n    var info = '';\n    while (id) {\n      info += describeID(id);\n      id = ReactComponentTreeHook.getParentID(id);\n    }\n    return info;\n  },\n  getChildIDs: function (id) {\n    var item = getItem(id);\n    return item ? item.childIDs : [];\n  },\n  getDisplayName: function (id) {\n    var element = ReactComponentTreeHook.getElement(id);\n    if (!element) {\n      return null;\n    }\n    return getDisplayName(element);\n  },\n  getElement: function (id) {\n    var item = getItem(id);\n    return item ? item.element : null;\n  },\n  getOwnerID: function (id) {\n    var element = ReactComponentTreeHook.getElement(id);\n    if (!element || !element._owner) {\n      return null;\n    }\n    return element._owner._debugID;\n  },\n  getParentID: function (id) {\n    var item = getItem(id);\n    return item ? item.parentID : null;\n  },\n  getSource: function (id) {\n    var item = getItem(id);\n    var element = item ? item.element : null;\n    var source = element != null ? element._source : null;\n    return source;\n  },\n  getText: function (id) {\n    var element = ReactComponentTreeHook.getElement(id);\n    if (typeof element === 'string') {\n      return element;\n    } else if (typeof element === 'number') {\n      return '' + element;\n    } else {\n      return null;\n    }\n  },\n  getUpdateCount: function (id) {\n    var item = getItem(id);\n    return item ? item.updateCount : 0;\n  },\n\n\n  getRootIDs: getRootIDs,\n  getRegisteredIDs: getItemIDs\n};\n\nmodule.exports = ReactComponentTreeHook;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactComponentTreeHook.js\n// module id = 82\n// module chunks = 0","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n// The Symbol used to tag the ReactElement type. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\n\nvar REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;\n\nmodule.exports = REACT_ELEMENT_TYPE;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactElementSymbol.js\n// module id = 83\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar canDefineProperty = false;\nif (process.env.NODE_ENV !== 'production') {\n  try {\n    // $FlowFixMe https://github.com/facebook/flow/issues/285\n    Object.defineProperty({}, 'x', { get: function () {} });\n    canDefineProperty = true;\n  } catch (x) {\n    // IE will fail on defineProperty\n  }\n}\n\nmodule.exports = canDefineProperty;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/canDefineProperty.js\n// module id = 84\n// module chunks = 0","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/asap/browser-raw.js\n// module id = 85\n// module chunks = 0","import React, { Component } from 'react';\nimport PuzzleSVGBasic from './PuzzleSVGBasic';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      rows: 2,\n      cols: 2\n    };\n  }\n\n  handleRowDown = () => {\n    this.setState((prevState) => ({ rows: prevState.rows-1 }));\n  }\n  handleRowUp = () => {\n    this.setState((prevState) => ({ rows: prevState.rows+1 }));\n  }\n  handleColDown = () => {\n    this.setState((prevState) => ({ cols: prevState.cols-1 }));\n  }\n  handleColUp = () => {\n    this.setState((prevState) => ({ cols: prevState.cols+1 }));\n  }\n\n  render() {\n    const {\n      rows,\n      cols\n    } = this.state;\n    return (\n        <div>\n          <button onClick={this.handleRowDown}>&lt;</button> { rows } Rows <button onClick={this.handleRowUp}>&gt;</button>\n          <button onClick={this.handleColDown}>&lt;</button> { cols } Cols <button onClick={this.handleColUp}>&gt;</button><br/>\n          <PuzzleSVGBasic cols={cols} rows={rows} seed=\"123\" piece_width={25.4} piece_height={25.4} dpi={96} margin={.25*25.4} kerf={.004*25.4} strokeWidth={.001*25.4}/>\n        </div>\n    );\n  }\n}\n\nexport default App;\n\n\n\n// WEBPACK FOOTER //\n// ./src/AppBasic.js","import React, { Component } from 'react';\nimport seedrandom from 'seedrandom';\nimport makerjs from 'makerjs';\nimport clone from 'clone';\n\nimport img from './Logo3x3.svg';\n\nconst pt2str = ([x,y]) => (x +\" \" + y);\nconst lerp = (pt1,pt2,t) => ([pt1[0]*(1-t)+pt2[0]*t, pt1[1]*(1-t)+pt2[1]*t]);\nconst add = (pt1,pt2) => ([pt1[0]+pt2[0], pt1[1]+pt2[1]]);\n\nconst appendEdge = (pts, edge) => {\n  if(edge.length === 2) {\n    pts.push(\"L \" + pt2str(edge[1]));\n  } else {\n    pts.push(\"L \" + pt2str(lerp(edge[0], edge[1], .5)));\n    pts.push(\"Q \" + pt2str(edge[1]) + \" \" + pt2str(lerp(edge[1], edge[2], .5)));\n    pts.push(\"T \" + pt2str(lerp(edge[2], edge[3], .5)));\n    pts.push(\"T \" + pt2str(lerp(edge[3], edge[4], .5)));\n    pts.push(\"T \" + pt2str(lerp(edge[4], edge[5], .5)));\n    pts.push(\"L \" + pt2str(edge[5]));\n\n/*\n    let e0_5 = lerp(edge[0], edge[1], .5);\n    let e1_5 = lerp(edge[1], edge[2], .5);\n    let e2_5 = lerp(edge[2], edge[3], .5);\n    let e3_5 = lerp(edge[3], edge[4], .5);\n    let e4_5 = lerp(edge[4], edge[5], .5);\n\n    let bez = quadraticBezierInterp(e0_5, edge[1], e1_5, 10);\n    for(let i = 0; i < bez.length-1; i++) {\n      pts.push(\"L \" + pt2str(bez[i]));\n    }\n\n    bez = quadraticBezierInterp(e1_5, edge[2], e2_5, 10);\n    for(let i = 0; i < bez.length-1; i++) {\n      pts.push(\"L \" + pt2str(bez[i]));\n    }\n\n    bez = quadraticBezierInterp(e2_5, edge[3], e3_5, 10);\n    for(let i = 0; i < bez.length-1; i++) {\n      pts.push(\"L \" + pt2str(bez[i]));\n    }\n\n    bez = quadraticBezierInterp(e3_5, edge[4], e4_5, 10);\n    for(let i = 0; i < bez.length; i++) {\n      pts.push(\"L \" + pt2str(bez[i]));\n    }\n    pts.push(\"L \" + pt2str(edge[5]));\n    */\n\n//    let bez = cubicBezierInterp(edge[1], edge[2], edge[3], edge[4], 30);\n//    for(let i = 0; i < bez.length; i++) {\n//      pts.push(\"L \" + pt2str(bez[i]));\n//    }\n//    pts.push(\"C \" + pt2str(edge[2]) + \" \" + pt2str(edge[3]) + \" \" + pt2str(edge[4]));\n\n//    pts.push(\"L \" + pt2str(edge[1]));\n//    pts.push(\"L \" + pt2str(edge[2]));\n//    pts.push(\"L \" + pt2str(edge[3]));\n//    pts.push(\"L \" + pt2str(edge[4]));\n//    pts.push(\"L \" + pt2str(edge[5]));\n  }\n};\n\nclass PuzzleSVGBasic extends Component {\n  render() {\n    const {\n      seed,\n      piece_width,\n      piece_height,\n      strokeWidth,\n      margin,\n      cols,\n      rows\n    } = this.props;\n\n    const rng = seedrandom(seed);\n    const crng = (m) => (m*(rng()-.5));\n\n    let w = piece_width;\n    let h = piece_height;\n\n    let points = [];\n\n    var pointOffsetXMax = .25*w;\n    var pointOffsetYMax = .25*h;\n\n    var controlPointOffsetXMax = w*.083;\n    var controlPointOffsetYMax = h*.083;\n\n    var controlT1H = .50;\n    var controlT2H = .33;\n    var controlT3H = .67;\n    var controlT4H = .50;\n\n    var controlT1V = .5;\n    var controlT2V = .33;\n    var controlT3V = .67;\n    var controlT4V = .5;\n\n    for(let r = 0; r < rows+1; r++) {\n      let row = [];\n      points.push(row);\n      for(let c = 0; c < cols+1; c++) {\n        let x = c*piece_width;\n        let y = r*piece_height;\n        if(r !== 0 && r !== rows) {\n          y += crng(pointOffsetYMax);\n        }\n\n        if(c !== 0 && c !== cols) {\n          x += crng(pointOffsetXMax);\n        }\n\n        row.push([x,y]);\n      }\n    }\n\n    let horizontal_edges = [];\n    for(let r = 0; r < rows+1; r++) {\n      let row = [];\n      horizontal_edges.push(row);\n      for(let c = 0; c < cols; c++) {\n        let pt1 = points[r][c];\n        let pt2 = points[r][c+1];\n\n        if(r === 0 || r === rows) {\n          row.push([ pt1, pt2 ]);\n        } else {\n          const up = 2*Math.floor(2*rng())-1;\n\n          row.push([ pt1, add(lerp(pt1,pt2,controlT1H), [ crng(controlPointOffsetXMax), crng(controlPointOffsetYMax) ]),\n                          add(lerp(pt1,pt2,controlT2H), [ crng(controlPointOffsetXMax), up*.33*h+crng(controlPointOffsetYMax) ]),\n                          add(lerp(pt1,pt2,controlT3H), [ crng(controlPointOffsetXMax), up*.33*h+crng(controlPointOffsetYMax) ]),\n                          add(lerp(pt1,pt2,controlT4H), [ crng(controlPointOffsetXMax), crng(controlPointOffsetYMax) ]),\n                          pt2 ]);\n\n        }\n      }\n    }\n\n    let vertical_edges = [];\n    for(let r = 0; r < rows; r++) {\n      let row = [];\n      vertical_edges.push(row);\n      for(let c = 0; c < cols+1; c++) {\n        let pt1 = points[r][c];\n        let pt2 = points[r+1][c];\n\n        if(c === 0 || c === cols) {\n          row.push([ pt1, pt2 ]);\n        } else {\n          const left = 2*Math.floor(2*rng())-1;\n          row.push([ pt1, add(lerp(pt1,pt2,controlT1V), [ crng(controlPointOffsetYMax), crng(controlPointOffsetYMax) ]),\n                          add(lerp(pt1,pt2,controlT2V), [ left*.33*h+crng(controlPointOffsetYMax), crng(controlPointOffsetYMax) ]),\n                          add(lerp(pt1,pt2,controlT3V), [ left*.33*h+crng(controlPointOffsetYMax), crng(controlPointOffsetYMax) ]),\n                          add(lerp(pt1,pt2,controlT4V), [ crng(controlPointOffsetYMax), crng(controlPointOffsetYMax) ]),\n                          pt2 ]);\n\n        }\n      }\n    }\n    let puzzle_width = piece_width*cols;\n    let puzzle_height = piece_height*rows;\n    let width = puzzle_width+strokeWidth+margin*2 + 10*cols+60;\n    let height = puzzle_height+strokeWidth+margin*2 + 60*rows;\n    //let width = 18*25.4;\n    //let height = 6*25.4;\n   // let height = 10*25.4;\n\n    let pieces = [];\n\n    for(let r = 0; r < rows; r++) {\n      for(let c = 0; c < cols; c++) {\n//        if(!(r == 0 && c == 0)) continue;\n        let pts = [];\n\n        var edge1 = horizontal_edges[r][c];\n        var edge2 = vertical_edges[r][c+1];\n        var edge3 = horizontal_edges[r+1][c].slice().reverse();\n        var edge4 = vertical_edges[r][c].slice().reverse();\n\n        pts.push(\"M \" + pt2str(edge1[0]));\n        appendEdge(pts, edge1)\n        appendEdge(pts, edge2)\n        appendEdge(pts, edge3)\n        appendEdge(pts, edge4)\n        pts[pts.length-1] = \"Z\";\n\n        let outline = pts.join(\" \");\n        let outline_model = makerjs.importer.fromSVGPathData(outline, { bezierAccuracy: .001 });\n\n        const stick_height = 2.875*25.4;\n        const stick_width = .375*25.4;\n\n        const attachment_width = .7;\n        const attachment_height = 13;\n        const attachment_spacing = 1;\n        var stick_model = {\n          models: {\n            stick: new makerjs.models.Oval(stick_width, stick_height),\n          }\n        };\n\n        var attachment_model = {\n          models: {\n            attachment_left: new makerjs.models.Rectangle(attachment_width, attachment_height),\n            attachment_right: new makerjs.models.Rectangle(attachment_width, attachment_height)\n          }\n        };\n\n        attachment_model.models.attachment_left.origin = [ attachment_spacing, stick_height-stick_width*.5 ];\n        attachment_model.models.attachment_right.origin = [ stick_width-attachment_width-attachment_spacing, stick_height-stick_width*.5 ];\n\n        makerjs.model.rotate(stick_model, -45);\n        makerjs.model.rotate(attachment_model, -45);\n\n//        const corner = nrng(4);\n        const corner = 0;\n        switch(corner) {\n          case 0: // lower left\n            stick_model.origin = [-.5-.25*Math.sqrt(2)*stick_width-.5*Math.sqrt(2)*stick_height+edge4[0][0],-.5+.25*Math.sqrt(2)*stick_width-.5*Math.sqrt(2)*stick_height-edge4[0][1]];\n            break;\n          case 1: // lower right\n            makerjs.model.rotate(stick_model, 90);\n            makerjs.model.rotate(attachment_model, 90);\n            stick_model.origin = [.5-.25*Math.sqrt(2)*stick_width+.5*Math.sqrt(2)*stick_height+edge3[0][0],-.5-.25*Math.sqrt(2)*stick_width-.5*Math.sqrt(2)*stick_height-edge3[0][1]];\n            break;\n          case 2: // upper right\n            makerjs.model.rotate(stick_model, 180);\n            makerjs.model.rotate(attachment_model, 180);\n            stick_model.origin = [.5+.25*Math.sqrt(2)*stick_width+.5*Math.sqrt(2)*stick_height+edge2[0][0],.5-.25*Math.sqrt(2)*stick_width+.5*Math.sqrt(2)*stick_height-edge2[0][1]];\n            break;\n          default: // upper left\n            makerjs.model.rotate(stick_model, -90);\n            makerjs.model.rotate(attachment_model, -90);\n            stick_model.origin = [-.5+.25*Math.sqrt(2)*stick_width-.5*Math.sqrt(2)*stick_height+edge1[0][0],.5+.25*Math.sqrt(2)*stick_width+.5*Math.sqrt(2)*stick_height-edge1[0][1]];\n            break;\n        }\n\n        attachment_model.origin = clone(stick_model.origin);\n\n        let outline_output = makerjs.exporter.toSVGPathData(outline_model, false, [0, 0]);\n\n        makerjs.model.combineUnion(outline_model, attachment_model);\n        makerjs.model.combineUnion({ models: [ outline_model, attachment_model] }, stick_model);\n\n        let output = makerjs.exporter.toSVGPathData({ models: [ attachment_model, outline_model, stick_model ] }, false, [0,0]);\n\n        if(!outline) {\n          console.log(\"Couldn't generate outline for \" + r + \", \" + c);\n          pieces.push(<g key={r + \",\" + c} transform={\"translate(\" + (0*c) + \", \" + (0*r) +\")\"}><path d={pts.join(\" \")} fill=\"url(#mypattern)\" strokeWidth={strokeWidth} stroke=\"black\"/></g>)\n        }\n\n        pieces.push(\n          <g key={r + \",\" + c}>\n            <g transform={\"translate(\" + (c*10+60) + \",\" + r*60 + \")\"}>\n              <path d={outline_output} fill=\"url(#mypattern)\"/>\n              <path d={output} fill=\"none\" strokeWidth={strokeWidth} stroke=\"black\"/>\n            </g>\n          </g>);\n      }\n    }\n\n    return (\n      <svg width=\"100%\" viewBox={\"0 0 \" + width + \" \" + height} xmlns=\"http://www.w3.org/2000/svg\">\n        <defs>\n          <pattern id=\"mypattern\" width={puzzle_width} height={puzzle_height} patternUnits=\"userSpaceOnUse\">\n            <image x={0} y={0} width={puzzle_width} height={puzzle_height} xlinkHref={img}/>\n          </pattern>\n        </defs>\n        <g transform={\"translate(\" + (margin+strokeWidth*.5) + \", \" + (margin+strokeWidth*.5) + \")\"}>\n          {pieces}\n        </g>\n      </svg>\n    );\n  }\n}\n\nexport default PuzzleSVGBasic;\n\n\n\n// WEBPACK FOOTER //\n// ./src/PuzzleSVGBasic.js","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppBasic from './AppBasic';\nimport './index.css';\n\nReactDOM.render(\n  <AppBasic/>,\n  document.getElementById('root')\n);\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return b64.length * 3 / 4 - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/base64-js/index.js\n// module id = 89\n// module chunks = 0","module.exports = require('./lib/bezier');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bezier-js/index.js\n// module id = 90\n// module chunks = 0","(function() {\n  \"use strict\";\n\n  var utils = require('./utils.js');\n\n  /**\n   * Poly Bezier\n   * @param {[type]} curves [description]\n   */\n  var PolyBezier = function(curves) {\n    this.curves = [];\n    this._3d = false;\n    if(!!curves) {\n      this.curves = curves;\n      this._3d = this.curves[0]._3d;\n    }\n  }\n\n  PolyBezier.prototype = {\n    valueOf: function() {\n      return this.toString();\n    },\n    toString: function() {\n      return \"[\" + this.curves.map(function(curve) {\n        return utils.pointsToString(curve.points);\n      }).join(\", \") + \"]\";\n    },\n    addCurve: function(curve) {\n      this.curves.push(curve);\n      this._3d = this._3d || curve._3d;\n    },\n    length: function() {\n      return this.curves.map(function(v) { return v.length(); }).reduce(function(a,b) { return a+b; });\n    },\n    curve: function(idx) {\n      return this.curves[idx];\n    },\n    bbox: function() {\n      var c = this.curves;\n      var bbox = c[0].bbox();\n      for(var i=1; i<c.length; i++) {\n        utils.expandbox(bbox, c[i].bbox());\n      }\n      return bbox;\n    },\n    offset: function(d) {\n      var offset = [];\n      this.curves.forEach(function(v) {\n        offset = offset.concat(v.offset(d));\n      });\n      return new PolyBezier(offset);\n    }\n  };\n\n  module.exports = PolyBezier;\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bezier-js/lib/poly-bezier.js\n// module id = 91\n// module chunks = 0","var clone = (function() {\n'use strict';\n\nfunction _instanceof(obj, type) {\n  return type != null && obj instanceof type;\n}\n\nvar nativeMap;\ntry {\n  nativeMap = Map;\n} catch(_) {\n  // maybe a reference error because no `Map`. Give it a dummy value that no\n  // value will ever be an instanceof.\n  nativeMap = function() {};\n}\n\nvar nativeSet;\ntry {\n  nativeSet = Set;\n} catch(_) {\n  nativeSet = function() {};\n}\n\nvar nativePromise;\ntry {\n  nativePromise = Promise;\n} catch(_) {\n  nativePromise = function() {};\n}\n\n/**\n * Clones (copies) an Object using deep copying.\n *\n * This function supports circular references by default, but if you are certain\n * there are no circular references in your object, you can save some CPU time\n * by calling clone(obj, false).\n *\n * Caution: if `circular` is false and `parent` contains circular references,\n * your program may enter an infinite loop and crash.\n *\n * @param `parent` - the object to be cloned\n * @param `circular` - set to true if the object to be cloned may contain\n *    circular references. (optional - true by default)\n * @param `depth` - set to a number if the object is only to be cloned to\n *    a particular depth. (optional - defaults to Infinity)\n * @param `prototype` - sets the prototype to be used when cloning an object.\n *    (optional - defaults to parent prototype).\n * @param `includeNonEnumerable` - set to true if the non-enumerable properties\n *    should be cloned as well. Non-enumerable properties on the prototype\n *    chain will be ignored. (optional - false by default)\n*/\nfunction clone(parent, circular, depth, prototype, includeNonEnumerable) {\n  if (typeof circular === 'object') {\n    depth = circular.depth;\n    prototype = circular.prototype;\n    includeNonEnumerable = circular.includeNonEnumerable;\n    circular = circular.circular;\n  }\n  // maintain two arrays for circular references, where corresponding parents\n  // and children have the same index\n  var allParents = [];\n  var allChildren = [];\n\n  var useBuffer = typeof Buffer != 'undefined';\n\n  if (typeof circular == 'undefined')\n    circular = true;\n\n  if (typeof depth == 'undefined')\n    depth = Infinity;\n\n  // recurse this function so we don't reset allParents and allChildren\n  function _clone(parent, depth) {\n    // cloning null always returns null\n    if (parent === null)\n      return null;\n\n    if (depth === 0)\n      return parent;\n\n    var child;\n    var proto;\n    if (typeof parent != 'object') {\n      return parent;\n    }\n\n    if (_instanceof(parent, nativeMap)) {\n      child = new nativeMap();\n    } else if (_instanceof(parent, nativeSet)) {\n      child = new nativeSet();\n    } else if (_instanceof(parent, nativePromise)) {\n      child = new nativePromise(function (resolve, reject) {\n        parent.then(function(value) {\n          resolve(_clone(value, depth - 1));\n        }, function(err) {\n          reject(_clone(err, depth - 1));\n        });\n      });\n    } else if (clone.__isArray(parent)) {\n      child = [];\n    } else if (clone.__isRegExp(parent)) {\n      child = new RegExp(parent.source, __getRegExpFlags(parent));\n      if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n    } else if (clone.__isDate(parent)) {\n      child = new Date(parent.getTime());\n    } else if (useBuffer && Buffer.isBuffer(parent)) {\n      child = new Buffer(parent.length);\n      parent.copy(child);\n      return child;\n    } else if (_instanceof(parent, Error)) {\n      child = Object.create(parent);\n    } else {\n      if (typeof prototype == 'undefined') {\n        proto = Object.getPrototypeOf(parent);\n        child = Object.create(proto);\n      }\n      else {\n        child = Object.create(prototype);\n        proto = prototype;\n      }\n    }\n\n    if (circular) {\n      var index = allParents.indexOf(parent);\n\n      if (index != -1) {\n        return allChildren[index];\n      }\n      allParents.push(parent);\n      allChildren.push(child);\n    }\n\n    if (_instanceof(parent, nativeMap)) {\n      parent.forEach(function(value, key) {\n        var keyChild = _clone(key, depth - 1);\n        var valueChild = _clone(value, depth - 1);\n        child.set(keyChild, valueChild);\n      });\n    }\n    if (_instanceof(parent, nativeSet)) {\n      parent.forEach(function(value) {\n        var entryChild = _clone(value, depth - 1);\n        child.add(entryChild);\n      });\n    }\n\n    for (var i in parent) {\n      var attrs;\n      if (proto) {\n        attrs = Object.getOwnPropertyDescriptor(proto, i);\n      }\n\n      if (attrs && attrs.set == null) {\n        continue;\n      }\n      child[i] = _clone(parent[i], depth - 1);\n    }\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(parent);\n      for (var i = 0; i < symbols.length; i++) {\n        // Don't need to worry about cloning a symbol because it is a primitive,\n        // like a number or string.\n        var symbol = symbols[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, symbol);\n        if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {\n          continue;\n        }\n        child[symbol] = _clone(parent[symbol], depth - 1);\n        if (!descriptor.enumerable) {\n          Object.defineProperty(child, symbol, {\n            enumerable: false\n          });\n        }\n      }\n    }\n\n    if (includeNonEnumerable) {\n      var allPropertyNames = Object.getOwnPropertyNames(parent);\n      for (var i = 0; i < allPropertyNames.length; i++) {\n        var propertyName = allPropertyNames[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, propertyName);\n        if (descriptor && descriptor.enumerable) {\n          continue;\n        }\n        child[propertyName] = _clone(parent[propertyName], depth - 1);\n        Object.defineProperty(child, propertyName, {\n          enumerable: false\n        });\n      }\n    }\n\n    return child;\n  }\n\n  return _clone(parent, depth);\n}\n\n/**\n * Simple flat clone using prototype, accepts only objects, usefull for property\n * override on FLAT configuration object (no nested props).\n *\n * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n * works.\n */\nclone.clonePrototype = function clonePrototype(parent) {\n  if (parent === null)\n    return null;\n\n  var c = function () {};\n  c.prototype = parent;\n  return new c();\n};\n\n// private utility functions\n\nfunction __objToStr(o) {\n  return Object.prototype.toString.call(o);\n}\nclone.__objToStr = __objToStr;\n\nfunction __isDate(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Date]';\n}\nclone.__isDate = __isDate;\n\nfunction __isArray(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Array]';\n}\nclone.__isArray = __isArray;\n\nfunction __isRegExp(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\n}\nclone.__isRegExp = __isRegExp;\n\nfunction __getRegExpFlags(re) {\n  var flags = '';\n  if (re.global) flags += 'g';\n  if (re.ignoreCase) flags += 'i';\n  if (re.multiline) flags += 'm';\n  return flags;\n}\nclone.__getRegExpFlags = __getRegExpFlags;\n\nreturn clone;\n})();\n\nif (typeof module === 'object' && module.exports) {\n  module.exports = clone;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/clone/clone.js\n// module id = 92\n// module chunks = 0","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\nvar _hyphenPattern = /-(.)/g;\n\n/**\n * Camelcases a hyphenated string, for example:\n *\n *   > camelize('background-color')\n *   < \"backgroundColor\"\n *\n * @param {string} string\n * @return {string}\n */\nfunction camelize(string) {\n  return string.replace(_hyphenPattern, function (_, character) {\n    return character.toUpperCase();\n  });\n}\n\nmodule.exports = camelize;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/camelize.js\n// module id = 94\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\n'use strict';\n\nvar camelize = require('./camelize');\n\nvar msPattern = /^-ms-/;\n\n/**\n * Camelcases a hyphenated CSS property name, for example:\n *\n *   > camelizeStyleName('background-color')\n *   < \"backgroundColor\"\n *   > camelizeStyleName('-moz-transition')\n *   < \"MozTransition\"\n *   > camelizeStyleName('-ms-transition')\n *   < \"msTransition\"\n *\n * As Andi Smith suggests\n * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix\n * is converted to lowercase `ms`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction camelizeStyleName(string) {\n  return camelize(string.replace(msPattern, 'ms-'));\n}\n\nmodule.exports = camelizeStyleName;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/camelizeStyleName.js\n// module id = 95\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\nvar isTextNode = require('./isTextNode');\n\n/*eslint-disable no-bitwise */\n\n/**\n * Checks if a given DOM node contains or is another DOM node.\n */\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if ('contains' in outerNode) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = containsNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/containsNode.js\n// module id = 96\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\nvar invariant = require('./invariant');\n\n/**\n * Convert array-like objects to arrays.\n *\n * This API assumes the caller knows the contents of the data type. For less\n * well defined inputs use createArrayFromMixed.\n *\n * @param {object|function|filelist} obj\n * @return {array}\n */\nfunction toArray(obj) {\n  var length = obj.length;\n\n  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList\n  // in old versions of Safari).\n  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;\n\n  !(typeof length === 'number') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;\n\n  !(length === 0 || length - 1 in obj) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;\n\n  !(typeof obj.callee !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object can\\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;\n\n  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs\n  // without method will throw during the slice call and skip straight to the\n  // fallback.\n  if (obj.hasOwnProperty) {\n    try {\n      return Array.prototype.slice.call(obj);\n    } catch (e) {\n      // IE < 9 does not support Array#slice on collections objects\n    }\n  }\n\n  // Fall back to copying key by key. This assumes all keys have a value,\n  // so will not preserve sparsely populated inputs.\n  var ret = Array(length);\n  for (var ii = 0; ii < length; ii++) {\n    ret[ii] = obj[ii];\n  }\n  return ret;\n}\n\n/**\n * Perform a heuristic test to determine if an object is \"array-like\".\n *\n *   A monk asked Joshu, a Zen master, \"Has a dog Buddha nature?\"\n *   Joshu replied: \"Mu.\"\n *\n * This function determines if its argument has \"array nature\": it returns\n * true if the argument is an actual array, an `arguments' object, or an\n * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).\n *\n * It will return false for other array-like objects like Filelist.\n *\n * @param {*} obj\n * @return {boolean}\n */\nfunction hasArrayNature(obj) {\n  return (\n    // not null/false\n    !!obj && (\n    // arrays are objects, NodeLists are functions in Safari\n    typeof obj == 'object' || typeof obj == 'function') &&\n    // quacks like an array\n    'length' in obj &&\n    // not window\n    !('setInterval' in obj) &&\n    // no DOM node should be considered an array-like\n    // a 'select' element has 'length' and 'item' properties on IE8\n    typeof obj.nodeType != 'number' && (\n    // a real array\n    Array.isArray(obj) ||\n    // arguments\n    'callee' in obj ||\n    // HTMLCollection/NodeList\n    'item' in obj)\n  );\n}\n\n/**\n * Ensure that the argument is an array by wrapping it in an array if it is not.\n * Creates a copy of the argument if it is already an array.\n *\n * This is mostly useful idiomatically:\n *\n *   var createArrayFromMixed = require('createArrayFromMixed');\n *\n *   function takesOneOrMoreThings(things) {\n *     things = createArrayFromMixed(things);\n *     ...\n *   }\n *\n * This allows you to treat `things' as an array, but accept scalars in the API.\n *\n * If you need to convert an array-like object, like `arguments`, into an array\n * use toArray instead.\n *\n * @param {*} obj\n * @return {array}\n */\nfunction createArrayFromMixed(obj) {\n  if (!hasArrayNature(obj)) {\n    return [obj];\n  } else if (Array.isArray(obj)) {\n    return obj.slice();\n  } else {\n    return toArray(obj);\n  }\n}\n\nmodule.exports = createArrayFromMixed;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/createArrayFromMixed.js\n// module id = 97\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\n/*eslint-disable fb-www/unsafe-html*/\n\nvar ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar createArrayFromMixed = require('./createArrayFromMixed');\nvar getMarkupWrap = require('./getMarkupWrap');\nvar invariant = require('./invariant');\n\n/**\n * Dummy container used to render all markup.\n */\nvar dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\n/**\n * Pattern used by `getNodeName`.\n */\nvar nodeNamePattern = /^\\s*<(\\w+)/;\n\n/**\n * Extracts the `nodeName` of the first element in a string of markup.\n *\n * @param {string} markup String of markup.\n * @return {?string} Node name of the supplied markup.\n */\nfunction getNodeName(markup) {\n  var nodeNameMatch = markup.match(nodeNamePattern);\n  return nodeNameMatch && nodeNameMatch[1].toLowerCase();\n}\n\n/**\n * Creates an array containing the nodes rendered from the supplied markup. The\n * optionally supplied `handleScript` function will be invoked once for each\n * <script> element that is rendered. If no `handleScript` function is supplied,\n * an exception is thrown if any <script> elements are rendered.\n *\n * @param {string} markup A string of valid HTML markup.\n * @param {?function} handleScript Invoked once for each rendered <script>.\n * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.\n */\nfunction createNodesFromMarkup(markup, handleScript) {\n  var node = dummyNode;\n  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;\n  var nodeName = getNodeName(markup);\n\n  var wrap = nodeName && getMarkupWrap(nodeName);\n  if (wrap) {\n    node.innerHTML = wrap[1] + markup + wrap[2];\n\n    var wrapDepth = wrap[0];\n    while (wrapDepth--) {\n      node = node.lastChild;\n    }\n  } else {\n    node.innerHTML = markup;\n  }\n\n  var scripts = node.getElementsByTagName('script');\n  if (scripts.length) {\n    !handleScript ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;\n    createArrayFromMixed(scripts).forEach(handleScript);\n  }\n\n  var nodes = Array.from(node.childNodes);\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n  return nodes;\n}\n\nmodule.exports = createNodesFromMarkup;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/createNodesFromMarkup.js\n// module id = 98\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n/*eslint-disable fb-www/unsafe-html */\n\nvar ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar invariant = require('./invariant');\n\n/**\n * Dummy container used to detect which wraps are necessary.\n */\nvar dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\n/**\n * Some browsers cannot use `innerHTML` to render certain elements standalone,\n * so we wrap them, render the wrapped nodes, then extract the desired node.\n *\n * In IE8, certain elements cannot render alone, so wrap all elements ('*').\n */\n\nvar shouldWrap = {};\n\nvar selectWrap = [1, '<select multiple=\"true\">', '</select>'];\nvar tableWrap = [1, '<table>', '</table>'];\nvar trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nvar svgWrap = [1, '<svg xmlns=\"http://www.w3.org/2000/svg\">', '</svg>'];\n\nvar markupWrap = {\n  '*': [1, '?<div>', '</div>'],\n\n  'area': [1, '<map>', '</map>'],\n  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n  'legend': [1, '<fieldset>', '</fieldset>'],\n  'param': [1, '<object>', '</object>'],\n  'tr': [2, '<table><tbody>', '</tbody></table>'],\n\n  'optgroup': selectWrap,\n  'option': selectWrap,\n\n  'caption': tableWrap,\n  'colgroup': tableWrap,\n  'tbody': tableWrap,\n  'tfoot': tableWrap,\n  'thead': tableWrap,\n\n  'td': trWrap,\n  'th': trWrap\n};\n\n// Initialize the SVG elements since we know they'll always need to be wrapped\n// consistently. If they are created inside a <div> they will be initialized in\n// the wrong namespace (and will not display).\nvar svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];\nsvgElements.forEach(function (nodeName) {\n  markupWrap[nodeName] = svgWrap;\n  shouldWrap[nodeName] = true;\n});\n\n/**\n * Gets the markup wrap configuration for the supplied `nodeName`.\n *\n * NOTE: This lazily detects which wraps are necessary for the current browser.\n *\n * @param {string} nodeName Lowercase `nodeName`.\n * @return {?array} Markup wrap configuration, if applicable.\n */\nfunction getMarkupWrap(nodeName) {\n  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;\n  if (!markupWrap.hasOwnProperty(nodeName)) {\n    nodeName = '*';\n  }\n  if (!shouldWrap.hasOwnProperty(nodeName)) {\n    if (nodeName === '*') {\n      dummyNode.innerHTML = '<link />';\n    } else {\n      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';\n    }\n    shouldWrap[nodeName] = !dummyNode.firstChild;\n  }\n  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;\n}\n\nmodule.exports = getMarkupWrap;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/getMarkupWrap.js\n// module id = 99\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\n'use strict';\n\n/**\n * Gets the scroll position of the supplied element or window.\n *\n * The return values are unbounded, unlike `getScrollPosition`. This means they\n * may be negative or exceed the element boundaries (which is possible using\n * inertial scrolling).\n *\n * @param {DOMWindow|DOMElement} scrollable\n * @return {object} Map with `x` and `y` keys.\n */\n\nfunction getUnboundedScrollPosition(scrollable) {\n  if (scrollable.Window && scrollable instanceof scrollable.Window) {\n    return {\n      x: scrollable.pageXOffset || scrollable.document.documentElement.scrollLeft,\n      y: scrollable.pageYOffset || scrollable.document.documentElement.scrollTop\n    };\n  }\n  return {\n    x: scrollable.scrollLeft,\n    y: scrollable.scrollTop\n  };\n}\n\nmodule.exports = getUnboundedScrollPosition;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/getUnboundedScrollPosition.js\n// module id = 100\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\nvar _uppercasePattern = /([A-Z])/g;\n\n/**\n * Hyphenates a camelcased string, for example:\n *\n *   > hyphenate('backgroundColor')\n *   < \"background-color\"\n *\n * For CSS style names, use `hyphenateStyleName` instead which works properly\n * with all vendor prefixes, including `ms`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction hyphenate(string) {\n  return string.replace(_uppercasePattern, '-$1').toLowerCase();\n}\n\nmodule.exports = hyphenate;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/hyphenate.js\n// module id = 101\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\n'use strict';\n\nvar hyphenate = require('./hyphenate');\n\nvar msPattern = /^ms-/;\n\n/**\n * Hyphenates a camelcased CSS property name, for example:\n *\n *   > hyphenateStyleName('backgroundColor')\n *   < \"background-color\"\n *   > hyphenateStyleName('MozTransition')\n *   < \"-moz-transition\"\n *   > hyphenateStyleName('msTransition')\n *   < \"-ms-transition\"\n *\n * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix\n * is converted to `-ms-`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction hyphenateStyleName(string) {\n  return hyphenate(string).replace(msPattern, '-ms-');\n}\n\nmodule.exports = hyphenateStyleName;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/hyphenateStyleName.js\n// module id = 102\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM node.\n */\nfunction isNode(object) {\n  var doc = object ? object.ownerDocument || object : document;\n  var defaultView = doc.defaultView || window;\n  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));\n}\n\nmodule.exports = isNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/isNode.js\n// module id = 103\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\nvar isNode = require('./isNode');\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM text node.\n */\nfunction isTextNode(object) {\n  return isNode(object) && object.nodeType == 3;\n}\n\nmodule.exports = isTextNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/isTextNode.js\n// module id = 104\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * Memoizes the return value of a function that accepts one string argument.\n */\n\nfunction memoizeStringOnly(callback) {\n  var cache = {};\n  return function (string) {\n    if (!cache.hasOwnProperty(string)) {\n      cache[string] = callback.call(this, string);\n    }\n    return cache[string];\n  };\n}\n\nmodule.exports = memoizeStringOnly;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/memoizeStringOnly.js\n// module id = 105\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/media/Logo3x3.68fddec9.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Logo3x3.svg\n// module id = 106\n// module chunks = 0","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ieee754/index.js\n// module id = 107\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/isarray/index.js\n// module id = 108\n// module chunks = 0","/*\r\n__________________________________________________________________________________________________________________________________________            \r\n __________________________________________________________________________________________________________________________________________           \r\n  ________/\\\\\\\\____________/\\\\\\\\_____/\\\\\\\\\\\\\\\\\\_____/\\\\\\________/\\\\\\__/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\__/\\\\\\\\\\\\\\\\\\\\\\________________________________________          \r\n   _______\\/\\\\\\\\\\\\________/\\\\\\\\\\\\___/\\\\\\\\/////\\\\\\\\__\\/\\\\\\_____/\\\\\\//__\\/\\\\\\///////////__\\/\\\\\\///////\\\\\\_______________/\\\\\\___________________         \r\n    _______\\/\\\\\\//\\\\\\____/\\\\\\//\\\\\\__/\\\\\\/____\\///\\\\\\_\\/\\\\\\__/\\\\\\//_____\\/\\\\\\_____________\\/\\\\\\_____\\/\\\\\\______________\\///____________________        \r\n     _______\\/\\\\\\\\///\\\\\\/\\\\\\/_\\/\\\\\\_\\/\\\\\\_______\\/\\\\\\_\\/\\\\\\\\\\\\//\\\\\\_____\\/\\\\\\\\\\\\\\\\\\\\\\_____\\/\\\\\\\\\\\\\\\\\\\\\\/________________/\\\\\\__/\\\\\\\\\\\\\\\\\\\\______       \r\n      _______\\/\\\\\\__\\///\\\\\\/___\\/\\\\\\_\\/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\_\\/\\\\\\//_\\//\\\\\\____\\/\\\\\\///////______\\/\\\\\\//////\\\\\\_______________\\/\\\\\\_\\/\\\\\\//////_______      \r\n       _______\\/\\\\\\____\\///_____\\/\\\\\\_\\/\\\\\\/////////\\\\\\_\\/\\\\\\____\\//\\\\\\___\\/\\\\\\_____________\\/\\\\\\____\\//\\\\\\______________\\/\\\\\\_\\/\\\\\\\\\\\\\\\\\\\\______     \r\n        _______\\/\\\\\\_____________\\/\\\\\\_\\/\\\\\\_______\\/\\\\\\_\\/\\\\\\_____\\//\\\\\\__\\/\\\\\\_____________\\/\\\\\\_____\\//\\\\\\_________/\\\\_\\/\\\\\\_\\////////\\\\\\______    \r\n         _______\\/\\\\\\_____________\\/\\\\\\_\\/\\\\\\_______\\/\\\\\\_\\/\\\\\\______\\//\\\\\\_\\/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\_\\/\\\\\\______\\//\\\\\\__/\\\\\\_\\//\\\\\\\\\\\\___/\\\\\\\\\\\\\\\\\\\\______   \r\n          _______\\///______________\\///__\\///________\\///__\\///________\\///__\\///////////////__\\///________\\///__\\///___\\//////___\\//////////_______  \r\n           __________________________________________________________________________________________________________________________________________ \r\n            __________________________________________________________________________________________________________________________________________\r\n\r\nMaker.js\r\nhttps://github.com/Microsoft/maker.js\r\n\r\nCopyright (c) Microsoft Corporation. All rights reserved. \r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0  \r\n \r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE, \r\nMERCHANTABLITY OR NON-INFRINGEMENT. \r\n \r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n\r\n*/\r\n/**\r\n * Root module for Maker.js.\r\n *\r\n * Example: get a reference to Maker.js\r\n * ```\r\n * var makerjs = require('makerjs');\r\n * ```\r\n *\r\n */\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    /**\r\n     * Version info\r\n     */\r\n    MakerJs.version = 'debug';\r\n    /**\r\n     * Enumeration of environment types.\r\n     */\r\n    MakerJs.environmentTypes = {\r\n        BrowserUI: 'browser',\r\n        NodeJs: 'node',\r\n        WebWorker: 'worker',\r\n        Unknown: 'unknown'\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    function tryEval(name) {\r\n        try {\r\n            var value = eval(name);\r\n            return value;\r\n        }\r\n        catch (e) { }\r\n        return;\r\n    }\r\n    /**\r\n     * @private\r\n     */\r\n    function detectEnvironment() {\r\n        if (tryEval('WorkerGlobalScope') && tryEval('self')) {\r\n            return MakerJs.environmentTypes.WebWorker;\r\n        }\r\n        if (tryEval('window') && tryEval('document')) {\r\n            return MakerJs.environmentTypes.BrowserUI;\r\n        }\r\n        //put node last since packagers usually add shims for it\r\n        if (tryEval('global') && tryEval('process')) {\r\n            return MakerJs.environmentTypes.NodeJs;\r\n        }\r\n        return MakerJs.environmentTypes.Unknown;\r\n    }\r\n    /**\r\n     * Current execution environment type, should be one of environmentTypes.\r\n     */\r\n    MakerJs.environment = detectEnvironment();\r\n    //units\r\n    /**\r\n     * String-based enumeration of unit types: imperial, metric or otherwise.\r\n     * A model may specify the unit system it is using, if any. When importing a model, it may have different units.\r\n     * Unit conversion function is makerjs.units.conversionScale().\r\n     * Important: If you add to this, you must also add a corresponding conversion ratio in the unit.ts file!\r\n     */\r\n    MakerJs.unitType = {\r\n        Centimeter: 'cm',\r\n        Foot: 'foot',\r\n        Inch: 'inch',\r\n        Meter: 'm',\r\n        Millimeter: 'mm'\r\n    };\r\n    /**\r\n     * Numeric rounding\r\n     *\r\n     * Example: round to 3 decimal places\r\n     * ```\r\n     * makerjs.round(3.14159, .001); //returns 3.142\r\n     * ```\r\n     *\r\n     * @param n The number to round off.\r\n     * @param accuracy Optional exemplar of number of decimal places.\r\n     * @returns Rounded number.\r\n     */\r\n    function round(n, accuracy) {\r\n        if (accuracy === void 0) { accuracy = .0000001; }\r\n        var places = 1 / accuracy;\r\n        return Math.round(n * places) / places;\r\n    }\r\n    MakerJs.round = round;\r\n    /**\r\n     * Create a string representation of a route array.\r\n     *\r\n     * @param route Array of strings which are segments of a route.\r\n     * @returns String of the flattened array.\r\n     */\r\n    function createRouteKey(route) {\r\n        var converted = [];\r\n        for (var i = 0; i < route.length; i++) {\r\n            var element = route[i];\r\n            var newElement;\r\n            if (i % 2 === 0) {\r\n                newElement = '.' + element;\r\n            }\r\n            else {\r\n                newElement = JSON.stringify([element]);\r\n            }\r\n            converted.push(newElement);\r\n        }\r\n        return converted.join('');\r\n    }\r\n    MakerJs.createRouteKey = createRouteKey;\r\n    /**\r\n     * Travel along a route inside of a model to extract a specific node in its tree.\r\n     *\r\n     * @param modelContext Model to travel within.\r\n     * @param routeKeyOrRoute String of a flattened route, or a string array of route segments.\r\n     * @returns Model or Path object within the modelContext tree.\r\n     */\r\n    function travel(modelContext, routeKeyOrRoute) {\r\n        if (!modelContext || !routeKeyOrRoute)\r\n            return null;\r\n        var route;\r\n        if (Array.isArray(routeKeyOrRoute)) {\r\n            route = routeKeyOrRoute;\r\n        }\r\n        else {\r\n            route = JSON.parse(routeKeyOrRoute);\r\n        }\r\n        var props = route.slice();\r\n        var ref = modelContext;\r\n        var origin = modelContext.origin || [0, 0];\r\n        while (props.length) {\r\n            var prop = props.shift();\r\n            ref = ref[prop];\r\n            if (!ref)\r\n                return null;\r\n            if (ref.origin && props.length) {\r\n                origin = MakerJs.point.add(origin, ref.origin);\r\n            }\r\n        }\r\n        return {\r\n            path: ref,\r\n            offset: origin\r\n        };\r\n    }\r\n    MakerJs.travel = travel;\r\n    /**\r\n     * @private\r\n     */\r\n    var clone = require('clone');\r\n    /**\r\n     * Clone an object.\r\n     *\r\n     * @param objectToClone The object to clone.\r\n     * @returns A new clone of the original object.\r\n     */\r\n    function cloneObject(objectToClone) {\r\n        return clone(objectToClone);\r\n    }\r\n    MakerJs.cloneObject = cloneObject;\r\n    /**\r\n     * Copy the properties from one object to another object.\r\n     *\r\n     * Example:\r\n     * ```\r\n     * makerjs.extendObject({ abc: 123 }, { xyz: 789 }); //returns { abc: 123, xyz: 789 }\r\n     * ```\r\n     *\r\n     * @param target The object to extend. It will receive the new properties.\r\n     * @param other An object containing properties to merge in.\r\n     * @returns The original object after merging.\r\n     */\r\n    function extendObject(target, other) {\r\n        if (target && other) {\r\n            for (var key in other) {\r\n                if (typeof other[key] !== 'undefined') {\r\n                    target[key] = other[key];\r\n                }\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n    MakerJs.extendObject = extendObject;\r\n    /**\r\n     * Test to see if a variable is a function.\r\n     *\r\n     * @param value The object to test.\r\n     * @returns True if the object is a function type.\r\n     */\r\n    function isFunction(value) {\r\n        return typeof value === 'function';\r\n    }\r\n    MakerJs.isFunction = isFunction;\r\n    /**\r\n     * Test to see if a variable is a number.\r\n     *\r\n     * @param value The object to test.\r\n     * @returns True if the object is a number type.\r\n     */\r\n    function isNumber(value) {\r\n        return !isNaN(value);\r\n    }\r\n    MakerJs.isNumber = isNumber;\r\n    /**\r\n     * Test to see if a variable is an object.\r\n     *\r\n     * @param value The object to test.\r\n     * @returns True if the object is an object type.\r\n     */\r\n    function isObject(value) {\r\n        return typeof value === 'object';\r\n    }\r\n    MakerJs.isObject = isObject;\r\n    /**\r\n     * @private\r\n     */\r\n    var x = {};\r\n    /**\r\n     * @private\r\n     */\r\n    function reflectName(value) {\r\n        for (var prop in x) {\r\n            delete x[prop];\r\n            return prop;\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     */\r\n    function hasNamedProperty(p, value) {\r\n        var prop = reflectName();\r\n        return (prop in p);\r\n    }\r\n    //points\r\n    /**\r\n     * Test to see if an object implements the required properties of a point.\r\n     *\r\n     * @param item The item to test.\r\n     */\r\n    function isPoint(item) {\r\n        return (Array.isArray(item) && item.length == 2 && !isNaN(item[0]) && !isNaN(item[1]));\r\n    }\r\n    MakerJs.isPoint = isPoint;\r\n    /**\r\n     * Test to see if an object implements the required properties of a path.\r\n     *\r\n     * @param item The item to test.\r\n     */\r\n    function isPath(item) {\r\n        return item && item.type && item.origin;\r\n    }\r\n    MakerJs.isPath = isPath;\r\n    /**\r\n     * Test to see if an object implements the required properties of a line.\r\n     *\r\n     * @param item The item to test.\r\n     */\r\n    function isPathLine(item) {\r\n        return isPath(item) && item.type == MakerJs.pathType.Line && item.end;\r\n    }\r\n    MakerJs.isPathLine = isPathLine;\r\n    /**\r\n     * Test to see if an object implements the required properties of a circle.\r\n     *\r\n     * @param item The item to test.\r\n     */\r\n    function isPathCircle(item) {\r\n        return isPath(item) && item.type == MakerJs.pathType.Circle && hasNamedProperty(item, x.radius = null);\r\n    }\r\n    MakerJs.isPathCircle = isPathCircle;\r\n    /**\r\n     * Test to see if an object implements the required properties of an arc.\r\n     *\r\n     * @param item The item to test.\r\n     */\r\n    function isPathArc(item) {\r\n        return isPath(item) && item.type == MakerJs.pathType.Arc && hasNamedProperty(item, x.radius = null) && hasNamedProperty(item, x.startAngle = null) && hasNamedProperty(item, x.endAngle = null);\r\n    }\r\n    MakerJs.isPathArc = isPathArc;\r\n    /**\r\n     * Test to see if an object implements the required properties of an arc in a bezier curve.\r\n     *\r\n     * @param item The item to test.\r\n     */\r\n    function isPathArcInBezierCurve(item) {\r\n        return isPathArc(item) && hasNamedProperty(item, x.bezierData = null);\r\n    }\r\n    MakerJs.isPathArcInBezierCurve = isPathArcInBezierCurve;\r\n    /**\r\n     * String-based enumeration of all paths types.\r\n     *\r\n     * Examples: use pathType instead of string literal when creating a circle.\r\n     * ```\r\n     * var circle: IPathCircle = { type: pathType.Circle, origin: [0, 0], radius: 7 };   //typescript\r\n     * var circle = { type: pathType.Circle, origin: [0, 0], radius: 7 };   //javascript\r\n     * ```\r\n     */\r\n    MakerJs.pathType = {\r\n        Line: \"line\",\r\n        Circle: \"circle\",\r\n        Arc: \"arc\",\r\n        BezierSeed: \"bezier-seed\"\r\n    };\r\n    /**\r\n     * Test to see if an object implements the required properties of a model.\r\n     */\r\n    function isModel(item) {\r\n        return item && (item.paths || item.models);\r\n    }\r\n    MakerJs.isModel = isModel;\r\n    /**\r\n     * Test to see if an object implements the required properties of a chain.\r\n     *\r\n     * @param item The item to test.\r\n     */\r\n    function isChain(item) {\r\n        var x = item;\r\n        return x && x.links && Array.isArray(x.links) && isNumber(x.pathLength);\r\n    }\r\n    MakerJs.isChain = isChain;\r\n})(MakerJs || (MakerJs = {}));\r\n//CommonJs\r\nmodule.exports = MakerJs;\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var angle;\r\n    (function (angle) {\r\n        /**\r\n         * Ensures an angle is not greater than 360\r\n         *\r\n         * @param angleInDegrees Angle in degrees.\r\n         * @retiurns Same polar angle but not greater than 360 degrees.\r\n         */\r\n        function noRevolutions(angleInDegrees) {\r\n            var revolutions = Math.floor(angleInDegrees / 360);\r\n            var a = angleInDegrees - (360 * revolutions);\r\n            return a < 0 ? a + 360 : a;\r\n        }\r\n        angle.noRevolutions = noRevolutions;\r\n        /**\r\n         * Convert an angle from degrees to radians.\r\n         *\r\n         * @param angleInDegrees Angle in degrees.\r\n         * @returns Angle in radians.\r\n         */\r\n        function toRadians(angleInDegrees) {\r\n            return noRevolutions(angleInDegrees) * Math.PI / 180.0;\r\n        }\r\n        angle.toRadians = toRadians;\r\n        /**\r\n         * Convert an angle from radians to degrees.\r\n         *\r\n         * @param angleInRadians Angle in radians.\r\n         * @returns Angle in degrees.\r\n         */\r\n        function toDegrees(angleInRadians) {\r\n            return angleInRadians * 180.0 / Math.PI;\r\n        }\r\n        angle.toDegrees = toDegrees;\r\n        /**\r\n         * Get an arc's end angle, ensured to be greater than its start angle.\r\n         *\r\n         * @param arc An arc path object.\r\n         * @returns End angle of arc.\r\n         */\r\n        function ofArcEnd(arc) {\r\n            //compensate for values past zero. This allows easy compute of total angle size.\r\n            //for example 0 = 360\r\n            if (arc.endAngle < arc.startAngle) {\r\n                return 360 + arc.endAngle;\r\n            }\r\n            return arc.endAngle;\r\n        }\r\n        angle.ofArcEnd = ofArcEnd;\r\n        /**\r\n         * Get the angle in the middle of an arc's start and end angles.\r\n         *\r\n         * @param arc An arc path object.\r\n         * @param ratio Optional number between 0 and 1 specifying percentage between start and end angles. Default is .5\r\n         * @returns Middle angle of arc.\r\n         */\r\n        function ofArcMiddle(arc, ratio) {\r\n            if (ratio === void 0) { ratio = .5; }\r\n            return arc.startAngle + ofArcSpan(arc) * ratio;\r\n        }\r\n        angle.ofArcMiddle = ofArcMiddle;\r\n        /**\r\n         * Total angle of an arc between its start and end angles.\r\n         *\r\n         * @param arc The arc to measure.\r\n         * @returns Angle of arc.\r\n         */\r\n        function ofArcSpan(arc) {\r\n            var endAngle = angle.ofArcEnd(arc);\r\n            var a = MakerJs.round(endAngle - arc.startAngle);\r\n            if (a > 360) {\r\n                return noRevolutions(a);\r\n            }\r\n            else {\r\n                return a;\r\n            }\r\n        }\r\n        angle.ofArcSpan = ofArcSpan;\r\n        /**\r\n         * Angle of a line path.\r\n         *\r\n         * @param line The line path to find the angle of.\r\n         * @returns Angle of the line path, in degrees.\r\n         */\r\n        function ofLineInDegrees(line) {\r\n            return noRevolutions(toDegrees(ofPointInRadians(line.origin, line.end)));\r\n        }\r\n        angle.ofLineInDegrees = ofLineInDegrees;\r\n        /**\r\n         * Angle of a line through a point, in degrees.\r\n         *\r\n         * @param pointToFindAngle The point to find the angle.\r\n         * @param origin Point of origin of the angle.\r\n         * @returns Angle of the line throught the point, in degrees.\r\n         */\r\n        function ofPointInDegrees(origin, pointToFindAngle) {\r\n            return toDegrees(ofPointInRadians(origin, pointToFindAngle));\r\n        }\r\n        angle.ofPointInDegrees = ofPointInDegrees;\r\n        /**\r\n         * Angle of a line through a point, in radians.\r\n         *\r\n         * @param pointToFindAngle The point to find the angle.\r\n         * @param origin Point of origin of the angle.\r\n         * @returns Angle of the line throught the point, in radians.\r\n         */\r\n        function ofPointInRadians(origin, pointToFindAngle) {\r\n            var d = MakerJs.point.subtract(pointToFindAngle, origin);\r\n            var x = d[0];\r\n            var y = d[1];\r\n            return Math.atan2(-y, -x) + Math.PI;\r\n        }\r\n        angle.ofPointInRadians = ofPointInRadians;\r\n        /**\r\n         * Mirror an angle on either or both x and y axes.\r\n         *\r\n         * @param angleInDegrees The angle to mirror.\r\n         * @param mirrorX Boolean to mirror on the x axis.\r\n         * @param mirrorY Boolean to mirror on the y axis.\r\n         * @returns Mirrored angle.\r\n         */\r\n        function mirror(angleInDegrees, mirrorX, mirrorY) {\r\n            if (mirrorY) {\r\n                angleInDegrees = 360 - angleInDegrees;\r\n            }\r\n            if (mirrorX) {\r\n                angleInDegrees = (angleInDegrees < 180 ? 180 : 540) - angleInDegrees;\r\n            }\r\n            return angleInDegrees;\r\n        }\r\n        angle.mirror = mirror;\r\n    })(angle = MakerJs.angle || (MakerJs.angle = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var point;\r\n    (function (point) {\r\n        /**\r\n         * Add two points together and return the result as a new point object.\r\n         *\r\n         * @param a First point.\r\n         * @param b Second point.\r\n         * @param subtract Optional boolean to subtract instead of add.\r\n         * @returns A new point object.\r\n         */\r\n        function add(a, b, subtract) {\r\n            var newPoint = clone(a);\r\n            if (!b)\r\n                return newPoint;\r\n            for (var i = 2; i--;) {\r\n                if (subtract) {\r\n                    newPoint[i] -= b[i];\r\n                }\r\n                else {\r\n                    newPoint[i] += b[i];\r\n                }\r\n            }\r\n            return newPoint;\r\n        }\r\n        point.add = add;\r\n        /**\r\n         * Get the average of two points.\r\n         *\r\n         * @param a First point.\r\n         * @param b Second point.\r\n         * @returns New point object which is the average of a and b.\r\n         */\r\n        function average(a, b) {\r\n            function avg(i) {\r\n                return (a[i] + b[i]) / 2;\r\n            }\r\n            return [avg(0), avg(1)];\r\n        }\r\n        point.average = average;\r\n        /**\r\n         * Clone a point into a new point.\r\n         *\r\n         * @param pointToClone The point to clone.\r\n         * @returns A new point with same values as the original.\r\n         */\r\n        function clone(pointToClone) {\r\n            if (!pointToClone)\r\n                return point.zero();\r\n            return [pointToClone[0], pointToClone[1]];\r\n        }\r\n        point.clone = clone;\r\n        /**\r\n         * From an array of points, find the closest point to a given reference point.\r\n         *\r\n         * @param referencePoint The reference point.\r\n         * @param pointOptions Array of points to choose from.\r\n         * @returns The first closest point from the pointOptions.\r\n         */\r\n        function closest(referencePoint, pointOptions) {\r\n            var smallest = {\r\n                index: 0,\r\n                distance: -1\r\n            };\r\n            for (var i = 0; i < pointOptions.length; i++) {\r\n                var distance = MakerJs.measure.pointDistance(referencePoint, pointOptions[i]);\r\n                if (smallest.distance == -1 || distance < smallest.distance) {\r\n                    smallest.distance = distance;\r\n                    smallest.index = i;\r\n                }\r\n            }\r\n            return pointOptions[smallest.index];\r\n        }\r\n        point.closest = closest;\r\n        /**\r\n         * Get a point from its polar coordinates.\r\n         *\r\n         * @param angleInRadians The angle of the polar coordinate, in radians.\r\n         * @param radius The radius of the polar coordinate.\r\n         * @returns A new point object.\r\n         */\r\n        function fromPolar(angleInRadians, radius) {\r\n            return [\r\n                radius * Math.cos(angleInRadians),\r\n                radius * Math.sin(angleInRadians)\r\n            ];\r\n        }\r\n        point.fromPolar = fromPolar;\r\n        /**\r\n         * Get a point on a circle or arc path, at a given angle.\r\n         * @param angleInDegrees The angle at which you want to find the point, in degrees.\r\n         * @param circle A circle or arc.\r\n         * @returns A new point object.\r\n         */\r\n        function fromAngleOnCircle(angleInDegrees, circle) {\r\n            return add(circle.origin, fromPolar(MakerJs.angle.toRadians(angleInDegrees), circle.radius));\r\n        }\r\n        point.fromAngleOnCircle = fromAngleOnCircle;\r\n        /**\r\n         * Get the two end points of an arc path.\r\n         *\r\n         * @param arc The arc path object.\r\n         * @returns Array with 2 elements: [0] is the point object corresponding to the start angle, [1] is the point object corresponding to the end angle.\r\n         */\r\n        function fromArc(arc) {\r\n            return [fromAngleOnCircle(arc.startAngle, arc), fromAngleOnCircle(arc.endAngle, arc)];\r\n        }\r\n        point.fromArc = fromArc;\r\n        /**\r\n         * @private\r\n         */\r\n        var pathEndsMap = {};\r\n        pathEndsMap[MakerJs.pathType.Arc] = function (arc) {\r\n            return point.fromArc(arc);\r\n        };\r\n        pathEndsMap[MakerJs.pathType.Line] = function (line) {\r\n            return [line.origin, line.end];\r\n        };\r\n        pathEndsMap[MakerJs.pathType.BezierSeed] = pathEndsMap[MakerJs.pathType.Line];\r\n        /**\r\n         * Get the two end points of a path.\r\n         *\r\n         * @param pathContext The path object.\r\n         * @returns Array with 2 elements: [0] is the point object corresponding to the origin, [1] is the point object corresponding to the end.\r\n         */\r\n        function fromPathEnds(pathContext, pathOffset) {\r\n            var result = null;\r\n            var fn = pathEndsMap[pathContext.type];\r\n            if (fn) {\r\n                result = fn(pathContext);\r\n                if (pathOffset) {\r\n                    result = result.map(function (p) { return add(p, pathOffset); });\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n        point.fromPathEnds = fromPathEnds;\r\n        /**\r\n         * @private\r\n         */\r\n        function verticalIntersectionPoint(verticalLine, nonVerticalSlope) {\r\n            var x = verticalLine.origin[0];\r\n            var y = nonVerticalSlope.slope * x + nonVerticalSlope.yIntercept;\r\n            return [x, y];\r\n        }\r\n        /**\r\n         * Calculates the intersection of slopes of two lines.\r\n         *\r\n         * @param lineA First line to use for slope.\r\n         * @param lineB Second line to use for slope.\r\n         * @param options Optional IPathIntersectionOptions.\r\n         * @returns point of intersection of the two slopes, or null if the slopes did not intersect.\r\n         */\r\n        function fromSlopeIntersection(lineA, lineB, options) {\r\n            if (options === void 0) { options = {}; }\r\n            var slopeA = MakerJs.measure.lineSlope(lineA);\r\n            var slopeB = MakerJs.measure.lineSlope(lineB);\r\n            if (MakerJs.measure.isSlopeEqual(slopeA, slopeB)) {\r\n                //check for overlap\r\n                options.out_AreOverlapped = MakerJs.measure.isLineOverlapping(lineA, lineB, options.excludeTangents);\r\n                return null;\r\n            }\r\n            var pointOfIntersection;\r\n            if (!slopeA.hasSlope) {\r\n                pointOfIntersection = verticalIntersectionPoint(lineA, slopeB);\r\n            }\r\n            else if (!slopeB.hasSlope) {\r\n                pointOfIntersection = verticalIntersectionPoint(lineB, slopeA);\r\n            }\r\n            else {\r\n                // find intersection by line equation\r\n                var x = (slopeB.yIntercept - slopeA.yIntercept) / (slopeA.slope - slopeB.slope);\r\n                var y = slopeA.slope * x + slopeA.yIntercept;\r\n                pointOfIntersection = [x, y];\r\n            }\r\n            return pointOfIntersection;\r\n        }\r\n        point.fromSlopeIntersection = fromSlopeIntersection;\r\n        /**\r\n         * @private\r\n         */\r\n        function midCircle(circle, midAngle) {\r\n            return point.add(circle.origin, point.fromPolar(MakerJs.angle.toRadians(midAngle), circle.radius));\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        var middleMap = {};\r\n        middleMap[MakerJs.pathType.Arc] = function (arc, ratio) {\r\n            var midAngle = MakerJs.angle.ofArcMiddle(arc, ratio);\r\n            return midCircle(arc, midAngle);\r\n        };\r\n        middleMap[MakerJs.pathType.Circle] = function (circle, ratio) {\r\n            return midCircle(circle, 360 * ratio);\r\n        };\r\n        middleMap[MakerJs.pathType.Line] = function (line, ratio) {\r\n            function ration(a, b) {\r\n                return a + (b - a) * ratio;\r\n            }\r\n            ;\r\n            return [\r\n                ration(line.origin[0], line.end[0]),\r\n                ration(line.origin[1], line.end[1])\r\n            ];\r\n        };\r\n        middleMap[MakerJs.pathType.BezierSeed] = function (seed, ratio) {\r\n            return MakerJs.models.BezierCurve.computePoint(seed, ratio);\r\n        };\r\n        /**\r\n         * Get the middle point of a path.\r\n         *\r\n         * @param pathContext The path object.\r\n         * @param ratio Optional ratio (between 0 and 1) of point along the path. Default is .5 for middle.\r\n         * @returns Point on the path, in the middle of the path.\r\n         */\r\n        function middle(pathContext, ratio) {\r\n            if (ratio === void 0) { ratio = .5; }\r\n            var midPoint = null;\r\n            var fn = middleMap[pathContext.type];\r\n            if (fn) {\r\n                midPoint = fn(pathContext, ratio);\r\n            }\r\n            return midPoint;\r\n        }\r\n        point.middle = middle;\r\n        /**\r\n         * Create a clone of a point, mirrored on either or both x and y axes.\r\n         *\r\n         * @param pointToMirror The point to mirror.\r\n         * @param mirrorX Boolean to mirror on the x axis.\r\n         * @param mirrorY Boolean to mirror on the y axis.\r\n         * @returns Mirrored point.\r\n         */\r\n        function mirror(pointToMirror, mirrorX, mirrorY) {\r\n            var p = clone(pointToMirror);\r\n            if (mirrorX) {\r\n                p[0] = -p[0];\r\n            }\r\n            if (mirrorY) {\r\n                p[1] = -p[1];\r\n            }\r\n            return p;\r\n        }\r\n        point.mirror = mirror;\r\n        /**\r\n         * Round the values of a point.\r\n         *\r\n         * @param pointContext The point to serialize.\r\n         * @param accuracy Optional exemplar number of decimal places.\r\n         * @returns A new point with the values rounded.\r\n         */\r\n        function rounded(pointContext, accuracy) {\r\n            return [MakerJs.round(pointContext[0], accuracy), MakerJs.round(pointContext[1], accuracy)];\r\n        }\r\n        point.rounded = rounded;\r\n        /**\r\n         * Rotate a point.\r\n         *\r\n         * @param pointToRotate The point to rotate.\r\n         * @param angleInDegrees The amount of rotation, in degrees.\r\n         * @param rotationOrigin The center point of rotation.\r\n         * @returns A new point.\r\n         */\r\n        function rotate(pointToRotate, angleInDegrees, rotationOrigin) {\r\n            if (rotationOrigin === void 0) { rotationOrigin = [0, 0]; }\r\n            var pointAngleInRadians = MakerJs.angle.ofPointInRadians(rotationOrigin, pointToRotate);\r\n            var d = MakerJs.measure.pointDistance(rotationOrigin, pointToRotate);\r\n            var rotatedPoint = fromPolar(pointAngleInRadians + MakerJs.angle.toRadians(angleInDegrees), d);\r\n            return add(rotationOrigin, rotatedPoint);\r\n        }\r\n        point.rotate = rotate;\r\n        /**\r\n         * Scale a point's coordinates.\r\n         *\r\n         * @param pointToScale The point to scale.\r\n         * @param scaleValue The amount of scaling.\r\n         * @returns A new point.\r\n         */\r\n        function scale(pointToScale, scaleValue) {\r\n            var p = clone(pointToScale);\r\n            for (var i = 2; i--;) {\r\n                p[i] *= scaleValue;\r\n            }\r\n            return p;\r\n        }\r\n        point.scale = scale;\r\n        /**\r\n         * Distort a point's coordinates.\r\n         *\r\n         * @param pointToDistort The point to distort.\r\n         * @param scaleX The amount of x scaling.\r\n         * @param scaleY The amount of y scaling.\r\n         * @returns A new point.\r\n         */\r\n        function distort(pointToDistort, scaleX, scaleY) {\r\n            return [pointToDistort[0] * scaleX, pointToDistort[1] * scaleY];\r\n        }\r\n        point.distort = distort;\r\n        /**\r\n         * Subtract a point from another point, and return the result as a new point. Shortcut to Add(a, b, subtract = true).\r\n         *\r\n         * @param a First point.\r\n         * @param b Second point.\r\n         * @returns A new point object.\r\n         */\r\n        function subtract(a, b) {\r\n            return add(a, b, true);\r\n        }\r\n        point.subtract = subtract;\r\n        /**\r\n         * A point at 0,0 coordinates.\r\n         * NOTE: It is important to call this as a method, with the empty parentheses.\r\n         *\r\n         * @returns A new point.\r\n         */\r\n        function zero() {\r\n            return [0, 0];\r\n        }\r\n        point.zero = zero;\r\n    })(point = MakerJs.point || (MakerJs.point = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var path;\r\n    (function (path) {\r\n        /**\r\n         * @private\r\n         */\r\n        function copyLayer(pathA, pathB) {\r\n            if (pathA && pathB && ('layer' in pathA)) {\r\n                pathB.layer = pathA.layer;\r\n            }\r\n        }\r\n        /**\r\n         * Create a clone of a path. This is faster than cloneObject.\r\n         *\r\n         * @param pathToClone The path to clone.\r\n         * @returns Cloned path.\r\n         */\r\n        function clone(pathToClone) {\r\n            var result = null;\r\n            switch (pathToClone.type) {\r\n                case MakerJs.pathType.Arc:\r\n                    var arc = pathToClone;\r\n                    result = new MakerJs.paths.Arc(MakerJs.point.clone(arc.origin), arc.radius, arc.startAngle, arc.endAngle);\r\n                    //carry extra props if this is an IPathArcInBezierCurve\r\n                    if (MakerJs.isPathArcInBezierCurve(arc)) {\r\n                        result.bezierData = arc.bezierData;\r\n                    }\r\n                    break;\r\n                case MakerJs.pathType.Circle:\r\n                    var circle = pathToClone;\r\n                    result = new MakerJs.paths.Circle(MakerJs.point.clone(circle.origin), circle.radius);\r\n                    break;\r\n                case MakerJs.pathType.Line:\r\n                    var line = pathToClone;\r\n                    result = new MakerJs.paths.Line(MakerJs.point.clone(line.origin), MakerJs.point.clone(line.end));\r\n                    break;\r\n            }\r\n            copyLayer(pathToClone, result);\r\n            return result;\r\n        }\r\n        path.clone = clone;\r\n        /**\r\n         * @private\r\n         */\r\n        var mirrorMap = {};\r\n        mirrorMap[MakerJs.pathType.Line] = function (line, origin, mirrorX, mirrorY) {\r\n            return new MakerJs.paths.Line(origin, MakerJs.point.mirror(line.end, mirrorX, mirrorY));\r\n        };\r\n        mirrorMap[MakerJs.pathType.Circle] = function (circle, origin, mirrorX, mirrorY) {\r\n            return new MakerJs.paths.Circle(origin, circle.radius);\r\n        };\r\n        mirrorMap[MakerJs.pathType.Arc] = function (arc, origin, mirrorX, mirrorY) {\r\n            var startAngle = MakerJs.angle.mirror(arc.startAngle, mirrorX, mirrorY);\r\n            var endAngle = MakerJs.angle.mirror(MakerJs.angle.ofArcEnd(arc), mirrorX, mirrorY);\r\n            var xor = mirrorX != mirrorY;\r\n            return new MakerJs.paths.Arc(origin, arc.radius, xor ? endAngle : startAngle, xor ? startAngle : endAngle);\r\n        };\r\n        mirrorMap[MakerJs.pathType.BezierSeed] = function (seed, origin, mirrorX, mirrorY) {\r\n            var mirrored = mirrorMap[MakerJs.pathType.Line](seed, origin, mirrorX, mirrorY);\r\n            mirrored.type = MakerJs.pathType.BezierSeed;\r\n            mirrored.controls = seed.controls.map(function (c) { return MakerJs.point.mirror(c, mirrorX, mirrorY); });\r\n            return mirrored;\r\n        };\r\n        /**\r\n         * Create a clone of a path, mirrored on either or both x and y axes.\r\n         *\r\n         * @param pathToMirror The path to mirror.\r\n         * @param mirrorX Boolean to mirror on the x axis.\r\n         * @param mirrorY Boolean to mirror on the y axis.\r\n         * @returns Mirrored path.\r\n         */\r\n        function mirror(pathToMirror, mirrorX, mirrorY) {\r\n            var newPath = null;\r\n            if (pathToMirror) {\r\n                var origin = MakerJs.point.mirror(pathToMirror.origin, mirrorX, mirrorY);\r\n                var fn = mirrorMap[pathToMirror.type];\r\n                if (fn) {\r\n                    newPath = fn(pathToMirror, origin, mirrorX, mirrorY);\r\n                }\r\n            }\r\n            copyLayer(pathToMirror, newPath);\r\n            return newPath;\r\n        }\r\n        path.mirror = mirror;\r\n        /**\r\n         * @private\r\n         */\r\n        var moveMap = {};\r\n        moveMap[MakerJs.pathType.Line] = function (line, origin) {\r\n            var delta = MakerJs.point.subtract(line.end, line.origin);\r\n            line.end = MakerJs.point.add(origin, delta);\r\n        };\r\n        /**\r\n         * Move a path to an absolute point.\r\n         *\r\n         * @param pathToMove The path to move.\r\n         * @param origin The new origin for the path.\r\n         * @returns The original path (for cascading).\r\n         */\r\n        function move(pathToMove, origin) {\r\n            if (pathToMove) {\r\n                var fn = moveMap[pathToMove.type];\r\n                if (fn) {\r\n                    fn(pathToMove, origin);\r\n                }\r\n                pathToMove.origin = origin;\r\n            }\r\n            return pathToMove;\r\n        }\r\n        path.move = move;\r\n        /**\r\n         * @private\r\n         */\r\n        var moveRelativeMap = {};\r\n        moveRelativeMap[MakerJs.pathType.Line] = function (line, delta, subtract) {\r\n            line.end = MakerJs.point.add(line.end, delta, subtract);\r\n        };\r\n        moveRelativeMap[MakerJs.pathType.BezierSeed] = function (seed, delta, subtract) {\r\n            moveRelativeMap[MakerJs.pathType.Line](seed, delta, subtract);\r\n            seed.controls = seed.controls.map(function (c) { return MakerJs.point.add(c, delta, subtract); });\r\n        };\r\n        /**\r\n         * Move a path's origin by a relative amount.\r\n         *\r\n         * @param pathToMove The path to move.\r\n         * @param delta The x & y adjustments as a point object.\r\n         * @param subtract Optional boolean to subtract instead of add.\r\n         * @returns The original path (for cascading).\r\n         */\r\n        function moveRelative(pathToMove, delta, subtract) {\r\n            if (pathToMove && delta) {\r\n                pathToMove.origin = MakerJs.point.add(pathToMove.origin, delta, subtract);\r\n                var fn = moveRelativeMap[pathToMove.type];\r\n                if (fn) {\r\n                    fn(pathToMove, delta, subtract);\r\n                }\r\n            }\r\n            return pathToMove;\r\n        }\r\n        path.moveRelative = moveRelative;\r\n        /**\r\n         * Move some paths relatively during a task execution, then unmove them.\r\n         *\r\n         * @param pathsToMove The paths to move.\r\n         * @param deltas The x & y adjustments as a point object array.\r\n         * @param task The function to call while the paths are temporarily moved.\r\n         */\r\n        function moveTemporary(pathsToMove, deltas, task) {\r\n            var subtract = false;\r\n            function move(pathToOffset, i) {\r\n                if (deltas[i]) {\r\n                    moveRelative(pathToOffset, deltas[i], subtract);\r\n                }\r\n            }\r\n            pathsToMove.map(move);\r\n            task();\r\n            subtract = true;\r\n            pathsToMove.map(move);\r\n        }\r\n        path.moveTemporary = moveTemporary;\r\n        /**\r\n         * @private\r\n         */\r\n        var rotateMap = {};\r\n        rotateMap[MakerJs.pathType.Line] = function (line, angleInDegrees, rotationOrigin) {\r\n            line.end = MakerJs.point.rotate(line.end, angleInDegrees, rotationOrigin);\r\n        };\r\n        rotateMap[MakerJs.pathType.Arc] = function (arc, angleInDegrees, rotationOrigin) {\r\n            arc.startAngle = MakerJs.angle.noRevolutions(arc.startAngle + angleInDegrees);\r\n            arc.endAngle = MakerJs.angle.noRevolutions(arc.endAngle + angleInDegrees);\r\n        };\r\n        rotateMap[MakerJs.pathType.BezierSeed] = function (seed, angleInDegrees, rotationOrigin) {\r\n            rotateMap[MakerJs.pathType.Line](seed, angleInDegrees, rotationOrigin);\r\n            seed.controls = seed.controls.map(function (c) { return MakerJs.point.rotate(c, angleInDegrees, rotationOrigin); });\r\n        };\r\n        /**\r\n         * Rotate a path.\r\n         *\r\n         * @param pathToRotate The path to rotate.\r\n         * @param angleInDegrees The amount of rotation, in degrees.\r\n         * @param rotationOrigin The center point of rotation.\r\n         * @returns The original path (for cascading).\r\n         */\r\n        function rotate(pathToRotate, angleInDegrees, rotationOrigin) {\r\n            if (rotationOrigin === void 0) { rotationOrigin = [0, 0]; }\r\n            if (!pathToRotate || !angleInDegrees)\r\n                return pathToRotate;\r\n            pathToRotate.origin = MakerJs.point.rotate(pathToRotate.origin, angleInDegrees, rotationOrigin);\r\n            var fn = rotateMap[pathToRotate.type];\r\n            if (fn) {\r\n                fn(pathToRotate, angleInDegrees, rotationOrigin);\r\n            }\r\n            return pathToRotate;\r\n        }\r\n        path.rotate = rotate;\r\n        /**\r\n         * @private\r\n         */\r\n        var scaleMap = {};\r\n        scaleMap[MakerJs.pathType.Line] = function (line, scaleValue) {\r\n            line.end = MakerJs.point.scale(line.end, scaleValue);\r\n        };\r\n        scaleMap[MakerJs.pathType.BezierSeed] = function (seed, scaleValue) {\r\n            scaleMap[MakerJs.pathType.Line](seed, scaleValue);\r\n            seed.controls = seed.controls.map(function (c) { return MakerJs.point.scale(c, scaleValue); });\r\n        };\r\n        scaleMap[MakerJs.pathType.Circle] = function (circle, scaleValue) {\r\n            circle.radius *= scaleValue;\r\n        };\r\n        scaleMap[MakerJs.pathType.Arc] = scaleMap[MakerJs.pathType.Circle];\r\n        /**\r\n         * Scale a path.\r\n         *\r\n         * @param pathToScale The path to scale.\r\n         * @param scaleValue The amount of scaling.\r\n         * @returns The original path (for cascading).\r\n         */\r\n        function scale(pathToScale, scaleValue) {\r\n            if (!pathToScale || scaleValue == 1)\r\n                return pathToScale;\r\n            pathToScale.origin = MakerJs.point.scale(pathToScale.origin, scaleValue);\r\n            var fn = scaleMap[pathToScale.type];\r\n            if (fn) {\r\n                fn(pathToScale, scaleValue);\r\n            }\r\n            return pathToScale;\r\n        }\r\n        path.scale = scale;\r\n        /**\r\n         * @private\r\n         */\r\n        var distortMap = {};\r\n        distortMap[MakerJs.pathType.Arc] = function (arc, scaleX, scaleY) {\r\n            return new MakerJs.models.EllipticArc(arc, scaleX, scaleY);\r\n        };\r\n        distortMap[MakerJs.pathType.Circle] = function (circle, scaleX, scaleY) {\r\n            var ellipse = new MakerJs.models.Ellipse(circle.radius * scaleX, circle.radius * scaleY);\r\n            ellipse.origin = MakerJs.point.distort(circle.origin, scaleX, scaleY);\r\n            return ellipse;\r\n        };\r\n        distortMap[MakerJs.pathType.Line] = function (line, scaleX, scaleY) {\r\n            return new MakerJs.paths.Line([line.origin, line.end].map(function (p) { return MakerJs.point.distort(p, scaleX, scaleY); }));\r\n        };\r\n        distortMap[MakerJs.pathType.BezierSeed] = function (seed, scaleX, scaleY) {\r\n            var d = MakerJs.point.distort;\r\n            return {\r\n                type: MakerJs.pathType.BezierSeed,\r\n                origin: d(seed.origin, scaleX, scaleY),\r\n                controls: seed.controls.map(function (c) { return d(c, scaleX, scaleY); }),\r\n                end: d(seed.end, scaleX, scaleY)\r\n            };\r\n        };\r\n        /**\r\n         * Distort a path - scale x and y individually.\r\n         *\r\n         * @param pathToDistort The path to distort.\r\n         * @param scaleX The amount of x scaling.\r\n         * @param scaleY The amount of y scaling.\r\n         * @returns A new IModel (for circles and arcs) or IPath (for lines and bezier seeds).\r\n         */\r\n        function distort(pathToDistort, scaleX, scaleY) {\r\n            if (!pathToDistort)\r\n                return null;\r\n            var fn = distortMap[pathToDistort.type];\r\n            if (fn) {\r\n                return fn(pathToDistort, scaleX, scaleY);\r\n            }\r\n            return null;\r\n        }\r\n        path.distort = distort;\r\n        /**\r\n         * Connect 2 lines at their slope intersection point.\r\n         *\r\n         * @param lineA First line to converge.\r\n         * @param lineB Second line to converge.\r\n         * @param useOriginA Optional flag to converge the origin point of lineA instead of the end point.\r\n         * @param useOriginB Optional flag to converge the origin point of lineB instead of the end point.\r\n         */\r\n        function converge(lineA, lineB, useOriginA, useOriginB) {\r\n            var p = MakerJs.point.fromSlopeIntersection(lineA, lineB);\r\n            if (p) {\r\n                var lines = [lineA, lineB];\r\n                var useOrigin = [useOriginA, useOriginB];\r\n                if (arguments.length === 2) {\r\n                    //converge to closest\r\n                    lines.forEach(function (line, i) {\r\n                        useOrigin[i] = (MakerJs.point.closest(p, [line.origin, line.end]) === line.origin);\r\n                    });\r\n                }\r\n                function setPoint(line, useOrigin) {\r\n                    var setP;\r\n                    if (useOrigin) {\r\n                        setP = line.origin;\r\n                    }\r\n                    else {\r\n                        setP = line.end;\r\n                    }\r\n                    setP[0] = p[0];\r\n                    setP[1] = p[1];\r\n                }\r\n                lines.forEach(function (line, i) {\r\n                    setPoint(line, useOrigin[i]);\r\n                });\r\n            }\r\n            return p;\r\n        }\r\n        path.converge = converge;\r\n        /**\r\n         * @private\r\n         */\r\n        var alterMap = {};\r\n        alterMap[MakerJs.pathType.Arc] = function (arc, pathLength, distance, useOrigin) {\r\n            var span = MakerJs.angle.ofArcSpan(arc);\r\n            var delta = ((pathLength + distance) * span / pathLength) - span;\r\n            if (useOrigin) {\r\n                arc.startAngle -= delta;\r\n            }\r\n            else {\r\n                arc.endAngle += delta;\r\n            }\r\n        };\r\n        alterMap[MakerJs.pathType.Circle] = function (circle, pathLength, distance, useOrigin) {\r\n            circle.radius *= (pathLength + distance) / pathLength;\r\n        };\r\n        alterMap[MakerJs.pathType.Line] = function (line, pathLength, distance, useOrigin) {\r\n            var delta = MakerJs.point.scale(MakerJs.point.subtract(line.end, line.origin), distance / pathLength);\r\n            if (useOrigin) {\r\n                line.origin = MakerJs.point.subtract(line.origin, delta);\r\n            }\r\n            else {\r\n                line.end = MakerJs.point.add(line.end, delta);\r\n            }\r\n        };\r\n        /**\r\n         * Alter a path by lengthening or shortening it.\r\n         *\r\n         * @param pathToAlter Path to alter.\r\n         * @param distance Numeric amount of length to add or remove from the path. Use a positive number to lengthen, negative to shorten. When shortening: this function will not alter the path and will return null if the resulting path length is less than or equal to zero.\r\n         * @param useOrigin Optional flag to alter from the origin instead of the end of the path.\r\n         * @returns The original path, or null if the path could not be altered.\r\n         */\r\n        function alterLength(pathToAlter, distance, useOrigin) {\r\n            if (useOrigin === void 0) { useOrigin = false; }\r\n            if (!pathToAlter || !distance)\r\n                return null;\r\n            var fn = alterMap[pathToAlter.type];\r\n            if (fn) {\r\n                var pathLength = MakerJs.measure.pathLength(pathToAlter);\r\n                if (!pathLength || -distance >= pathLength)\r\n                    return null;\r\n                fn(pathToAlter, pathLength, distance, useOrigin);\r\n                return pathToAlter;\r\n            }\r\n            return null;\r\n        }\r\n        path.alterLength = alterLength;\r\n        /**\r\n         * Get points along a path.\r\n         *\r\n         * @param pathContext Path to get points from.\r\n         * @param numberOfPoints Number of points to divide the path.\r\n         * @returns Array of points which are on the path spread at a uniform interval.\r\n         */\r\n        function toPoints(pathContext, numberOfPoints) {\r\n            //avoid division by zero when there is only one point\r\n            if (numberOfPoints == 1) {\r\n                return [MakerJs.point.middle(pathContext)];\r\n            }\r\n            var points = [];\r\n            var base = numberOfPoints;\r\n            if (pathContext.type != MakerJs.pathType.Circle)\r\n                base--;\r\n            for (var i = 0; i < numberOfPoints; i++) {\r\n                points.push(MakerJs.point.middle(pathContext, i / base));\r\n            }\r\n            return points;\r\n        }\r\n        path.toPoints = toPoints;\r\n        /**\r\n         * @private\r\n         */\r\n        var numberOfKeyPointsMap = {};\r\n        numberOfKeyPointsMap[MakerJs.pathType.Line] = function (line) {\r\n            return 2;\r\n        };\r\n        numberOfKeyPointsMap[MakerJs.pathType.Circle] = function (circle, maxPointDistance) {\r\n            var len = MakerJs.measure.pathLength(circle);\r\n            if (!len)\r\n                return 0;\r\n            maxPointDistance = maxPointDistance || len;\r\n            return Math.max(8, Math.ceil(len / (maxPointDistance || len)));\r\n        };\r\n        numberOfKeyPointsMap[MakerJs.pathType.Arc] = function (arc, maxPointDistance) {\r\n            var len = MakerJs.measure.pathLength(arc);\r\n            if (!len)\r\n                return 0;\r\n            var minPoints = Math.ceil(MakerJs.angle.ofArcSpan(arc) / 45) + 1;\r\n            return Math.max(minPoints, Math.ceil(len / (maxPointDistance || len)));\r\n        };\r\n        /**\r\n         * Get key points (a minimal a number of points) along a path.\r\n         *\r\n         * @param pathContext Path to get points from.\r\n         * @param maxArcFacet Optional maximum length between points on an arc or circle.\r\n         * @returns Array of points which are on the path.\r\n         */\r\n        function toKeyPoints(pathContext, maxArcFacet) {\r\n            var fn = numberOfKeyPointsMap[pathContext.type];\r\n            if (fn) {\r\n                var numberOfKeyPoints = fn(pathContext, maxArcFacet);\r\n                if (numberOfKeyPoints) {\r\n                    return toPoints(pathContext, numberOfKeyPoints);\r\n                }\r\n            }\r\n            return [];\r\n        }\r\n        path.toKeyPoints = toKeyPoints;\r\n        /**\r\n         * Center a path at [0, 0].\r\n         *\r\n         * @param pathToCenter The path to center.\r\n         */\r\n        function center(pathToCenter) {\r\n            var m = MakerJs.measure.pathExtents(pathToCenter);\r\n            var c = MakerJs.point.average(m.high, m.low);\r\n            var o = MakerJs.point.subtract(pathToCenter.origin || [0, 0], c);\r\n            move(pathToCenter, o);\r\n            return pathToCenter;\r\n        }\r\n        path.center = center;\r\n        /**\r\n         * Move a path so its bounding box begins at [0, 0].\r\n         *\r\n         * @param pathToZero The path to zero.\r\n         */\r\n        function zero(pathToZero) {\r\n            var m = MakerJs.measure.pathExtents(pathToZero);\r\n            var z = MakerJs.point.subtract(pathToZero.origin || [0, 0], m.low);\r\n            move(pathToZero, z);\r\n            return pathToZero;\r\n        }\r\n        path.zero = zero;\r\n    })(path = MakerJs.path || (MakerJs.path = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var path;\r\n    (function (path_1) {\r\n        /**\r\n         * @private\r\n         */\r\n        var breakPathFunctionMap = {};\r\n        breakPathFunctionMap[MakerJs.pathType.Arc] = function (arc, pointOfBreak) {\r\n            var angleAtBreakPoint = MakerJs.angle.ofPointInDegrees(arc.origin, pointOfBreak);\r\n            if (MakerJs.measure.isAngleEqual(angleAtBreakPoint, arc.startAngle) || MakerJs.measure.isAngleEqual(angleAtBreakPoint, arc.endAngle)) {\r\n                return null;\r\n            }\r\n            function getAngleStrictlyBetweenArcAngles() {\r\n                var startAngle = MakerJs.angle.noRevolutions(arc.startAngle);\r\n                var endAngle = startAngle + MakerJs.angle.ofArcEnd(arc) - arc.startAngle;\r\n                var tries = [0, 1, -1];\r\n                for (var i = 0; i < tries.length; i++) {\r\n                    var add = +360 * tries[i];\r\n                    if (MakerJs.measure.isBetween(angleAtBreakPoint + add, startAngle, endAngle, true)) {\r\n                        return arc.startAngle + angleAtBreakPoint + add - startAngle;\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n            var angleAtBreakPointBetween = getAngleStrictlyBetweenArcAngles();\r\n            if (angleAtBreakPointBetween == null) {\r\n                return null;\r\n            }\r\n            var savedEndAngle = arc.endAngle;\r\n            arc.endAngle = angleAtBreakPointBetween;\r\n            //clone the original to carry other properties\r\n            var copy = MakerJs.cloneObject(arc);\r\n            copy.startAngle = angleAtBreakPointBetween;\r\n            copy.endAngle = savedEndAngle;\r\n            return copy;\r\n        };\r\n        breakPathFunctionMap[MakerJs.pathType.Circle] = function (circle, pointOfBreak) {\r\n            //breaking a circle turns it into an arc\r\n            circle.type = MakerJs.pathType.Arc;\r\n            var arc = circle;\r\n            var angleAtBreakPoint = MakerJs.angle.ofPointInDegrees(circle.origin, pointOfBreak);\r\n            arc.startAngle = angleAtBreakPoint;\r\n            arc.endAngle = angleAtBreakPoint + 360;\r\n            return null;\r\n        };\r\n        breakPathFunctionMap[MakerJs.pathType.Line] = function (line, pointOfBreak) {\r\n            if (!MakerJs.measure.isBetweenPoints(pointOfBreak, line, true)) {\r\n                return null;\r\n            }\r\n            var savedEndPoint = line.end;\r\n            line.end = pointOfBreak;\r\n            //clone the original to carry other properties\r\n            var copy = MakerJs.cloneObject(line);\r\n            copy.origin = pointOfBreak;\r\n            copy.end = savedEndPoint;\r\n            return copy;\r\n        };\r\n        /**\r\n         * Breaks a path in two. The supplied path will end at the supplied pointOfBreak,\r\n         * a new path is returned which begins at the pointOfBreak and ends at the supplied path's initial end point.\r\n         * For Circle, the original path will be converted in place to an Arc, and null is returned.\r\n         *\r\n         * @param pathToBreak The path to break.\r\n         * @param pointOfBreak The point at which to break the path.\r\n         * @returns A new path of the same type, when path type is line or arc. Returns null for circle.\r\n         */\r\n        function breakAtPoint(pathToBreak, pointOfBreak) {\r\n            if (pathToBreak && pointOfBreak) {\r\n                var fn = breakPathFunctionMap[pathToBreak.type];\r\n                if (fn) {\r\n                    var result = fn(pathToBreak, pointOfBreak);\r\n                    if (result && ('layer' in pathToBreak)) {\r\n                        result.layer = pathToBreak.layer;\r\n                    }\r\n                    return result;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        path_1.breakAtPoint = breakAtPoint;\r\n    })(path = MakerJs.path || (MakerJs.path = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var paths;\r\n    (function (paths) {\r\n        /**\r\n         * Class for arc path.\r\n         */\r\n        var Arc = (function () {\r\n            function Arc() {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                function getSpan(origin) {\r\n                    var startAngle = MakerJs.angle.ofPointInDegrees(origin, args[clockwise ? 1 : 0]);\r\n                    var endAngle = MakerJs.angle.ofPointInDegrees(origin, args[clockwise ? 0 : 1]);\r\n                    if (endAngle < startAngle) {\r\n                        endAngle += 360;\r\n                    }\r\n                    return {\r\n                        origin: origin,\r\n                        startAngle: startAngle,\r\n                        endAngle: endAngle,\r\n                        size: endAngle - startAngle\r\n                    };\r\n                }\r\n                switch (args.length) {\r\n                    case 5:\r\n                        //SVG style arc designation\r\n                        var pointA = args[0];\r\n                        var pointB = args[1];\r\n                        this.radius = args[2];\r\n                        var largeArc = args[3];\r\n                        var clockwise = args[4];\r\n                        var span;\r\n                        //make sure arc can reach. if not, scale up.\r\n                        var smallestRadius = MakerJs.measure.pointDistance(pointA, pointB) / 2;\r\n                        if (MakerJs.round(this.radius - smallestRadius) <= 0) {\r\n                            this.radius = smallestRadius;\r\n                            span = getSpan(MakerJs.point.average(pointA, pointB));\r\n                        }\r\n                        else {\r\n                            //find the 2 potential origins\r\n                            var origins = MakerJs.path.intersection(new Circle(pointA, this.radius), new Circle(pointB, this.radius));\r\n                            var spans = [];\r\n                            for (var i = origins.intersectionPoints.length; i--;) {\r\n                                span = getSpan(origins.intersectionPoints[i]);\r\n                                //insert sorted by size ascending\r\n                                if (spans.length == 0 || span.size > spans[0].size) {\r\n                                    spans.push(span);\r\n                                }\r\n                                else {\r\n                                    spans.unshift(span);\r\n                                }\r\n                            }\r\n                            var index = largeArc ? 1 : 0;\r\n                            span = spans[index];\r\n                        }\r\n                        this.origin = span.origin;\r\n                        this.startAngle = span.startAngle;\r\n                        this.endAngle = span.endAngle;\r\n                        break;\r\n                    case 4:\r\n                        this.origin = args[0];\r\n                        this.radius = args[1];\r\n                        this.startAngle = args[2];\r\n                        this.endAngle = args[3];\r\n                        break;\r\n                    case 3:\r\n                        if (MakerJs.isPoint(args[2])) {\r\n                            //from 3 points\r\n                            Circle.apply(this, args);\r\n                            var angles = [];\r\n                            for (var i = 0; i < 3; i++) {\r\n                                angles.push(MakerJs.angle.ofPointInDegrees(this.origin, args[i]));\r\n                            }\r\n                            this.startAngle = angles[0];\r\n                            this.endAngle = angles[2];\r\n                            //swap start and end angles if this arc does not contain the midpoint\r\n                            if (!MakerJs.measure.isBetweenArcAngles(angles[1], this, false)) {\r\n                                this.startAngle = angles[2];\r\n                                this.endAngle = angles[0];\r\n                            }\r\n                            //do not fall through if this was 3 points\r\n                            break;\r\n                        }\r\n                    //fall through to below if 2 points\r\n                    case 2:\r\n                        //from 2 points (and optional clockwise flag)\r\n                        var clockwise = args[2];\r\n                        Circle.call(this, args[0], args[1]);\r\n                        this.startAngle = MakerJs.angle.ofPointInDegrees(this.origin, args[clockwise ? 1 : 0]);\r\n                        this.endAngle = MakerJs.angle.ofPointInDegrees(this.origin, args[clockwise ? 0 : 1]);\r\n                        break;\r\n                }\r\n                //do this after Circle.apply / Circle.call to make sure this is an arc\r\n                this.type = MakerJs.pathType.Arc;\r\n            }\r\n            return Arc;\r\n        }());\r\n        paths.Arc = Arc;\r\n        /**\r\n         * Class for circle path.\r\n         */\r\n        var Circle = (function () {\r\n            function Circle() {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                this.type = MakerJs.pathType.Circle;\r\n                switch (args.length) {\r\n                    case 1:\r\n                        this.origin = [0, 0];\r\n                        this.radius = args[0];\r\n                        break;\r\n                    case 2:\r\n                        if (MakerJs.isNumber(args[1])) {\r\n                            this.origin = args[0];\r\n                            this.radius = args[1];\r\n                        }\r\n                        else {\r\n                            //Circle from 2 points\r\n                            this.origin = MakerJs.point.average(args[0], args[1]);\r\n                            this.radius = MakerJs.measure.pointDistance(this.origin, args[0]);\r\n                        }\r\n                        break;\r\n                    default:\r\n                        //Circle from 3 points\r\n                        //create 2 lines with 2nd point in common\r\n                        var lines = [\r\n                            new Line(args[0], args[1]),\r\n                            new Line(args[1], args[2])\r\n                        ];\r\n                        //create perpendicular lines\r\n                        var perpendiculars = [];\r\n                        for (var i = 2; i--;) {\r\n                            var midpoint = MakerJs.point.middle(lines[i]);\r\n                            perpendiculars.push(MakerJs.path.rotate(lines[i], 90, midpoint));\r\n                        }\r\n                        //find intersection of slopes of perpendiculars\r\n                        this.origin = MakerJs.point.fromSlopeIntersection(perpendiculars[0], perpendiculars[1]);\r\n                        //radius is distance to any of the 3 points\r\n                        this.radius = MakerJs.measure.pointDistance(this.origin, args[0]);\r\n                        break;\r\n                }\r\n            }\r\n            return Circle;\r\n        }());\r\n        paths.Circle = Circle;\r\n        /**\r\n         * Class for line path.\r\n         */\r\n        var Line = (function () {\r\n            function Line() {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                this.type = MakerJs.pathType.Line;\r\n                switch (args.length) {\r\n                    case 1:\r\n                        var points = args[0];\r\n                        this.origin = points[0];\r\n                        this.end = points[1];\r\n                        break;\r\n                    case 2:\r\n                        this.origin = args[0];\r\n                        this.end = args[1];\r\n                        break;\r\n                }\r\n            }\r\n            return Line;\r\n        }());\r\n        paths.Line = Line;\r\n        /**\r\n         * Class for chord, which is simply a line path that connects the endpoints of an arc.\r\n         *\r\n         * @param arc Arc to use as the basic for the chord.\r\n         */\r\n        var Chord = (function () {\r\n            function Chord(arc) {\r\n                var arcPoints = MakerJs.point.fromArc(arc);\r\n                this.type = MakerJs.pathType.Line;\r\n                this.origin = arcPoints[0];\r\n                this.end = arcPoints[1];\r\n            }\r\n            return Chord;\r\n        }());\r\n        paths.Chord = Chord;\r\n        /**\r\n         * Class for a parallel line path.\r\n         *\r\n         * @param toLine A line to be parallel to.\r\n         * @param distance Distance between parallel and original line.\r\n         * @param nearPoint Any point to determine which side of the line to place the parallel.\r\n         */\r\n        var Parallel = (function () {\r\n            function Parallel(toLine, distance, nearPoint) {\r\n                this.type = MakerJs.pathType.Line;\r\n                this.origin = MakerJs.point.clone(toLine.origin);\r\n                this.end = MakerJs.point.clone(toLine.end);\r\n                var angleOfLine = MakerJs.angle.ofLineInDegrees(this);\r\n                function getNewOrigin(offsetAngle) {\r\n                    var origin = MakerJs.point.add(toLine.origin, MakerJs.point.fromPolar(MakerJs.angle.toRadians(angleOfLine + offsetAngle), distance));\r\n                    return {\r\n                        origin: origin,\r\n                        nearness: MakerJs.measure.pointDistance(origin, nearPoint)\r\n                    };\r\n                }\r\n                var newOrigins = [getNewOrigin(-90), getNewOrigin(90)];\r\n                var newOrigin = (newOrigins[0].nearness < newOrigins[1].nearness) ? newOrigins[0].origin : newOrigins[1].origin;\r\n                MakerJs.path.move(this, newOrigin);\r\n            }\r\n            return Parallel;\r\n        }());\r\n        paths.Parallel = Parallel;\r\n    })(paths = MakerJs.paths || (MakerJs.paths = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var model;\r\n    (function (model) {\r\n        /**\r\n         * Count the number of child models within a given model.\r\n         *\r\n         * @param modelContext The model containing other models.\r\n         * @returns Number of child models.\r\n         */\r\n        function countChildModels(modelContext) {\r\n            var count = 0;\r\n            if (modelContext.models) {\r\n                for (var id in modelContext.models) {\r\n                    count++;\r\n                }\r\n            }\r\n            return count;\r\n        }\r\n        model.countChildModels = countChildModels;\r\n        /**\r\n         * Get an unused id in the models map with the same prefix.\r\n         *\r\n         * @param modelContext The model containing the models map.\r\n         * @param modelId The id to use directly (if unused), or as a prefix.\r\n         */\r\n        function getSimilarModelId(modelContext, modelId) {\r\n            if (!modelContext.models)\r\n                return modelId;\r\n            var i = 0;\r\n            var newModelId = modelId;\r\n            while (newModelId in modelContext.models) {\r\n                i++;\r\n                newModelId = modelId + '_' + i;\r\n            }\r\n            return newModelId;\r\n        }\r\n        model.getSimilarModelId = getSimilarModelId;\r\n        /**\r\n         * Get an unused id in the paths map with the same prefix.\r\n         *\r\n         * @param modelContext The model containing the paths map.\r\n         * @param pathId The id to use directly (if unused), or as a prefix.\r\n         */\r\n        function getSimilarPathId(modelContext, pathId) {\r\n            if (!modelContext.paths)\r\n                return pathId;\r\n            var i = 0;\r\n            var newPathId = pathId;\r\n            while (newPathId in modelContext.paths) {\r\n                i++;\r\n                newPathId = pathId + '_' + i;\r\n            }\r\n            return newPathId;\r\n        }\r\n        model.getSimilarPathId = getSimilarPathId;\r\n        /**\r\n         * Moves all of a model's children (models and paths, recursively) in reference to a single common origin. Useful when points between children need to connect to each other.\r\n         *\r\n         * @param modelToOriginate The model to originate.\r\n         * @param origin Optional offset reference point.\r\n         */\r\n        function originate(modelToOriginate, origin) {\r\n            function innerOriginate(m, o) {\r\n                if (!m)\r\n                    return;\r\n                var newOrigin = MakerJs.point.add(m.origin, o);\r\n                if (m.type === MakerJs.models.BezierCurve.typeName) {\r\n                    MakerJs.path.moveRelative(m.seed, newOrigin);\r\n                }\r\n                if (m.paths) {\r\n                    for (var id in m.paths) {\r\n                        MakerJs.path.moveRelative(m.paths[id], newOrigin);\r\n                    }\r\n                }\r\n                if (m.models) {\r\n                    for (var id in m.models) {\r\n                        innerOriginate(m.models[id], newOrigin);\r\n                    }\r\n                }\r\n                m.origin = MakerJs.point.zero();\r\n            }\r\n            innerOriginate(modelToOriginate, origin ? MakerJs.point.subtract([0, 0], origin) : [0, 0]);\r\n            if (origin) {\r\n                modelToOriginate.origin = origin;\r\n            }\r\n            return modelToOriginate;\r\n        }\r\n        model.originate = originate;\r\n        /**\r\n         * Center a model at [0, 0].\r\n         *\r\n         * @param modelToCenter The model to center.\r\n         * @param centerX Boolean to center on the x axis. Default is true.\r\n         * @param centerY Boolean to center on the y axis. Default is true.\r\n         * @returns The original model (for cascading).\r\n         */\r\n        function center(modelToCenter, centerX, centerY) {\r\n            if (centerX === void 0) { centerX = true; }\r\n            if (centerY === void 0) { centerY = true; }\r\n            var m = MakerJs.measure.modelExtents(modelToCenter);\r\n            var o = modelToCenter.origin || [0, 0];\r\n            if (centerX)\r\n                o[0] -= m.center[0];\r\n            if (centerY)\r\n                o[1] -= m.center[1];\r\n            modelToCenter.origin = o;\r\n            return modelToCenter;\r\n        }\r\n        model.center = center;\r\n        /**\r\n         * Create a clone of a model, mirrored on either or both x and y axes.\r\n         *\r\n         * @param modelToMirror The model to mirror.\r\n         * @param mirrorX Boolean to mirror on the x axis.\r\n         * @param mirrorY Boolean to mirror on the y axis.\r\n         * @returns Mirrored model.\r\n         */\r\n        function mirror(modelToMirror, mirrorX, mirrorY) {\r\n            var newModel = {};\r\n            if (!modelToMirror)\r\n                return null;\r\n            if (modelToMirror.origin) {\r\n                newModel.origin = MakerJs.point.mirror(modelToMirror.origin, mirrorX, mirrorY);\r\n            }\r\n            if (modelToMirror.type) {\r\n                newModel.type = modelToMirror.type;\r\n            }\r\n            if (modelToMirror.units) {\r\n                newModel.units = modelToMirror.units;\r\n            }\r\n            if (modelToMirror.type === MakerJs.models.BezierCurve.typeName) {\r\n                newModel.type = MakerJs.models.BezierCurve.typeName;\r\n                newModel.seed = MakerJs.path.mirror(modelToMirror.seed, mirrorX, mirrorY);\r\n            }\r\n            if (modelToMirror.paths) {\r\n                newModel.paths = {};\r\n                for (var id in modelToMirror.paths) {\r\n                    var pathToMirror = modelToMirror.paths[id];\r\n                    if (!pathToMirror)\r\n                        continue;\r\n                    var pathMirrored = MakerJs.path.mirror(pathToMirror, mirrorX, mirrorY);\r\n                    if (!pathMirrored)\r\n                        continue;\r\n                    newModel.paths[id] = pathMirrored;\r\n                }\r\n            }\r\n            if (modelToMirror.models) {\r\n                newModel.models = {};\r\n                for (var id in modelToMirror.models) {\r\n                    var childModelToMirror = modelToMirror.models[id];\r\n                    if (!childModelToMirror)\r\n                        continue;\r\n                    var childModelMirrored = mirror(childModelToMirror, mirrorX, mirrorY);\r\n                    if (!childModelMirrored)\r\n                        continue;\r\n                    newModel.models[id] = childModelMirrored;\r\n                }\r\n            }\r\n            return newModel;\r\n        }\r\n        model.mirror = mirror;\r\n        /**\r\n         * Move a model to an absolute point. Note that this is also accomplished by directly setting the origin property. This function exists for cascading.\r\n         *\r\n         * @param modelToMove The model to move.\r\n         * @param origin The new position of the model.\r\n         * @returns The original model (for cascading).\r\n         */\r\n        function move(modelToMove, origin) {\r\n            modelToMove.origin = MakerJs.point.clone(origin);\r\n            return modelToMove;\r\n        }\r\n        model.move = move;\r\n        /**\r\n         * Move a model's origin by a relative amount.\r\n         *\r\n         * @param modelToMove The model to move.\r\n         * @param delta The x & y adjustments as a point object.\r\n         * @returns The original model (for cascading).\r\n         */\r\n        function moveRelative(modelToMove, delta) {\r\n            if (modelToMove) {\r\n                modelToMove.origin = MakerJs.point.add(modelToMove.origin || MakerJs.point.zero(), delta);\r\n            }\r\n            return modelToMove;\r\n        }\r\n        model.moveRelative = moveRelative;\r\n        /**\r\n         * Prefix the ids of paths in a model.\r\n         *\r\n         * @param modelToPrefix The model to prefix.\r\n         * @param prefix The prefix to prepend on paths ids.\r\n         * @returns The original model (for cascading).\r\n         */\r\n        function prefixPathIds(modelToPrefix, prefix) {\r\n            var walkedPaths = [];\r\n            //first collect the paths because we don't want to modify keys during an iteration on keys\r\n            walk(modelToPrefix, {\r\n                onPath: function (walkedPath) {\r\n                    walkedPaths.push(walkedPath);\r\n                }\r\n            });\r\n            //now modify the ids in our own iteration\r\n            for (var i = 0; i < walkedPaths.length; i++) {\r\n                var walkedPath = walkedPaths[i];\r\n                delete walkedPath.modelContext.paths[walkedPath.pathId];\r\n                walkedPath.modelContext.paths[prefix + walkedPath.pathId] = walkedPath.pathContext;\r\n            }\r\n            return modelToPrefix;\r\n        }\r\n        model.prefixPathIds = prefixPathIds;\r\n        /**\r\n         * Rotate a model.\r\n         *\r\n         * @param modelToRotate The model to rotate.\r\n         * @param angleInDegrees The amount of rotation, in degrees.\r\n         * @param rotationOrigin The center point of rotation.\r\n         * @returns The original model (for cascading).\r\n         */\r\n        function rotate(modelToRotate, angleInDegrees, rotationOrigin) {\r\n            if (rotationOrigin === void 0) { rotationOrigin = [0, 0]; }\r\n            if (!modelToRotate || !angleInDegrees)\r\n                return modelToRotate;\r\n            var offsetOrigin = MakerJs.point.subtract(rotationOrigin, modelToRotate.origin);\r\n            if (modelToRotate.type === MakerJs.models.BezierCurve.typeName) {\r\n                MakerJs.path.rotate(modelToRotate.seed, angleInDegrees, offsetOrigin);\r\n            }\r\n            if (modelToRotate.paths) {\r\n                for (var id in modelToRotate.paths) {\r\n                    MakerJs.path.rotate(modelToRotate.paths[id], angleInDegrees, offsetOrigin);\r\n                }\r\n            }\r\n            if (modelToRotate.models) {\r\n                for (var id in modelToRotate.models) {\r\n                    rotate(modelToRotate.models[id], angleInDegrees, offsetOrigin);\r\n                }\r\n            }\r\n            return modelToRotate;\r\n        }\r\n        model.rotate = rotate;\r\n        /**\r\n         * Scale a model.\r\n         *\r\n         * @param modelToScale The model to scale.\r\n         * @param scaleValue The amount of scaling.\r\n         * @param scaleOrigin Optional boolean to scale the origin point. Typically false for the root model.\r\n         * @returns The original model (for cascading).\r\n         */\r\n        function scale(modelToScale, scaleValue, scaleOrigin) {\r\n            if (scaleOrigin === void 0) { scaleOrigin = false; }\r\n            if (scaleOrigin && modelToScale.origin) {\r\n                modelToScale.origin = MakerJs.point.scale(modelToScale.origin, scaleValue);\r\n            }\r\n            if (modelToScale.type === MakerJs.models.BezierCurve.typeName) {\r\n                MakerJs.path.scale(modelToScale.seed, scaleValue);\r\n            }\r\n            if (modelToScale.paths) {\r\n                for (var id in modelToScale.paths) {\r\n                    MakerJs.path.scale(modelToScale.paths[id], scaleValue);\r\n                }\r\n            }\r\n            if (modelToScale.models) {\r\n                for (var id in modelToScale.models) {\r\n                    scale(modelToScale.models[id], scaleValue, true);\r\n                }\r\n            }\r\n            return modelToScale;\r\n        }\r\n        model.scale = scale;\r\n        /**\r\n         * Convert a model to match a different unit system.\r\n         *\r\n         * @param modeltoConvert The model to convert.\r\n         * @param destUnitType The unit system.\r\n         * @returns The scaled model (for cascading).\r\n         */\r\n        function convertUnits(modeltoConvert, destUnitType) {\r\n            var validUnitType = false;\r\n            for (var id in MakerJs.unitType) {\r\n                if (MakerJs.unitType[id] == destUnitType) {\r\n                    validUnitType = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (modeltoConvert.units && validUnitType) {\r\n                var ratio = MakerJs.units.conversionScale(modeltoConvert.units, destUnitType);\r\n                if (ratio != 1) {\r\n                    scale(modeltoConvert, ratio);\r\n                    //update the model with its new unit type\r\n                    modeltoConvert.units = destUnitType;\r\n                }\r\n            }\r\n            return modeltoConvert;\r\n        }\r\n        model.convertUnits = convertUnits;\r\n        /**\r\n         * Recursively walk through all paths for a given model.\r\n         *\r\n         * @param modelContext The model to walk.\r\n         * @param callback Callback for each path.\r\n         */\r\n        function walkPaths(modelContext, callback) {\r\n            if (modelContext.paths) {\r\n                for (var pathId in modelContext.paths) {\r\n                    if (!modelContext.paths[pathId])\r\n                        continue;\r\n                    callback(modelContext, pathId, modelContext.paths[pathId]);\r\n                }\r\n            }\r\n            if (modelContext.models) {\r\n                for (var id in modelContext.models) {\r\n                    if (!modelContext.models[id])\r\n                        continue;\r\n                    walkPaths(modelContext.models[id], callback);\r\n                }\r\n            }\r\n        }\r\n        model.walkPaths = walkPaths;\r\n        /**\r\n         * Recursively walk through all paths for a given model.\r\n         *\r\n         * @param modelContext The model to walk.\r\n         * @param pathCallback Callback for each path.\r\n         * @param modelCallbackBeforeWalk Callback for each model prior to recursion, which can cancel the recursion if it returns false.\r\n         * @param modelCallbackAfterWalk Callback for each model after recursion.\r\n         */\r\n        function walk(modelContext, options) {\r\n            if (!modelContext)\r\n                return;\r\n            function walkRecursive(modelContext, layer, offset, route, routeKey) {\r\n                var newOffset = MakerJs.point.add(modelContext.origin, offset);\r\n                layer = layer || '';\r\n                if (modelContext.paths) {\r\n                    for (var pathId in modelContext.paths) {\r\n                        var pathContext = modelContext.paths[pathId];\r\n                        if (!pathContext)\r\n                            continue;\r\n                        var walkedPath = {\r\n                            modelContext: modelContext,\r\n                            layer: pathContext.layer || layer,\r\n                            offset: newOffset,\r\n                            pathContext: pathContext,\r\n                            pathId: pathId,\r\n                            route: route.concat(['paths', pathId]),\r\n                            routeKey: routeKey + '.paths' + JSON.stringify([pathId])\r\n                        };\r\n                        if (options.onPath)\r\n                            options.onPath(walkedPath);\r\n                    }\r\n                }\r\n                if (modelContext.models) {\r\n                    for (var modelId in modelContext.models) {\r\n                        var childModel = modelContext.models[modelId];\r\n                        if (!childModel)\r\n                            continue;\r\n                        var walkedModel = {\r\n                            parentModel: modelContext,\r\n                            layer: childModel.layer || layer,\r\n                            offset: newOffset,\r\n                            route: route.concat(['models', modelId]),\r\n                            routeKey: routeKey + '.models' + JSON.stringify([modelId]),\r\n                            childId: modelId,\r\n                            childModel: childModel\r\n                        };\r\n                        if (options.beforeChildWalk) {\r\n                            if (!options.beforeChildWalk(walkedModel))\r\n                                continue;\r\n                        }\r\n                        walkRecursive(walkedModel.childModel, walkedModel.layer, newOffset, walkedModel.route, walkedModel.routeKey);\r\n                        if (options.afterChildWalk) {\r\n                            options.afterChildWalk(walkedModel);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            walkRecursive(modelContext, modelContext.layer, [0, 0], [], '');\r\n        }\r\n        model.walk = walk;\r\n        /**\r\n         * Move a model so its bounding box begins at [0, 0].\r\n         *\r\n         * @param modelToZero The model to zero.\r\n         * @param zeroX Boolean to zero on the x axis. Default is true.\r\n         * @param zeroY Boolean to zero on the y axis. Default is true.\r\n         * @returns The original model (for cascading).\r\n         */\r\n        function zero(modelToZero, zeroX, zeroY) {\r\n            if (zeroX === void 0) { zeroX = true; }\r\n            if (zeroY === void 0) { zeroY = true; }\r\n            var m = MakerJs.measure.modelExtents(modelToZero);\r\n            var z = modelToZero.origin || [0, 0];\r\n            if (zeroX)\r\n                z[0] -= m.low[0];\r\n            if (zeroY)\r\n                z[1] -= m.low[1];\r\n            modelToZero.origin = z;\r\n            return modelToZero;\r\n        }\r\n        model.zero = zero;\r\n    })(model = MakerJs.model || (MakerJs.model = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var model;\r\n    (function (model) {\r\n        /**\r\n         * @private\r\n         */\r\n        function getNonZeroSegments(pathToSegment, breakPoint) {\r\n            var segment1 = MakerJs.cloneObject(pathToSegment);\r\n            if (!segment1)\r\n                return null;\r\n            var segment2 = MakerJs.path.breakAtPoint(segment1, breakPoint);\r\n            if (segment2) {\r\n                var segments = [segment1, segment2];\r\n                for (var i = 2; i--;) {\r\n                    if (MakerJs.round(MakerJs.measure.pathLength(segments[i]), .0001) == 0) {\r\n                        return null;\r\n                    }\r\n                }\r\n                return segments;\r\n            }\r\n            else if (pathToSegment.type == MakerJs.pathType.Circle) {\r\n                return [segment1];\r\n            }\r\n            return null;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function breakAlongForeignPath(crossedPath, overlappedSegments, foreignWalkedPath) {\r\n            var foreignPath = foreignWalkedPath.pathContext;\r\n            var segments = crossedPath.segments;\r\n            if (MakerJs.measure.isPathEqual(segments[0].path, foreignPath, .0001, crossedPath.offset, foreignWalkedPath.offset)) {\r\n                segments[0].overlapped = true;\r\n                segments[0].duplicate = true;\r\n                overlappedSegments.push(segments[0]);\r\n                return;\r\n            }\r\n            var foreignPathEndPoints;\r\n            for (var i = 0; i < segments.length; i++) {\r\n                var pointsToCheck;\r\n                var options = { path1Offset: crossedPath.offset, path2Offset: foreignWalkedPath.offset };\r\n                var foreignIntersection = MakerJs.path.intersection(segments[i].path, foreignPath, options);\r\n                if (foreignIntersection) {\r\n                    pointsToCheck = foreignIntersection.intersectionPoints;\r\n                }\r\n                else if (options.out_AreOverlapped) {\r\n                    segments[i].overlapped = true;\r\n                    overlappedSegments.push(segments[i]);\r\n                    if (!foreignPathEndPoints) {\r\n                        //make sure endpoints are in absolute coords\r\n                        foreignPathEndPoints = MakerJs.point.fromPathEnds(foreignPath, foreignWalkedPath.offset);\r\n                    }\r\n                    pointsToCheck = foreignPathEndPoints;\r\n                }\r\n                if (pointsToCheck) {\r\n                    //break the path which intersected, and add the shard to the end of the array so it can also be checked in this loop for further sharding.\r\n                    var subSegments = null;\r\n                    var p = 0;\r\n                    while (!subSegments && p < pointsToCheck.length) {\r\n                        //cast absolute points to path relative space\r\n                        subSegments = getNonZeroSegments(segments[i].path, MakerJs.point.subtract(pointsToCheck[p], crossedPath.offset));\r\n                        p++;\r\n                    }\r\n                    if (subSegments) {\r\n                        crossedPath.broken = true;\r\n                        segments[i].path = subSegments[0];\r\n                        if (subSegments[1]) {\r\n                            var newSegment = {\r\n                                path: subSegments[1],\r\n                                pathId: segments[0].pathId,\r\n                                overlapped: segments[i].overlapped,\r\n                                uniqueForeignIntersectionPoints: [],\r\n                                offset: crossedPath.offset\r\n                            };\r\n                            if (segments[i].overlapped) {\r\n                                overlappedSegments.push(newSegment);\r\n                            }\r\n                            segments.push(newSegment);\r\n                        }\r\n                        //re-check this segment for another deep intersection\r\n                        i--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function addUniquePoints(pointArray, pointsToAdd) {\r\n            var added = 0;\r\n            function addUniquePoint(pointToAdd) {\r\n                for (var i = 0; i < pointArray.length; i++) {\r\n                    if (MakerJs.measure.isPointEqual(pointArray[i], pointToAdd, .000000001)) {\r\n                        return;\r\n                    }\r\n                }\r\n                pointArray.push(pointToAdd);\r\n                added++;\r\n            }\r\n            for (var i = 0; i < pointsToAdd.length; i++) {\r\n                addUniquePoint(pointsToAdd[i]);\r\n            }\r\n            return added;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function checkInsideForeignModel(segment, segmentOffset, modelToIntersect, modelToIntersectAtlas, farPoint) {\r\n            if (farPoint === void 0) { farPoint = [7654321, 1234567]; }\r\n            var origin = MakerJs.point.add(MakerJs.point.middle(segment.path), segmentOffset);\r\n            var lineToFarPoint = new MakerJs.paths.Line(origin, farPoint);\r\n            var measureFarPoint = MakerJs.measure.pathExtents(lineToFarPoint);\r\n            var walkOptions = {\r\n                onPath: function (walkedPath) {\r\n                    if (modelToIntersectAtlas && !MakerJs.measure.isMeasurementOverlapping(measureFarPoint, modelToIntersectAtlas.pathMap[walkedPath.routeKey])) {\r\n                        return;\r\n                    }\r\n                    var options = { path2Offset: walkedPath.offset };\r\n                    var farInt = MakerJs.path.intersection(lineToFarPoint, walkedPath.pathContext, options);\r\n                    if (farInt) {\r\n                        var added = addUniquePoints(segment.uniqueForeignIntersectionPoints, farInt.intersectionPoints);\r\n                        //if number of intersections is an odd number, flip the flag.\r\n                        if (added % 2 == 1) {\r\n                            segment.isInside = !!!segment.isInside;\r\n                        }\r\n                    }\r\n                },\r\n                beforeChildWalk: function (innerWalkedModel) {\r\n                    if (!modelToIntersectAtlas) {\r\n                        return true;\r\n                    }\r\n                    //see if there is a model measurement. if not, it is because the model does not contain paths.\r\n                    var innerModelMeasurement = modelToIntersectAtlas.modelMap[innerWalkedModel.routeKey];\r\n                    return innerModelMeasurement && MakerJs.measure.isMeasurementOverlapping(measureFarPoint, innerModelMeasurement);\r\n                }\r\n            };\r\n            model.walk(modelToIntersect, walkOptions);\r\n        }\r\n        /**\r\n         * Check to see if a path is inside of a model.\r\n         *\r\n         * @param pathContext The path to check.\r\n         * @param modelContext The model to check against.\r\n         * @param farPoint Optional point of reference which is outside the bounds of the modelContext.\r\n         * @returns Boolean true if the path is inside of the modelContext.\r\n         */\r\n        function isPathInsideModel(pathContext, modelContext, pathOffset, farPoint, measureAtlas) {\r\n            var segment = {\r\n                path: pathContext,\r\n                isInside: false,\r\n                uniqueForeignIntersectionPoints: []\r\n            };\r\n            checkInsideForeignModel(segment, pathOffset, modelContext, measureAtlas, farPoint);\r\n            return !!segment.isInside;\r\n        }\r\n        model.isPathInsideModel = isPathInsideModel;\r\n        /**\r\n         * Break a model's paths everywhere they intersect with another path.\r\n         *\r\n         * @param modelToBreak The model containing paths to be broken.\r\n         * @param modelToIntersect Optional model containing paths to look for intersection, or else the modelToBreak will be used.\r\n         */\r\n        function breakPathsAtIntersections(modelToBreak, modelToIntersect) {\r\n            var modelToBreakAtlas = new MakerJs.measure.Atlas(modelToBreak);\r\n            modelToBreakAtlas.measureModels();\r\n            var modelToIntersectAtlas;\r\n            if (!modelToIntersect) {\r\n                modelToIntersect = modelToBreak;\r\n                modelToIntersectAtlas = modelToBreakAtlas;\r\n            }\r\n            else {\r\n                modelToIntersectAtlas = new MakerJs.measure.Atlas(modelToIntersect);\r\n                modelToIntersectAtlas.measureModels();\r\n            }\r\n            ;\r\n            breakAllPathsAtIntersections(modelToBreak, modelToIntersect || modelToBreak, false, modelToBreakAtlas, modelToIntersectAtlas);\r\n        }\r\n        model.breakPathsAtIntersections = breakPathsAtIntersections;\r\n        /**\r\n         * @private\r\n         */\r\n        function breakAllPathsAtIntersections(modelToBreak, modelToIntersect, checkIsInside, modelToBreakAtlas, modelToIntersectAtlas, farPoint) {\r\n            var crossedPaths = [];\r\n            var overlappedSegments = [];\r\n            var walkModelToBreakOptions = {\r\n                onPath: function (outerWalkedPath) {\r\n                    //clone this path and make it the first segment\r\n                    var segment = {\r\n                        path: MakerJs.cloneObject(outerWalkedPath.pathContext),\r\n                        pathId: outerWalkedPath.pathId,\r\n                        overlapped: false,\r\n                        uniqueForeignIntersectionPoints: [],\r\n                        offset: outerWalkedPath.offset\r\n                    };\r\n                    var thisPath = outerWalkedPath;\r\n                    thisPath.broken = false;\r\n                    thisPath.segments = [segment];\r\n                    var walkModelToIntersectOptions = {\r\n                        onPath: function (innerWalkedPath) {\r\n                            if (outerWalkedPath.pathContext !== innerWalkedPath.pathContext && MakerJs.measure.isMeasurementOverlapping(modelToBreakAtlas.pathMap[outerWalkedPath.routeKey], modelToIntersectAtlas.pathMap[innerWalkedPath.routeKey])) {\r\n                                breakAlongForeignPath(thisPath, overlappedSegments, innerWalkedPath);\r\n                            }\r\n                        },\r\n                        beforeChildWalk: function (innerWalkedModel) {\r\n                            //see if there is a model measurement. if not, it is because the model does not contain paths.\r\n                            var innerModelMeasurement = modelToIntersectAtlas.modelMap[innerWalkedModel.routeKey];\r\n                            return innerModelMeasurement && MakerJs.measure.isMeasurementOverlapping(modelToBreakAtlas.pathMap[outerWalkedPath.routeKey], innerModelMeasurement);\r\n                        }\r\n                    };\r\n                    //keep breaking the segments anywhere they intersect with paths of the other model\r\n                    model.walk(modelToIntersect, walkModelToIntersectOptions);\r\n                    if (checkIsInside) {\r\n                        //check each segment whether it is inside or outside\r\n                        for (var i = 0; i < thisPath.segments.length; i++) {\r\n                            checkInsideForeignModel(thisPath.segments[i], thisPath.offset, modelToIntersect, modelToIntersectAtlas, farPoint);\r\n                        }\r\n                    }\r\n                    crossedPaths.push(thisPath);\r\n                }\r\n            };\r\n            model.walk(modelToBreak, walkModelToBreakOptions);\r\n            return { crossedPaths: crossedPaths, overlappedSegments: overlappedSegments };\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function checkForEqualOverlaps(crossedPathsA, crossedPathsB, pointMatchingDistance) {\r\n            function compareSegments(segment1, segment2) {\r\n                if (MakerJs.measure.isPathEqual(segment1.path, segment2.path, pointMatchingDistance, segment1.offset, segment2.offset)) {\r\n                    segment1.duplicate = segment2.duplicate = true;\r\n                }\r\n            }\r\n            function compareAll(segment) {\r\n                for (var i = 0; i < crossedPathsB.length; i++) {\r\n                    compareSegments(crossedPathsB[i], segment);\r\n                }\r\n            }\r\n            for (var i = 0; i < crossedPathsA.length; i++) {\r\n                compareAll(crossedPathsA[i]);\r\n            }\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function addOrDeleteSegments(crossedPath, includeInside, includeOutside, keepDuplicates, atlas, trackDeleted) {\r\n            function addSegment(modelContext, pathIdBase, segment) {\r\n                var id = model.getSimilarPathId(modelContext, pathIdBase);\r\n                var newRouteKey = (id == pathIdBase) ? crossedPath.routeKey : MakerJs.createRouteKey(crossedPath.route.slice(0, -1).concat([id]));\r\n                modelContext.paths[id] = segment.path;\r\n                if (crossedPath.broken) {\r\n                    //save the new segment's measurement\r\n                    var measurement = MakerJs.measure.pathExtents(segment.path, crossedPath.offset);\r\n                    atlas.pathMap[newRouteKey] = measurement;\r\n                    atlas.modelsMeasured = false;\r\n                }\r\n                else {\r\n                    //keep the original measurement\r\n                    atlas.pathMap[newRouteKey] = savedMeasurement;\r\n                }\r\n            }\r\n            function checkAddSegment(modelContext, pathIdBase, segment) {\r\n                if (segment.isInside && includeInside || !segment.isInside && includeOutside) {\r\n                    addSegment(modelContext, pathIdBase, segment);\r\n                }\r\n                else {\r\n                    atlas.modelsMeasured = false;\r\n                    trackDeleted(segment.path, crossedPath.routeKey, segment.offset, 'segment is ' + (segment.isInside ? 'inside' : 'outside') + ' intersectionPoints=' + JSON.stringify(segment.uniqueForeignIntersectionPoints));\r\n                }\r\n            }\r\n            //save the original measurement\r\n            var savedMeasurement = atlas.pathMap[crossedPath.routeKey];\r\n            //delete the original, its segments will be added\r\n            delete crossedPath.modelContext.paths[crossedPath.pathId];\r\n            delete atlas.pathMap[crossedPath.routeKey];\r\n            for (var i = 0; i < crossedPath.segments.length; i++) {\r\n                if (crossedPath.segments[i].duplicate) {\r\n                    if (keepDuplicates) {\r\n                        addSegment(crossedPath.modelContext, crossedPath.pathId, crossedPath.segments[i]);\r\n                    }\r\n                    else {\r\n                        trackDeleted(crossedPath.segments[i].path, crossedPath.routeKey, crossedPath.offset, 'segment is duplicate');\r\n                    }\r\n                }\r\n                else {\r\n                    checkAddSegment(crossedPath.modelContext, crossedPath.pathId, crossedPath.segments[i]);\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * Combine 2 models.\r\n         *\r\n         * @param modelA First model to combine.\r\n         * @param modelB Second model to combine.\r\n         * @param includeAInsideB Flag to include paths from modelA which are inside of modelB.\r\n         * @param includeAOutsideB Flag to include paths from modelA which are outside of modelB.\r\n         * @param includeBInsideA Flag to include paths from modelB which are inside of modelA.\r\n         * @param includeBOutsideA Flag to include paths from modelB which are outside of modelA.\r\n         * @param keepDuplicates Flag to include paths which are duplicate in both models.\r\n         * @param farPoint Optional point of reference which is outside the bounds of both models.\r\n         */\r\n        function combine(modelA, modelB, includeAInsideB, includeAOutsideB, includeBInsideA, includeBOutsideA, options) {\r\n            if (includeAInsideB === void 0) { includeAInsideB = false; }\r\n            if (includeAOutsideB === void 0) { includeAOutsideB = true; }\r\n            if (includeBInsideA === void 0) { includeBInsideA = false; }\r\n            if (includeBOutsideA === void 0) { includeBOutsideA = true; }\r\n            var opts = {\r\n                trimDeadEnds: true,\r\n                pointMatchingDistance: .005,\r\n                out_deleted: [{ paths: {} }, { paths: {} }]\r\n            };\r\n            MakerJs.extendObject(opts, options);\r\n            opts.measureA = opts.measureA || new MakerJs.measure.Atlas(modelA);\r\n            opts.measureB = opts.measureB || new MakerJs.measure.Atlas(modelB);\r\n            //make sure model measurements capture all paths\r\n            opts.measureA.measureModels();\r\n            opts.measureB.measureModels();\r\n            var pathsA = breakAllPathsAtIntersections(modelA, modelB, true, opts.measureA, opts.measureB, opts.farPoint);\r\n            var pathsB = breakAllPathsAtIntersections(modelB, modelA, true, opts.measureB, opts.measureA, opts.farPoint);\r\n            checkForEqualOverlaps(pathsA.overlappedSegments, pathsB.overlappedSegments, opts.pointMatchingDistance);\r\n            function trackDeleted(which, deletedPath, routeKey, offset, reason) {\r\n                opts.out_deleted[which].paths[counts[which]++] = deletedPath;\r\n                MakerJs.path.moveRelative(deletedPath, offset);\r\n                var p = deletedPath;\r\n                p.reason = reason;\r\n                p.routeKey = routeKey;\r\n            }\r\n            var counts = [0, 0];\r\n            for (var i = 0; i < pathsA.crossedPaths.length; i++) {\r\n                addOrDeleteSegments(pathsA.crossedPaths[i], includeAInsideB, includeAOutsideB, true, opts.measureA, function (p, id, o, reason) { return trackDeleted(0, p, id, o, reason); });\r\n            }\r\n            for (var i = 0; i < pathsB.crossedPaths.length; i++) {\r\n                addOrDeleteSegments(pathsB.crossedPaths[i], includeBInsideA, includeBOutsideA, false, opts.measureB, function (p, id, o, reason) { return trackDeleted(1, p, id, o, reason); });\r\n            }\r\n            if (opts.trimDeadEnds) {\r\n                var shouldKeep;\r\n                //union\r\n                if (!includeAInsideB && !includeBInsideA) {\r\n                    shouldKeep = function (walkedPath) {\r\n                        //When A and B share an outer contour, the segments marked as duplicate will not pass the \"inside\" test on either A or B.\r\n                        //Duplicates were discarded from B but kept in A\r\n                        for (var i = 0; i < pathsA.overlappedSegments.length; i++) {\r\n                            if (pathsA.overlappedSegments[i].duplicate && walkedPath.pathContext === pathsA.overlappedSegments[i].path) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                        //default - keep the path\r\n                        return true;\r\n                    };\r\n                }\r\n                model.removeDeadEnds({ models: { 0: modelA, 1: modelB } }, null, shouldKeep, function (wp, reason) { trackDeleted(parseInt(wp.route[1]), wp.pathContext, wp.routeKey, wp.offset, reason); });\r\n            }\r\n            //pass options back to caller\r\n            MakerJs.extendObject(options, opts);\r\n        }\r\n        model.combine = combine;\r\n        /**\r\n         * Combine 2 models, resulting in a intersection.\r\n         *\r\n         * @param modelA First model to combine.\r\n         * @param modelB Second model to combine.\r\n         */\r\n        function combineIntersection(modelA, modelB) {\r\n            return combine(modelA, modelB, true, false, true, false);\r\n        }\r\n        model.combineIntersection = combineIntersection;\r\n        /**\r\n         * Combine 2 models, resulting in a subtraction of B from A.\r\n         *\r\n         * @param modelA First model to combine.\r\n         * @param modelB Second model to combine.\r\n         */\r\n        function combineSubtraction(modelA, modelB) {\r\n            return combine(modelA, modelB, false, true, true, false);\r\n        }\r\n        model.combineSubtraction = combineSubtraction;\r\n        /**\r\n         * Combine 2 models, resulting in a union.\r\n         *\r\n         * @param modelA First model to combine.\r\n         * @param modelB Second model to combine.\r\n         */\r\n        function combineUnion(modelA, modelB) {\r\n            return combine(modelA, modelB, false, true, false, true);\r\n        }\r\n        model.combineUnion = combineUnion;\r\n    })(model = MakerJs.model || (MakerJs.model = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    /**\r\n     * Collects items that share a common key.\r\n     */\r\n    var Collector = (function () {\r\n        function Collector(comparer) {\r\n            this.comparer = comparer;\r\n            this.collections = [];\r\n        }\r\n        Collector.prototype.addItemToCollection = function (key, item) {\r\n            var found = this.findCollection(key);\r\n            if (found) {\r\n                found.push(item);\r\n            }\r\n            else {\r\n                var collection = { key: key, items: [item] };\r\n                this.collections.push(collection);\r\n            }\r\n        };\r\n        Collector.prototype.findCollection = function (key, action) {\r\n            for (var i = 0; i < this.collections.length; i++) {\r\n                var collection = this.collections[i];\r\n                if (this.comparer(key, collection.key)) {\r\n                    if (action) {\r\n                        action(i);\r\n                    }\r\n                    return collection.items;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        Collector.prototype.removeCollection = function (key) {\r\n            var _this = this;\r\n            if (this.findCollection(key, function (index) { _this.collections.splice(index, 1); })) {\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n        Collector.prototype.removeItemFromCollection = function (key, item) {\r\n            var collection = this.findCollection(key);\r\n            if (!collection)\r\n                return;\r\n            for (var i = 0; i < collection.length; i++) {\r\n                if (collection[i] === item) {\r\n                    collection.splice(i, 1);\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n        Collector.prototype.getCollectionsOfMultiple = function (cb) {\r\n            for (var i = 0; i < this.collections.length; i++) {\r\n                var collection = this.collections[i];\r\n                if (collection.items.length > 1) {\r\n                    cb(collection.key, collection.items);\r\n                }\r\n            }\r\n        };\r\n        return Collector;\r\n    }());\r\n    MakerJs.Collector = Collector;\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var model;\r\n    (function (model) {\r\n        /**\r\n         * @private\r\n         */\r\n        function checkForOverlaps(refPaths, isOverlapping, overlapUnion) {\r\n            var currIndex = 0;\r\n            do {\r\n                var root = refPaths[currIndex];\r\n                do {\r\n                    var overlaps = false;\r\n                    for (var i = currIndex + 1; i < refPaths.length; i++) {\r\n                        var arcRef = refPaths[i];\r\n                        overlaps = isOverlapping(root.pathContext, arcRef.pathContext, false);\r\n                        if (overlaps) {\r\n                            overlapUnion(root.pathContext, arcRef.pathContext);\r\n                            delete arcRef.modelContext.paths[arcRef.pathId];\r\n                            refPaths.splice(i, 1);\r\n                            break;\r\n                        }\r\n                    }\r\n                } while (overlaps);\r\n                currIndex++;\r\n            } while (currIndex < refPaths.length);\r\n        }\r\n        /**\r\n         * Simplify a model's paths by reducing redundancy: combine multiple overlapping paths into a single path. The model must be originated.\r\n         *\r\n         * @param modelContext The originated model to search for similar paths.\r\n         * @param options Optional options object.\r\n         * @returns The simplified model (for cascading).\r\n         */\r\n        function simplify(modelToSimplify, options) {\r\n            function compareCircles(circleA, circleB) {\r\n                if (Math.abs(circleA.radius - circleB.radius) <= opts.scalarMatchingDistance) {\r\n                    var distance = MakerJs.measure.pointDistance(circleA.origin, circleB.origin);\r\n                    return distance <= opts.pointMatchingDistance;\r\n                }\r\n                return false;\r\n            }\r\n            var similarArcs = new MakerJs.Collector(compareCircles);\r\n            var similarCircles = new MakerJs.Collector(compareCircles);\r\n            var similarLines = new MakerJs.Collector(MakerJs.measure.isSlopeEqual);\r\n            var map = {};\r\n            map[MakerJs.pathType.Arc] = function (arcRef) {\r\n                similarArcs.addItemToCollection(arcRef.pathContext, arcRef);\r\n            };\r\n            map[MakerJs.pathType.Circle] = function (circleRef) {\r\n                similarCircles.addItemToCollection(circleRef.pathContext, circleRef);\r\n            };\r\n            map[MakerJs.pathType.Line] = function (lineRef) {\r\n                var slope = MakerJs.measure.lineSlope(lineRef.pathContext);\r\n                similarLines.addItemToCollection(slope, lineRef);\r\n            };\r\n            var opts = {\r\n                scalarMatchingDistance: .001,\r\n                pointMatchingDistance: .005\r\n            };\r\n            MakerJs.extendObject(opts, options);\r\n            //walk the model and collect: arcs on same center / radius, circles on same center / radius, lines on same y-intercept / slope.\r\n            var walkOptions = {\r\n                onPath: function (walkedPath) {\r\n                    var fn = map[walkedPath.pathContext.type];\r\n                    if (fn) {\r\n                        fn(walkedPath);\r\n                    }\r\n                }\r\n            };\r\n            model.walk(modelToSimplify, walkOptions);\r\n            //for all arcs that are similar, see if they overlap.\r\n            //combine overlapping arcs into the first one and delete the second.\r\n            similarArcs.getCollectionsOfMultiple(function (key, arcRefs) {\r\n                checkForOverlaps(arcRefs, MakerJs.measure.isArcOverlapping, function (arcA, arcB) {\r\n                    //find ends within the other\r\n                    var aEndsInB = MakerJs.measure.isBetweenArcAngles(arcA.endAngle, arcB, false);\r\n                    var bEndsInA = MakerJs.measure.isBetweenArcAngles(arcB.endAngle, arcA, false);\r\n                    //check for complete circle\r\n                    if (aEndsInB && bEndsInA) {\r\n                        arcA.endAngle = arcA.startAngle + 360;\r\n                        return;\r\n                    }\r\n                    //find the leader, in polar terms\r\n                    var ordered = aEndsInB ? [arcA, arcB] : [arcB, arcA];\r\n                    //save in arcA\r\n                    arcA.startAngle = MakerJs.angle.noRevolutions(ordered[0].startAngle);\r\n                    arcA.endAngle = ordered[1].endAngle;\r\n                });\r\n            });\r\n            //for all circles that are similar, delete all but the first.\r\n            similarCircles.getCollectionsOfMultiple(function (key, circleRefs) {\r\n                for (var i = 1; i < circleRefs.length; i++) {\r\n                    var circleRef = circleRefs[i];\r\n                    delete circleRef.modelContext.paths[circleRef.pathId];\r\n                }\r\n            });\r\n            //for all lines that are similar, see if they overlap.\r\n            //combine overlapping lines into the first one and delete the second.\r\n            similarLines.getCollectionsOfMultiple(function (slope, arcRefs) {\r\n                checkForOverlaps(arcRefs, MakerJs.measure.isLineOverlapping, function (lineA, lineB) {\r\n                    var box = { paths: { lineA: lineA, lineB: lineB } };\r\n                    var m = MakerJs.measure.modelExtents(box);\r\n                    if (!slope.hasSlope) {\r\n                        //vertical\r\n                        lineA.origin[1] = m.low[1];\r\n                        lineA.end[1] = m.high[1];\r\n                    }\r\n                    else {\r\n                        //non-vertical\r\n                        if (slope.slope < 0) {\r\n                            //downward\r\n                            lineA.origin = [m.low[0], m.high[1]];\r\n                            lineA.end = [m.high[0], m.low[1]];\r\n                        }\r\n                        else if (slope.slope > 0) {\r\n                            //upward\r\n                            lineA.origin = m.low;\r\n                            lineA.end = m.high;\r\n                        }\r\n                        else {\r\n                            //horizontal\r\n                            lineA.origin[0] = m.low[0];\r\n                            lineA.end[0] = m.high[0];\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n            return modelToSimplify;\r\n        }\r\n        model.simplify = simplify;\r\n    })(model = MakerJs.model || (MakerJs.model = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var path;\r\n    (function (path) {\r\n        /**\r\n         * @private\r\n         */\r\n        var map = {};\r\n        map[MakerJs.pathType.Arc] = function (arc, expansion, isolateCaps) {\r\n            return new MakerJs.models.OvalArc(arc.startAngle, arc.endAngle, arc.radius, expansion, false, isolateCaps);\r\n        };\r\n        map[MakerJs.pathType.Circle] = function (circle, expansion, isolateCaps) {\r\n            return new MakerJs.models.Ring(circle.radius + expansion, circle.radius - expansion);\r\n        };\r\n        map[MakerJs.pathType.Line] = function (line, expansion, isolateCaps) {\r\n            return new MakerJs.models.Slot(line.origin, line.end, expansion, isolateCaps);\r\n        };\r\n        /**\r\n         * Expand path by creating a model which surrounds it.\r\n         *\r\n         * @param pathToExpand Path to expand.\r\n         * @param expansion Distance to expand.\r\n         * @param isolateCaps Optional flag to put the end caps into a separate model named \"caps\".\r\n         * @returns Model which surrounds the path.\r\n         */\r\n        function expand(pathToExpand, expansion, isolateCaps) {\r\n            if (!pathToExpand)\r\n                return null;\r\n            var result = null;\r\n            var fn = map[pathToExpand.type];\r\n            if (fn) {\r\n                result = fn(pathToExpand, expansion, isolateCaps);\r\n                result.origin = pathToExpand.origin;\r\n            }\r\n            return result;\r\n        }\r\n        path.expand = expand;\r\n        /**\r\n         * Represent an arc using straight lines.\r\n         *\r\n         * @param arc Arc to straighten.\r\n         * @param bevel Optional flag to bevel the angle to prevent it from being too sharp.\r\n         * @param prefix Optional string prefix to apply to path ids.\r\n         * @param close Optional flag to make a closed geometry by connecting the endpoints.\r\n         * @returns Model of straight lines with same endpoints as the arc.\r\n         */\r\n        function straighten(arc, bevel, prefix, close) {\r\n            var arcSpan = MakerJs.angle.ofArcSpan(arc);\r\n            var joints = 1;\r\n            if (arcSpan >= 270) {\r\n                joints = 4;\r\n            }\r\n            else if (arcSpan > 180) {\r\n                joints = 3;\r\n            }\r\n            else if (arcSpan > 150 || bevel) {\r\n                joints = 2;\r\n            }\r\n            var jointAngleInRadians = MakerJs.angle.toRadians(arcSpan / joints);\r\n            var circumscribedRadius = MakerJs.models.Polygon.circumscribedRadius(arc.radius, jointAngleInRadians);\r\n            var ends = MakerJs.point.fromArc(arc);\r\n            var points = [MakerJs.point.subtract(ends[0], arc.origin)];\r\n            var a = MakerJs.angle.toRadians(arc.startAngle) + jointAngleInRadians / 2;\r\n            for (var i = 0; i < joints; i++) {\r\n                points.push(MakerJs.point.fromPolar(a, circumscribedRadius));\r\n                a += jointAngleInRadians;\r\n            }\r\n            points.push(MakerJs.point.subtract(ends[1], arc.origin));\r\n            var result = new MakerJs.models.ConnectTheDots(close, points);\r\n            result.origin = arc.origin;\r\n            if (typeof prefix === 'string' && prefix.length) {\r\n                MakerJs.model.prefixPathIds(result, prefix);\r\n            }\r\n            return result;\r\n        }\r\n        path.straighten = straighten;\r\n    })(path = MakerJs.path || (MakerJs.path = {}));\r\n})(MakerJs || (MakerJs = {}));\r\n(function (MakerJs) {\r\n    var model;\r\n    (function (model) {\r\n        /**\r\n         * Expand all paths in a model, then combine the resulting expansions.\r\n         *\r\n         * @param modelToExpand Model to expand.\r\n         * @param distance Distance to expand.\r\n         * @param joints Number of points at a joint between paths. Use 0 for round joints, 1 for pointed joints, 2 for beveled joints.\r\n         * @returns Model which surrounds the paths of the original model.\r\n         */\r\n        function expandPaths(modelToExpand, distance, joints, combineOptions) {\r\n            if (joints === void 0) { joints = 0; }\r\n            if (combineOptions === void 0) { combineOptions = {}; }\r\n            if (distance <= 0)\r\n                return null;\r\n            var result = {\r\n                models: {\r\n                    expansions: { models: {} },\r\n                    caps: { models: {} }\r\n                }\r\n            };\r\n            var first = true;\r\n            var walkOptions = {\r\n                onPath: function (walkedPath) {\r\n                    //don't expand paths shorter than the tolerance for combine operations\r\n                    if (combineOptions.pointMatchingDistance && MakerJs.measure.pathLength(walkedPath.pathContext) < combineOptions.pointMatchingDistance)\r\n                        return;\r\n                    var expandedPathModel = MakerJs.path.expand(walkedPath.pathContext, distance, true);\r\n                    if (expandedPathModel) {\r\n                        model.moveRelative(expandedPathModel, walkedPath.offset);\r\n                        var newId = model.getSimilarModelId(result.models['expansions'], walkedPath.pathId);\r\n                        model.prefixPathIds(expandedPathModel, walkedPath.pathId + '_');\r\n                        model.originate(expandedPathModel);\r\n                        if (!first) {\r\n                            model.combine(result, expandedPathModel, false, true, false, true, combineOptions);\r\n                            combineOptions.measureA.modelsMeasured = false;\r\n                            delete combineOptions.measureB;\r\n                        }\r\n                        result.models['expansions'].models[newId] = expandedPathModel;\r\n                        if (expandedPathModel.models) {\r\n                            var caps = expandedPathModel.models['Caps'];\r\n                            if (caps) {\r\n                                delete expandedPathModel.models['Caps'];\r\n                                result.models['caps'].models[newId] = caps;\r\n                            }\r\n                        }\r\n                        first = false;\r\n                    }\r\n                }\r\n            };\r\n            model.walk(modelToExpand, walkOptions);\r\n            if (joints) {\r\n                var roundCaps = result.models['caps'];\r\n                var straightCaps = { models: {} };\r\n                result.models['straightcaps'] = straightCaps;\r\n                model.simplify(roundCaps);\r\n                //straighten each cap, optionally beveling\r\n                for (var id in roundCaps.models) {\r\n                    //add a model container to the straight caps\r\n                    straightCaps.models[id] = { models: {} };\r\n                    model.walk(roundCaps.models[id], {\r\n                        onPath: function (walkedPath) {\r\n                            var arc = walkedPath.pathContext;\r\n                            //make a small closed shape using the straightened arc\r\n                            var straightened = MakerJs.path.straighten(arc, joints == 2, walkedPath.pathId + '_', true);\r\n                            //union this little pointy shape with the rest of the result\r\n                            model.combine(result, straightened, false, true, false, true, combineOptions);\r\n                            combineOptions.measureA.modelsMeasured = false;\r\n                            delete combineOptions.measureB;\r\n                            //replace the rounded path with the straightened model\r\n                            straightCaps.models[id].models[walkedPath.pathId] = straightened;\r\n                            //delete all the paths in the model containing this path\r\n                            delete walkedPath.modelContext.paths;\r\n                        }\r\n                    });\r\n                }\r\n                //delete the round caps\r\n                delete result.models['caps'];\r\n            }\r\n            return result;\r\n        }\r\n        model.expandPaths = expandPaths;\r\n        /**\r\n         * @private\r\n         */\r\n        function getEndlessChains(modelContext) {\r\n            var endlessChains = [];\r\n            model.findChains(modelContext, function (chains, loose, layer) {\r\n                endlessChains = chains.filter(function (chain) { return chain.endless; });\r\n            });\r\n            return endlessChains;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function getClosedGeometries(modelContext) {\r\n            //get endless chains from the model\r\n            var endlessChains = getEndlessChains(modelContext);\r\n            if (endlessChains.length == 0)\r\n                return null;\r\n            //make a new model with only closed geometries\r\n            var closed = { models: {} };\r\n            endlessChains.forEach(function (c, i) {\r\n                closed.models[i] = MakerJs.chain.toNewModel(c);\r\n            });\r\n            return closed;\r\n        }\r\n        /**\r\n         * Outline a model by a specified distance. Useful for accommodating for kerf.\r\n         *\r\n         * @param modelToOutline Model to outline.\r\n         * @param distance Distance to outline.\r\n         * @param joints Number of points at a joint between paths. Use 0 for round joints, 1 for pointed joints, 2 for beveled joints.\r\n         * @param inside Optional boolean to draw lines inside the model instead of outside.\r\n         * @param options Options to send to combine() function.\r\n         * @returns Model which surrounds the paths outside of the original model.\r\n         */\r\n        function outline(modelToOutline, distance, joints, inside, options) {\r\n            if (joints === void 0) { joints = 0; }\r\n            if (inside === void 0) { inside = false; }\r\n            if (options === void 0) { options = {}; }\r\n            var expanded = expandPaths(modelToOutline, distance, joints, options);\r\n            if (!expanded)\r\n                return null;\r\n            //get closed geometries from the model\r\n            var closed = getClosedGeometries(modelToOutline);\r\n            if (closed) {\r\n                var childCount = 0;\r\n                var result = { models: {} };\r\n                //get closed geometries from the expansion\r\n                var chains = getEndlessChains(expanded);\r\n                chains.forEach(function (c) {\r\n                    //sample one link from the chain\r\n                    var wp = c.links[0].walkedPath;\r\n                    //see if it is inside the original model\r\n                    var isInside = model.isPathInsideModel(wp.pathContext, closed, wp.offset);\r\n                    //save the ones we want\r\n                    if (inside && isInside || !inside && !isInside) {\r\n                        result.models[childCount++] = MakerJs.chain.toNewModel(c);\r\n                    }\r\n                    ;\r\n                });\r\n                return result;\r\n            }\r\n            else {\r\n                return expanded;\r\n            }\r\n        }\r\n        model.outline = outline;\r\n    })(model = MakerJs.model || (MakerJs.model = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var units;\r\n    (function (units) {\r\n        /**\r\n         * The base type is arbitrary. Other conversions are then based off of this.\r\n         * @private\r\n         */\r\n        var base = MakerJs.unitType.Millimeter;\r\n        /**\r\n         * Initialize all known conversions here.\r\n         * @private\r\n         */\r\n        function init() {\r\n            addBaseConversion(MakerJs.unitType.Centimeter, 10);\r\n            addBaseConversion(MakerJs.unitType.Meter, 1000);\r\n            addBaseConversion(MakerJs.unitType.Inch, 25.4);\r\n            addBaseConversion(MakerJs.unitType.Foot, 25.4 * 12);\r\n        }\r\n        /**\r\n         * Table of conversions. Lazy load upon first conversion.\r\n         * @private\r\n         */\r\n        var table;\r\n        /**\r\n         * Add a conversion, and its inversion.\r\n         * @private\r\n         */\r\n        function addConversion(srcUnitType, destUnitType, value) {\r\n            function row(unitType) {\r\n                if (!table[unitType]) {\r\n                    table[unitType] = {};\r\n                }\r\n                return table[unitType];\r\n            }\r\n            row(srcUnitType)[destUnitType] = value;\r\n            row(destUnitType)[srcUnitType] = 1 / value;\r\n        }\r\n        /**\r\n         * Add a conversion of the base unit.\r\n         * @private\r\n         */\r\n        function addBaseConversion(destUnitType, value) {\r\n            addConversion(destUnitType, base, value);\r\n        }\r\n        /**\r\n         * Get a conversion ratio between a source unit and a destination unit.\r\n         *\r\n         * @param srcUnitType unitType converting from.\r\n         * @param destUnitType unitType converting to.\r\n         * @returns Numeric ratio of the conversion.\r\n         */\r\n        function conversionScale(srcUnitType, destUnitType) {\r\n            if (srcUnitType == destUnitType) {\r\n                return 1;\r\n            }\r\n            //This will lazy load the table with initial conversions.\r\n            if (!table) {\r\n                table = {};\r\n                init();\r\n            }\r\n            //look for a cached conversion in the table.\r\n            if (!table[srcUnitType][destUnitType]) {\r\n                //create a new conversionsand cache it in the table.\r\n                addConversion(srcUnitType, destUnitType, table[srcUnitType][base] * table[base][destUnitType]);\r\n            }\r\n            return table[srcUnitType][destUnitType];\r\n        }\r\n        units.conversionScale = conversionScale;\r\n    })(units = MakerJs.units || (MakerJs.units = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var measure;\r\n    (function (measure) {\r\n        /**\r\n         * Find out if two angles are equal.\r\n         *\r\n         * @param angleA First angle.\r\n         * @param angleB Second angle.\r\n         * @returns true if angles are the same, false if they are not\r\n         */\r\n        function isAngleEqual(angleA, angleB, accuracy) {\r\n            if (accuracy === void 0) { accuracy = .0001; }\r\n            var a = MakerJs.angle.noRevolutions(angleA);\r\n            var b = MakerJs.angle.noRevolutions(angleB);\r\n            var d = MakerJs.angle.noRevolutions(MakerJs.round(b - a, accuracy));\r\n            return d == 0;\r\n        }\r\n        measure.isAngleEqual = isAngleEqual;\r\n        /**\r\n         * @private\r\n         */\r\n        var pathAreEqualMap = {};\r\n        pathAreEqualMap[MakerJs.pathType.Line] = function (lineA, lineB, withinPointDistance) {\r\n            return (isPointEqual(lineA.origin, lineB.origin, withinPointDistance) && isPointEqual(lineA.end, lineB.end, withinPointDistance))\r\n                || (isPointEqual(lineA.origin, lineB.end, withinPointDistance) && isPointEqual(lineA.end, lineB.origin, withinPointDistance));\r\n        };\r\n        pathAreEqualMap[MakerJs.pathType.Circle] = function (circleA, circleB, withinPointDistance) {\r\n            return isPointEqual(circleA.origin, circleB.origin, withinPointDistance) && circleA.radius == circleB.radius;\r\n        };\r\n        pathAreEqualMap[MakerJs.pathType.Arc] = function (arcA, arcB, withinPointDistance) {\r\n            return pathAreEqualMap[MakerJs.pathType.Circle](arcA, arcB, withinPointDistance) && isAngleEqual(arcA.startAngle, arcB.startAngle) && isAngleEqual(arcA.endAngle, arcB.endAngle);\r\n        };\r\n        /**\r\n         * Find out if two paths are equal.\r\n         *\r\n         * @param pathA First path.\r\n         * @param pathB Second path.\r\n         * @returns true if paths are the same, false if they are not\r\n         */\r\n        function isPathEqual(pathA, pathB, withinPointDistance, pathAOffset, pathBOffset) {\r\n            var result = false;\r\n            if (pathA.type == pathB.type) {\r\n                var fn = pathAreEqualMap[pathA.type];\r\n                if (fn) {\r\n                    function getResult() {\r\n                        result = fn(pathA, pathB, withinPointDistance);\r\n                    }\r\n                    if (pathAOffset || pathBOffset) {\r\n                        MakerJs.path.moveTemporary([pathA, pathB], [pathAOffset, pathBOffset], getResult);\r\n                    }\r\n                    else {\r\n                        getResult();\r\n                    }\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n        measure.isPathEqual = isPathEqual;\r\n        /**\r\n         * Find out if two points are equal.\r\n         *\r\n         * @param a First point.\r\n         * @param b Second point.\r\n         * @returns true if points are the same, false if they are not\r\n         */\r\n        function isPointEqual(a, b, withinDistance) {\r\n            if (!withinDistance) {\r\n                return a[0] == b[0] && a[1] == b[1];\r\n            }\r\n            else {\r\n                if (!a || !b)\r\n                    return false;\r\n                var distance = measure.pointDistance(a, b);\r\n                return distance <= withinDistance;\r\n            }\r\n        }\r\n        measure.isPointEqual = isPointEqual;\r\n        /**\r\n         * Find out if point is on a slope.\r\n         *\r\n         * @param p Point to check.\r\n         * @param b Slope.\r\n         * @returns true if point is on the slope\r\n         */\r\n        function isPointOnSlope(p, slope, withinDistance) {\r\n            if (slope.hasSlope) {\r\n                // y = mx * b\r\n                return MakerJs.round(p[1] - (slope.slope * p[0] + slope.yIntercept)) === 0;\r\n            }\r\n            else {\r\n                //vertical slope\r\n                return MakerJs.round(p[0] - slope.line.origin[0]) === 0;\r\n            }\r\n        }\r\n        measure.isPointOnSlope = isPointOnSlope;\r\n        /**\r\n         * Check for slope equality.\r\n         *\r\n         * @param slopeA The ISlope to test.\r\n         * @param slopeB The ISlope to check for equality.\r\n         * @returns Boolean true if slopes are equal.\r\n         */\r\n        function isSlopeEqual(slopeA, slopeB) {\r\n            if (!slopeA.hasSlope && !slopeB.hasSlope) {\r\n                //lines are both vertical, see if x are the same\r\n                return MakerJs.round(slopeA.line.origin[0] - slopeB.line.origin[0]) == 0;\r\n            }\r\n            if (slopeA.hasSlope && slopeB.hasSlope && (MakerJs.round(slopeA.slope - slopeB.slope, .00001) == 0)) {\r\n                //lines are parallel, but not vertical, see if y-intercept is the same\r\n                return MakerJs.round(slopeA.yIntercept - slopeB.yIntercept, .00001) == 0;\r\n            }\r\n            return false;\r\n        }\r\n        measure.isSlopeEqual = isSlopeEqual;\r\n    })(measure = MakerJs.measure || (MakerJs.measure = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var measure;\r\n    (function (measure) {\r\n        /**\r\n         * Increase a measurement by an additional measurement.\r\n         *\r\n         * @param baseMeasure The measurement to increase.\r\n         * @param addMeasure The additional measurement.\r\n         * @param addOffset Optional offset point of the additional measurement.\r\n         * @returns The increased original measurement (for cascading).\r\n         */\r\n        function increase(baseMeasure, addMeasure) {\r\n            function getExtreme(basePoint, newPoint, fn) {\r\n                if (!newPoint)\r\n                    return;\r\n                for (var i = 2; i--;) {\r\n                    if (newPoint[i] == null)\r\n                        continue;\r\n                    if (basePoint[i] == null) {\r\n                        basePoint[i] = newPoint[i];\r\n                    }\r\n                    else {\r\n                        basePoint[i] = fn(basePoint[i], newPoint[i]);\r\n                    }\r\n                }\r\n            }\r\n            if (addMeasure) {\r\n                getExtreme(baseMeasure.low, addMeasure.low, Math.min);\r\n                getExtreme(baseMeasure.high, addMeasure.high, Math.max);\r\n            }\r\n            return baseMeasure;\r\n        }\r\n        measure.increase = increase;\r\n        /**\r\n         * Check for arc being concave or convex towards a given point.\r\n         *\r\n         * @param arc The arc to test.\r\n         * @param towardsPoint The point to test.\r\n         * @returns Boolean true if arc is concave towards point.\r\n         */\r\n        function isArcConcaveTowardsPoint(arc, towardsPoint) {\r\n            if (pointDistance(arc.origin, towardsPoint) <= arc.radius) {\r\n                return true;\r\n            }\r\n            var midPointToNearPoint = new MakerJs.paths.Line(MakerJs.point.middle(arc), towardsPoint);\r\n            var options = {};\r\n            var intersectionPoint = MakerJs.path.intersection(midPointToNearPoint, new MakerJs.paths.Chord(arc), options);\r\n            if (intersectionPoint || options.out_AreOverlapped) {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        measure.isArcConcaveTowardsPoint = isArcConcaveTowardsPoint;\r\n        /**\r\n         * Check for arc overlapping another arc.\r\n         *\r\n         * @param arcA The arc to test.\r\n         * @param arcB The arc to check for overlap.\r\n         * @param excludeTangents Boolean to exclude exact endpoints and only look for deep overlaps.\r\n         * @returns Boolean true if arcA is overlapped with arcB.\r\n         */\r\n        function isArcOverlapping(arcA, arcB, excludeTangents) {\r\n            var pointsOfIntersection = [];\r\n            function checkAngles(a, b) {\r\n                function checkAngle(n) {\r\n                    return measure.isBetweenArcAngles(n, a, excludeTangents);\r\n                }\r\n                return checkAngle(b.startAngle) || checkAngle(b.endAngle);\r\n            }\r\n            return checkAngles(arcA, arcB) || checkAngles(arcB, arcA) || (arcA.startAngle == arcB.startAngle && arcA.endAngle == arcB.endAngle);\r\n        }\r\n        measure.isArcOverlapping = isArcOverlapping;\r\n        /**\r\n         * Check if a given number is between two given limits.\r\n         *\r\n         * @param valueInQuestion The number to test.\r\n         * @param limitA First limit.\r\n         * @param limitB Second limit.\r\n         * @param exclusive Flag to exclude equaling the limits.\r\n         * @returns Boolean true if value is between (or equal to) the limits.\r\n         */\r\n        function isBetween(valueInQuestion, limitA, limitB, exclusive) {\r\n            if (exclusive) {\r\n                return Math.min(limitA, limitB) < valueInQuestion && valueInQuestion < Math.max(limitA, limitB);\r\n            }\r\n            else {\r\n                return Math.min(limitA, limitB) <= valueInQuestion && valueInQuestion <= Math.max(limitA, limitB);\r\n            }\r\n        }\r\n        measure.isBetween = isBetween;\r\n        /**\r\n         * Check if a given angle is between an arc's start and end angles.\r\n         *\r\n         * @param angleInQuestion The angle to test.\r\n         * @param arc Arc to test against.\r\n         * @param exclusive Flag to exclude equaling the start or end angles.\r\n         * @returns Boolean true if angle is between (or equal to) the arc's start and end angles.\r\n         */\r\n        function isBetweenArcAngles(angleInQuestion, arc, exclusive) {\r\n            var startAngle = MakerJs.angle.noRevolutions(arc.startAngle);\r\n            var span = MakerJs.angle.ofArcSpan(arc);\r\n            var endAngle = startAngle + span;\r\n            angleInQuestion = MakerJs.angle.noRevolutions(angleInQuestion);\r\n            //computed angles will not be negative, but the arc may have specified a negative angle, so check against one revolution forward and backward\r\n            return (isBetween(angleInQuestion, startAngle, endAngle, exclusive) || isBetween(angleInQuestion, startAngle + 360, endAngle + 360, exclusive) || isBetween(angleInQuestion, startAngle - 360, endAngle - 360, exclusive));\r\n        }\r\n        measure.isBetweenArcAngles = isBetweenArcAngles;\r\n        /**\r\n         * Check if a given point is between a line's end points.\r\n         *\r\n         * @param pointInQuestion The point to test.\r\n         * @param line Line to test against.\r\n         * @param exclusive Flag to exclude equaling the origin or end points.\r\n         * @returns Boolean true if point is between (or equal to) the line's origin and end points.\r\n         */\r\n        function isBetweenPoints(pointInQuestion, line, exclusive) {\r\n            var oneDimension = false;\r\n            for (var i = 2; i--;) {\r\n                if (MakerJs.round(line.origin[i] - line.end[i], .000001) == 0) {\r\n                    if (oneDimension)\r\n                        return false;\r\n                    oneDimension = true;\r\n                    continue;\r\n                }\r\n                var origin_value = MakerJs.round(line.origin[i]);\r\n                var end_value = MakerJs.round(line.end[i]);\r\n                if (!isBetween(MakerJs.round(pointInQuestion[i]), origin_value, end_value, exclusive))\r\n                    return false;\r\n            }\r\n            return true;\r\n        }\r\n        measure.isBetweenPoints = isBetweenPoints;\r\n        /**\r\n         * Check if a given bezier seed is simply a line.\r\n         *\r\n         * @param seed The bezier seed to test.\r\n         * @returns Boolean true if bezier seed has control points on the line slope and between the line endpoints.\r\n         */\r\n        function isBezierSeedLinear(seed) {\r\n            //create a slope from the endpoints\r\n            var slope = lineSlope(seed);\r\n            for (var i = 0; i < seed.controls.length; i++) {\r\n                if (!(measure.isPointOnSlope(seed.controls[i], slope) && isBetweenPoints(seed.controls[i], seed, false))) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        measure.isBezierSeedLinear = isBezierSeedLinear;\r\n        /**\r\n         * Check for line overlapping another line.\r\n         *\r\n         * @param lineA The line to test.\r\n         * @param lineB The line to check for overlap.\r\n         * @param excludeTangents Boolean to exclude exact endpoints and only look for deep overlaps.\r\n         * @returns Boolean true if lineA is overlapped with lineB.\r\n         */\r\n        function isLineOverlapping(lineA, lineB, excludeTangents) {\r\n            var pointsOfIntersection = [];\r\n            function checkPoints(index, a, b) {\r\n                function checkPoint(p) {\r\n                    return measure.isBetweenPoints(p, a, excludeTangents);\r\n                }\r\n                return checkPoint(b.origin) || checkPoint(b.end);\r\n            }\r\n            return checkPoints(0, lineA, lineB) || checkPoints(1, lineB, lineA);\r\n        }\r\n        measure.isLineOverlapping = isLineOverlapping;\r\n        /**\r\n         * Check for measurement overlapping another measurement.\r\n         *\r\n         * @param measureA The measurement to test.\r\n         * @param measureB The measurement to check for overlap.\r\n         * @returns Boolean true if measureA is overlapped with measureB.\r\n         */\r\n        function isMeasurementOverlapping(measureA, measureB) {\r\n            for (var i = 2; i--;) {\r\n                if (!(MakerJs.round(measureA.low[i] - measureB.high[i]) <= 0 && MakerJs.round(measureA.high[i] - measureB.low[i]) >= 0))\r\n                    return false;\r\n            }\r\n            return true;\r\n        }\r\n        measure.isMeasurementOverlapping = isMeasurementOverlapping;\r\n        /**\r\n         * Gets the slope of a line.\r\n         */\r\n        function lineSlope(line) {\r\n            var dx = line.end[0] - line.origin[0];\r\n            if (MakerJs.round(dx) == 0) {\r\n                return {\r\n                    line: line,\r\n                    hasSlope: false\r\n                };\r\n            }\r\n            var dy = line.end[1] - line.origin[1];\r\n            var slope = dy / dx;\r\n            var yIntercept = line.origin[1] - slope * line.origin[0];\r\n            return {\r\n                line: line,\r\n                hasSlope: true,\r\n                slope: slope,\r\n                yIntercept: yIntercept\r\n            };\r\n        }\r\n        measure.lineSlope = lineSlope;\r\n        /**\r\n         * Calculates the distance between two points.\r\n         *\r\n         * @param a First point.\r\n         * @param b Second point.\r\n         * @returns Distance between points.\r\n         */\r\n        function pointDistance(a, b) {\r\n            var dx = b[0] - a[0];\r\n            var dy = b[1] - a[1];\r\n            return Math.sqrt(dx * dx + dy * dy);\r\n        }\r\n        measure.pointDistance = pointDistance;\r\n        /**\r\n         * @private\r\n         */\r\n        function getExtremePoint(a, b, fn) {\r\n            return [\r\n                fn(a[0], b[0]),\r\n                fn(a[1], b[1])\r\n            ];\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        var pathExtentsMap = {};\r\n        pathExtentsMap[MakerJs.pathType.Line] = function (line) {\r\n            return {\r\n                low: getExtremePoint(line.origin, line.end, Math.min),\r\n                high: getExtremePoint(line.origin, line.end, Math.max)\r\n            };\r\n        };\r\n        pathExtentsMap[MakerJs.pathType.Circle] = function (circle) {\r\n            var r = circle.radius;\r\n            return {\r\n                low: MakerJs.point.add(circle.origin, [-r, -r]),\r\n                high: MakerJs.point.add(circle.origin, [r, r])\r\n            };\r\n        };\r\n        pathExtentsMap[MakerJs.pathType.Arc] = function (arc) {\r\n            var r = arc.radius;\r\n            var arcPoints = MakerJs.point.fromArc(arc);\r\n            function extremeAngle(xyAngle, value, fn) {\r\n                var extremePoint = getExtremePoint(arcPoints[0], arcPoints[1], fn);\r\n                for (var i = 2; i--;) {\r\n                    if (isBetweenArcAngles(xyAngle[i], arc, false)) {\r\n                        extremePoint[i] = value + arc.origin[i];\r\n                    }\r\n                }\r\n                return extremePoint;\r\n            }\r\n            return {\r\n                low: extremeAngle([180, 270], -r, Math.min),\r\n                high: extremeAngle([360, 90], r, Math.max)\r\n            };\r\n        };\r\n        /**\r\n         * Calculates the smallest rectangle which contains a path.\r\n         *\r\n         * @param pathToMeasure The path to measure.\r\n         * @returns object with low and high points.\r\n         */\r\n        function pathExtents(pathToMeasure, addOffset) {\r\n            if (pathToMeasure) {\r\n                var fn = pathExtentsMap[pathToMeasure.type];\r\n                if (fn) {\r\n                    var m = fn(pathToMeasure);\r\n                    if (addOffset) {\r\n                        m.high = MakerJs.point.add(m.high, addOffset);\r\n                        m.low = MakerJs.point.add(m.low, addOffset);\r\n                    }\r\n                    return m;\r\n                }\r\n            }\r\n            return { low: null, high: null };\r\n        }\r\n        measure.pathExtents = pathExtents;\r\n        /**\r\n         * @private\r\n         */\r\n        var pathLengthMap = {};\r\n        pathLengthMap[MakerJs.pathType.Line] = function (line) {\r\n            return pointDistance(line.origin, line.end);\r\n        };\r\n        pathLengthMap[MakerJs.pathType.Circle] = function (circle) {\r\n            return 2 * Math.PI * circle.radius;\r\n        };\r\n        pathLengthMap[MakerJs.pathType.Arc] = function (arc) {\r\n            var value = pathLengthMap[MakerJs.pathType.Circle](arc);\r\n            var pct = MakerJs.angle.ofArcSpan(arc) / 360;\r\n            value *= pct;\r\n            return value;\r\n        };\r\n        pathLengthMap[MakerJs.pathType.BezierSeed] = function (seed) {\r\n            return MakerJs.models.BezierCurve.computeLength(seed);\r\n        };\r\n        /**\r\n         * Measures the length of a path.\r\n         *\r\n         * @param pathToMeasure The path to measure.\r\n         * @returns Length of the path.\r\n         */\r\n        function pathLength(pathToMeasure) {\r\n            if (pathToMeasure) {\r\n                var fn = pathLengthMap[pathToMeasure.type];\r\n                if (fn) {\r\n                    return fn(pathToMeasure);\r\n                }\r\n            }\r\n            return 0;\r\n        }\r\n        measure.pathLength = pathLength;\r\n        /**\r\n         * Measures the length of all paths in a model.\r\n         *\r\n         * @param modelToMeasure The model containing paths to measure.\r\n         * @returns Length of all paths in the model.\r\n         */\r\n        function modelPathLength(modelToMeasure) {\r\n            var total = 0;\r\n            MakerJs.model.walk(modelToMeasure, {\r\n                onPath: function (walkedPath) {\r\n                    total += pathLength(walkedPath.pathContext);\r\n                }\r\n            });\r\n            return total;\r\n        }\r\n        measure.modelPathLength = modelPathLength;\r\n        /**\r\n         * @private\r\n         */\r\n        function cloneMeasure(measureToclone) {\r\n            return {\r\n                high: MakerJs.point.clone(measureToclone.high),\r\n                low: MakerJs.point.clone(measureToclone.low)\r\n            };\r\n        }\r\n        /**\r\n         * Measures the smallest rectangle which contains a model.\r\n         *\r\n         * @param modelToMeasure The model to measure.\r\n         * @param atlas Optional atlas to save measurements.\r\n         * @returns object with low and high points.\r\n         */\r\n        function modelExtents(modelToMeasure, atlas) {\r\n            function increaseParentModel(childRoute, childMeasurement) {\r\n                if (!childMeasurement)\r\n                    return;\r\n                //to get the parent route, just traverse backwards 2 to remove id and 'paths' / 'models'\r\n                var parentRoute = childRoute.slice(0, -2);\r\n                var parentRouteKey = MakerJs.createRouteKey(parentRoute);\r\n                if (!(parentRouteKey in atlas.modelMap)) {\r\n                    //just start with the known size\r\n                    atlas.modelMap[parentRouteKey] = cloneMeasure(childMeasurement);\r\n                }\r\n                else {\r\n                    measure.increase(atlas.modelMap[parentRouteKey], childMeasurement);\r\n                }\r\n            }\r\n            if (!atlas)\r\n                atlas = new measure.Atlas(modelToMeasure);\r\n            var walkOptions = {\r\n                onPath: function (walkedPath) {\r\n                    //trust that the path measurement is good\r\n                    if (!(walkedPath.routeKey in atlas.pathMap)) {\r\n                        atlas.pathMap[walkedPath.routeKey] = measure.pathExtents(walkedPath.pathContext, walkedPath.offset);\r\n                    }\r\n                    increaseParentModel(walkedPath.route, atlas.pathMap[walkedPath.routeKey]);\r\n                },\r\n                afterChildWalk: function (walkedModel) {\r\n                    //model has been updated by all its children, update parent\r\n                    increaseParentModel(walkedModel.route, atlas.modelMap[walkedModel.routeKey]);\r\n                }\r\n            };\r\n            MakerJs.model.walk(modelToMeasure, walkOptions);\r\n            atlas.modelsMeasured = true;\r\n            var m = atlas.modelMap[''];\r\n            if (m) {\r\n                return augment(m);\r\n            }\r\n            return m;\r\n        }\r\n        measure.modelExtents = modelExtents;\r\n        /**\r\n         * Augment a measurement - add more properties such as center point, height and width.\r\n         *\r\n         * @param measureToAugment The measurement to augment.\r\n         * @returns Measurement object with augmented properties.\r\n         */\r\n        function augment(measureToAugment) {\r\n            var m = measureToAugment;\r\n            m.center = MakerJs.point.average(m.high, m.low);\r\n            m.width = m.high[0] - m.low[0];\r\n            m.height = m.high[1] - m.low[1];\r\n            return m;\r\n        }\r\n        measure.augment = augment;\r\n        /**\r\n         * A list of maps of measurements.\r\n         *\r\n         * @param modelToMeasure The model to measure.\r\n         * @param atlas Optional atlas to save measurements.\r\n         * @returns object with low and high points.\r\n         */\r\n        var Atlas = (function () {\r\n            /**\r\n             * Constructor.\r\n             * @param modelContext The model to measure.\r\n             */\r\n            function Atlas(modelContext) {\r\n                this.modelContext = modelContext;\r\n                /**\r\n                 * Flag that models have been measured.\r\n                 */\r\n                this.modelsMeasured = false;\r\n                /**\r\n                 * Map of model measurements, mapped by routeKey.\r\n                 */\r\n                this.modelMap = {};\r\n                /**\r\n                 * Map of path measurements, mapped by routeKey.\r\n                 */\r\n                this.pathMap = {};\r\n            }\r\n            Atlas.prototype.measureModels = function () {\r\n                if (!this.modelsMeasured) {\r\n                    modelExtents(this.modelContext, this);\r\n                }\r\n            };\r\n            return Atlas;\r\n        }());\r\n        measure.Atlas = Atlas;\r\n        /**\r\n         * @private\r\n         */\r\n        function loopIndex(base, i) {\r\n            if (i >= base)\r\n                return i - base;\r\n            if (i < 0)\r\n                return i + base;\r\n            return i;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function yAtX(slope, x) {\r\n            return slope.slope * x + slope.yIntercept;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function pointOnSlopeAtX(line, x) {\r\n            var slope = lineSlope(line);\r\n            return [x, yAtX(slope, x)];\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function isCircular(bounds) {\r\n            for (var i = 1; i < 3; i++) {\r\n                if (!measure.isPointEqual(bounds[0].center, bounds[i].center, .000001) || !(MakerJs.round(bounds[0].width - bounds[i].width) === 0)) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function getAngledBounds(index, modelToMeasure, rotateModel, rotatePaths) {\r\n            MakerJs.model.rotate(modelToMeasure, rotateModel);\r\n            var m = modelExtents(modelToMeasure);\r\n            var result = {\r\n                index: index,\r\n                rotation: rotatePaths,\r\n                center: MakerJs.point.rotate(m.center, rotatePaths),\r\n                //model is sideways, so width is based on Y, height is based on X\r\n                width: m.height,\r\n                height: m.width,\r\n                bottom: new MakerJs.paths.Line(m.low, [m.high[0], m.low[1]]),\r\n                middle: new MakerJs.paths.Line([m.low[0], m.center[1]], [m.high[0], m.center[1]]),\r\n                top: new MakerJs.paths.Line(m.high, [m.low[0], m.high[1]])\r\n            };\r\n            [result.top, result.middle, result.bottom].forEach(function (line) { return MakerJs.path.rotate(line, rotatePaths); });\r\n            return result;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function hexSolution(lines, bounds) {\r\n            var tip = lines[1].origin;\r\n            var tipX = tip[0];\r\n            var left = lines[3].origin[0];\r\n            var right = lines[0].origin[0];\r\n            //see if left edge is in bounds if right edge is on the hex boundary\r\n            var altRight = tipX - right;\r\n            if ((right - left) > 2 * altRight)\r\n                return null;\r\n            //see if right edge is in bounds if left edge is on the hex boundary\r\n            var altLeft = (tipX - left) / 3;\r\n            if (altRight < altLeft)\r\n                return null;\r\n            var altitudeViaSide = Math.min(altLeft, altRight);\r\n            var radiusViaSide = MakerJs.solvers.equilateralSide(altitudeViaSide);\r\n            //find peaks, then find highest peak\r\n            var peakPoints = [MakerJs.point.fromSlopeIntersection(lines[1], lines[2]), MakerJs.point.fromSlopeIntersection(lines[4], lines[5])];\r\n            var peakRadii = peakPoints.map(function (p) { return Math.abs(p[1] - tip[1]); });\r\n            var peakNum = (peakRadii[0] > peakRadii[1]) ? 0 : 1; //top = 0, bottom = 1\r\n            var radiusViaPeak = peakRadii[peakNum];\r\n            if (radiusViaPeak > radiusViaSide) {\r\n                var altitudeViaPeak = MakerJs.solvers.equilateralAltitude(radiusViaPeak);\r\n                var peakX = tipX - 2 * altitudeViaPeak;\r\n                //see if it will contain right side\r\n                if (right > peakX + altitudeViaPeak)\r\n                    return null;\r\n                //see if it will contain left side\r\n                if (left < peakX - altitudeViaPeak)\r\n                    return null;\r\n                //at this point, [tipX - 2 * altitudeViaPeak, tip[1]] is a solution for origin.\r\n                //but we want to best center the result by sliding along the boundary middle, balancing the smallest gap\r\n                var leftGap = left - peakX + altitudeViaPeak;\r\n                var peakGap = 2 * altitudeViaPeak - bounds[peakNum + 1].width;\r\n                var minHalfGap = Math.min(leftGap, peakGap) / 2;\r\n                return {\r\n                    origin: pointOnSlopeAtX(bounds[2 - peakNum].middle, peakX + minHalfGap),\r\n                    radius: radiusViaPeak,\r\n                    type: 'peak ' + peakNum\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    origin: [tipX - 2 * altitudeViaSide, tip[1]],\r\n                    radius: radiusViaSide,\r\n                    type: 'side'\r\n                };\r\n            }\r\n        }\r\n        /**\r\n         * Measures the minimum bounding hexagon surrounding a model. The hexagon is oriented such that the right and left sides are vertical, and the top and bottom are pointed.\r\n         *\r\n         * @param modelToMeasure The model to measure.\r\n         * @returns IBoundingHex object which is a hexagon model, with an additional radius property.\r\n         */\r\n        function boundingHexagon(modelToMeasure) {\r\n            var originalMeasure = modelExtents(modelToMeasure);\r\n            var clone = MakerJs.cloneObject(modelToMeasure);\r\n            var bounds = [];\r\n            var scratch = { paths: {} };\r\n            MakerJs.model.center(clone);\r\n            function result(radius, origin1, notes) {\r\n                return {\r\n                    radius: radius,\r\n                    paths: new MakerJs.models.Polygon(6, radius, 30).paths,\r\n                    origin: MakerJs.point.add(origin1, MakerJs.point.subtract(originalMeasure.center, modelToMeasure.origin)),\r\n                    //models: { scratch: scratch },\r\n                    notes: notes\r\n                };\r\n            }\r\n            var boundRotations = [[90, -90], [-60, -30], [-60, 30]];\r\n            while (boundRotations.length) {\r\n                var rotation = boundRotations.shift();\r\n                var bound = getAngledBounds(bounds.length, clone, rotation[0], rotation[1]);\r\n                var side = MakerJs.solvers.equilateralSide(bound.width / 2);\r\n                if (side >= bound.height) {\r\n                    return result(side, bound.center, 'solved by bound ' + bounds.length);\r\n                }\r\n                bounds.push(bound);\r\n            }\r\n            //model.rotate(clone, 30);\r\n            //scratch.models = { clone: clone };\r\n            //check for a circular solution\r\n            if (isCircular(bounds)) {\r\n                return result(MakerJs.solvers.equilateralSide(bounds[0].width / 2), bounds[0].center, 'solved as circular');\r\n            }\r\n            var perimeters = bounds.map(function (b) { return b.top; }).concat(bounds.map(function (b) { return b.bottom; }));\r\n            perimeters.forEach(function (p, i) {\r\n                scratch.paths[i] = p;\r\n                //converge alternate lines to form two triangles\r\n                MakerJs.path.converge(perimeters[loopIndex(6, i + 2)], p, true);\r\n            });\r\n            bounds.forEach(function (b, i) {\r\n                scratch.paths['m' + i] = b.middle;\r\n            });\r\n            var boundCopy = bounds.slice();\r\n            var solution;\r\n            //solve a hexagon for every tip, keeping the smallest one\r\n            for (var i = 0; i < 6; i++) {\r\n                //rotate the scratch area so that we always reference the tip at polar 0\r\n                if (i > 0) {\r\n                    perimeters.push(perimeters.shift());\r\n                    boundCopy.push(boundCopy.shift());\r\n                    MakerJs.model.rotate(scratch, -60);\r\n                }\r\n                var s = hexSolution(perimeters, boundCopy);\r\n                if (s) {\r\n                    if (!solution || s.radius < solution.radius) {\r\n                        solution = s;\r\n                        solution.index = i;\r\n                    }\r\n                }\r\n            }\r\n            var p = MakerJs.point.rotate(solution.origin, solution.index * 60);\r\n            return result(solution.radius, p, 'solved by ' + solution.index + ' as ' + solution.type);\r\n        }\r\n        measure.boundingHexagon = boundingHexagon;\r\n    })(measure = MakerJs.measure || (MakerJs.measure = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var exporter;\r\n    (function (exporter) {\r\n        /**\r\n         * Try to get the unit system from a model\r\n         * @private\r\n         */\r\n        function tryGetModelUnits(itemToExport) {\r\n            if (MakerJs.isModel(itemToExport)) {\r\n                return itemToExport.units;\r\n            }\r\n        }\r\n        exporter.tryGetModelUnits = tryGetModelUnits;\r\n        /**\r\n         * Class to traverse an item 's models or paths and ultimately render each path.\r\n         * @private\r\n         */\r\n        var Exporter = (function () {\r\n            /**\r\n             * @param map Object containing properties: property name is the type of path, e.g. \"line\", \"circle\"; property value\r\n             * is a function to render a path. Function parameters are path and point.\r\n             * @param fixPoint Optional function to modify a point prior to export. Function parameter is a point; function must return a point.\r\n             * @param fixPath Optional function to modify a path prior to output. Function parameters are path and offset point; function must return a path.\r\n             */\r\n            function Exporter(map, fixPoint, fixPath, beginModel, endModel) {\r\n                this.map = map;\r\n                this.fixPoint = fixPoint;\r\n                this.fixPath = fixPath;\r\n                this.beginModel = beginModel;\r\n                this.endModel = endModel;\r\n            }\r\n            /**\r\n             * Export a path.\r\n             *\r\n             * @param pathToExport The path to export.\r\n             * @param offset The offset position of the path.\r\n             */\r\n            Exporter.prototype.exportPath = function (id, pathToExport, offset, layer) {\r\n                if (pathToExport) {\r\n                    var fn = this.map[pathToExport.type];\r\n                    if (fn) {\r\n                        fn(id, this.fixPath ? this.fixPath(pathToExport, offset) : pathToExport, offset, layer);\r\n                    }\r\n                }\r\n            };\r\n            /**\r\n             * Export a model.\r\n             *\r\n             * @param modelToExport The model to export.\r\n             * @param offset The offset position of the model.\r\n             */\r\n            Exporter.prototype.exportModel = function (modelId, modelToExport, offset) {\r\n                if (this.beginModel) {\r\n                    this.beginModel(modelId, modelToExport);\r\n                }\r\n                var newOffset = MakerJs.point.add((this.fixPoint ? this.fixPoint(modelToExport.origin) : modelToExport.origin), offset);\r\n                if (modelToExport.paths) {\r\n                    for (var id in modelToExport.paths) {\r\n                        var currPath = modelToExport.paths[id];\r\n                        if (!currPath)\r\n                            continue;\r\n                        this.exportPath(id, currPath, newOffset, currPath.layer || modelToExport.layer);\r\n                    }\r\n                }\r\n                if (modelToExport.models) {\r\n                    for (var id in modelToExport.models) {\r\n                        var currModel = modelToExport.models[id];\r\n                        if (!currModel)\r\n                            continue;\r\n                        this.exportModel(id, currModel, newOffset);\r\n                    }\r\n                }\r\n                if (this.endModel) {\r\n                    this.endModel(modelToExport);\r\n                }\r\n            };\r\n            /**\r\n             * Export an object.\r\n             *\r\n             * @param item The object to export. May be a path, an array of paths, a model, or an array of models.\r\n             * @param offset The offset position of the object.\r\n             */\r\n            Exporter.prototype.exportItem = function (itemId, itemToExport, origin) {\r\n                if (MakerJs.isModel(itemToExport)) {\r\n                    this.exportModel(itemId, itemToExport, origin);\r\n                }\r\n                else if (MakerJs.isPath(itemToExport)) {\r\n                    this.exportPath(itemId, itemToExport, origin, null);\r\n                }\r\n                else {\r\n                    for (var id in itemToExport) {\r\n                        this.exportItem(id, itemToExport[id], origin);\r\n                    }\r\n                }\r\n            };\r\n            return Exporter;\r\n        }());\r\n        exporter.Exporter = Exporter;\r\n    })(exporter = MakerJs.exporter || (MakerJs.exporter = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var importer;\r\n    (function (importer) {\r\n        /**\r\n         * Create a numeric array from a string of numbers. The numbers may be delimited by anything non-numeric.\r\n         *\r\n         * Example:\r\n         * ```\r\n         * var n = makerjs.importer.parseNumericList('5, 10, 15.20 25-30-35 4e1 .5');\r\n         * ```\r\n         *\r\n         * @param s The string of numbers.\r\n         * @returns Array of numbers.\r\n         */\r\n        function parseNumericList(s) {\r\n            var result = [];\r\n            //http://stackoverflow.com/questions/638565/parsing-scientific-notation-sensibly\r\n            var re = /[\\.-]?(?:0|[1-9]\\d*)(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\r\n            var matches;\r\n            while ((matches = re.exec(s)) !== null) {\r\n                if (matches.index === re.lastIndex) {\r\n                    re.lastIndex++;\r\n                }\r\n                result.push(parseFloat(matches[0]));\r\n            }\r\n            return result;\r\n        }\r\n        importer.parseNumericList = parseNumericList;\r\n    })(importer = MakerJs.importer || (MakerJs.importer = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var exporter;\r\n    (function (exporter_1) {\r\n        /**\r\n         * Renders an item in AutoDesk DFX file format.\r\n         *\r\n         * @param itemToExport Item to render: may be a path, an array of paths, or a model object.\r\n         * @param options Rendering options object.\r\n         * @param options.units String of the unit system. May be omitted. See makerjs.unitType for possible values.\r\n         * @returns String of DXF content.\r\n         */\r\n        function toDXF(itemToExport, options) {\r\n            //DXF format documentation:\r\n            //http://images.autodesk.com/adsk/files/acad_dxf0.pdf\r\n            if (options === void 0) { options = {}; }\r\n            var opts = {};\r\n            MakerJs.extendObject(opts, options);\r\n            if (MakerJs.isModel(itemToExport)) {\r\n                var modelToExport = itemToExport;\r\n                if (modelToExport.exporterOptions) {\r\n                    MakerJs.extendObject(opts, modelToExport.exporterOptions['toDXF']);\r\n                }\r\n            }\r\n            var dxf = [];\r\n            function append(value) {\r\n                dxf.push(value);\r\n            }\r\n            function defaultLayer(pathContext, layer) {\r\n                return pathContext.layer || layer || 0;\r\n            }\r\n            var map = {};\r\n            map[MakerJs.pathType.Line] = function (id, line, origin, layer) {\r\n                append(\"0\");\r\n                append(\"LINE\");\r\n                append(\"8\");\r\n                append(defaultLayer(line, layer));\r\n                append(\"10\");\r\n                append(line.origin[0] + origin[0]);\r\n                append(\"20\");\r\n                append(line.origin[1] + origin[1]);\r\n                append(\"11\");\r\n                append(line.end[0] + origin[0]);\r\n                append(\"21\");\r\n                append(line.end[1] + origin[1]);\r\n            };\r\n            map[MakerJs.pathType.Circle] = function (id, circle, origin, layer) {\r\n                append(\"0\");\r\n                append(\"CIRCLE\");\r\n                append(\"8\");\r\n                append(defaultLayer(circle, layer));\r\n                append(\"10\");\r\n                append(circle.origin[0] + origin[0]);\r\n                append(\"20\");\r\n                append(circle.origin[1] + origin[1]);\r\n                append(\"40\");\r\n                append(circle.radius);\r\n            };\r\n            map[MakerJs.pathType.Arc] = function (id, arc, origin, layer) {\r\n                append(\"0\");\r\n                append(\"ARC\");\r\n                append(\"8\");\r\n                append(defaultLayer(arc, layer));\r\n                append(\"10\");\r\n                append(arc.origin[0] + origin[0]);\r\n                append(\"20\");\r\n                append(arc.origin[1] + origin[1]);\r\n                append(\"40\");\r\n                append(arc.radius);\r\n                append(\"50\");\r\n                append(arc.startAngle);\r\n                append(\"51\");\r\n                append(arc.endAngle);\r\n            };\r\n            //TODO - handle scenario if any bezier seeds get passed\r\n            //map[pathType.BezierSeed]\r\n            function section(sectionFn) {\r\n                append(\"0\");\r\n                append(\"SECTION\");\r\n                sectionFn();\r\n                append(\"0\");\r\n                append(\"ENDSEC\");\r\n            }\r\n            function header() {\r\n                var units = dxfUnit[opts.units];\r\n                append(\"2\");\r\n                append(\"HEADER\");\r\n                append(\"9\");\r\n                append(\"$INSUNITS\");\r\n                append(\"70\");\r\n                append(units);\r\n            }\r\n            function entities() {\r\n                append(\"2\");\r\n                append(\"ENTITIES\");\r\n                var exporter = new exporter_1.Exporter(map);\r\n                exporter.exportItem('entities', itemToExport, MakerJs.point.zero());\r\n            }\r\n            //fixup options\r\n            if (!opts.units) {\r\n                var units = exporter_1.tryGetModelUnits(itemToExport);\r\n                if (units) {\r\n                    opts.units = units;\r\n                }\r\n            }\r\n            //also pass back to options parameter\r\n            MakerJs.extendObject(options, opts);\r\n            //begin dxf output\r\n            if (opts.units) {\r\n                section(header);\r\n            }\r\n            section(entities);\r\n            append(\"0\");\r\n            append(\"EOF\");\r\n            return dxf.join('\\n');\r\n        }\r\n        exporter_1.toDXF = toDXF;\r\n        /**\r\n         * @private\r\n         */\r\n        var dxfUnit = {};\r\n        //DXF format documentation:\r\n        //http://images.autodesk.com/adsk/files/acad_dxf0.pdf\r\n        //Default drawing units for AutoCAD DesignCenter blocks:\r\n        //0 = Unitless; 1 = Inches; 2 = Feet; 3 = Miles; 4 = Millimeters; 5 = Centimeters; 6 = Meters; 7 = Kilometers; 8 = Microinches;\r\n        dxfUnit[''] = 0;\r\n        dxfUnit[MakerJs.unitType.Inch] = 1;\r\n        dxfUnit[MakerJs.unitType.Foot] = 2;\r\n        dxfUnit[MakerJs.unitType.Millimeter] = 4;\r\n        dxfUnit[MakerJs.unitType.Centimeter] = 5;\r\n        dxfUnit[MakerJs.unitType.Meter] = 6;\r\n    })(exporter = MakerJs.exporter || (MakerJs.exporter = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var solvers;\r\n    (function (solvers) {\r\n        /**\r\n         * @private\r\n         */\r\n        var equilateral = Math.sqrt(3) / 2;\r\n        /**\r\n         * Solves for the altitude of an equilateral triangle when you know its side length.\r\n         *\r\n         * @param sideLength Length of a side of the equilateral triangle (all 3 sides are equal).\r\n         * @returns Altitude of the equilateral triangle.\r\n         */\r\n        function equilateralAltitude(sideLength) {\r\n            return sideLength * equilateral;\r\n        }\r\n        solvers.equilateralAltitude = equilateralAltitude;\r\n        /**\r\n         * Solves for the side length of an equilateral triangle when you know its altitude.\r\n         *\r\n         * @param altitude Altitude of the equilateral triangle.\r\n         * @returns Length of the side of the equilateral triangle (all 3 sides are equal).\r\n         */\r\n        function equilateralSide(altitude) {\r\n            return altitude / equilateral;\r\n        }\r\n        solvers.equilateralSide = equilateralSide;\r\n        /**\r\n         * Solves for the angle of a triangle when you know lengths of 3 sides.\r\n         *\r\n         * @param lengthA Length of side of triangle, opposite of the angle you are trying to find.\r\n         * @param lengthB Length of any other side of the triangle.\r\n         * @param lengthC Length of the remaining side of the triangle.\r\n         * @returns Angle opposite of the side represented by the first parameter.\r\n         */\r\n        function solveTriangleSSS(lengthA, lengthB, lengthC) {\r\n            return MakerJs.angle.toDegrees(Math.acos((lengthB * lengthB + lengthC * lengthC - lengthA * lengthA) / (2 * lengthB * lengthC)));\r\n        }\r\n        solvers.solveTriangleSSS = solveTriangleSSS;\r\n        /**\r\n         * Solves for the length of a side of a triangle when you know length of one side and 2 angles.\r\n         *\r\n         * @param oppositeAngleInDegrees Angle which is opposite of the side you are trying to find.\r\n         * @param lengthOfSideBetweenAngles Length of one side of the triangle which is between the provided angles.\r\n         * @param otherAngleInDegrees An other angle of the triangle.\r\n         * @returns Length of the side of the triangle which is opposite of the first angle parameter.\r\n         */\r\n        function solveTriangleASA(oppositeAngleInDegrees, lengthOfSideBetweenAngles, otherAngleInDegrees) {\r\n            var angleOppositeSide = 180 - oppositeAngleInDegrees - otherAngleInDegrees;\r\n            return (lengthOfSideBetweenAngles * Math.sin(MakerJs.angle.toRadians(oppositeAngleInDegrees))) / Math.sin(MakerJs.angle.toRadians(angleOppositeSide));\r\n        }\r\n        solvers.solveTriangleASA = solveTriangleASA;\r\n        /**\r\n         * Solves for the angles of the tangent lines between 2 circles.\r\n         *\r\n         * @param a First circle.\r\n         * @param b Second circle.\r\n         * @param inner Boolean to use inner tangents instead of outer tangents.\r\n         * @returns Array of angles in degrees where 2 lines between the circles will be tangent to both circles.\r\n         */\r\n        function circleTangentAngles(a, b, inner) {\r\n            if (inner === void 0) { inner = false; }\r\n            var connect = new MakerJs.paths.Line(a.origin, b.origin);\r\n            var distance = MakerJs.measure.pointDistance(a.origin, b.origin);\r\n            //no tangents if either circle encompasses the other\r\n            if (a.radius >= distance + b.radius || b.radius >= distance + a.radius)\r\n                return null;\r\n            //no inner tangents when circles touch or overlap\r\n            if (inner && (a.radius + b.radius >= distance))\r\n                return null;\r\n            var tangentAngles;\r\n            if (!inner && MakerJs.round(a.radius - b.radius) == 0) {\r\n                tangentAngles = [90, 270];\r\n            }\r\n            else {\r\n                //solve for circles on the x axis at the distance\r\n                var d2 = distance / 2;\r\n                var between = new MakerJs.paths.Circle([d2, 0], d2);\r\n                var diff = new MakerJs.paths.Circle(((a.radius > b.radius) ? a : b).origin, inner ? (a.radius + b.radius) : Math.abs(a.radius - b.radius));\r\n                var int = MakerJs.path.intersection(diff, between);\r\n                if (!int || !int.path1Angles)\r\n                    return null;\r\n                tangentAngles = int.path1Angles;\r\n            }\r\n            var connectAngle = MakerJs.angle.ofLineInDegrees(connect);\r\n            //add the line's angle to the result\r\n            return tangentAngles.map(function (a) { return MakerJs.angle.noRevolutions(a + connectAngle); });\r\n        }\r\n        solvers.circleTangentAngles = circleTangentAngles;\r\n    })(solvers = MakerJs.solvers || (MakerJs.solvers = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var path;\r\n    (function (path) {\r\n        /**\r\n         * @private\r\n         */\r\n        var map = {};\r\n        map[MakerJs.pathType.Arc] = {};\r\n        map[MakerJs.pathType.Circle] = {};\r\n        map[MakerJs.pathType.Line] = {};\r\n        map[MakerJs.pathType.Arc][MakerJs.pathType.Arc] = function (arc1, arc2, options, swapOffsets) {\r\n            var result = null;\r\n            moveTemp([arc1, arc2], options, swapOffsets, function () {\r\n                var angles = circleToCircle(arc1, arc2, options);\r\n                if (angles) {\r\n                    var arc1Angles = getAnglesWithinArc(angles[0], arc1, options);\r\n                    var arc2Angles = getAnglesWithinArc(angles[1], arc2, options);\r\n                    if (arc1Angles && arc2Angles) {\r\n                        //must correspond to the same angle indexes\r\n                        if (arc1Angles.length === 1 || arc2Angles.length === 1) {\r\n                            for (var i1 = 0; i1 < arc1Angles.length; i1++) {\r\n                                for (var i2 = 0; i2 < arc2Angles.length; i2++) {\r\n                                    var p1 = MakerJs.point.fromAngleOnCircle(arc1Angles[i1], arc1);\r\n                                    var p2 = MakerJs.point.fromAngleOnCircle(arc2Angles[i2], arc2);\r\n                                    //if they do not correspond then they don't intersect\r\n                                    if (MakerJs.measure.isPointEqual(p1, p2, .0001)) {\r\n                                        result = {\r\n                                            intersectionPoints: [p1],\r\n                                            path1Angles: [arc1Angles[i1]],\r\n                                            path2Angles: [arc2Angles[i2]]\r\n                                        };\r\n                                        return;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            result = {\r\n                                intersectionPoints: pointsFromAnglesOnCircle(arc1Angles, arc1),\r\n                                path1Angles: arc1Angles,\r\n                                path2Angles: arc2Angles\r\n                            };\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    if (options.out_AreOverlapped) {\r\n                        //overlapped for circle, reset and see if arcs actually overlap.\r\n                        options.out_AreOverlapped = MakerJs.measure.isArcOverlapping(arc1, arc2, options.excludeTangents);\r\n                    }\r\n                }\r\n            });\r\n            return result;\r\n        };\r\n        map[MakerJs.pathType.Arc][MakerJs.pathType.Circle] = function (arc, circle, options, swapOffsets) {\r\n            var result = null;\r\n            moveTemp([arc, circle], options, swapOffsets, function () {\r\n                var angles = circleToCircle(arc, circle, options);\r\n                if (angles) {\r\n                    var arcAngles = getAnglesWithinArc(angles[0], arc, options);\r\n                    if (arcAngles) {\r\n                        var circleAngles;\r\n                        //if both point are on arc, use both on circle\r\n                        if (arcAngles.length == 2) {\r\n                            circleAngles = angles[1];\r\n                        }\r\n                        else {\r\n                            //use the corresponding point on circle \r\n                            var index = findCorrespondingAngleIndex(angles, arcAngles);\r\n                            circleAngles = [angles[1][index]];\r\n                        }\r\n                        result = {\r\n                            intersectionPoints: pointsFromAnglesOnCircle(arcAngles, arc),\r\n                            path1Angles: arcAngles,\r\n                            path2Angles: circleAngles\r\n                        };\r\n                    }\r\n                }\r\n            });\r\n            return result;\r\n        };\r\n        map[MakerJs.pathType.Arc][MakerJs.pathType.Line] = function (arc, line, options, swapOffsets) {\r\n            var result = null;\r\n            moveTemp([arc, line], options, swapOffsets, function () {\r\n                var angles = lineToCircle(line, arc, options);\r\n                if (angles) {\r\n                    var arcAngles = getAnglesWithinArc(angles, arc, options);\r\n                    if (arcAngles) {\r\n                        result = {\r\n                            intersectionPoints: pointsFromAnglesOnCircle(arcAngles, arc),\r\n                            path1Angles: arcAngles\r\n                        };\r\n                    }\r\n                }\r\n            });\r\n            return result;\r\n        };\r\n        map[MakerJs.pathType.Circle][MakerJs.pathType.Arc] = function (circle, arc, options) {\r\n            var result = map[MakerJs.pathType.Arc][MakerJs.pathType.Circle](arc, circle, options, true);\r\n            if (result) {\r\n                return swapAngles(result);\r\n            }\r\n            return null;\r\n        };\r\n        map[MakerJs.pathType.Circle][MakerJs.pathType.Circle] = function (circle1, circle2, options, swapOffsets) {\r\n            var result = null;\r\n            moveTemp([circle1, circle2], options, swapOffsets, function () {\r\n                var angles = circleToCircle(circle1, circle2, options);\r\n                if (angles) {\r\n                    result = {\r\n                        intersectionPoints: pointsFromAnglesOnCircle(angles[0], circle1),\r\n                        path1Angles: angles[0],\r\n                        path2Angles: angles[1]\r\n                    };\r\n                }\r\n            });\r\n            return result;\r\n        };\r\n        map[MakerJs.pathType.Circle][MakerJs.pathType.Line] = function (circle, line, options, swapOffsets) {\r\n            var result = null;\r\n            moveTemp([circle, line], options, swapOffsets, function () {\r\n                var angles = lineToCircle(line, circle, options);\r\n                if (angles) {\r\n                    result = {\r\n                        intersectionPoints: pointsFromAnglesOnCircle(angles, circle),\r\n                        path1Angles: angles\r\n                    };\r\n                }\r\n            });\r\n            return result;\r\n        };\r\n        map[MakerJs.pathType.Line][MakerJs.pathType.Arc] = function (line, arc, options) {\r\n            var result = map[MakerJs.pathType.Arc][MakerJs.pathType.Line](arc, line, options, true);\r\n            if (result) {\r\n                return swapAngles(result);\r\n            }\r\n            return null;\r\n        };\r\n        map[MakerJs.pathType.Line][MakerJs.pathType.Circle] = function (line, circle, options) {\r\n            var result = map[MakerJs.pathType.Circle][MakerJs.pathType.Line](circle, line, options, true);\r\n            if (result) {\r\n                return swapAngles(result);\r\n            }\r\n            return null;\r\n        };\r\n        map[MakerJs.pathType.Line][MakerJs.pathType.Line] = function (line1, line2, options, swapOffsets) {\r\n            var result = null;\r\n            moveTemp([line1, line2], options, swapOffsets, function () {\r\n                var intersectionPoint = MakerJs.point.fromSlopeIntersection(line1, line2, options);\r\n                if (intersectionPoint) {\r\n                    //we have the point of intersection of endless lines, now check to see if the point is between both segemnts\r\n                    if (MakerJs.measure.isBetweenPoints(intersectionPoint, line1, options.excludeTangents) && MakerJs.measure.isBetweenPoints(intersectionPoint, line2, options.excludeTangents)) {\r\n                        result = {\r\n                            intersectionPoints: [intersectionPoint]\r\n                        };\r\n                    }\r\n                }\r\n            });\r\n            return result;\r\n        };\r\n        /**\r\n         * @private\r\n         */\r\n        function moveTemp(pathsToOffset, options, swapOffsets, task) {\r\n            var offsets = swapOffsets ? [options.path2Offset, options.path1Offset] : [options.path1Offset, options.path2Offset];\r\n            path.moveTemporary(pathsToOffset, offsets, task);\r\n        }\r\n        ;\r\n        /**\r\n         * @private\r\n         */\r\n        function swapAngles(result) {\r\n            var temp = result.path1Angles;\r\n            if (result.path2Angles) {\r\n                result.path1Angles = result.path2Angles;\r\n            }\r\n            else {\r\n                delete result.path1Angles;\r\n            }\r\n            if (temp) {\r\n                result.path2Angles = temp;\r\n            }\r\n            return result;\r\n        }\r\n        /**\r\n         * Find the point(s) where 2 paths intersect.\r\n         *\r\n         * @param path1 First path to find intersection.\r\n         * @param path2 Second path to find intersection.\r\n         * @param options Optional IPathIntersectionOptions.\r\n         * @returns IPathIntersection object, with points(s) of intersection (and angles, when a path is an arc or circle); or null if the paths did not intersect.\r\n         */\r\n        function intersection(path1, path2, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (path1 && path2) {\r\n                var fn = map[path1.type][path2.type];\r\n                if (fn) {\r\n                    return fn(path1, path2, options);\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        path.intersection = intersection;\r\n        /**\r\n         * @private\r\n         */\r\n        function findCorrespondingAngleIndex(circleAngles, arcAngle) {\r\n            for (var i = 0; i < circleAngles.length; i++) {\r\n                if (circleAngles[i][0] == arcAngle[0])\r\n                    return i;\r\n            }\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function pointsFromAnglesOnCircle(anglesInDegrees, circle) {\r\n            var result = [];\r\n            for (var i = 0; i < anglesInDegrees.length; i++) {\r\n                result.push(MakerJs.point.fromAngleOnCircle(anglesInDegrees[i], circle));\r\n            }\r\n            return result;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function getAnglesWithinArc(angles, arc, options) {\r\n            if (!angles)\r\n                return null;\r\n            var anglesWithinArc = [];\r\n            for (var i = 0; i < angles.length; i++) {\r\n                if (MakerJs.measure.isBetweenArcAngles(angles[i], arc, options.excludeTangents)) {\r\n                    anglesWithinArc.push(angles[i]);\r\n                }\r\n            }\r\n            if (anglesWithinArc.length == 0)\r\n                return null;\r\n            return anglesWithinArc;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function lineToCircle(line, circle, options) {\r\n            var radius = MakerJs.round(circle.radius);\r\n            //no-op for degenerate circle\r\n            if (circle.radius <= 0) {\r\n                return null;\r\n            }\r\n            //clone the line\r\n            var clonedLine = new MakerJs.paths.Line(MakerJs.point.subtract(line.origin, circle.origin), MakerJs.point.subtract(line.end, circle.origin));\r\n            //get angle of line\r\n            var lineAngleNormal = MakerJs.angle.ofLineInDegrees(line);\r\n            //use the positive horizontal angle\r\n            var lineAngle = (lineAngleNormal >= 180) ? lineAngleNormal - 360 : lineAngleNormal;\r\n            //rotate the line to horizontal\r\n            path.rotate(clonedLine, -lineAngle, MakerJs.point.zero());\r\n            //remember how to undo the rotation we just did\r\n            function unRotate(resultAngle) {\r\n                var unrotated = resultAngle + lineAngle;\r\n                return MakerJs.round(MakerJs.angle.noRevolutions(unrotated));\r\n            }\r\n            //line is horizontal, get the y value from any point\r\n            var lineY = MakerJs.round(clonedLine.origin[1]);\r\n            var lineYabs = Math.abs(lineY);\r\n            //if y is greater than radius, there is no intersection\r\n            if (lineYabs > radius) {\r\n                return null;\r\n            }\r\n            var anglesOfIntersection = [];\r\n            //if horizontal Y is the same as the radius, we know it's 90 degrees\r\n            if (lineYabs == radius) {\r\n                if (options.excludeTangents) {\r\n                    return null;\r\n                }\r\n                anglesOfIntersection.push(unRotate(lineY > 0 ? 90 : 270));\r\n            }\r\n            else {\r\n                function intersectionBetweenEndpoints(x, angleOfX) {\r\n                    if (MakerJs.measure.isBetween(MakerJs.round(x), MakerJs.round(clonedLine.origin[0]), MakerJs.round(clonedLine.end[0]), options.excludeTangents)) {\r\n                        anglesOfIntersection.push(unRotate(angleOfX));\r\n                    }\r\n                }\r\n                //find angle where line intersects\r\n                var intersectRadians = Math.asin(lineY / radius);\r\n                var intersectDegrees = MakerJs.angle.toDegrees(intersectRadians);\r\n                //line may intersect in 2 places\r\n                var intersectX = Math.cos(intersectRadians) * radius;\r\n                intersectionBetweenEndpoints(-intersectX, 180 - intersectDegrees);\r\n                intersectionBetweenEndpoints(intersectX, intersectDegrees);\r\n            }\r\n            if (anglesOfIntersection.length > 0) {\r\n                return anglesOfIntersection;\r\n            }\r\n            return null;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function circleToCircle(circle1, circle2, options) {\r\n            //no-op if either circle is degenerate\r\n            if (circle1.radius <= 0 || circle2.radius <= 0) {\r\n                return null;\r\n            }\r\n            //see if circles are the same\r\n            if (circle1.radius == circle2.radius && MakerJs.measure.isPointEqual(circle1.origin, circle2.origin, .0001)) {\r\n                options.out_AreOverlapped = true;\r\n                return null;\r\n            }\r\n            //get offset from origin\r\n            var offset = MakerJs.point.subtract(MakerJs.point.zero(), circle1.origin);\r\n            //clone circle1 and move to origin\r\n            var c1 = new MakerJs.paths.Circle(MakerJs.point.zero(), circle1.radius);\r\n            //clone circle2 and move relative to circle1\r\n            var c2 = new MakerJs.paths.Circle(MakerJs.point.subtract(circle2.origin, circle1.origin), circle2.radius);\r\n            //rotate circle2 to horizontal, c2 will be to the right of the origin.\r\n            var c2Angle = MakerJs.angle.ofPointInDegrees(MakerJs.point.zero(), c2.origin);\r\n            path.rotate(c2, -c2Angle, MakerJs.point.zero());\r\n            function unRotate(resultAngle) {\r\n                var unrotated = resultAngle + c2Angle;\r\n                return MakerJs.angle.noRevolutions(unrotated);\r\n            }\r\n            //get X of c2 origin\r\n            var x = c2.origin[0];\r\n            //see if c2 is outside of c1\r\n            if (MakerJs.round(x - c2.radius) > c1.radius) {\r\n                return null;\r\n            }\r\n            //see if c2 is within c1\r\n            if (MakerJs.round(x + c2.radius) < c1.radius) {\r\n                return null;\r\n            }\r\n            //see if c1 is within c2\r\n            if (MakerJs.round(x - c2.radius) < -c1.radius) {\r\n                return null;\r\n            }\r\n            //see if circles are tangent interior\r\n            if (MakerJs.round(c2.radius - x - c1.radius) == 0) {\r\n                if (options.excludeTangents) {\r\n                    return null;\r\n                }\r\n                return [[unRotate(180)], [unRotate(180)]];\r\n            }\r\n            //see if circles are tangent exterior\r\n            if (MakerJs.round(x - c2.radius - c1.radius) == 0) {\r\n                if (options.excludeTangents) {\r\n                    return null;\r\n                }\r\n                return [[unRotate(0)], [unRotate(180)]];\r\n            }\r\n            function bothAngles(oneAngle) {\r\n                return [unRotate(oneAngle), unRotate(MakerJs.angle.mirror(oneAngle, false, true))];\r\n            }\r\n            var c1IntersectionAngle = MakerJs.solvers.solveTriangleSSS(c2.radius, c1.radius, x);\r\n            var c2IntersectionAngle = MakerJs.solvers.solveTriangleSSS(c1.radius, x, c2.radius);\r\n            return [bothAngles(c1IntersectionAngle), bothAngles(180 - c2IntersectionAngle)];\r\n        }\r\n    })(path = MakerJs.path || (MakerJs.path = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var path;\r\n    (function (path) {\r\n        /**\r\n         * @private\r\n         */\r\n        var propertyNamesMap = {};\r\n        propertyNamesMap[MakerJs.pathType.Arc] = function (arc) {\r\n            return ['startAngle', 'endAngle'];\r\n        };\r\n        propertyNamesMap[MakerJs.pathType.Line] = function (line) {\r\n            return ['origin', 'end'];\r\n        };\r\n        /**\r\n         * @private\r\n         */\r\n        function getPointProperties(pathToInspect) {\r\n            var points = MakerJs.point.fromPathEnds(pathToInspect);\r\n            if (points) {\r\n                function pointProperty(index) {\r\n                    return { point: points[index], propertyName: propertyNames[index] };\r\n                }\r\n                var propertyNames = null;\r\n                var fn = propertyNamesMap[pathToInspect.type];\r\n                if (fn) {\r\n                    propertyNames = fn(pathToInspect);\r\n                    return [pointProperty(0), pointProperty(1)];\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function getMatchingPointProperties(pathA, pathB, options) {\r\n            var pathAProperties = getPointProperties(pathA);\r\n            var pathBProperties = getPointProperties(pathB);\r\n            var result = null;\r\n            function makeMatch(pathContext, pointProperties, index) {\r\n                return {\r\n                    path: pathContext,\r\n                    isStart: index == 0,\r\n                    propertyName: pointProperties[index].propertyName,\r\n                    point: pointProperties[index].point,\r\n                    oppositePoint: pointProperties[1 - index].point\r\n                };\r\n            }\r\n            function check(iA, iB) {\r\n                if (MakerJs.measure.isPointEqual(pathAProperties[iA].point, pathBProperties[iB].point, .0001)) {\r\n                    result = [\r\n                        makeMatch(pathA, pathAProperties, iA),\r\n                        makeMatch(pathB, pathBProperties, iB)\r\n                    ];\r\n                    return true;\r\n                }\r\n                return false;\r\n            }\r\n            check(0, 0) || check(0, 1) || check(1, 0) || check(1, 1);\r\n            return result;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function populateShardPointsFromReferenceCircle(filletRadius, center, properties, options) {\r\n            var referenceCircle = new MakerJs.paths.Circle(center, filletRadius);\r\n            //get reference circle intersection points\r\n            for (var i = 0; i < 2; i++) {\r\n                var circleIntersection = path.intersection(referenceCircle, properties[i].path);\r\n                if (!circleIntersection) {\r\n                    return false;\r\n                }\r\n                properties[i].shardPoint = circleIntersection.intersectionPoints[0];\r\n                if (MakerJs.measure.isPointEqual(properties[i].point, circleIntersection.intersectionPoints[0], .0001)) {\r\n                    if (circleIntersection.intersectionPoints.length > 1) {\r\n                        properties[i].shardPoint = circleIntersection.intersectionPoints[1];\r\n                    }\r\n                    else {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function cloneAndBreakPath(pathToShard, shardPoint) {\r\n            var shardStart = path.clone(pathToShard);\r\n            var shardEnd = path.breakAtPoint(shardStart, shardPoint);\r\n            return [shardStart, shardEnd];\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        var guidePathMap = {};\r\n        guidePathMap[MakerJs.pathType.Arc] = function (arc, filletRadius, nearPoint, shardPoint, isStart) {\r\n            var guideRadius = arc.radius;\r\n            //see if the guideline should be external or internal to the context arc.\r\n            var guideArcShard = cloneAndBreakPath(arc, shardPoint)[isStart ? 0 : 1];\r\n            if (guideArcShard) {\r\n                if (MakerJs.measure.isArcConcaveTowardsPoint(guideArcShard, nearPoint)) {\r\n                    guideRadius -= filletRadius;\r\n                }\r\n                else {\r\n                    guideRadius += filletRadius;\r\n                }\r\n                if (MakerJs.round(guideRadius) <= 0)\r\n                    return null;\r\n                return new MakerJs.paths.Arc(arc.origin, guideRadius, arc.startAngle, arc.endAngle);\r\n            }\r\n            return null;\r\n        };\r\n        guidePathMap[MakerJs.pathType.Line] = function (line, filletRadius, nearPoint, shardPoint, isStart) {\r\n            return new MakerJs.paths.Parallel(line, filletRadius, nearPoint);\r\n        };\r\n        /**\r\n         * @private\r\n         */\r\n        function getGuidePath(context, filletRadius, nearPoint) {\r\n            var result = null;\r\n            var fn = guidePathMap[context.path.type];\r\n            if (fn) {\r\n                result = fn(context.path, filletRadius, nearPoint, context.shardPoint, context.isStart);\r\n            }\r\n            return result;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        var filletResultMap = {};\r\n        filletResultMap[MakerJs.pathType.Arc] = function (arc, propertyName, filletRadius, filletCenter) {\r\n            var guideLine = new MakerJs.paths.Line(arc.origin, filletCenter);\r\n            var guideLineAngle = MakerJs.angle.ofLineInDegrees(guideLine);\r\n            var filletAngle = guideLineAngle;\r\n            //the context is an arc and the fillet is an arc so they will be tangent. If the fillet is external to the arc then the tangent is opposite.\r\n            if (!MakerJs.measure.isArcConcaveTowardsPoint(arc, filletCenter)) {\r\n                filletAngle += 180;\r\n            }\r\n            return {\r\n                filletAngle: MakerJs.angle.noRevolutions(filletAngle),\r\n                clipPath: function () {\r\n                    arc[propertyName] = guideLineAngle;\r\n                }\r\n            };\r\n        };\r\n        filletResultMap[MakerJs.pathType.Line] = function (line, propertyName, filletRadius, filletCenter) {\r\n            //make a small vertical line\r\n            var guideLine = new MakerJs.paths.Line([0, 0], [0, 1]);\r\n            //rotate this vertical line the same angle as the line context. It will be perpendicular.\r\n            var lineAngle = MakerJs.angle.ofLineInDegrees(line);\r\n            path.rotate(guideLine, lineAngle, [0, 0]);\r\n            path.moveRelative(guideLine, filletCenter);\r\n            //get the intersection point of the slopes of the context line and the perpendicular line. This is where the fillet meets the line.\r\n            var intersectionPoint = MakerJs.point.fromSlopeIntersection(line, guideLine);\r\n            if (intersectionPoint) {\r\n                return {\r\n                    filletAngle: MakerJs.angle.ofPointInDegrees(filletCenter, intersectionPoint),\r\n                    clipPath: function () {\r\n                        line[propertyName] = intersectionPoint;\r\n                    }\r\n                };\r\n            }\r\n            return null;\r\n        };\r\n        /**\r\n         * @private\r\n         */\r\n        function getFilletResult(context, filletRadius, filletCenter) {\r\n            var result = null;\r\n            var fn = filletResultMap[context.path.type];\r\n            if (fn) {\r\n                result = fn(context.path, context.propertyName, filletRadius, filletCenter);\r\n            }\r\n            if (!testFilletResult(context, result)) {\r\n                result = null;\r\n            }\r\n            return result;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function getDogboneResult(context, filletCenter) {\r\n            var result = {\r\n                filletAngle: MakerJs.angle.ofPointInDegrees(filletCenter, context.shardPoint),\r\n                clipPath: function () {\r\n                    context.path[context.propertyName] = context.shardPoint;\r\n                }\r\n            };\r\n            if (!testFilletResult(context, result)) {\r\n                result = null;\r\n            }\r\n            return result;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function testFilletResult(context, result) {\r\n            var test = false;\r\n            if (result) {\r\n                //temporarily clip the path.\r\n                var originalValue = context.path[context.propertyName];\r\n                result.clipPath();\r\n                //don't allow a fillet which effectivly eliminates the path.\r\n                if (MakerJs.measure.pathLength(context.path) > 0) {\r\n                    test = true;\r\n                }\r\n                //revert the clipping we just did.\r\n                context.path[context.propertyName] = originalValue;\r\n            }\r\n            return test;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function getLineRatio(lines) {\r\n            var totalLength = 0;\r\n            var lengths = [];\r\n            for (var i = 0; i < lines.length; i++) {\r\n                var length = MakerJs.measure.pathLength(lines[i]);\r\n                lengths.push(length);\r\n                totalLength += length;\r\n            }\r\n            return lengths[0] / totalLength;\r\n        }\r\n        /**\r\n         * Adds a round corner to the outside angle between 2 lines. The lines must meet at one point.\r\n         *\r\n         * @param lineA First line to fillet, which will be modified to fit the fillet.\r\n         * @param lineB Second line to fillet, which will be modified to fit the fillet.\r\n         * @returns Arc path object of the new fillet.\r\n         */\r\n        function dogbone(lineA, lineB, filletRadius, options) {\r\n            if (MakerJs.isPathLine(lineA) && MakerJs.isPathLine(lineB) && filletRadius && filletRadius > 0) {\r\n                var opts = {\r\n                    pointMatchingDistance: .005\r\n                };\r\n                MakerJs.extendObject(opts, options);\r\n                //first find the common point\r\n                var commonProperty = getMatchingPointProperties(lineA, lineB, options);\r\n                if (commonProperty) {\r\n                    //get the ratio comparison of the two lines\r\n                    var ratio = getLineRatio([lineA, lineB]);\r\n                    //draw a line between the two endpoints, and get the bisection point at the ratio\r\n                    var span = new MakerJs.paths.Line(commonProperty[0].oppositePoint, commonProperty[1].oppositePoint);\r\n                    var midRatioPoint = MakerJs.point.middle(span, ratio);\r\n                    //use the bisection theorem to get the angle bisecting the lines\r\n                    var bisectionAngle = MakerJs.angle.ofPointInDegrees(commonProperty[0].point, midRatioPoint);\r\n                    var center = MakerJs.point.add(commonProperty[0].point, MakerJs.point.fromPolar(MakerJs.angle.toRadians(bisectionAngle), filletRadius));\r\n                    if (!populateShardPointsFromReferenceCircle(filletRadius, center, commonProperty, opts)) {\r\n                        return null;\r\n                    }\r\n                    //get the angles of the fillet and a function which clips the path to the fillet.\r\n                    var results = [];\r\n                    for (var i = 0; i < 2; i++) {\r\n                        var result = getDogboneResult(commonProperty[i], center);\r\n                        if (!result) {\r\n                            return null;\r\n                        }\r\n                        results.push(result);\r\n                    }\r\n                    var filletArc = new MakerJs.paths.Arc(center, filletRadius, results[0].filletAngle, results[1].filletAngle);\r\n                    //make sure midpoint of fillet is outside of the angle\r\n                    if (MakerJs.round(MakerJs.angle.noRevolutions(MakerJs.angle.ofArcMiddle(filletArc))) == MakerJs.round(bisectionAngle)) {\r\n                        filletArc.startAngle = results[1].filletAngle;\r\n                        filletArc.endAngle = results[0].filletAngle;\r\n                    }\r\n                    //clip the paths and return the fillet arc.\r\n                    results[0].clipPath();\r\n                    results[1].clipPath();\r\n                    return filletArc;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        path.dogbone = dogbone;\r\n        /**\r\n         * Adds a round corner to the inside angle between 2 paths. The paths must meet at one point.\r\n         *\r\n         * @param pathA First path to fillet, which will be modified to fit the fillet.\r\n         * @param pathB Second path to fillet, which will be modified to fit the fillet.\r\n         * @param filletRadius Radius of the fillet.\r\n         * @param options Optional IPointMatchOptions object to specify pointMatchingDistance.\r\n         * @returns Arc path object of the new fillet.\r\n         */\r\n        function fillet(pathA, pathB, filletRadius, options) {\r\n            if (pathA && pathB && filletRadius && filletRadius > 0) {\r\n                var opts = {\r\n                    pointMatchingDistance: .005\r\n                };\r\n                MakerJs.extendObject(opts, options);\r\n                //first find the common point\r\n                var commonProperty = getMatchingPointProperties(pathA, pathB, options);\r\n                if (commonProperty) {\r\n                    //since arcs can curl beyond, we need a local reference point. \r\n                    //An intersection with a circle of the same radius as the desired fillet should suffice.\r\n                    if (!populateShardPointsFromReferenceCircle(filletRadius, commonProperty[0].point, commonProperty, opts)) {\r\n                        return null;\r\n                    }\r\n                    //get \"parallel\" guidelines\r\n                    var guidePaths = [];\r\n                    for (var i = 0; i < 2; i++) {\r\n                        var otherPathShardPoint = commonProperty[1 - i].shardPoint;\r\n                        if (!otherPathShardPoint) {\r\n                            return null;\r\n                        }\r\n                        var guidePath = getGuidePath(commonProperty[i], filletRadius, otherPathShardPoint);\r\n                        guidePaths.push(guidePath);\r\n                    }\r\n                    //the center of the fillet is the point where the guidelines intersect.\r\n                    var intersectionPoint = path.intersection(guidePaths[0], guidePaths[1]);\r\n                    if (intersectionPoint) {\r\n                        var center;\r\n                        //if guidelines intersect in more than one place, choose the closest one.\r\n                        if (intersectionPoint.intersectionPoints.length == 1) {\r\n                            center = intersectionPoint.intersectionPoints[0];\r\n                        }\r\n                        else {\r\n                            center = MakerJs.point.closest(commonProperty[0].point, intersectionPoint.intersectionPoints);\r\n                        }\r\n                        //get the angles of the fillet and a function which clips the path to the fillet.\r\n                        var results = [];\r\n                        for (var i = 0; i < 2; i++) {\r\n                            var result = getFilletResult(commonProperty[i], filletRadius, center);\r\n                            if (!result) {\r\n                                return null;\r\n                            }\r\n                            results.push(result);\r\n                        }\r\n                        //the two paths may actually be on the same line\r\n                        if (MakerJs.round(results[0].filletAngle - results[1].filletAngle) == 0)\r\n                            return null;\r\n                        var filletArc = new MakerJs.paths.Arc(center, filletRadius, results[0].filletAngle, results[1].filletAngle);\r\n                        var filletSpan = MakerJs.angle.ofArcSpan(filletArc);\r\n                        //the algorithm is only valid for fillet less than 180 degrees\r\n                        if (filletSpan == 180) {\r\n                            return null;\r\n                        }\r\n                        if (filletSpan > 180) {\r\n                            //swap to make smallest angle\r\n                            filletArc.startAngle = results[1].filletAngle;\r\n                            filletArc.endAngle = results[0].filletAngle;\r\n                        }\r\n                        //clip the paths and return the fillet arc.\r\n                        results[0].clipPath();\r\n                        results[1].clipPath();\r\n                        return filletArc;\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        path.fillet = fillet;\r\n    })(path = MakerJs.path || (MakerJs.path = {}));\r\n})(MakerJs || (MakerJs = {}));\r\n(function (MakerJs) {\r\n    var chain;\r\n    (function (chain) {\r\n        /**\r\n         * Adds a fillet between each link in a chain. Each path will be cropped to fit a fillet, and all fillets will be returned as paths in a returned model object.\r\n         *\r\n         * @param chainToFillet The chain to add fillets to.\r\n         * @param filletRadius Radius of the fillet.\r\n         * @returns Model object containing paths which fillet the joints in the chain.\r\n         */\r\n        function fillet(chainToFillet, filletRadius) {\r\n            var result = { paths: {} };\r\n            var added = 0;\r\n            var links = chainToFillet.links;\r\n            function add(i1, i2) {\r\n                var f = MakerJs.path.fillet(links[i1].walkedPath.pathContext, links[i2].walkedPath.pathContext, filletRadius);\r\n                if (f) {\r\n                    result.paths['fillet' + added] = f;\r\n                    added++;\r\n                }\r\n            }\r\n            for (var i = 1; i < links.length; i++) {\r\n                add(i - 1, i);\r\n            }\r\n            if (chainToFillet.endless) {\r\n                add(i - 1, 0);\r\n            }\r\n            if (!added)\r\n                return null;\r\n            return result;\r\n        }\r\n        chain.fillet = fillet;\r\n    })(chain = MakerJs.chain || (MakerJs.chain = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var kit;\r\n    (function (kit) {\r\n        //construct a model\r\n        /**\r\n         * Helper function to use the JavaScript \"apply\" function in conjunction with the \"new\" keyword.\r\n         *\r\n         * @param ctor The constructor for the class which is an IKit.\r\n         * @param args The array of parameters passed to the constructor.\r\n         * @returns A new instance of the class, which implements the IModel interface.\r\n         */\r\n        function construct(ctor, args) {\r\n            function F() {\r\n                return ctor.apply(this, args);\r\n            }\r\n            F.prototype = ctor.prototype;\r\n            return new F();\r\n        }\r\n        kit.construct = construct;\r\n        /**\r\n         * Extract just the initial sample values from a kit.\r\n         *\r\n         * @param ctor The constructor for the class which is an IKit.\r\n         * @returns Array of the inital sample values provided in the metaParameters array.\r\n         */\r\n        function getParameterValues(ctor) {\r\n            var parameters = [];\r\n            var metaParams = ctor.metaParameters;\r\n            if (metaParams) {\r\n                for (var i = 0; i < metaParams.length; i++) {\r\n                    var value = metaParams[i].value;\r\n                    if (Array.isArray(value)) {\r\n                        value = value[0];\r\n                    }\r\n                    parameters.push(value);\r\n                }\r\n            }\r\n            return parameters;\r\n        }\r\n        kit.getParameterValues = getParameterValues;\r\n    })(kit = MakerJs.kit || (MakerJs.kit = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var model;\r\n    (function (model) {\r\n        /**\r\n         * @private\r\n         */\r\n        function getOpposedLink(linkedPaths, pathContext) {\r\n            if (linkedPaths[0].walkedPath.pathContext === pathContext) {\r\n                return linkedPaths[1];\r\n            }\r\n            return linkedPaths[0];\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function followLinks(connections, chainFound, chainNotFound) {\r\n            function followLink(currLink, chain, firstLink) {\r\n                while (currLink) {\r\n                    chain.links.push(currLink);\r\n                    chain.pathLength += currLink.pathLength;\r\n                    var next = currLink.reversed ? 0 : 1;\r\n                    var nextPoint = currLink.endPoints[next];\r\n                    var items = connections.findCollection(nextPoint);\r\n                    if (!items || items.length === 0) {\r\n                        break;\r\n                    }\r\n                    var nextLink = getOpposedLink(items, currLink.walkedPath.pathContext);\r\n                    //remove the first 2 items, which should be currlink and nextlink\r\n                    items.splice(0, 2);\r\n                    if (!nextLink) {\r\n                        break;\r\n                    }\r\n                    if (nextLink.walkedPath.pathContext === firstLink.walkedPath.pathContext) {\r\n                        chain.endless = true;\r\n                        break;\r\n                    }\r\n                    currLink = nextLink;\r\n                }\r\n            }\r\n            for (var i = 0; i < connections.collections.length; i++) {\r\n                var linkedPaths = connections.collections[i].items;\r\n                if (linkedPaths && linkedPaths.length > 0) {\r\n                    var chain = {\r\n                        links: [],\r\n                        pathLength: 0\r\n                    };\r\n                    followLink(linkedPaths[0], chain, linkedPaths[0]);\r\n                    if (chain.endless) {\r\n                        chainFound(chain);\r\n                    }\r\n                    else {\r\n                        //need to go in reverse\r\n                        chain.links.reverse();\r\n                        var firstLink = chain.links[0];\r\n                        chain.links.map(function (link) { link.reversed = !link.reversed; });\r\n                        //remove the last link, it will be added in the call\r\n                        chain.pathLength -= chain.links[chain.links.length - 1].pathLength;\r\n                        var currLink = chain.links.pop();\r\n                        followLink(currLink, chain, firstLink);\r\n                        if (chain.links.length > 1) {\r\n                            chainFound(chain);\r\n                        }\r\n                        else {\r\n                            chainNotFound(chain.links[0].walkedPath);\r\n                        }\r\n                    }\r\n                    //if there were more than 2 paths on this point, follow those too.\r\n                    if (linkedPaths.length > 0) {\r\n                        i--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * Find a single chain within a model, across all layers. Shorthand of findChains; useful when you know there is only one chain to find in your model.\r\n         *\r\n         * @param modelContext The model to search for a chain.\r\n         * @returns A chain object or null if chains were not found.\r\n         */\r\n        function findSingleChain(modelContext) {\r\n            var singleChain = null;\r\n            findChains(modelContext, function (chains, loose, layer) {\r\n                singleChain = chains[0];\r\n            }, { byLayers: false });\r\n            return singleChain;\r\n        }\r\n        model.findSingleChain = findSingleChain;\r\n        /**\r\n         * Find paths that have common endpoints and form chains.\r\n         *\r\n         * @param modelContext The model to search for chains.\r\n         * @param options Optional options object.\r\n         */\r\n        function findChains(modelContext, callback, options) {\r\n            var opts = {\r\n                pointMatchingDistance: .005\r\n            };\r\n            MakerJs.extendObject(opts, options);\r\n            function comparePoint(pointA, pointB) {\r\n                var distance = MakerJs.measure.pointDistance(pointA, pointB);\r\n                return distance <= opts.pointMatchingDistance;\r\n            }\r\n            var connectionMap = {};\r\n            var chainsByLayer = {};\r\n            var ignored = {};\r\n            var walkOptions = {\r\n                onPath: function (walkedPath) {\r\n                    var layer = opts.byLayers ? walkedPath.layer : '';\r\n                    if (!connectionMap[layer]) {\r\n                        connectionMap[layer] = new MakerJs.Collector(comparePoint);\r\n                    }\r\n                    var connections = connectionMap[layer];\r\n                    var pathLength = MakerJs.measure.pathLength(walkedPath.pathContext);\r\n                    //circles are loops by nature\r\n                    if (walkedPath.pathContext.type === MakerJs.pathType.Circle ||\r\n                        (walkedPath.pathContext.type === MakerJs.pathType.Arc && MakerJs.round(MakerJs.angle.ofArcSpan(walkedPath.pathContext) - 360) === 0) ||\r\n                        (walkedPath.pathContext.type === MakerJs.pathType.BezierSeed && MakerJs.measure.isPointEqual(walkedPath.pathContext.origin, walkedPath.pathContext.end, opts.pointMatchingDistance))) {\r\n                        var chain = {\r\n                            links: [{\r\n                                    walkedPath: walkedPath,\r\n                                    reversed: null,\r\n                                    endPoints: null,\r\n                                    pathLength: pathLength\r\n                                }],\r\n                            endless: true,\r\n                            pathLength: pathLength\r\n                        };\r\n                        //store circles so that layers fire grouped\r\n                        if (!chainsByLayer[layer]) {\r\n                            chainsByLayer[layer] = [];\r\n                        }\r\n                        chainsByLayer[layer].push(chain);\r\n                    }\r\n                    else {\r\n                        //don't add lines which are shorter than the tolerance\r\n                        if (pathLength < opts.pointMatchingDistance) {\r\n                            if (!ignored[layer]) {\r\n                                ignored[layer] = [];\r\n                            }\r\n                            ignored[layer].push(walkedPath);\r\n                            return;\r\n                        }\r\n                        //gather both endpoints from all non-circle segments\r\n                        var endPoints = MakerJs.point.fromPathEnds(walkedPath.pathContext, walkedPath.offset);\r\n                        for (var i = 0; i < 2; i++) {\r\n                            var link = {\r\n                                walkedPath: walkedPath,\r\n                                endPoints: endPoints,\r\n                                reversed: i != 0,\r\n                                pathLength: pathLength\r\n                            };\r\n                            connections.addItemToCollection(endPoints[i], link);\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n            if (opts.shallow) {\r\n                walkOptions.beforeChildWalk = function () { return false; };\r\n            }\r\n            model.walk(modelContext, walkOptions);\r\n            for (var layer in connectionMap) {\r\n                var connections = connectionMap[layer];\r\n                var loose = [];\r\n                if (!chainsByLayer[layer]) {\r\n                    chainsByLayer[layer] = [];\r\n                }\r\n                //follow paths to find loops\r\n                followLinks(connections, function (chain) {\r\n                    chainsByLayer[layer].push(chain);\r\n                }, function (walkedPath) {\r\n                    loose.push(walkedPath);\r\n                });\r\n                //sort to return largest chains first\r\n                chainsByLayer[layer].sort(function (a, b) { return b.pathLength - a.pathLength; });\r\n                callback(chainsByLayer[layer], loose, layer, ignored[layer]);\r\n            }\r\n        }\r\n        model.findChains = findChains;\r\n    })(model = MakerJs.model || (MakerJs.model = {}));\r\n})(MakerJs || (MakerJs = {}));\r\n(function (MakerJs) {\r\n    var chain;\r\n    (function (chain) {\r\n        /**\r\n         * Shift the links of an endless chain.\r\n         *\r\n         * @param chainContext Chain to cycle through. Must be endless.\r\n         * @param amount Optional number of links to shift. May be negative to cycle backwards.\r\n         * @returns The chainContext for cascading.\r\n         */\r\n        function cycle(chainContext, amount) {\r\n            if (amount === void 0) { amount = 1; }\r\n            if (!chainContext.endless)\r\n                return;\r\n            var n = Math.abs(amount);\r\n            for (var i = 0; i < n; i++) {\r\n                if (amount < 0) {\r\n                    //remove from beginning, add to end\r\n                    chainContext.links.push(chainContext.links.shift());\r\n                }\r\n                else {\r\n                    //remove from end, add to beginning\r\n                    chainContext.links.unshift(chainContext.links.pop());\r\n                }\r\n            }\r\n            return chainContext;\r\n        }\r\n        chain.cycle = cycle;\r\n        /**\r\n         * Reverse the links of a chain.\r\n         *\r\n         * @param chainContext Chain to reverse.\r\n         * @returns The chainContext for cascading.\r\n         */\r\n        function reverse(chainContext) {\r\n            chainContext.links.reverse();\r\n            chainContext.links.forEach(function (link) { return link.reversed = !link.reversed; });\r\n            return chainContext;\r\n        }\r\n        chain.reverse = reverse;\r\n        /**\r\n         * Set the beginning of an endless chain to a known routeKey of a path.\r\n         *\r\n         * @param chainContext Chain to cycle through. Must be endless.\r\n         * @param routeKey RouteKey of the desired path to start the chain with.\r\n         * @returns The chainContext for cascading.\r\n         */\r\n        function startAt(chainContext, routeKey) {\r\n            if (!chainContext.endless)\r\n                return;\r\n            var index = -1;\r\n            for (var i = 0; i < chainContext.links.length; i++) {\r\n                if (chainContext.links[i].walkedPath.routeKey == routeKey) {\r\n                    index = i;\r\n                    break;\r\n                }\r\n            }\r\n            if (index > 0) {\r\n                cycle(chainContext, index);\r\n            }\r\n            return chainContext;\r\n        }\r\n        chain.startAt = startAt;\r\n        /**\r\n         * Convert a chain to a new model, independent of any model from where the chain was found.\r\n         *\r\n         * @param chainContext Chain to convert to a model.\r\n         * @param detachFromOldModel Flag to remove the chain's paths from their current parent model. If false, each path will be cloned. If true, the original path will be re-parented into the resulting new model. Default is false.\r\n         * @returns A new model containing paths from the chain.\r\n         */\r\n        function toNewModel(chainContext, detachFromOldModel) {\r\n            if (detachFromOldModel === void 0) { detachFromOldModel = false; }\r\n            var result = { paths: {} };\r\n            for (var i = 0; i < chainContext.links.length; i++) {\r\n                var wp = chainContext.links[i].walkedPath;\r\n                var id = MakerJs.model.getSimilarPathId(result, wp.pathId);\r\n                var newPath;\r\n                if (detachFromOldModel) {\r\n                    newPath = wp.pathContext;\r\n                    delete wp.modelContext.paths[wp.pathId];\r\n                }\r\n                else {\r\n                    newPath = MakerJs.path.clone(wp.pathContext);\r\n                }\r\n                result.paths[id] = MakerJs.path.moveRelative(newPath, wp.offset);\r\n            }\r\n            return result;\r\n        }\r\n        chain.toNewModel = toNewModel;\r\n        /**\r\n         * @private\r\n         */\r\n        function removeDuplicateEnds(endless, points) {\r\n            if (!endless || points.length < 2)\r\n                return;\r\n            if (MakerJs.measure.isPointEqual(points[0], points[points.length - 1], .00001)) {\r\n                points.pop();\r\n            }\r\n        }\r\n        /**\r\n         * Get points along a chain of paths.\r\n         *\r\n         * @param chainContext Chain of paths to get points from.\r\n         * @param distance Numeric distance along the chain between points, or numeric array of distances along the chain between each point.\r\n         * @param maxPoints Maximum number of points to retrieve.\r\n         * @returns Array of points which are on the chain spread at a uniform interval.\r\n         */\r\n        function toPoints(chainContext, distanceOrDistances, maxPoints) {\r\n            var result = [];\r\n            var di = 0;\r\n            var t = 0;\r\n            var distanceArray;\r\n            if (Array.isArray(distanceOrDistances)) {\r\n                distanceArray = distanceOrDistances;\r\n            }\r\n            for (var i = 0; i < chainContext.links.length; i++) {\r\n                var link = chainContext.links[i];\r\n                var wp = link.walkedPath;\r\n                var len = link.pathLength;\r\n                while (MakerJs.round(len - t) > 0) {\r\n                    var r = t / len;\r\n                    if (link.reversed) {\r\n                        r = 1 - r;\r\n                    }\r\n                    result.push(MakerJs.point.add(MakerJs.point.middle(wp.pathContext, r), wp.offset));\r\n                    if (maxPoints && result.length >= maxPoints)\r\n                        return result;\r\n                    var distance;\r\n                    if (distanceArray) {\r\n                        distance = distanceArray[di];\r\n                        di++;\r\n                        if (di > distanceArray.length) {\r\n                            return result;\r\n                        }\r\n                    }\r\n                    else {\r\n                        distance = distanceOrDistances;\r\n                    }\r\n                    t += distance;\r\n                }\r\n                t -= len;\r\n            }\r\n            removeDuplicateEnds(chainContext.endless, result);\r\n            return result;\r\n        }\r\n        chain.toPoints = toPoints;\r\n        /**\r\n         * Get key points (a minimal a number of points) along a chain of paths.\r\n         *\r\n         * @param chainContext Chain of paths to get points from.\r\n         * @param maxArcFacet The maximum length between points on an arc or circle.\r\n         * @returns Array of points which are on the chain.\r\n         */\r\n        function toKeyPoints(chainContext, maxArcFacet) {\r\n            var result = [];\r\n            for (var i = 0; i < chainContext.links.length; i++) {\r\n                var link = chainContext.links[i];\r\n                var wp = link.walkedPath;\r\n                var keyPoints = MakerJs.path.toKeyPoints(wp.pathContext, maxArcFacet);\r\n                if (keyPoints.length > 0) {\r\n                    if (link.reversed) {\r\n                        keyPoints.reverse();\r\n                    }\r\n                    if (i > 0) {\r\n                        keyPoints.shift();\r\n                    }\r\n                    var offsetPathPoints = keyPoints.map(function (p) { return MakerJs.point.add(p, wp.offset); });\r\n                    result.push.apply(result, offsetPathPoints);\r\n                }\r\n            }\r\n            removeDuplicateEnds(chainContext.endless, result);\r\n            return result;\r\n        }\r\n        chain.toKeyPoints = toKeyPoints;\r\n    })(chain = MakerJs.chain || (MakerJs.chain = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var model;\r\n    (function (model) {\r\n        /**\r\n         * @private\r\n         */\r\n        function getOpposedLink(linkedPaths, pathContext) {\r\n            if (linkedPaths[0].path === pathContext) {\r\n                return linkedPaths[1];\r\n            }\r\n            return linkedPaths[0];\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function getFirstPathFromModel(modelContext) {\r\n            if (!modelContext.paths)\r\n                return null;\r\n            for (var pathId in modelContext.paths) {\r\n                return modelContext.paths[pathId];\r\n            }\r\n            return null;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function collectLoop(loop, loops, detach) {\r\n            loops.push(loop);\r\n            if (detach) {\r\n                detachLoop(loop);\r\n            }\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function follow(connections, loops, detach) {\r\n            //for a given point, follow the paths that connect to each other to form loops\r\n            for (var i = 0; i < connections.collections.length; i++) {\r\n                var linkedPaths = connections.collections[i].items;\r\n                if (linkedPaths && linkedPaths.length > 0) {\r\n                    var loopModel = {\r\n                        paths: {},\r\n                        insideCount: 0\r\n                    };\r\n                    var firstLink = linkedPaths[0];\r\n                    var currLink = firstLink;\r\n                    while (true) {\r\n                        var currPath = currLink.path;\r\n                        currPath.reversed = currLink.reversed;\r\n                        var id = model.getSimilarPathId(loopModel, currPath.pathId);\r\n                        loopModel.paths[id] = currPath;\r\n                        var items = connections.findCollection(currLink.nextConnection);\r\n                        if (!items || items.length == 0)\r\n                            break;\r\n                        var nextLink = getOpposedLink(items, currLink.path);\r\n                        //remove the first 2 items, which should be currlink and nextlink\r\n                        items.splice(0, 2);\r\n                        if (!nextLink)\r\n                            break;\r\n                        currLink = nextLink;\r\n                        if (currLink.path === firstLink.path) {\r\n                            //loop is closed\r\n                            collectLoop(loopModel, loops, detach);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * Find paths that have common endpoints and form loops.\r\n         *\r\n         * @param modelContext The model to search for loops.\r\n         * @param options Optional options object.\r\n         * @returns A new model with child models ranked according to their containment within other found loops. The paths of models will be IPathDirectionalWithPrimeContext.\r\n         */\r\n        function findLoops(modelContext, options) {\r\n            var loops = [];\r\n            var result = { models: {} };\r\n            var opts = {\r\n                pointMatchingDistance: .005\r\n            };\r\n            MakerJs.extendObject(opts, options);\r\n            function spin(callback) {\r\n                for (var i = 0; i < loops.length; i++) {\r\n                    callback(loops[i]);\r\n                }\r\n            }\r\n            function getModelByDepth(depth) {\r\n                var id = depth.toString();\r\n                if (!(id in result.models)) {\r\n                    var newModel = { models: {} };\r\n                    result.models[id] = newModel;\r\n                }\r\n                return result.models[id];\r\n            }\r\n            function comparePoint(pointA, pointB) {\r\n                var distance = MakerJs.measure.pointDistance(pointA, pointB);\r\n                return distance <= opts.pointMatchingDistance;\r\n            }\r\n            var connections = new MakerJs.Collector(comparePoint);\r\n            //todo: remove dead ends first\r\n            model.originate(modelContext);\r\n            //find loops by looking at all paths in this model\r\n            var walkOptions = {\r\n                onPath: function (walkedPath) {\r\n                    var safePath = MakerJs.path.clone(walkedPath.pathContext);\r\n                    safePath.pathId = walkedPath.pathId;\r\n                    safePath.modelContext = modelContext;\r\n                    //circles are loops by nature\r\n                    if (safePath.type == MakerJs.pathType.Circle || (safePath.type == MakerJs.pathType.Arc && MakerJs.angle.ofArcSpan(walkedPath.pathContext) == 360)) {\r\n                        var loopModel = {\r\n                            paths: {},\r\n                            insideCount: 0\r\n                        };\r\n                        loopModel.paths[walkedPath.pathId] = safePath;\r\n                        collectLoop(loopModel, loops, opts.removeFromOriginal);\r\n                    }\r\n                    else {\r\n                        //gather both endpoints from all non-circle segments\r\n                        safePath.endPoints = MakerJs.point.fromPathEnds(safePath);\r\n                        //don't add lines which are shorter than the tolerance\r\n                        if (safePath.type == MakerJs.pathType.Line) {\r\n                            var distance = MakerJs.measure.pointDistance(safePath.endPoints[0], safePath.endPoints[1]);\r\n                            if (distance < opts.pointMatchingDistance) {\r\n                                return;\r\n                            }\r\n                        }\r\n                        for (var i = 2; i--;) {\r\n                            var linkedPath = {\r\n                                path: safePath,\r\n                                nextConnection: safePath.endPoints[1 - i],\r\n                                reversed: i != 0\r\n                            };\r\n                            connections.addItemToCollection(safePath.endPoints[i], linkedPath);\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n            model.walk(modelContext, walkOptions);\r\n            //follow paths to find loops\r\n            follow(connections, loops, opts.removeFromOriginal);\r\n            //now we have all loops, we need to see which are inside of each other\r\n            spin(function (firstLoop) {\r\n                var firstPath = getFirstPathFromModel(firstLoop);\r\n                if (!firstPath)\r\n                    return;\r\n                spin(function (secondLoop) {\r\n                    if (firstLoop === secondLoop)\r\n                        return;\r\n                    if (model.isPathInsideModel(firstPath, secondLoop)) {\r\n                        firstLoop.insideCount++;\r\n                    }\r\n                });\r\n            });\r\n            //now we can group similar loops by their nested level\r\n            spin(function (loop) {\r\n                var depthModel = getModelByDepth(loop.insideCount);\r\n                var id = model.countChildModels(depthModel).toString();\r\n                delete loop.insideCount;\r\n                depthModel.models[id] = loop;\r\n            });\r\n            return result;\r\n        }\r\n        model.findLoops = findLoops;\r\n        /**\r\n         * Remove all paths in a loop model from the model(s) which contained them.\r\n         *\r\n         * @param loopToDetach The model to search for loops.\r\n         */\r\n        function detachLoop(loopToDetach) {\r\n            for (var id in loopToDetach.paths) {\r\n                var pathDirectionalWithOriginalContext = loopToDetach.paths[id];\r\n                var primeModel = pathDirectionalWithOriginalContext.modelContext;\r\n                if (primeModel && primeModel.paths && pathDirectionalWithOriginalContext.pathId) {\r\n                    delete primeModel.paths[pathDirectionalWithOriginalContext.pathId];\r\n                }\r\n            }\r\n        }\r\n        model.detachLoop = detachLoop;\r\n        /**\r\n         * @private\r\n         */\r\n        var DeadEndFinder = (function () {\r\n            function DeadEndFinder(pointMatchingDistance, keep, trackDeleted) {\r\n                this.pointMatchingDistance = pointMatchingDistance;\r\n                this.keep = keep;\r\n                this.trackDeleted = trackDeleted;\r\n                pointMatchingDistance = pointMatchingDistance || .005;\r\n                function comparePoint(pointA, pointB) {\r\n                    var distance = MakerJs.measure.pointDistance(pointA, pointB);\r\n                    return distance <= pointMatchingDistance;\r\n                }\r\n                this.pointMap = new MakerJs.Collector(comparePoint);\r\n            }\r\n            DeadEndFinder.prototype.removePathRef = function (pathRef, reason) {\r\n                var _this = this;\r\n                var removePath = function (p) {\r\n                    var pathRefs = _this.pointMap.findCollection(p);\r\n                    for (var i = 0; i < pathRefs.length; i++) {\r\n                        if (pathRefs[i] === pathRef) {\r\n                            pathRefs.splice(i, 1);\r\n                            return;\r\n                        }\r\n                    }\r\n                };\r\n                for (var i = 2; i--;) {\r\n                    removePath(pathRef.endPoints[i]);\r\n                }\r\n                delete pathRef.modelContext.paths[pathRef.pathId];\r\n                if (this.trackDeleted) {\r\n                    this.trackDeleted(pathRef, reason);\r\n                }\r\n            };\r\n            DeadEndFinder.prototype.removeDeadEnd = function (baseCount) {\r\n                var _this = this;\r\n                var found = 0;\r\n                for (var i = 0; i < this.pointMap.collections.length; i++) {\r\n                    var pathRefs = this.pointMap.collections[i].items;\r\n                    if (pathRefs.length % 2 == 0)\r\n                        continue;\r\n                    if (pathRefs.length == 1) {\r\n                        this.removePathRef(pathRefs[0], \"dead end \" + (baseCount + found));\r\n                        found++;\r\n                    }\r\n                    else if (this.keep) {\r\n                        //allow caller to decide to keep each path\r\n                        pathRefs.forEach(function (pathRef) {\r\n                            if (!_this.keep(pathRef)) {\r\n                                _this.removePathRef(pathRef, \"not keeping\");\r\n                                found++;\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                return found;\r\n            };\r\n            return DeadEndFinder;\r\n        }());\r\n        /**\r\n         * Remove paths from a model which have endpoints that do not connect to other paths.\r\n         *\r\n         * @param modelContext The model to search for dead ends.\r\n         * @param options Optional options object.\r\n         * @returns The input model (for cascading).\r\n         */\r\n        function removeDeadEnds(modelContext, pointMatchingDistance, keep, trackDeleted) {\r\n            var deadEndFinder = new DeadEndFinder(pointMatchingDistance, keep, trackDeleted);\r\n            var walkOptions = {\r\n                onPath: function (walkedPath) {\r\n                    var endPoints = MakerJs.point.fromPathEnds(walkedPath.pathContext, walkedPath.offset);\r\n                    if (!endPoints)\r\n                        return;\r\n                    var pathRef = walkedPath;\r\n                    pathRef.endPoints = endPoints;\r\n                    for (var i = 2; i--;) {\r\n                        deadEndFinder.pointMap.addItemToCollection(endPoints[i], pathRef);\r\n                    }\r\n                }\r\n            };\r\n            model.walk(modelContext, walkOptions);\r\n            var total = 0;\r\n            var pass = 0;\r\n            while (pass = deadEndFinder.removeDeadEnd(total)) {\r\n                total += pass;\r\n            }\r\n            return modelContext;\r\n        }\r\n        model.removeDeadEnds = removeDeadEnds;\r\n    })(model = MakerJs.model || (MakerJs.model = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var exporter;\r\n    (function (exporter) {\r\n        /**\r\n         * Class for an XML tag.\r\n         * @private\r\n         */\r\n        var XmlTag = (function () {\r\n            /**\r\n             * @param name Name of the XML tag.\r\n             * @param attrs Optional attributes for the tag.\r\n             */\r\n            function XmlTag(name, attrs) {\r\n                this.name = name;\r\n                this.attrs = attrs;\r\n                /**\r\n                 * Text between the opening and closing tags.\r\n                 */\r\n                this.innerText = '';\r\n            }\r\n            /**\r\n             * Escapes certain characters within a string so that it can appear in a tag or its attribute.\r\n             *\r\n             * @returns Escaped string.\r\n             */\r\n            XmlTag.escapeString = function (value) {\r\n                var escape = {\r\n                    '&': '&amp;',\r\n                    '<': '&lt;',\r\n                    '>': '&gt;',\r\n                    '\"': '&quot;'\r\n                };\r\n                for (var code in escape) {\r\n                    //.split then .join is a 'replace'\r\n                    value = value.split(code).join(escape[code]);\r\n                }\r\n                return value;\r\n            };\r\n            /**\r\n             * Get the opening tag.\r\n             *\r\n             * @param selfClose Flag to determine if opening tag should be self closing.\r\n             */\r\n            XmlTag.prototype.getOpeningTag = function (selfClose) {\r\n                var attrs = '';\r\n                function outputAttr(attrName, attrValue) {\r\n                    if (attrValue == null || typeof attrValue === 'undefined')\r\n                        return;\r\n                    if (typeof attrValue === 'string') {\r\n                        attrValue = XmlTag.escapeString(attrValue);\r\n                    }\r\n                    attrs += ' ' + attrName + '=\"' + attrValue + '\"';\r\n                }\r\n                for (var name in this.attrs) {\r\n                    outputAttr(name, this.attrs[name]);\r\n                }\r\n                return '<' + this.name + attrs + (selfClose ? '/' : '') + '>';\r\n            };\r\n            /**\r\n             * Get the inner text.\r\n             */\r\n            XmlTag.prototype.getInnerText = function () {\r\n                if (this.innerTextEscaped) {\r\n                    return this.innerText;\r\n                }\r\n                else {\r\n                    return XmlTag.escapeString(this.innerText);\r\n                }\r\n            };\r\n            /**\r\n             * Get the closing tag.\r\n             */\r\n            XmlTag.prototype.getClosingTag = function () {\r\n                return '</' + this.name + '>';\r\n            };\r\n            /**\r\n             * Output the entire tag as a string.\r\n             */\r\n            XmlTag.prototype.toString = function () {\r\n                var selfClose = !this.innerText;\r\n                if (selfClose) {\r\n                    return this.getOpeningTag(true);\r\n                }\r\n                else {\r\n                    return this.getOpeningTag(false) + this.getInnerText() + this.getClosingTag();\r\n                }\r\n            };\r\n            return XmlTag;\r\n        }());\r\n        exporter.XmlTag = XmlTag;\r\n    })(exporter = MakerJs.exporter || (MakerJs.exporter = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var exporter;\r\n    (function (exporter) {\r\n        /**\r\n         * @private\r\n         */\r\n        function wrap(prefix, content, condition) {\r\n            if (condition) {\r\n                return prefix + '(' + content + ')';\r\n            }\r\n            else {\r\n                return content;\r\n            }\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function facetSizeToResolution(arcOrCircle, facetSize) {\r\n            if (!facetSize)\r\n                return;\r\n            var circle = new MakerJs.paths.Circle([0, 0], arcOrCircle.radius);\r\n            var length = MakerJs.measure.pathLength(circle);\r\n            if (!length)\r\n                return;\r\n            return length / facetSize;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function pathsToOpenJsCad(modelContext, facetSize) {\r\n            var head = '';\r\n            var tail = '';\r\n            var first = true;\r\n            var exit = false;\r\n            var reverseTail = false;\r\n            var beginMap = {};\r\n            beginMap[MakerJs.pathType.Circle] = function (circle, dirPath) {\r\n                var circleOptions = {\r\n                    center: MakerJs.point.rounded(circle.origin),\r\n                    radius: circle.radius,\r\n                    resolution: facetSizeToResolution(circle, facetSize)\r\n                };\r\n                head = wrap('CAG.circle', JSON.stringify(circleOptions), true);\r\n                exit = true;\r\n            };\r\n            beginMap[MakerJs.pathType.Line] = function (line, dirPath) {\r\n                head = wrap('new CSG.Path2D', JSON.stringify(dirPath.reversed ? [dirPath.endPoints[1], dirPath.endPoints[0]] : dirPath.endPoints), true);\r\n            };\r\n            beginMap[MakerJs.pathType.Arc] = function (arc, dirPath) {\r\n                var endAngle = MakerJs.angle.ofArcEnd(arc);\r\n                if (dirPath.reversed) {\r\n                    reverseTail = true;\r\n                }\r\n                var arcOptions = {\r\n                    center: MakerJs.point.rounded(arc.origin),\r\n                    radius: arc.radius,\r\n                    startangle: arc.startAngle,\r\n                    endangle: endAngle,\r\n                    resolution: facetSizeToResolution(arc, facetSize)\r\n                };\r\n                head = wrap('new CSG.Path2D.arc', JSON.stringify(arcOptions), true);\r\n            };\r\n            var appendMap = {};\r\n            appendMap[MakerJs.pathType.Line] = function (line, dirPath) {\r\n                var reverse = (reverseTail != dirPath.reversed);\r\n                var endPoint = MakerJs.point.rounded(dirPath.endPoints[reverse ? 0 : 1]);\r\n                append(wrap('.appendPoint', JSON.stringify(endPoint), true));\r\n            };\r\n            appendMap[MakerJs.pathType.Arc] = function (arc, dirPath) {\r\n                var reverse = (reverseTail != dirPath.reversed);\r\n                var endAngle = MakerJs.angle.ofArcEnd(arc);\r\n                var arcOptions = {\r\n                    radius: arc.radius,\r\n                    clockwise: reverse,\r\n                    large: Math.abs(endAngle - arc.startAngle) > 180,\r\n                    resolution: facetSizeToResolution(arc, facetSize)\r\n                };\r\n                var endPoint = MakerJs.point.rounded(dirPath.endPoints[reverse ? 0 : 1]);\r\n                append(wrap('.appendArc', JSON.stringify(endPoint) + ',' + JSON.stringify(arcOptions), true));\r\n            };\r\n            function append(s) {\r\n                if (reverseTail) {\r\n                    tail = s + tail;\r\n                }\r\n                else {\r\n                    tail += s;\r\n                }\r\n            }\r\n            for (var pathId in modelContext.paths) {\r\n                var pathContext = modelContext.paths[pathId];\r\n                var fn = first ? beginMap[pathContext.type] : appendMap[pathContext.type];\r\n                if (fn) {\r\n                    fn(pathContext, pathContext);\r\n                }\r\n                if (exit) {\r\n                    return head;\r\n                }\r\n                first = false;\r\n            }\r\n            return head + tail + '.close().innerToCAG()';\r\n        }\r\n        /**\r\n         * Creates a string of JavaScript code for execution with the OpenJsCad engine.\r\n         *\r\n         * @param modelToExport Model object to export.\r\n         * @param options Export options object.\r\n         * @param options.extrusion Height of 3D extrusion.\r\n         * @param options.resolution Size of facets.\r\n         * @returns String of JavaScript containing a main() function for OpenJsCad.\r\n         */\r\n        function toOpenJsCad(modelToExport, options) {\r\n            if (!modelToExport)\r\n                return '';\r\n            var all = '';\r\n            var depth = 0;\r\n            var depthModel;\r\n            var opts = {\r\n                extrusion: 1,\r\n                pointMatchingDistance: .005,\r\n                functionName: 'main'\r\n            };\r\n            MakerJs.extendObject(opts, options);\r\n            if (modelToExport.exporterOptions) {\r\n                MakerJs.extendObject(opts, modelToExport.exporterOptions['toOpenJsCad']);\r\n            }\r\n            //pass options back into calling object\r\n            MakerJs.extendObject(options, opts);\r\n            if (opts && opts.modelMap) {\r\n                all = exportFromOptionsMap(modelToExport, opts.modelMap);\r\n            }\r\n            if (!all) {\r\n                var result = [];\r\n                var loops = MakerJs.model.findLoops(modelToExport, opts);\r\n                while (depthModel = loops.models[depth]) {\r\n                    var union = '';\r\n                    for (var modelId in depthModel.models) {\r\n                        var subModel = depthModel.models[modelId];\r\n                        union += wrap('.union', pathsToOpenJsCad(subModel, opts.facetSize), union);\r\n                    }\r\n                    var operator = (depth % 2 == 0) ? '.union' : '.subtract';\r\n                    result.push(wrap(operator, union, result.length));\r\n                    depth++;\r\n                }\r\n                var extrudeOptions = { offset: [0, 0, opts.extrusion] };\r\n                result.push(wrap('.extrude', JSON.stringify(extrudeOptions), true));\r\n                all = 'return ' + result.join('');\r\n            }\r\n            return 'function ' + opts.functionName + '(){' + all + ';}';\r\n        }\r\n        exporter.toOpenJsCad = toOpenJsCad;\r\n        function exportFromOptionsMap(modelToExport, optionsMap) {\r\n            if (!modelToExport.models)\r\n                return;\r\n            var result = [];\r\n            var union = [];\r\n            var i = 0;\r\n            for (var key in optionsMap) {\r\n                var fName = 'f' + i;\r\n                var options = optionsMap[key];\r\n                options.functionName = fName;\r\n                var childModel = modelToExport.models[key];\r\n                if (childModel) {\r\n                    result.push(toOpenJsCad(childModel, options));\r\n                    union.push('(' + fName + '())');\r\n                }\r\n                i++;\r\n            }\r\n            if (!result.length)\r\n                return;\r\n            result.push('return ' + union.join('.union'));\r\n            return result.join(' ');\r\n        }\r\n        /**\r\n         * Executes a JavaScript string with the OpenJsCad engine - converts 2D to 3D.\r\n         *\r\n         * @param modelToExport Model object to export.\r\n         * @param options Export options object.\r\n         * @param options.extrusion Height of 3D extrusion.\r\n         * @param options.resolution Size of facets.\r\n         * @returns String of STL format of 3D object.\r\n         */\r\n        function toSTL(modelToExport, options) {\r\n            if (options === void 0) { options = {}; }\r\n            if (!modelToExport)\r\n                return '';\r\n            var container;\r\n            switch (MakerJs.environment) {\r\n                case MakerJs.environmentTypes.BrowserUI:\r\n                    if (!('CAG' in window) || !('CSG' in window)) {\r\n                        throw \"OpenJsCad library not found. Download http://microsoft.github.io/maker.js/external/OpenJsCad/csg.js and http://microsoft.github.io/maker.js/external/OpenJsCad/formats.js to your website and add script tags.\";\r\n                    }\r\n                    container = window;\r\n                    break;\r\n                case MakerJs.environmentTypes.NodeJs:\r\n                    //this can throw if not found\r\n                    container = require('openjscad-csg');\r\n                    break;\r\n                case MakerJs.environmentTypes.WebWorker:\r\n                    if (!('CAG' in self) || !('CSG' in self)) {\r\n                        throw \"OpenJsCad library not found. Download http://microsoft.github.io/maker.js/external/OpenJsCad/csg.js and http://microsoft.github.io/maker.js/external/OpenJsCad/formats.js to your website and add an importScripts statement.\";\r\n                    }\r\n                    container = self;\r\n                    break;\r\n            }\r\n            var script = toOpenJsCad(modelToExport, options);\r\n            script += 'return ' + options.functionName + '();';\r\n            var f = new Function('CAG', 'CSG', script);\r\n            var csg = f(container.CAG, container.CSG);\r\n            return csg.toStlString();\r\n        }\r\n        exporter.toSTL = toSTL;\r\n    })(exporter = MakerJs.exporter || (MakerJs.exporter = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var exporter;\r\n    (function (exporter) {\r\n        /**\r\n         * Injects drawing into a PDFKit document.\r\n         *\r\n         * @param modelToExport Model object to export.\r\n         * @param options Export options object.\r\n         * @returns String of PDF file contents.\r\n         */\r\n        function toPDF(doc, modelToExport, options) {\r\n            if (!modelToExport)\r\n                return;\r\n            //fixup options\r\n            var opts = {\r\n                origin: [0, 0],\r\n                stroke: \"#000\"\r\n            };\r\n            MakerJs.extendObject(opts, options);\r\n            //try to get the unit system from the itemToExport\r\n            var scale = 1;\r\n            var exportUnits = opts.units || modelToExport.units;\r\n            if (exportUnits) {\r\n                //convert to inch\r\n                scale = MakerJs.units.conversionScale(exportUnits, MakerJs.unitType.Inch);\r\n            }\r\n            else {\r\n                //assume pixels, convert to inch\r\n                scale = 1 / 100;\r\n            }\r\n            //from inch to PDF PPI\r\n            scale *= 72;\r\n            //TODO scale each element without a whole clone\r\n            var scaledModel = MakerJs.model.scale(MakerJs.cloneObject(modelToExport), scale);\r\n            var size = MakerJs.measure.modelExtents(scaledModel);\r\n            var left = -size.low[0];\r\n            var offset = [left, size.high[1]];\r\n            offset = MakerJs.point.add(offset, options.origin);\r\n            MakerJs.model.findChains(scaledModel, function (chains, loose, layer) {\r\n                function single(walkedPath) {\r\n                    var pathData = exporter.pathToSVGPathData(walkedPath.pathContext, walkedPath.offset, offset);\r\n                    doc.path(pathData).stroke(opts.stroke);\r\n                }\r\n                chains.map(function (chain) {\r\n                    if (chain.links.length > 1) {\r\n                        var pathData = exporter.chainToSVGPathData(chain, offset);\r\n                        doc.path(pathData).stroke(opts.stroke);\r\n                    }\r\n                    else {\r\n                        var walkedPath = chain.links[0].walkedPath;\r\n                        if (walkedPath.pathContext.type === MakerJs.pathType.Circle) {\r\n                            var fixedPath;\r\n                            MakerJs.path.moveTemporary([walkedPath.pathContext], [walkedPath.offset], function () {\r\n                                fixedPath = MakerJs.path.mirror(walkedPath.pathContext, false, true);\r\n                            });\r\n                            MakerJs.path.moveRelative(fixedPath, offset);\r\n                            //TODO use only chainToSVGPathData instead of circle, so that we can use fill\r\n                            doc.circle(fixedPath.origin[0], fixedPath.origin[1], walkedPath.pathContext.radius).stroke(opts.stroke);\r\n                        }\r\n                        else {\r\n                            single(walkedPath);\r\n                        }\r\n                    }\r\n                });\r\n                loose.map(single);\r\n            }, { byLayers: false });\r\n        }\r\n        exporter.toPDF = toPDF;\r\n    })(exporter = MakerJs.exporter || (MakerJs.exporter = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var exporter;\r\n    (function (exporter) {\r\n        /**\r\n         * @private\r\n         */\r\n        var chainLinkToPathDataMap = {};\r\n        chainLinkToPathDataMap[MakerJs.pathType.Arc] = function (arc, endPoint, reversed, d) {\r\n            d.push('A');\r\n            svgArcData(d, arc.radius, endPoint, MakerJs.angle.ofArcSpan(arc) > 180, reversed ? (arc.startAngle > arc.endAngle) : (arc.startAngle < arc.endAngle));\r\n        };\r\n        chainLinkToPathDataMap[MakerJs.pathType.Line] = function (line, endPoint, reversed, d) {\r\n            d.push('L', MakerJs.round(endPoint[0]), MakerJs.round(endPoint[1]));\r\n        };\r\n        chainLinkToPathDataMap[MakerJs.pathType.BezierSeed] = function (seed, endPoint, reversed, d) {\r\n            svgBezierData(d, seed, reversed);\r\n        };\r\n        /**\r\n         * @private\r\n         */\r\n        function svgCoords(p) {\r\n            return MakerJs.point.mirror(p, false, true);\r\n        }\r\n        /**\r\n         * Convert a chain to SVG path data.\r\n         */\r\n        function chainToSVGPathData(chain, offset) {\r\n            function offsetPoint(p) {\r\n                return MakerJs.point.add(p, offset);\r\n            }\r\n            var first = chain.links[0];\r\n            var firstPoint = offsetPoint(svgCoords(first.endPoints[first.reversed ? 1 : 0]));\r\n            var d = ['M', MakerJs.round(firstPoint[0]), MakerJs.round(firstPoint[1])];\r\n            for (var i = 0; i < chain.links.length; i++) {\r\n                var link = chain.links[i];\r\n                var pathContext = link.walkedPath.pathContext;\r\n                var fn = chainLinkToPathDataMap[pathContext.type];\r\n                if (fn) {\r\n                    var fixedPath;\r\n                    MakerJs.path.moveTemporary([pathContext], [link.walkedPath.offset], function () {\r\n                        fixedPath = MakerJs.path.mirror(pathContext, false, true);\r\n                    });\r\n                    MakerJs.path.moveRelative(fixedPath, offset);\r\n                    fn(fixedPath, offsetPoint(svgCoords(link.endPoints[link.reversed ? 0 : 1])), link.reversed, d);\r\n                }\r\n            }\r\n            if (chain.endless) {\r\n                d.push('Z');\r\n            }\r\n            return d.join(' ');\r\n        }\r\n        exporter.chainToSVGPathData = chainToSVGPathData;\r\n        /**\r\n         * @private\r\n         */\r\n        function startSvgPathData(start, d) {\r\n            return [\"M\", MakerJs.round(start[0]), MakerJs.round(start[1])].concat(d);\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        var svgPathDataMap = {};\r\n        svgPathDataMap[MakerJs.pathType.Line] = function (line) {\r\n            return startSvgPathData(line.origin, MakerJs.point.rounded(line.end));\r\n        };\r\n        svgPathDataMap[MakerJs.pathType.Circle] = function (circle) {\r\n            return startSvgPathData(circle.origin, svgCircleData(circle.radius));\r\n        };\r\n        svgPathDataMap[MakerJs.pathType.Arc] = function (arc) {\r\n            var arcPoints = MakerJs.point.fromArc(arc);\r\n            if (MakerJs.measure.isPointEqual(arcPoints[0], arcPoints[1])) {\r\n                return svgPathDataMap[MakerJs.pathType.Circle](arc);\r\n            }\r\n            else {\r\n                var r = MakerJs.round(arc.radius);\r\n                var d = ['A'];\r\n                svgArcData(d, r, arcPoints[1], MakerJs.angle.ofArcSpan(arc) > 180, arc.startAngle > arc.endAngle);\r\n                return startSvgPathData(arcPoints[0], d);\r\n            }\r\n        };\r\n        svgPathDataMap[MakerJs.pathType.BezierSeed] = function (seed) {\r\n            var d = [];\r\n            svgBezierData(d, seed);\r\n            return startSvgPathData(seed.origin, d);\r\n        };\r\n        /**\r\n         * Convert a path to SVG path data.\r\n         */\r\n        function pathToSVGPathData(pathToExport, offset, offset2) {\r\n            var fn = svgPathDataMap[pathToExport.type];\r\n            if (fn) {\r\n                var fixedPath;\r\n                MakerJs.path.moveTemporary([pathToExport], [offset], function () {\r\n                    fixedPath = MakerJs.path.mirror(pathToExport, false, true);\r\n                });\r\n                MakerJs.path.moveRelative(fixedPath, offset2);\r\n                var d = fn(fixedPath);\r\n                return d.join(' ');\r\n            }\r\n            return '';\r\n        }\r\n        exporter.pathToSVGPathData = pathToSVGPathData;\r\n        /**\r\n         * @private\r\n         */\r\n        function getBezierModelsWithPaths(modelToExport) {\r\n            var beziers = [];\r\n            function checkIsBezierWithPaths(walkedModel) {\r\n                var b = walkedModel.childModel;\r\n                if (b.type && b.type === MakerJs.models.BezierCurve.typeName && b.paths) {\r\n                    beziers.push(walkedModel);\r\n                }\r\n            }\r\n            var options = {\r\n                beforeChildWalk: function (walkedModel) {\r\n                    checkIsBezierWithPaths(walkedModel);\r\n                    return true;\r\n                }\r\n            };\r\n            var rootModel = {\r\n                childId: '',\r\n                childModel: modelToExport,\r\n                layer: '',\r\n                offset: modelToExport.origin,\r\n                parentModel: null,\r\n                route: [],\r\n                routeKey: ''\r\n            };\r\n            checkIsBezierWithPaths(rootModel);\r\n            MakerJs.model.walk(modelToExport, options);\r\n            return beziers;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function getPathDataByLayer(modelToExport, offset, options) {\r\n            var pathDataByLayer = {};\r\n            var beziers = getBezierModelsWithPaths(modelToExport);\r\n            var tempKey = 'tempPaths';\r\n            beziers.forEach(function (walkedModel) {\r\n                var b = walkedModel.childModel;\r\n                //use seeds as path, hide the arc paths from findChains()\r\n                var bezierSeeds = MakerJs.models.BezierCurve.getBezierSeeds(b);\r\n                if (bezierSeeds.length > 0) {\r\n                    b[tempKey] = b.paths;\r\n                    var newPaths = {};\r\n                    bezierSeeds.forEach(function (seed, i) {\r\n                        newPaths['seed_' + i] = seed;\r\n                    });\r\n                    b.paths = newPaths;\r\n                }\r\n            });\r\n            MakerJs.model.findChains(modelToExport, function (chains, loose, layer) {\r\n                function single(walkedPath) {\r\n                    var pathData = pathToSVGPathData(walkedPath.pathContext, walkedPath.offset, offset);\r\n                    pathDataByLayer[layer].push(pathData);\r\n                }\r\n                pathDataByLayer[layer] = [];\r\n                chains.map(function (chain) {\r\n                    if (chain.links.length > 1) {\r\n                        var pathData = chainToSVGPathData(chain, offset);\r\n                        pathDataByLayer[layer].push(pathData);\r\n                    }\r\n                    else {\r\n                        single(chain.links[0].walkedPath);\r\n                    }\r\n                });\r\n                loose.map(single);\r\n            }, options);\r\n            //revert\r\n            beziers.forEach(function (walkedModel) {\r\n                var b = walkedModel.childModel;\r\n                if (tempKey in b) {\r\n                    b.paths = b[tempKey];\r\n                    delete b[tempKey];\r\n                }\r\n            });\r\n            return pathDataByLayer;\r\n        }\r\n        /**\r\n         * Convert a model to SVG path data.\r\n         *\r\n         * @param modelToExport Model to export.\r\n         * @param byLayers Boolean flag (default true) to return a map of path data by layer.\r\n         * @param origin Optional reference origin.\r\n         * @returns String of SVG path data (if byLayers is false) or an object map of path data by layer .\r\n         */\r\n        function toSVGPathData(modelToExport, byLayers, origin) {\r\n            if (byLayers === void 0) { byLayers = true; }\r\n            var size = MakerJs.measure.modelExtents(modelToExport);\r\n            if (!origin) {\r\n                origin = [-size.low[0], size.high[1]];\r\n            }\r\n            var pathDataArrayByLayer = getPathDataByLayer(modelToExport, origin, { byLayers: byLayers });\r\n            var pathDataStringByLayer = {};\r\n            for (var layer in pathDataArrayByLayer) {\r\n                pathDataStringByLayer[layer] = pathDataArrayByLayer[layer].join(' ');\r\n            }\r\n            return byLayers ? pathDataStringByLayer : pathDataStringByLayer[''];\r\n        }\r\n        exporter.toSVGPathData = toSVGPathData;\r\n        /**\r\n         * Renders an item in SVG markup.\r\n         *\r\n         * @param itemToExport Item to render: may be a path, an array of paths, or a model object.\r\n         * @param options Rendering options object.\r\n         * @param options.annotate Boolean to indicate that the id's of paths should be rendered as SVG text elements.\r\n         * @param options.origin point object for the rendered reference origin.\r\n         * @param options.scale Number to scale the SVG rendering.\r\n         * @param options.stroke String color of the rendered paths.\r\n         * @param options.strokeWidth String numeric width and optional units of the rendered paths.\r\n         * @param options.units String of the unit system. May be omitted. See makerjs.unitType for possible values.\r\n         * @param options.useSvgPathOnly Boolean to use SVG path elements instead of line, circle etc.\r\n         * @returns String of XML / SVG content.\r\n         */\r\n        function toSVG(itemToExport, options) {\r\n            function append(value, layer, forcePush) {\r\n                if (forcePush === void 0) { forcePush = false; }\r\n                if (!forcePush && typeof layer == \"string\" && layer.length > 0) {\r\n                    if (!(layer in layers)) {\r\n                        layers[layer] = [];\r\n                    }\r\n                    layers[layer].push(value);\r\n                }\r\n                else {\r\n                    elements.push(value);\r\n                }\r\n            }\r\n            function createElement(tagname, attrs, layer, innerText, forcePush) {\r\n                if (innerText === void 0) { innerText = null; }\r\n                if (forcePush === void 0) { forcePush = false; }\r\n                attrs['vector-effect'] = 'non-scaling-stroke';\r\n                var tag = new exporter.XmlTag(tagname, attrs);\r\n                if (innerText) {\r\n                    tag.innerText = innerText;\r\n                }\r\n                append(tag.toString(), layer, forcePush);\r\n            }\r\n            function fixPoint(pointToFix) {\r\n                //in DXF Y increases upward. in SVG, Y increases downward\r\n                var pointMirroredY = svgCoords(pointToFix);\r\n                return MakerJs.point.scale(pointMirroredY, opts.scale);\r\n            }\r\n            function fixPath(pathToFix, origin) {\r\n                //mirror creates a copy, so we don't modify the original\r\n                var mirrorY = MakerJs.path.mirror(pathToFix, false, true);\r\n                return MakerJs.path.moveRelative(MakerJs.path.scale(mirrorY, opts.scale), origin);\r\n            }\r\n            //fixup options\r\n            var opts = {\r\n                annotate: false,\r\n                origin: null,\r\n                scale: 1,\r\n                stroke: \"#000\",\r\n                strokeWidth: '0.25mm',\r\n                fill: \"none\",\r\n                fontSize: '9pt',\r\n                useSvgPathOnly: true,\r\n                viewBox: true\r\n            };\r\n            MakerJs.extendObject(opts, options);\r\n            var modelToExport;\r\n            var itemToExportIsModel = MakerJs.isModel(itemToExport);\r\n            if (itemToExportIsModel) {\r\n                modelToExport = itemToExport;\r\n                if (modelToExport.exporterOptions) {\r\n                    MakerJs.extendObject(opts, modelToExport.exporterOptions['toSVG']);\r\n                }\r\n            }\r\n            var elements = [];\r\n            var layers = {};\r\n            //measure the item to move it into svg area\r\n            if (itemToExportIsModel) {\r\n                modelToExport = itemToExport;\r\n            }\r\n            else if (Array.isArray(itemToExport)) {\r\n                //issue: this won't handle an array of models\r\n                var paths = {};\r\n                itemToExport.forEach(function (p, i) { paths[i] = p; });\r\n                modelToExport = { paths: paths };\r\n            }\r\n            else if (MakerJs.isPath(itemToExport)) {\r\n                modelToExport = { paths: { modelToMeasure: itemToExport } };\r\n            }\r\n            var size = MakerJs.measure.modelExtents(modelToExport);\r\n            //try to get the unit system from the itemToExport\r\n            if (!opts.units) {\r\n                var unitSystem = exporter.tryGetModelUnits(itemToExport);\r\n                if (unitSystem) {\r\n                    opts.units = unitSystem;\r\n                }\r\n            }\r\n            //convert unit system (if it exists) into SVG's units. scale if necessary.\r\n            var useSvgUnit = exporter.svgUnit[opts.units];\r\n            if (useSvgUnit && opts.viewBox) {\r\n                opts.scale *= useSvgUnit.scaleConversion;\r\n            }\r\n            if (size && !opts.origin) {\r\n                var left = -size.low[0] * opts.scale;\r\n                opts.origin = [left, size.high[1] * opts.scale];\r\n            }\r\n            //also pass back to options parameter\r\n            MakerJs.extendObject(options, opts);\r\n            //begin svg output\r\n            var svgAttrs;\r\n            if (size && opts.viewBox) {\r\n                var width = MakerJs.round(size.high[0] - size.low[0]) * opts.scale;\r\n                var height = MakerJs.round(size.high[1] - size.low[1]) * opts.scale;\r\n                var viewBox = [0, 0, width, height];\r\n                var unit = useSvgUnit ? useSvgUnit.svgUnitType : '';\r\n                svgAttrs = {\r\n                    width: width + unit,\r\n                    height: height + unit,\r\n                    viewBox: viewBox.join(' ')\r\n                };\r\n            }\r\n            var svgTag = new exporter.XmlTag('svg', MakerJs.extendObject(svgAttrs || {}, opts.svgAttrs));\r\n            append(svgTag.getOpeningTag(false));\r\n            var svgGroup = new exporter.XmlTag('g', {\r\n                id: 'svgGroup',\r\n                stroke: opts.stroke,\r\n                \"stroke-width\": opts.strokeWidth,\r\n                \"stroke-linecap\": \"round\",\r\n                \"fill\": opts.fill,\r\n                \"fill-rule\": \"evenodd\",\r\n                \"font-size\": opts.fontSize\r\n            });\r\n            append(svgGroup.getOpeningTag(false));\r\n            if (opts.useSvgPathOnly) {\r\n                var pathDataByLayer = getPathDataByLayer(modelToExport, opts.origin, { byLayers: true });\r\n                for (var layer in pathDataByLayer) {\r\n                    var pathData = pathDataByLayer[layer].join(' ');\r\n                    var attrs = { \"d\": pathData };\r\n                    if (layer.length > 0) {\r\n                        attrs[\"id\"] = layer;\r\n                    }\r\n                    createElement(\"path\", attrs, layer, null, true);\r\n                }\r\n            }\r\n            else {\r\n                function drawText(id, textPoint) {\r\n                    createElement(\"text\", {\r\n                        \"id\": id + \"_text\",\r\n                        \"x\": textPoint[0],\r\n                        \"y\": textPoint[1]\r\n                    }, null, id);\r\n                }\r\n                function drawPath(id, x, y, d, layer, textPoint) {\r\n                    createElement(\"path\", {\r\n                        \"id\": id,\r\n                        \"d\": [\"M\", MakerJs.round(x), MakerJs.round(y)].concat(d).join(\" \")\r\n                    }, layer);\r\n                    if (opts.annotate) {\r\n                        drawText(id, textPoint);\r\n                    }\r\n                }\r\n                function circleInPaths(id, center, radius, layer) {\r\n                    var d = svgCircleData(radius);\r\n                    drawPath(id, center[0], center[1], d, layer, center);\r\n                }\r\n                var map = {};\r\n                map[MakerJs.pathType.Line] = function (id, line, origin, layer) {\r\n                    var start = line.origin;\r\n                    var end = line.end;\r\n                    createElement(\"line\", {\r\n                        \"id\": id,\r\n                        \"x1\": MakerJs.round(start[0]),\r\n                        \"y1\": MakerJs.round(start[1]),\r\n                        \"x2\": MakerJs.round(end[0]),\r\n                        \"y2\": MakerJs.round(end[1])\r\n                    }, layer);\r\n                    if (opts.annotate) {\r\n                        drawText(id, MakerJs.point.middle(line));\r\n                    }\r\n                };\r\n                map[MakerJs.pathType.Circle] = function (id, circle, origin, layer) {\r\n                    var center = circle.origin;\r\n                    createElement(\"circle\", {\r\n                        \"id\": id,\r\n                        \"r\": circle.radius,\r\n                        \"cx\": MakerJs.round(center[0]),\r\n                        \"cy\": MakerJs.round(center[1])\r\n                    }, layer);\r\n                    if (opts.annotate) {\r\n                        drawText(id, center);\r\n                    }\r\n                };\r\n                map[MakerJs.pathType.Arc] = function (id, arc, origin, layer) {\r\n                    var arcPoints = MakerJs.point.fromArc(arc);\r\n                    if (MakerJs.measure.isPointEqual(arcPoints[0], arcPoints[1])) {\r\n                        circleInPaths(id, arc.origin, arc.radius, layer);\r\n                    }\r\n                    else {\r\n                        var d = ['A'];\r\n                        svgArcData(d, arc.radius, arcPoints[1], MakerJs.angle.ofArcSpan(arc) > 180, arc.startAngle > arc.endAngle);\r\n                        drawPath(id, arcPoints[0][0], arcPoints[0][1], d, layer, MakerJs.point.middle(arc));\r\n                    }\r\n                };\r\n                map[MakerJs.pathType.BezierSeed] = function (id, seed, origin, layer) {\r\n                    var d = [];\r\n                    svgBezierData(d, seed);\r\n                    drawPath(id, seed.origin[0], seed.origin[1], d, layer, MakerJs.point.middle(seed));\r\n                };\r\n                function beginModel(id, modelContext) {\r\n                    modelGroup.attrs = { id: id };\r\n                    append(modelGroup.getOpeningTag(false), modelContext.layer);\r\n                }\r\n                function endModel(modelContext) {\r\n                    append(modelGroup.getClosingTag(), modelContext.layer);\r\n                }\r\n                var modelGroup = new exporter.XmlTag('g');\r\n                var exp = new exporter.Exporter(map, fixPoint, fixPath, beginModel, endModel);\r\n                exp.exportItem('0', itemToExport, opts.origin);\r\n                //export layers as groups\r\n                for (var layer in layers) {\r\n                    var layerGroup = new exporter.XmlTag('g', { id: layer });\r\n                    for (var i = 0; i < layers[layer].length; i++) {\r\n                        layerGroup.innerText += layers[layer][i];\r\n                    }\r\n                    layerGroup.innerTextEscaped = true;\r\n                    append(layerGroup.toString());\r\n                }\r\n            }\r\n            append(svgGroup.getClosingTag());\r\n            append(svgTag.getClosingTag());\r\n            return elements.join('');\r\n        }\r\n        exporter.toSVG = toSVG;\r\n        /**\r\n         * @private\r\n         */\r\n        function svgCircleData(radius) {\r\n            var r = MakerJs.round(radius);\r\n            var d = ['m', -r, 0];\r\n            function halfCircle(sign) {\r\n                d.push('a');\r\n                svgArcData(d, r, [2 * r * sign, 0]);\r\n            }\r\n            halfCircle(1);\r\n            halfCircle(-1);\r\n            d.push('z');\r\n            return d;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function svgBezierData(d, seed, reversed) {\r\n            if (seed.controls.length === 1) {\r\n                d.push('Q', MakerJs.round(seed.controls[0][0]), MakerJs.round(seed.controls[0][1]));\r\n            }\r\n            else {\r\n                var controls = reversed ? [seed.controls[1], seed.controls[0]] : seed.controls;\r\n                d.push('C', MakerJs.round(controls[0][0]), MakerJs.round(controls[0][1]), MakerJs.round(controls[1][0]), MakerJs.round(controls[1][1]));\r\n            }\r\n            var final = reversed ? seed.origin : seed.end;\r\n            d.push(MakerJs.round(final[0]), MakerJs.round(final[1]));\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function svgArcData(d, radius, endPoint, largeArc, decreasing) {\r\n            var r = MakerJs.round(radius);\r\n            var end = endPoint;\r\n            d.push(r, r);\r\n            d.push(0); //0 = x-axis rotation\r\n            d.push(largeArc ? 1 : 0); //large arc=1, small arc=0\r\n            d.push(decreasing ? 0 : 1); //sweep-flag 0=decreasing, 1=increasing \r\n            d.push(MakerJs.round(end[0]), MakerJs.round(end[1]));\r\n        }\r\n        /**\r\n         * Map of MakerJs unit system to SVG unit system\r\n         */\r\n        exporter.svgUnit = {};\r\n        //SVG Coordinate Systems, Transformations and Units documentation:\r\n        //http://www.w3.org/TR/SVG/coords.html\r\n        //The supported length unit identifiers are: em, ex, px, pt, pc, cm, mm, in, and percentages.\r\n        exporter.svgUnit[MakerJs.unitType.Inch] = { svgUnitType: \"in\", scaleConversion: 1 };\r\n        exporter.svgUnit[MakerJs.unitType.Millimeter] = { svgUnitType: \"mm\", scaleConversion: 1 };\r\n        exporter.svgUnit[MakerJs.unitType.Centimeter] = { svgUnitType: \"cm\", scaleConversion: 1 };\r\n        //Add conversions for all unitTypes\r\n        exporter.svgUnit[MakerJs.unitType.Foot] = { svgUnitType: \"in\", scaleConversion: 12 };\r\n        exporter.svgUnit[MakerJs.unitType.Meter] = { svgUnitType: \"cm\", scaleConversion: 100 };\r\n    })(exporter = MakerJs.exporter || (MakerJs.exporter = {}));\r\n})(MakerJs || (MakerJs = {}));\r\n(function (MakerJs) {\r\n    var importer;\r\n    (function (importer) {\r\n        function fromSVGPathData(pathData, options) {\r\n            if (options === void 0) { options = {}; }\r\n            var result = {};\r\n            function addPath(p) {\r\n                if (!result.paths) {\r\n                    result.paths = {};\r\n                }\r\n                result.paths['p_' + ++pathCount] = p;\r\n            }\r\n            function addModel(m) {\r\n                if (!result.models) {\r\n                    result.models = {};\r\n                }\r\n                result.models['p_' + ++pathCount] = m;\r\n            }\r\n            function getPoint(cmd, offset) {\r\n                if (offset === void 0) { offset = 0; }\r\n                var p = MakerJs.point.mirror([cmd.data[0 + offset], cmd.data[1 + offset]], false, true);\r\n                if (cmd.absolute) {\r\n                    return p;\r\n                }\r\n                else {\r\n                    return MakerJs.point.add(p, cmd.from);\r\n                }\r\n            }\r\n            function lineTo(cmd, end) {\r\n                if (!MakerJs.measure.isPointEqual(cmd.from, end)) {\r\n                    addPath(new MakerJs.paths.Line(cmd.from, end));\r\n                }\r\n                return end;\r\n            }\r\n            var map = {};\r\n            map['M'] = function (cmd) {\r\n                firstPoint = getPoint(cmd);\r\n                return firstPoint;\r\n            };\r\n            map['Z'] = function (cmd) {\r\n                return lineTo(cmd, firstPoint);\r\n            };\r\n            map['H'] = function (cmd) {\r\n                var end = MakerJs.point.clone(cmd.from);\r\n                if (cmd.absolute) {\r\n                    end[0] = cmd.data[0];\r\n                }\r\n                else {\r\n                    end[0] += cmd.data[0];\r\n                }\r\n                return lineTo(cmd, end);\r\n            };\r\n            map['V'] = function (cmd) {\r\n                var end = MakerJs.point.clone(cmd.from);\r\n                //subtract to mirror on y axis: SVG coords\r\n                if (cmd.absolute) {\r\n                    end[1] = -cmd.data[0];\r\n                }\r\n                else {\r\n                    end[1] -= cmd.data[0];\r\n                }\r\n                return lineTo(cmd, end);\r\n            };\r\n            map['L'] = function (cmd) {\r\n                var end = getPoint(cmd);\r\n                return lineTo(cmd, end);\r\n            };\r\n            map['A'] = function (cmd) {\r\n                var rx = cmd.data[0];\r\n                var ry = cmd.data[1];\r\n                var rotation = cmd.data[2];\r\n                var large = cmd.data[3] === 1;\r\n                var decreasing = cmd.data[4] === 1;\r\n                var end = getPoint(cmd, 5);\r\n                var elliptic = rx !== ry;\r\n                //first, rotate so we are dealing with a zero angle x-axis\r\n                var xAxis = new MakerJs.paths.Line(cmd.from, MakerJs.point.rotate(end, rotation, cmd.from));\r\n                //next, un-distort any ellipse back into a circle in terms of x axis\r\n                if (elliptic) {\r\n                    xAxis = MakerJs.path.distort(xAxis, 1, rx / ry);\r\n                }\r\n                //now create an arc, making sure we use the large and decreasing flags\r\n                var arc = new MakerJs.paths.Arc(xAxis.origin, xAxis.end, rx, large, decreasing);\r\n                if (elliptic) {\r\n                    //scale up if radius was insufficient.\r\n                    if (rx < arc.radius) {\r\n                        var scaleUp = arc.radius / rx;\r\n                        rx *= scaleUp;\r\n                        ry *= scaleUp;\r\n                    }\r\n                    //create an elliptical arc, this will re-distort\r\n                    var e = new MakerJs.models.EllipticArc(arc, 1, ry / rx, options.bezierAccuracy);\r\n                    //un-rotate back to where it should be.\r\n                    MakerJs.model.rotate(e, -rotation, cmd.from);\r\n                    addModel(e);\r\n                }\r\n                else {\r\n                    //just use the arc\r\n                    //un-rotate back to where it should be.\r\n                    MakerJs.path.rotate(arc, -rotation, cmd.from);\r\n                    addPath(arc);\r\n                }\r\n                return end;\r\n            };\r\n            map['C'] = function (cmd) {\r\n                var control1 = getPoint(cmd, 0);\r\n                var control2 = getPoint(cmd, 2);\r\n                var end = getPoint(cmd, 4);\r\n                addModel(new MakerJs.models.BezierCurve(cmd.from, control1, control2, end, options.bezierAccuracy));\r\n                return end;\r\n            };\r\n            map['S'] = function (cmd) {\r\n                var control1;\r\n                var prevControl2;\r\n                if (cmd.prev.command === 'C') {\r\n                    prevControl2 = getPoint(cmd.prev, 2);\r\n                    control1 = MakerJs.point.rotate(prevControl2, 180, cmd.from);\r\n                }\r\n                else if (cmd.prev.command === 'S') {\r\n                    prevControl2 = getPoint(cmd.prev, 0);\r\n                    control1 = MakerJs.point.rotate(prevControl2, 180, cmd.from);\r\n                }\r\n                else {\r\n                    control1 = cmd.from;\r\n                }\r\n                var control2 = getPoint(cmd, 0);\r\n                var end = getPoint(cmd, 2);\r\n                addModel(new MakerJs.models.BezierCurve(cmd.from, control1, control2, end, options.bezierAccuracy));\r\n                return end;\r\n            };\r\n            map['Q'] = function (cmd) {\r\n                var control = getPoint(cmd, 0);\r\n                var end = getPoint(cmd, 2);\r\n                addModel(new MakerJs.models.BezierCurve(cmd.from, control, end, options.bezierAccuracy));\r\n                return end;\r\n            };\r\n            map['T'] = function (cmd) {\r\n                var control;\r\n                var prevControl;\r\n                if (cmd.prev.command === 'Q') {\r\n                    prevControl = getPoint(cmd.prev, 0);\r\n                    control = MakerJs.point.rotate(prevControl, 180, cmd.from);\r\n                }\r\n                else if (cmd.prev.command === 'T') {\r\n                    prevControl = getPoint(cmd.prev, 2); //see below *\r\n                    control = MakerJs.point.rotate(prevControl, 180, cmd.from);\r\n                }\r\n                else {\r\n                    control = cmd.from;\r\n                }\r\n                //* save the control point in the data list, will be accessible from index 2\r\n                var p = MakerJs.point.mirror(control, false, true);\r\n                cmd.data.push.apply(cmd.data, p);\r\n                var end = getPoint(cmd, 0);\r\n                addModel(new MakerJs.models.BezierCurve(cmd.from, control, end, options.bezierAccuracy));\r\n                return end;\r\n            };\r\n            var firstPoint = [0, 0];\r\n            var currPoint = [0, 0];\r\n            var pathCount = 0;\r\n            var prevCommand;\r\n            var regexpCommands = /([achlmqstvz])([0-9e\\.,\\+-\\s]*)/ig;\r\n            var commandMatches;\r\n            while ((commandMatches = regexpCommands.exec(pathData)) !== null) {\r\n                if (commandMatches.index === regexpCommands.lastIndex) {\r\n                    regexpCommands.lastIndex++;\r\n                }\r\n                var command = commandMatches[1]; //0 = command and data, 1 = command, 2 = data\r\n                var dataString = commandMatches[2];\r\n                var currCmd = {\r\n                    command: command.toUpperCase(),\r\n                    data: [],\r\n                    from: currPoint,\r\n                    prev: prevCommand\r\n                };\r\n                if (command === currCmd.command) {\r\n                    currCmd.absolute = true;\r\n                }\r\n                currCmd.data = importer.parseNumericList(dataString);\r\n                var fn = map[currCmd.command];\r\n                if (fn) {\r\n                    currPoint = fn(currCmd);\r\n                }\r\n                prevCommand = currCmd;\r\n            }\r\n            return result;\r\n        }\r\n        importer.fromSVGPathData = fromSVGPathData;\r\n    })(importer = MakerJs.importer || (MakerJs.importer = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var layout;\r\n    (function (layout) {\r\n        /**\r\n         * @private\r\n         */\r\n        function getChildPlacement(parentModel, baseline) {\r\n            //measure everything and cache the results\r\n            var atlas = new MakerJs.measure.Atlas(parentModel);\r\n            var measureParent = MakerJs.measure.modelExtents(parentModel, atlas);\r\n            //measure height of the model from the baseline 0\r\n            var parentTop = measureParent.high[1];\r\n            var cpa = [];\r\n            var xMap = {};\r\n            var walkOptions = {\r\n                beforeChildWalk: function (context) {\r\n                    var child = context.childModel;\r\n                    //get cached measurement of the child\r\n                    var m = atlas.modelMap[context.routeKey];\r\n                    if (!m)\r\n                        return;\r\n                    var childMeasure = MakerJs.measure.augment(m);\r\n                    //set a new origin at the x-center and y-baseline of the child\r\n                    MakerJs.model.originate(child, [childMeasure.center[0], parentTop * baseline]);\r\n                    //get the x-center of the child\r\n                    var x = child.origin[0] - measureParent.low[0];\r\n                    xMap[context.childId] = x;\r\n                    //get the x-center of the child as a percentage\r\n                    var xRatio = x / measureParent.width;\r\n                    cpa.push({ childId: context.childId, xRatio: xRatio });\r\n                    //do not walk the grandchildren. This is only for immediate children of the parentModel.\r\n                    return false;\r\n                }\r\n            };\r\n            MakerJs.model.walk(parentModel, walkOptions);\r\n            cpa.sort(function (a, b) { return a.xRatio - b.xRatio; });\r\n            var first = cpa[0];\r\n            var last = cpa[cpa.length - 1];\r\n            var min = first.xRatio;\r\n            var max = last.xRatio;\r\n            var span = max - min;\r\n            cpa.forEach(function (cp) { return cp.xRatio = (cp.xRatio - min) / span; });\r\n            return {\r\n                cpa: cpa,\r\n                firstX: xMap[first.childId],\r\n                lastX: measureParent.width - xMap[last.childId]\r\n            };\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function moveAndRotate(parentModel, cpa, rotate) {\r\n            cpa.forEach(function (cp) {\r\n                var child = parentModel.models[cp.childId];\r\n                //move the child to the new location\r\n                child.origin = cp.origin;\r\n                //rotate the child\r\n                if (rotate)\r\n                    MakerJs.model.rotate(child, cp.angle, cp.origin);\r\n            });\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        var onPathMap = {};\r\n        onPathMap[MakerJs.pathType.Arc] = function (arc, reversed, cpa) {\r\n            var arcSpan = MakerJs.angle.ofArcSpan(arc);\r\n            cpa.forEach(function (p) { return p.angle = reversed ? arc.endAngle - p.xRatio * arcSpan - 90 : arc.startAngle + p.xRatio * arcSpan + 90; });\r\n        };\r\n        onPathMap[MakerJs.pathType.Line] = function (line, reversed, cpa) {\r\n            var lineAngle = MakerJs.angle.ofLineInDegrees(line);\r\n            cpa.forEach(function (p) { return p.angle = lineAngle; });\r\n        };\r\n        /**\r\n         * Layout the children of a model along a path.\r\n         * The x-position of each child will be projected onto the path so that the proportion between children is maintained.\r\n         * Each child will be rotated such that it will be perpendicular to the path at the child's x-center.\r\n         *\r\n         * @param parentModel The model containing children to lay out.\r\n         * @param onPath The path on which to lay out.\r\n         * @param baseline Numeric percentage value of vertical displacement from the path. Default is zero.\r\n         * @param reversed Flag to travel along the path in reverse. Default is false.\r\n         * @param contain Flag to contain the children layout within the length of the path. Default is false.\r\n         * @param rotate Flag to rotate the child to perpendicular. Default is true.\r\n         * @returns The parentModel, for cascading.\r\n         */\r\n        function childrenOnPath(parentModel, onPath, baseline, reversed, contain, rotate) {\r\n            if (baseline === void 0) { baseline = 0; }\r\n            if (reversed === void 0) { reversed = false; }\r\n            if (contain === void 0) { contain = false; }\r\n            if (rotate === void 0) { rotate = true; }\r\n            var result = getChildPlacement(parentModel, baseline);\r\n            var cpa = result.cpa;\r\n            var chosenPath = onPath;\r\n            if (contain) {\r\n                //see if we need to clip\r\n                var onPathLength = MakerJs.measure.pathLength(onPath);\r\n                if (result.firstX + result.lastX < onPathLength) {\r\n                    chosenPath = MakerJs.path.clone(onPath);\r\n                    MakerJs.path.alterLength(chosenPath, -result.firstX, true);\r\n                    MakerJs.path.alterLength(chosenPath, -result.lastX);\r\n                }\r\n            }\r\n            cpa.forEach(function (p) { return p.origin = MakerJs.point.middle(chosenPath, reversed ? 1 - p.xRatio : p.xRatio); });\r\n            var fn = onPathMap[chosenPath.type];\r\n            if (fn) {\r\n                fn(chosenPath, reversed, cpa);\r\n            }\r\n            moveAndRotate(parentModel, cpa, rotate);\r\n            return parentModel;\r\n        }\r\n        layout.childrenOnPath = childrenOnPath;\r\n        /**\r\n         * @private\r\n         */\r\n        function miterAngles(points, offsetAngle) {\r\n            var arc = new MakerJs.paths.Arc([0, 0], 0, 0, 0);\r\n            return points.map(function (p, i) {\r\n                var a;\r\n                if (i === 0) {\r\n                    a = MakerJs.angle.ofPointInDegrees(p, points[i + 1]) + 90;\r\n                }\r\n                else if (i === points.length - 1) {\r\n                    a = MakerJs.angle.ofPointInDegrees(points[i - 1], p) + 90;\r\n                }\r\n                else {\r\n                    arc.origin = p;\r\n                    arc.startAngle = MakerJs.angle.ofPointInDegrees(p, points[i + 1]);\r\n                    arc.endAngle = MakerJs.angle.ofPointInDegrees(p, points[i - 1]);\r\n                    a = MakerJs.angle.ofArcMiddle(arc);\r\n                }\r\n                return a + offsetAngle;\r\n            });\r\n        }\r\n        /**\r\n         * Layout the children of a model along a chain.\r\n         * The x-position of each child will be projected onto the chain so that the proportion between children is maintained.\r\n         * The projected positions of the children will become an array of points that approximate the chain.\r\n         * Each child will be rotated such that it will be mitered according to the vertex angles formed by this series of points.\r\n         *\r\n         * @param parentModel The model containing children to lay out.\r\n         * @param onChain The chain on which to lay out.\r\n         * @param baseline Numeric percentage value of vertical displacement from the chain. Default is zero.\r\n         * @param reversed Flag to travel along the chain in reverse. Default is false.\r\n         * @param contain Flag to contain the children layout within the length of the chain. Default is false.\r\n         * @param rotate Flag to rotate the child to mitered angle. Default is true.\r\n         * @returns The parentModel, for cascading.\r\n         */\r\n        function childrenOnChain(parentModel, onChain, baseline, reversed, contain, rotated) {\r\n            if (baseline === void 0) { baseline = 0; }\r\n            if (reversed === void 0) { reversed = false; }\r\n            if (contain === void 0) { contain = false; }\r\n            if (rotated === void 0) { rotated = true; }\r\n            var result = getChildPlacement(parentModel, baseline);\r\n            var cpa = result.cpa;\r\n            var chainLength = onChain.pathLength;\r\n            if (contain)\r\n                chainLength -= result.firstX + result.lastX;\r\n            var absolutes = cpa.map(function (cp) { return (reversed ? 1 - cp.xRatio : cp.xRatio) * chainLength; });\r\n            var relatives;\r\n            if (reversed)\r\n                absolutes.reverse();\r\n            relatives = absolutes.map(function (ab, i) { return Math.abs(ab - (i == 0 ? 0 : absolutes[i - 1])); });\r\n            if (contain) {\r\n                relatives[0] += reversed ? result.lastX : result.firstX;\r\n            }\r\n            else {\r\n                relatives.shift();\r\n            }\r\n            //chain.toPoints always follows the chain in its order, from beginning to end. This is why we needed to contort the points input\r\n            var points = MakerJs.chain.toPoints(onChain, relatives);\r\n            if (points.length < cpa.length) {\r\n                //add last point of chain, since our distances exceeded the chain\r\n                var endLink = onChain.links[onChain.links.length - 1];\r\n                points.push(endLink.endPoints[endLink.reversed ? 0 : 1]);\r\n            }\r\n            if (contain)\r\n                points.shift(); //delete the first point which is the beginning of the chain\r\n            if (reversed)\r\n                points.reverse();\r\n            var angles = miterAngles(points, -90);\r\n            cpa.forEach(function (cp, i) {\r\n                cp.angle = angles[i];\r\n                cp.origin = points[i];\r\n            });\r\n            moveAndRotate(parentModel, cpa, rotated);\r\n            return parentModel;\r\n        }\r\n        layout.childrenOnChain = childrenOnChain;\r\n        /**\r\n         * @private\r\n         */\r\n        function cloneTo(dimension, itemToClone, count, margin) {\r\n            var result = {};\r\n            var add;\r\n            var measureFn;\r\n            var moveFn;\r\n            if (MakerJs.isModel(itemToClone)) {\r\n                measureFn = MakerJs.measure.modelExtents;\r\n                add = result.models = {};\r\n                moveFn = MakerJs.model.move;\r\n            }\r\n            else {\r\n                measureFn = MakerJs.measure.pathExtents;\r\n                add = result.paths = {};\r\n                moveFn = MakerJs.path.move;\r\n            }\r\n            var m = measureFn(itemToClone);\r\n            var size = m.high[dimension] - m.low[dimension];\r\n            for (var i = 0; i < count; i++) {\r\n                var origin = [0, 0];\r\n                origin[dimension] = i * (size + margin);\r\n                add[i] = moveFn(MakerJs.cloneObject(itemToClone), origin);\r\n            }\r\n            return result;\r\n        }\r\n        /**\r\n         * Layout clones in a column format.\r\n         *\r\n         * Example:\r\n         * ```\r\n         * //Grooves for a finger joint\r\n         * var m = require('makerjs');\r\n         *\r\n         * var dogbone = new m.models.Dogbone(50, 20, 2, -1, false);\r\n         *\r\n         * var grooves = m.layout.cloneToColumn(dogbone, 5, 20);\r\n         *\r\n         * document.write(m.exporter.toSVG(grooves));\r\n         * ```\r\n         *\r\n         * @param itemToClone: Either a model or a path object.\r\n         * @param count Number of clones in the column.\r\n         * @param margin Optional distance between each clone.\r\n         * @returns A new model with clones in a column.\r\n         */\r\n        function cloneToColumn(itemToClone, count, margin) {\r\n            if (margin === void 0) { margin = 0; }\r\n            return cloneTo(1, itemToClone, count, margin);\r\n        }\r\n        layout.cloneToColumn = cloneToColumn;\r\n        /**\r\n         * Layout clones in a row format.\r\n         *\r\n         * Example:\r\n         * ```\r\n         * //Tongue and grooves for a box joint\r\n         * var m = require('makerjs');\r\n         * var tongueWidth = 60;\r\n         * var grooveWidth = 50;\r\n         * var grooveDepth = 30;\r\n         * var groove = new m.models.Dogbone(grooveWidth, grooveDepth, 5, 0, true);\r\n         *\r\n         * groove.paths['leftTongue'] = new m.paths.Line([-tongueWidth / 2, 0], [0, 0]);\r\n         * groove.paths['rightTongue'] = new m.paths.Line([grooveWidth, 0], [grooveWidth + tongueWidth / 2, 0]);\r\n         *\r\n         * var tongueAndGrooves = m.layout.cloneToRow(groove, 3);\r\n         *\r\n         * document.write(m.exporter.toSVG(tongueAndGrooves));\r\n         * ```\r\n         *\r\n         * @param itemToClone: Either a model or a path object.\r\n         * @param count Number of clones in the row.\r\n         * @param margin Optional distance between each clone.\r\n         * @returns A new model with clones in a row.\r\n         */\r\n        function cloneToRow(itemToClone, count, margin) {\r\n            if (margin === void 0) { margin = 0; }\r\n            return cloneTo(0, itemToClone, count, margin);\r\n        }\r\n        layout.cloneToRow = cloneToRow;\r\n        /**\r\n         * Layout clones in a grid format.\r\n         *\r\n         * Example:\r\n         * ```\r\n         * //Grid of squares\r\n         * var m = require('makerjs');\r\n         * var square = new m.models.Square(43);\r\n         * var grid = m.layout.cloneToGrid(square, 5, 5, 7);\r\n         * document.write(m.exporter.toSVG(grid));\r\n         * ```\r\n         *\r\n         * @param itemToClone: Either a model or a path object.\r\n         * @param xCount Number of columns in the grid.\r\n         * @param yCount Number of rows in the grid.\r\n         * @param margin Optional numeric distance between each clone. Can also be a 2 dimensional array of numbers, to specify distances in x and y dimensions.\r\n         * @returns A new model with clones in a grid layout.\r\n         */\r\n        function cloneToGrid(itemToClone, xCount, yCount, margin) {\r\n            var margins = getMargins(margin);\r\n            return cloneToColumn(cloneToRow(itemToClone, xCount, margins[0]), yCount, margins[1]);\r\n        }\r\n        layout.cloneToGrid = cloneToGrid;\r\n        /**\r\n         * @private\r\n         */\r\n        function getMargins(margin) {\r\n            if (Array.isArray(margin)) {\r\n                return margin;\r\n            }\r\n            else {\r\n                return [margin, margin];\r\n            }\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function cloneToAlternatingRows(itemToClone, xCount, yCount, spacingFn) {\r\n            var modelToMeasure;\r\n            if (MakerJs.isModel(itemToClone)) {\r\n                modelToMeasure = itemToClone;\r\n            }\r\n            else {\r\n                modelToMeasure = { paths: { \"0\": itemToClone } };\r\n            }\r\n            var spacing = spacingFn(modelToMeasure);\r\n            var result = { models: {} };\r\n            for (var i = 0; i < yCount; i++) {\r\n                var i2 = i % 2;\r\n                result.models[i] = MakerJs.model.move(cloneToRow(itemToClone, xCount + i2, spacing.xMargin), [i2 * spacing.x, i * spacing.y]);\r\n            }\r\n            return result;\r\n        }\r\n        /**\r\n         * Layout clones in a brick format. Alternating rows will have an additional item in each row.\r\n         *\r\n         * Examples:\r\n         * ```\r\n         * //Brick wall\r\n         * var m = require('makerjs');\r\n         * var brick = new m.models.RoundRectangle(50, 30, 4);\r\n         * var wall = m.layout.cloneToBrick(brick, 8, 6, 3);\r\n         * document.write(m.exporter.toSVG(wall));\r\n         * ```\r\n         *\r\n         * ```\r\n         * //Fish scales\r\n         * var m = require('makerjs');\r\n         * var arc = new m.paths.Arc([0, 0], 50, 20, 160);\r\n         * var scales = m.layout.cloneToBrick(arc, 8, 20);\r\n         * document.write(m.exporter.toSVG(scales));\r\n         * ```\r\n         *\r\n         * @param itemToClone: Either a model or a path object.\r\n         * @param xCount Number of columns in the brick grid.\r\n         * @param yCount Number of rows in the brick grid.\r\n         * @param margin Optional numeric distance between each clone. Can also be a 2 dimensional array of numbers, to specify distances in x and y dimensions.\r\n         * @returns A new model with clones in a brick layout.\r\n         */\r\n        function cloneToBrick(itemToClone, xCount, yCount, margin) {\r\n            var margins = getMargins(margin);\r\n            function spacing(modelToMeasure) {\r\n                var m = MakerJs.measure.modelExtents(modelToMeasure);\r\n                var xMargin = margins[0] || 0;\r\n                var yMargin = margins[1] || 0;\r\n                return { x: (m.width + xMargin) / -2, y: m.height + yMargin, xMargin: xMargin };\r\n            }\r\n            return cloneToAlternatingRows(itemToClone, xCount, yCount, spacing);\r\n        }\r\n        layout.cloneToBrick = cloneToBrick;\r\n        /**\r\n         * Layout clones in a honeycomb format. Alternating rows will have an additional item in each row.\r\n         *\r\n         * Examples:\r\n         * ```\r\n         * //Honeycomb\r\n         * var m = require('makerjs');\r\n         * var hex = new m.models.Polygon(6, 50, 30);\r\n         * var pattern = m.layout.cloneToHoneycomb(hex, 8, 9, 10);\r\n         * document.write(m.exporter.toSVG(pattern));\r\n         * ```\r\n         *\r\n         * @param itemToClone: Either a model or a path object.\r\n         * @param xCount Number of columns in the honeycomb grid.\r\n         * @param yCount Number of rows in the honeycomb grid.\r\n         * @param margin Optional distance between each clone.\r\n         * @returns A new model with clones in a honeycomb layout.\r\n         */\r\n        function cloneToHoneycomb(itemToClone, xCount, yCount, margin) {\r\n            if (margin === void 0) { margin = 0; }\r\n            function spacing(modelToMeasure) {\r\n                var hex = MakerJs.measure.boundingHexagon(modelToMeasure);\r\n                var width = 2 * MakerJs.solvers.equilateralAltitude(hex.radius);\r\n                var s = width + margin;\r\n                return { x: s / -2, y: MakerJs.solvers.equilateralAltitude(s), xMargin: margin };\r\n            }\r\n            return cloneToAlternatingRows(itemToClone, xCount, yCount, spacing);\r\n        }\r\n        layout.cloneToHoneycomb = cloneToHoneycomb;\r\n    })(layout = MakerJs.layout || (MakerJs.layout = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var models;\r\n    (function (models) {\r\n        var hasLib = false;\r\n        function ensureBezierLib() {\r\n            if (hasLib)\r\n                return;\r\n            try {\r\n                var lib = Bezier.prototype;\r\n                hasLib = true;\r\n            }\r\n            catch (e) {\r\n                throw \"Bezier library not found. If you are using Node, try running 'npm install' or if you are in the browser, download http://pomax.github.io/bezierjs/bezier.js to your website and add a script tag.\";\r\n            }\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        var scratch;\r\n        /**\r\n         * @private\r\n         */\r\n        function getScratch(seed) {\r\n            var points = [seed.origin];\r\n            points.push.apply(points, seed.controls);\r\n            points.push(seed.end);\r\n            var bezierJsPoints = points.map(function (p) {\r\n                var bp = {\r\n                    x: p[0], y: p[1]\r\n                };\r\n                return bp;\r\n            });\r\n            if (!scratch) {\r\n                ensureBezierLib();\r\n                scratch = new Bezier(bezierJsPoints);\r\n            }\r\n            else {\r\n                scratch.points = bezierJsPoints;\r\n                scratch.update();\r\n            }\r\n            return scratch;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function BezierToSeed(b, range) {\r\n            var points = b.points.map(function (p) { return [p.x, p.y]; });\r\n            var seed = new BezierSeed(points);\r\n            if (range) {\r\n                seed.parentRange = range;\r\n            }\r\n            return seed;\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function seedToBezier(seed) {\r\n            var coords = [];\r\n            coords.push.apply(coords, seed.origin);\r\n            coords.push.apply(coords, seed.controls[0]);\r\n            if (seed.controls.length > 1) {\r\n                coords.push.apply(coords, seed.controls[1]);\r\n            }\r\n            coords.push.apply(coords, seed.end);\r\n            ensureBezierLib();\r\n            return new Bezier(coords);\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function getArcs(b, accuracy) {\r\n            var arcs = b.arcs(accuracy);\r\n            return arcs.map(function (a) {\r\n                var arc = new MakerJs.paths.Arc([a.x, a.y], a.r, MakerJs.angle.toDegrees(a.s), MakerJs.angle.toDegrees(a.e));\r\n                arc.bezierData = { startT: a.interval.start, endT: a.interval.end };\r\n                return arc;\r\n            });\r\n        }\r\n        /**\r\n         * @private\r\n         * Class for bezier seed.\r\n         */\r\n        var BezierSeed = (function () {\r\n            function BezierSeed() {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                this.type = MakerJs.pathType.BezierSeed;\r\n                switch (args.length) {\r\n                    case 1:\r\n                        var points = args[0];\r\n                        this.origin = points[0];\r\n                        if (points.length === 3) {\r\n                            this.controls = [points[1]];\r\n                            this.end = points[2];\r\n                        }\r\n                        else if (points.length === 4) {\r\n                            this.controls = [points[1], points[2]];\r\n                            this.end = points[3];\r\n                        }\r\n                        else {\r\n                            this.end = points[1];\r\n                        }\r\n                        break;\r\n                    case 3:\r\n                        if (Array.isArray(args[1])) {\r\n                            this.controls = args[1];\r\n                        }\r\n                        else {\r\n                            this.controls = [args[1]];\r\n                        }\r\n                        this.end = args[2];\r\n                        break;\r\n                    case 4:\r\n                        this.controls = [args[1], args[2]];\r\n                        this.end = args[3];\r\n                        break;\r\n                }\r\n            }\r\n            return BezierSeed;\r\n        }());\r\n        var BezierCurve = (function () {\r\n            function BezierCurve() {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var _this = this;\r\n                this.type = BezierCurve.typeName;\r\n                var isLeaf = false;\r\n                var isArrayArg0 = Array.isArray(args[0]);\r\n                switch (args.length) {\r\n                    case 2:\r\n                        if (isArrayArg0) {\r\n                            this.accuracy = args[1];\r\n                        }\r\n                        else {\r\n                            //seed\r\n                            this.seed = args[0];\r\n                            if (typeof args[1] === \"boolean\") {\r\n                                isLeaf = args[1];\r\n                            }\r\n                            else {\r\n                                this.accuracy = args[1];\r\n                            }\r\n                            break;\r\n                        }\r\n                    //fall through to point array\r\n                    case 1:\r\n                        if (isArrayArg0) {\r\n                            var points = args[0];\r\n                            this.seed = new BezierSeed(points);\r\n                        }\r\n                        else {\r\n                            this.seed = args[0];\r\n                        }\r\n                        break;\r\n                    default:\r\n                        switch (args.length) {\r\n                            case 4:\r\n                                if (MakerJs.isPoint(args[3])) {\r\n                                    this.seed = new BezierSeed(args);\r\n                                    break;\r\n                                }\r\n                                else {\r\n                                    this.accuracy = args[3];\r\n                                    //fall through\r\n                                }\r\n                            case 3:\r\n                                if (isArrayArg0) {\r\n                                    this.seed = new BezierSeed(args.slice(0, 3));\r\n                                }\r\n                                else {\r\n                                    this.seed = args[0];\r\n                                    isLeaf = args[1];\r\n                                    this.accuracy = args[2];\r\n                                }\r\n                                break;\r\n                            case 5:\r\n                                this.accuracy = args[4];\r\n                                this.seed = new BezierSeed(args.slice(0, 4));\r\n                                break;\r\n                        }\r\n                        break;\r\n                }\r\n                this.paths = {};\r\n                if (MakerJs.measure.isBezierSeedLinear(this.seed)) {\r\n                    //use a line and exit\r\n                    this.paths = {\r\n                        'Line': new MakerJs.paths.Line(MakerJs.point.clone(this.seed.origin), MakerJs.point.clone(this.seed.end))\r\n                    };\r\n                    return;\r\n                }\r\n                var b = seedToBezier(this.seed);\r\n                if (!isLeaf) {\r\n                    //breaking the bezier into its extrema will make the models better correspond to rectangular measurements.\r\n                    //however, the potential drawback is that these broken curves will not get reconciled to this overall curve.\r\n                    var extrema = b.extrema().values\r\n                        .map(function (m) { return MakerJs.round(m); })\r\n                        .filter(function (value, index, self) { return self.indexOf(value) === index; })\r\n                        .sort();\r\n                    //remove leading zero\r\n                    if (extrema.length > 0 && extrema[0] === 0) {\r\n                        extrema.shift();\r\n                    }\r\n                    //remove ending 1\r\n                    if (extrema.length > 0 && extrema[extrema.length - 1] === 1) {\r\n                        extrema.pop();\r\n                    }\r\n                    if (extrema.length === 0) {\r\n                        isLeaf = true;\r\n                    }\r\n                    else {\r\n                        //need to create children\r\n                        //this will not contain paths, but will contain other curves\r\n                        this.models = {};\r\n                        var childSeeds = [];\r\n                        if (extrema.length === 1) {\r\n                            var split = b.split(extrema[0]);\r\n                            childSeeds.push(BezierToSeed(split.left, { startT: 0, endT: extrema[0] }), BezierToSeed(split.right, { startT: extrema[0], endT: 1 }));\r\n                        }\r\n                        else {\r\n                            //add 0 and 1 endings\r\n                            extrema.unshift(0);\r\n                            extrema.push(1);\r\n                            for (var i = 1; i < extrema.length; i++) {\r\n                                //get the bezier between \r\n                                childSeeds.push(BezierToSeed(b.split(extrema[i - 1], extrema[i]), { startT: extrema[i - 1], endT: extrema[i] }));\r\n                            }\r\n                        }\r\n                        childSeeds.forEach(function (seed, i) {\r\n                            _this.models['Curve_' + (1 + i)] = new BezierCurve(seed, true, _this.accuracy);\r\n                        });\r\n                    }\r\n                }\r\n                if (isLeaf) {\r\n                    this.paths = {};\r\n                    //use arcs\r\n                    if (!this.accuracy) {\r\n                        //get a default accuracy relative to the size of the bezier\r\n                        var len = b.length();\r\n                        //set the default to be a combination of fast rendering and good smoothing.\r\n                        this.accuracy = len / 1000;\r\n                    }\r\n                    var arcs = getArcs(b, this.accuracy);\r\n                    var i = 0;\r\n                    arcs.forEach(function (arc) {\r\n                        var span = MakerJs.angle.ofArcSpan(arc);\r\n                        if (span === 0 || span === 360)\r\n                            return;\r\n                        _this.paths['Arc_' + (1 + i)] = arc;\r\n                        i++;\r\n                    });\r\n                }\r\n            }\r\n            BezierCurve.getBezierSeeds = function (curve, options) {\r\n                if (options === void 0) { options = {}; }\r\n                options.shallow = true;\r\n                var b = seedToBezier(curve.seed);\r\n                var seeds = [];\r\n                MakerJs.model.findChains(curve, function (chains, loose, layer) {\r\n                    if (chains.length === 0) {\r\n                        //if this is a linear curve then look if line ends are the same as bezier ends.\r\n                        if (loose.length === 1 && loose[0].pathContext.type === MakerJs.pathType.Line) {\r\n                            var line = loose[0].pathContext;\r\n                            if (MakerJs.measure.isPointEqual(line.origin, curve.seed.origin) && MakerJs.measure.isPointEqual(line.end, curve.seed.end)) {\r\n                                seeds.push(curve.seed);\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (chains.length === 1) {\r\n                        //check if endpoints are 0 and 1\r\n                        var chain = chains[0];\r\n                        var chainEnds = [chain.links[0], chain.links[chain.links.length - 1]];\r\n                        var chainReversed = false;\r\n                        //put them in bezier t order\r\n                        if (chainEnds[0].walkedPath.pathContext.bezierData.startT > chainEnds[1].walkedPath.pathContext.bezierData.startT) {\r\n                            chainEnds.reverse();\r\n                            chainReversed = true;\r\n                        }\r\n                        var intact = true;\r\n                        for (var i = 2; i--;) {\r\n                            var chainEnd = chainEnds[i];\r\n                            var arc = chainEnd.walkedPath.pathContext;\r\n                            var reversed = (chainReversed !== chainEnd.reversed);\r\n                            var chainEndPoint = chainEnd.endPoints[reversed ? 1 - i : i];\r\n                            var trueEndpoint = b.compute(i === 0 ? arc.bezierData.startT : arc.bezierData.endT);\r\n                            if (!MakerJs.measure.isPointEqual(chainEndPoint, [trueEndpoint.x, trueEndpoint.y], .00001)) {\r\n                                intact = false;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (intact) {\r\n                            seeds.push(curve.seed);\r\n                        }\r\n                    }\r\n                    else {\r\n                        //TODO: find bezier seeds from a split chain\r\n                    }\r\n                }, options);\r\n                return seeds;\r\n            };\r\n            BezierCurve.computeLength = function (seed) {\r\n                var b = seedToBezier(seed);\r\n                return b.length();\r\n            };\r\n            BezierCurve.computePoint = function (seed, t) {\r\n                var s = getScratch(seed);\r\n                var computedPoint = s.compute(t);\r\n                return [computedPoint.x, computedPoint.y];\r\n            };\r\n            return BezierCurve;\r\n        }());\r\n        BezierCurve.typeName = 'BezierCurve';\r\n        models.BezierCurve = BezierCurve;\r\n        BezierCurve.metaParameters = [\r\n            {\r\n                title: \"points\", type: \"select\", value: [\r\n                    [[100, 0], [-80, -60], [100, 220], [100, 60]],\r\n                    [[0, 0], [100, 0], [100, 100]],\r\n                    [[0, 0], [20, 0], [80, 100], [100, 100]]\r\n                ]\r\n            }\r\n        ];\r\n    })(models = MakerJs.models || (MakerJs.models = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var models;\r\n    (function (models) {\r\n        /**\r\n         * @private\r\n         * Our maximum circular arc span for accurate representation by a cubic curve.\r\n         */\r\n        var maxBezierArcspan = 45;\r\n        /**\r\n         * @private\r\n         */\r\n        function controlYForCircularCubic(arcSpanInRadians) {\r\n            //from http://pomax.github.io/bezierinfo/#circles_cubic\r\n            return 4 * (Math.tan(arcSpanInRadians / 4) / 3);\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function controlPointsForCircularCubic(arc) {\r\n            var arcSpan = MakerJs.angle.ofArcSpan(arc);\r\n            //compute y for radius of 1\r\n            var y = controlYForCircularCubic(MakerJs.angle.toRadians(arcSpan));\r\n            //multiply by radius\r\n            var c1 = [arc.radius, arc.radius * y];\r\n            //get second control point by mirroring, then rotating\r\n            var c2 = MakerJs.point.rotate(MakerJs.point.mirror(c1, false, true), arcSpan, [0, 0]);\r\n            //rotate again to start angle, then offset by arc's origin\r\n            return [c1, c2].map(function (p) { return MakerJs.point.add(arc.origin, MakerJs.point.rotate(p, arc.startAngle, [0, 0])); });\r\n        }\r\n        /**\r\n         * @private\r\n         */\r\n        function bezierSeedFromArc(arc) {\r\n            var span = MakerJs.angle.ofArcSpan(arc);\r\n            if (span <= 90) {\r\n                var endPoints = MakerJs.point.fromPathEnds(arc);\r\n                var controls = controlPointsForCircularCubic(arc);\r\n                return {\r\n                    type: MakerJs.pathType.BezierSeed,\r\n                    origin: endPoints[0],\r\n                    controls: controls,\r\n                    end: endPoints[1]\r\n                };\r\n            }\r\n            return null;\r\n        }\r\n        var Ellipse = (function () {\r\n            function Ellipse() {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var _this = this;\r\n                this.models = {};\r\n                var n = 360 / maxBezierArcspan;\r\n                var accuracy;\r\n                var isPointArgs0 = MakerJs.isPoint(args[0]);\r\n                var realArgs = function (numArgs) {\r\n                    switch (numArgs) {\r\n                        case 2:\r\n                            if (isPointArgs0) {\r\n                                //origin, radius\r\n                                _this.origin = args[0];\r\n                            }\r\n                            break;\r\n                        case 3:\r\n                            //origin, rx, ry\r\n                            _this.origin = args[0];\r\n                            break;\r\n                        case 4:\r\n                            //cx, cy, rx, ry\r\n                            _this.origin = [args[0], args[1]];\r\n                            break;\r\n                    }\r\n                    //construct a bezier approximation for an arc with radius of 1.\r\n                    var a = 360 / n;\r\n                    var arc = new MakerJs.paths.Arc([0, 0], 1, 0, a);\r\n                    //clone and rotate to complete a circle\r\n                    for (var i = 0; i < n; i++) {\r\n                        var seed = bezierSeedFromArc(arc);\r\n                        switch (numArgs) {\r\n                            case 1:\r\n                                //radius\r\n                                seed = MakerJs.path.scale(seed, args[0]);\r\n                                break;\r\n                            case 2:\r\n                                if (isPointArgs0) {\r\n                                    //origin, radius\r\n                                    seed = MakerJs.path.scale(seed, args[1]);\r\n                                }\r\n                                else {\r\n                                    //rx, ry\r\n                                    seed = MakerJs.path.distort(seed, args[0], args[1]);\r\n                                }\r\n                                break;\r\n                            case 3:\r\n                                //origin, rx, ry\r\n                                seed = MakerJs.path.distort(seed, args[1], args[2]);\r\n                                break;\r\n                            case 4:\r\n                                //cx, cy, rx, ry\r\n                                seed = MakerJs.path.distort(seed, args[2], args[3]);\r\n                                break;\r\n                        }\r\n                        _this.models['Curve_' + (1 + i)] = new models.BezierCurve(seed, accuracy);\r\n                        arc.startAngle += a;\r\n                        arc.endAngle += a;\r\n                    }\r\n                };\r\n                switch (args.length) {\r\n                    case 2:\r\n                        realArgs(2);\r\n                        break;\r\n                    case 3:\r\n                        if (isPointArgs0) {\r\n                            realArgs(3);\r\n                        }\r\n                        else {\r\n                            accuracy = args[2];\r\n                            realArgs(2);\r\n                        }\r\n                        break;\r\n                    case 4:\r\n                        if (isPointArgs0) {\r\n                            accuracy = args[3];\r\n                            realArgs(3);\r\n                        }\r\n                        else {\r\n                            realArgs(4);\r\n                        }\r\n                        break;\r\n                    case 5:\r\n                        accuracy = args[4];\r\n                        realArgs(4);\r\n                        break;\r\n                }\r\n            }\r\n            return Ellipse;\r\n        }());\r\n        models.Ellipse = Ellipse;\r\n        Ellipse.metaParameters = [\r\n            { title: \"radiusX\", type: \"range\", min: 1, max: 50, value: 50 },\r\n            { title: \"radiusY\", type: \"range\", min: 1, max: 50, value: 25 }\r\n        ];\r\n        var EllipticArc = (function () {\r\n            function EllipticArc() {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                this.models = {};\r\n                var arc;\r\n                var accuracy;\r\n                var distortX;\r\n                var distortY;\r\n                if (MakerJs.isPathArc(args[0])) {\r\n                    arc = args[0];\r\n                    distortX = args[1];\r\n                    distortY = args[2];\r\n                    accuracy = args[3];\r\n                }\r\n                else {\r\n                    arc = new MakerJs.paths.Arc([0, 0], 1, args[0], args[1]);\r\n                    distortX = args[2];\r\n                    distortY = args[3];\r\n                    accuracy = args[4];\r\n                }\r\n                var span = MakerJs.angle.ofArcSpan(arc);\r\n                //split into equal chunks, no larger than max chunk size\r\n                var count = Math.ceil(span / maxBezierArcspan);\r\n                var subSpan = span / count;\r\n                var subArc = MakerJs.path.clone(arc);\r\n                for (var i = 0; i < count; i++) {\r\n                    subArc.startAngle = arc.startAngle + (i * subSpan);\r\n                    subArc.endAngle = subArc.startAngle + subSpan;\r\n                    var seed = bezierSeedFromArc(subArc);\r\n                    seed = MakerJs.path.distort(seed, distortX, distortY);\r\n                    this.models['Curve_' + (1 + i)] = new models.BezierCurve(seed, accuracy);\r\n                }\r\n            }\r\n            return EllipticArc;\r\n        }());\r\n        models.EllipticArc = EllipticArc;\r\n        EllipticArc.metaParameters = [\r\n            { title: \"startAngle\", type: \"range\", min: 0, max: 90, value: 0 },\r\n            { title: \"endAngle\", type: \"range\", min: 90, max: 360, value: 180 },\r\n            { title: \"radiusX\", type: \"range\", min: 1, max: 50, value: 50 },\r\n            { title: \"radiusY\", type: \"range\", min: 1, max: 50, value: 25 }\r\n        ];\r\n    })(models = MakerJs.models || (MakerJs.models = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var models;\r\n    (function (models) {\r\n        /**\r\n         * @private\r\n         */\r\n        function getPoints(arg) {\r\n            var coords;\r\n            if (Array.isArray(arg)) {\r\n                if (MakerJs.isPoint(arg[0])) {\r\n                    return arg;\r\n                }\r\n                coords = arg;\r\n            }\r\n            else {\r\n                coords = MakerJs.importer.parseNumericList(arg);\r\n            }\r\n            var points = [];\r\n            for (var i = 0; i < coords.length; i += 2) {\r\n                points.push([coords[i], coords[i + 1]]);\r\n            }\r\n            return points;\r\n        }\r\n        var ConnectTheDots = (function () {\r\n            function ConnectTheDots() {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var _this = this;\r\n                this.paths = {};\r\n                var isClosed;\r\n                var points;\r\n                switch (args.length) {\r\n                    case 1:\r\n                        isClosed = true;\r\n                        points = getPoints(args[0]);\r\n                        break;\r\n                    case 2:\r\n                        isClosed = args[0];\r\n                        points = getPoints(args[1]);\r\n                        break;\r\n                }\r\n                var connect = function (a, b, skipZeroDistance) {\r\n                    if (skipZeroDistance === void 0) { skipZeroDistance = false; }\r\n                    if (skipZeroDistance && MakerJs.measure.pointDistance(points[a], points[b]) == 0)\r\n                        return;\r\n                    _this.paths[\"ShapeLine\" + i] = new MakerJs.paths.Line(points[a], points[b]);\r\n                };\r\n                for (var i = 1; i < points.length; i++) {\r\n                    connect(i - 1, i);\r\n                }\r\n                if (isClosed && points.length > 2) {\r\n                    connect(points.length - 1, 0, true);\r\n                }\r\n            }\r\n            return ConnectTheDots;\r\n        }());\r\n        models.ConnectTheDots = ConnectTheDots;\r\n        ConnectTheDots.metaParameters = [\r\n            { title: \"closed\", type: \"bool\", value: true },\r\n            {\r\n                title: \"points\", type: \"select\", value: [\r\n                    [[0, 0], [40, 40], [60, 20], [100, 100], [60, 60], [40, 80]],\r\n                    [[0, 0], [100, 0], [50, 87]],\r\n                    [-10, 0, 10, 0, 0, 20],\r\n                    '-10 0 10 0 0 20',\r\n                ]\r\n            }\r\n        ];\r\n    })(models = MakerJs.models || (MakerJs.models = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var models;\r\n    (function (models) {\r\n        var Polygon = (function () {\r\n            function Polygon(numberOfSides, radius, firstCornerAngleInDegrees, circumscribed) {\r\n                this.paths = {};\r\n                this.paths = new models.ConnectTheDots(true, Polygon.getPoints(numberOfSides, radius, firstCornerAngleInDegrees, circumscribed)).paths;\r\n            }\r\n            Polygon.circumscribedRadius = function (radius, angleInRadians) {\r\n                return radius / Math.cos(angleInRadians / 2);\r\n            };\r\n            Polygon.getPoints = function (numberOfSides, radius, firstCornerAngleInDegrees, circumscribed) {\r\n                if (firstCornerAngleInDegrees === void 0) { firstCornerAngleInDegrees = 0; }\r\n                if (circumscribed === void 0) { circumscribed = false; }\r\n                var points = [];\r\n                var a1 = MakerJs.angle.toRadians(firstCornerAngleInDegrees);\r\n                var a = 2 * Math.PI / numberOfSides;\r\n                if (circumscribed) {\r\n                    radius = Polygon.circumscribedRadius(radius, a);\r\n                }\r\n                for (var i = 0; i < numberOfSides; i++) {\r\n                    points.push(MakerJs.point.fromPolar(a * i + a1, radius));\r\n                }\r\n                return points;\r\n            };\r\n            return Polygon;\r\n        }());\r\n        models.Polygon = Polygon;\r\n        Polygon.metaParameters = [\r\n            { title: \"number of sides\", type: \"range\", min: 3, max: 24, value: 6 },\r\n            { title: \"radius\", type: \"range\", min: 1, max: 100, value: 50 },\r\n            { title: \"offset angle\", type: \"range\", min: 0, max: 180, value: 0 },\r\n            { title: \"radius on flats (vs radius on vertexes)\", type: \"bool\", value: false }\r\n        ];\r\n    })(models = MakerJs.models || (MakerJs.models = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var models;\r\n    (function (models) {\r\n        var Holes = (function () {\r\n            /**\r\n             * Create an array of circles of the same radius from an array of center points.\r\n             *\r\n             * Example:\r\n             * ```\r\n             * //Create some holes from an array of points\r\n             * var makerjs = require('makerjs');\r\n             * var model = new makerjs.models.Holes(10, [[0, 0],[50, 0],[25, 40]]);\r\n             * var svg = makerjs.exporter.toSVG(model);\r\n             * document.write(svg);\r\n             * ```\r\n             *\r\n             * @param holeRadius Hole radius.\r\n             * @param points Array of points for origin of each hole.\r\n             * @param ids Optional array of corresponding path ids for the holes.\r\n             */\r\n            function Holes(holeRadius, points, ids) {\r\n                this.paths = {};\r\n                for (var i = 0; i < points.length; i++) {\r\n                    var id = ids ? ids[i] : i.toString();\r\n                    this.paths[id] = new MakerJs.paths.Circle(points[i], holeRadius);\r\n                }\r\n            }\r\n            return Holes;\r\n        }());\r\n        models.Holes = Holes;\r\n        Holes.metaParameters = [\r\n            { title: \"holeRadius\", type: \"range\", min: .1, max: 10, step: .1, value: 1 },\r\n            {\r\n                title: \"points\", type: \"select\", value: [\r\n                    [[0, 0], [10, 10], [20, 20], [30, 30], [40, 40], [50, 50], [60, 60], [70, 70], [80, 80]],\r\n                    [[0, 0], [0, 25], [0, 50], [0, 75], [0, 100], [25, 50], [50, 50], [75, 50], [100, 100], [100, 75], [100, 50], [100, 25], [100, 0]]\r\n                ]\r\n            }\r\n        ];\r\n    })(models = MakerJs.models || (MakerJs.models = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var models;\r\n    (function (models) {\r\n        var BoltCircle = (function () {\r\n            function BoltCircle(boltRadius, holeRadius, boltCount, firstBoltAngleInDegrees) {\r\n                if (firstBoltAngleInDegrees === void 0) { firstBoltAngleInDegrees = 0; }\r\n                this.paths = {};\r\n                var points = models.Polygon.getPoints(boltCount, boltRadius, firstBoltAngleInDegrees);\r\n                var ids = points.map(function (p, i) { return \"bolt \" + i; });\r\n                this.paths = new models.Holes(holeRadius, points, ids).paths;\r\n            }\r\n            return BoltCircle;\r\n        }());\r\n        models.BoltCircle = BoltCircle;\r\n        BoltCircle.metaParameters = [\r\n            { title: \"bolt circle radius\", type: \"range\", min: 1, max: 100, value: 50 },\r\n            { title: \"hole radius\", type: \"range\", min: 1, max: 50, value: 5 },\r\n            { title: \"bolt count\", type: \"range\", min: 3, max: 24, value: 12 },\r\n            { title: \"offset angle\", type: \"range\", min: 0, max: 180, value: 0 }\r\n        ];\r\n    })(models = MakerJs.models || (MakerJs.models = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var models;\r\n    (function (models) {\r\n        var BoltRectangle = (function () {\r\n            function BoltRectangle(width, height, holeRadius) {\r\n                this.paths = {};\r\n                var points = [[0, 0], [width, 0], [width, height], [0, height]];\r\n                var ids = [\"BottomLeft_bolt\", \"BottomRight_bolt\", \"TopRight_bolt\", \"TopLeft_bolt\"];\r\n                this.paths = new models.Holes(holeRadius, points, ids).paths;\r\n            }\r\n            return BoltRectangle;\r\n        }());\r\n        models.BoltRectangle = BoltRectangle;\r\n        BoltRectangle.metaParameters = [\r\n            { title: \"width\", type: \"range\", min: 1, max: 100, value: 100 },\r\n            { title: \"height\", type: \"range\", min: 1, max: 100, value: 50 },\r\n            { title: \"hole radius\", type: \"range\", min: 1, max: 50, value: 5 }\r\n        ];\r\n    })(models = MakerJs.models || (MakerJs.models = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var models;\r\n    (function (models) {\r\n        var Dogbone = (function () {\r\n            /**\r\n             * Create a dogbone from width, height, corner radius, style, and bottomless flag.\r\n             *\r\n             * Example:\r\n             * ```\r\n             * var d = new makerjs.models.Dogbone(50, 100, 5);\r\n             * ```\r\n             *\r\n             * @param width Width of the rectangle.\r\n             * @param height Height of the rectangle.\r\n             * @param radius Corner radius.\r\n             * @param style Optional corner style: 0 (default) for dogbone, 1 for vertical, -1 for horizontal.\r\n             * @param bottomless Optional flag to omit the bottom line and bottom corners (default false).\r\n             */\r\n            function Dogbone(width, height, radius, style, bottomless) {\r\n                if (style === void 0) { style = 0; }\r\n                if (bottomless === void 0) { bottomless = false; }\r\n                this.paths = {};\r\n                var maxSide = Math.min(height, width) / 2;\r\n                var maxRadius;\r\n                switch (style) {\r\n                    case -1: //horizontal\r\n                    case 1:\r\n                        maxRadius = maxSide / 2;\r\n                        break;\r\n                    case 0: //equal\r\n                    default:\r\n                        maxRadius = maxSide * Math.SQRT2 / 2;\r\n                        break;\r\n                }\r\n                radius = Math.min(radius, maxRadius);\r\n                var ax;\r\n                var ay;\r\n                var lx;\r\n                var ly;\r\n                var apexes;\r\n                switch (style) {\r\n                    case -1:\r\n                        ax = 0;\r\n                        ay = radius;\r\n                        lx = 0;\r\n                        ly = radius * 2;\r\n                        apexes = [180, 0, 0, 180];\r\n                        break;\r\n                    case 1:\r\n                        ax = radius;\r\n                        ay = 0;\r\n                        lx = radius * 2;\r\n                        ly = 0;\r\n                        apexes = [270, 270, 90, 90];\r\n                        break;\r\n                    case 0:\r\n                    default:\r\n                        ax = ay = radius / Math.SQRT2;\r\n                        lx = ly = ax * 2;\r\n                        apexes = [225, 315, 45, 135];\r\n                        break;\r\n                }\r\n                if (bottomless) {\r\n                    this.paths['Left'] = new MakerJs.paths.Line([0, 0], [0, height - ly]);\r\n                    this.paths['Right'] = new MakerJs.paths.Line([width, 0], [width, height - ly]);\r\n                }\r\n                else {\r\n                    this.paths['Left'] = new MakerJs.paths.Line([0, ly], [0, height - ly]);\r\n                    this.paths['Right'] = new MakerJs.paths.Line([width, ly], [width, height - ly]);\r\n                    this.paths['Bottom'] = new MakerJs.paths.Line([lx, 0], [width - lx, 0]);\r\n                    this.paths[\"BottomLeft\"] = new MakerJs.paths.Arc([ax, ay], radius, apexes[0] - 90, apexes[0] + 90);\r\n                    this.paths[\"BottomRight\"] = new MakerJs.paths.Arc([width - ax, ay], radius, apexes[1] - 90, apexes[1] + 90);\r\n                }\r\n                this.paths[\"TopRight\"] = new MakerJs.paths.Arc([width - ax, height - ay], radius, apexes[2] - 90, apexes[2] + 90);\r\n                this.paths[\"TopLeft\"] = new MakerJs.paths.Arc([ax, height - ay], radius, apexes[3] - 90, apexes[3] + 90);\r\n                this.paths['Top'] = new MakerJs.paths.Line([lx, height], [width - lx, height]);\r\n            }\r\n            return Dogbone;\r\n        }());\r\n        models.Dogbone = Dogbone;\r\n        Dogbone.metaParameters = [\r\n            { title: \"width\", type: \"range\", min: 1, max: 100, value: 50 },\r\n            { title: \"height\", type: \"range\", min: 1, max: 100, value: 100 },\r\n            { title: \"radius\", type: \"range\", min: 0, max: 50, value: 5 },\r\n            { title: \"style\", type: \"select\", value: [0, 1, -1] },\r\n            { title: \"bottomless\", type: \"bool\", value: false }\r\n        ];\r\n    })(models = MakerJs.models || (MakerJs.models = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var models;\r\n    (function (models) {\r\n        var Dome = (function () {\r\n            function Dome(width, height, radius, bottomless) {\r\n                this.paths = {};\r\n                var w2 = width / 2;\r\n                if (radius < 0)\r\n                    radius = 0;\r\n                if (radius === void 0)\r\n                    radius = w2;\r\n                radius = Math.min(radius, w2);\r\n                radius = Math.min(radius, height);\r\n                var wt = Math.max(w2 - radius, 0);\r\n                var hr = Math.max(height - radius, 0);\r\n                if (!bottomless) {\r\n                    this.paths[\"Bottom\"] = new MakerJs.paths.Line([-w2, 0], [w2, 0]);\r\n                }\r\n                if (hr) {\r\n                    this.paths[\"Left\"] = new MakerJs.paths.Line([-w2, 0], [-w2, hr]);\r\n                    this.paths[\"Right\"] = new MakerJs.paths.Line([w2, 0], [w2, hr]);\r\n                }\r\n                if (radius > 0) {\r\n                    this.paths[\"TopLeft\"] = new MakerJs.paths.Arc([-wt, hr], radius, 90, 180);\r\n                    this.paths[\"TopRight\"] = new MakerJs.paths.Arc([wt, hr], radius, 0, 90);\r\n                }\r\n                if (wt) {\r\n                    this.paths[\"Top\"] = new MakerJs.paths.Line([-wt, height], [wt, height]);\r\n                }\r\n            }\r\n            return Dome;\r\n        }());\r\n        models.Dome = Dome;\r\n        Dome.metaParameters = [\r\n            { title: \"width\", type: \"range\", min: 1, max: 100, value: 50 },\r\n            { title: \"height\", type: \"range\", min: 1, max: 100, value: 100 },\r\n            { title: \"radius\", type: \"range\", min: 0, max: 50, value: 25 },\r\n            { title: \"bottomless\", type: \"bool\", value: false }\r\n        ];\r\n    })(models = MakerJs.models || (MakerJs.models = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var models;\r\n    (function (models) {\r\n        var RoundRectangle = (function () {\r\n            function RoundRectangle() {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                this.paths = {};\r\n                var width;\r\n                var height;\r\n                var radius = 0;\r\n                switch (args.length) {\r\n                    case 3:\r\n                        width = args[0];\r\n                        height = args[1];\r\n                        radius = args[2];\r\n                        break;\r\n                    case 2:\r\n                        radius = args[1];\r\n                    //fall through to 1\r\n                    case 1:\r\n                        var m = MakerJs.measure.modelExtents(args[0]);\r\n                        this.origin = MakerJs.point.subtract(m.low, [radius, radius]);\r\n                        width = m.high[0] - m.low[0] + 2 * radius;\r\n                        height = m.high[1] - m.low[1] + 2 * radius;\r\n                        break;\r\n                }\r\n                var maxRadius = Math.min(height, width) / 2;\r\n                radius = Math.min(radius, maxRadius);\r\n                var wr = width - radius;\r\n                var hr = height - radius;\r\n                if (radius > 0) {\r\n                    this.paths[\"BottomLeft\"] = new MakerJs.paths.Arc([radius, radius], radius, 180, 270);\r\n                    this.paths[\"BottomRight\"] = new MakerJs.paths.Arc([wr, radius], radius, 270, 0);\r\n                    this.paths[\"TopRight\"] = new MakerJs.paths.Arc([wr, hr], radius, 0, 90);\r\n                    this.paths[\"TopLeft\"] = new MakerJs.paths.Arc([radius, hr], radius, 90, 180);\r\n                }\r\n                if (wr - radius > 0) {\r\n                    this.paths[\"Bottom\"] = new MakerJs.paths.Line([radius, 0], [wr, 0]);\r\n                    this.paths[\"Top\"] = new MakerJs.paths.Line([wr, height], [radius, height]);\r\n                }\r\n                if (hr - radius > 0) {\r\n                    this.paths[\"Right\"] = new MakerJs.paths.Line([width, radius], [width, hr]);\r\n                    this.paths[\"Left\"] = new MakerJs.paths.Line([0, hr], [0, radius]);\r\n                }\r\n            }\r\n            return RoundRectangle;\r\n        }());\r\n        models.RoundRectangle = RoundRectangle;\r\n        RoundRectangle.metaParameters = [\r\n            { title: \"width\", type: \"range\", min: 1, max: 100, value: 50 },\r\n            { title: \"height\", type: \"range\", min: 1, max: 100, value: 100 },\r\n            { title: \"radius\", type: \"range\", min: 0, max: 50, value: 11 }\r\n        ];\r\n    })(models = MakerJs.models || (MakerJs.models = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var models;\r\n    (function (models) {\r\n        var Oval = (function () {\r\n            function Oval(width, height) {\r\n                this.paths = {};\r\n                this.paths = new models.RoundRectangle(width, height, Math.min(height / 2, width / 2)).paths;\r\n            }\r\n            return Oval;\r\n        }());\r\n        models.Oval = Oval;\r\n        Oval.metaParameters = [\r\n            { title: \"width\", type: \"range\", min: 1, max: 100, value: 50 },\r\n            { title: \"height\", type: \"range\", min: 1, max: 100, value: 100 }\r\n        ];\r\n    })(models = MakerJs.models || (MakerJs.models = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var models;\r\n    (function (models) {\r\n        var OvalArc = (function () {\r\n            function OvalArc(startAngle, endAngle, sweepRadius, slotRadius, selfIntersect, isolateCaps) {\r\n                if (selfIntersect === void 0) { selfIntersect = false; }\r\n                if (isolateCaps === void 0) { isolateCaps = false; }\r\n                var _this = this;\r\n                this.paths = {};\r\n                var capRoot;\r\n                if (isolateCaps) {\r\n                    capRoot = { models: {} };\r\n                    this.models = { 'Caps': capRoot };\r\n                }\r\n                if (slotRadius <= 0 || sweepRadius <= 0)\r\n                    return;\r\n                startAngle = MakerJs.angle.noRevolutions(startAngle);\r\n                endAngle = MakerJs.angle.noRevolutions(endAngle);\r\n                if (MakerJs.round(startAngle - endAngle) == 0)\r\n                    return;\r\n                if (endAngle < startAngle)\r\n                    endAngle += 360;\r\n                var addCap = function (id, tiltAngle, offsetStartAngle, offsetEndAngle) {\r\n                    var capModel;\r\n                    if (isolateCaps) {\r\n                        capModel = { paths: {} };\r\n                        capRoot.models[id] = capModel;\r\n                    }\r\n                    else {\r\n                        capModel = _this;\r\n                    }\r\n                    return capModel.paths[id] = new MakerJs.paths.Arc(MakerJs.point.fromPolar(MakerJs.angle.toRadians(tiltAngle), sweepRadius), slotRadius, tiltAngle + offsetStartAngle, tiltAngle + offsetEndAngle);\r\n                };\r\n                var addSweep = function (id, offsetRadius) {\r\n                    return _this.paths[id] = new MakerJs.paths.Arc([0, 0], sweepRadius + offsetRadius, startAngle, endAngle);\r\n                };\r\n                addSweep(\"Outer\", slotRadius);\r\n                var hasInner = (sweepRadius - slotRadius) > 0;\r\n                if (hasInner) {\r\n                    addSweep(\"Inner\", -slotRadius);\r\n                }\r\n                var caps = [];\r\n                caps.push(addCap(\"StartCap\", startAngle, 180, 0));\r\n                caps.push(addCap(\"EndCap\", endAngle, 0, 180));\r\n                //the distance between the cap origins\r\n                var d = MakerJs.measure.pointDistance(caps[0].origin, caps[1].origin);\r\n                if ((d / 2) < slotRadius) {\r\n                    //the caps intersect\r\n                    var int = MakerJs.path.intersection(caps[0], caps[1]);\r\n                    if (int) {\r\n                        if (!hasInner || !selfIntersect) {\r\n                            caps[0].startAngle = int.path1Angles[0];\r\n                            caps[1].endAngle = int.path2Angles[0];\r\n                        }\r\n                        if (!selfIntersect && hasInner && int.intersectionPoints.length == 2) {\r\n                            addCap(\"StartCap2\", startAngle, 180, 0).endAngle = int.path1Angles[1];\r\n                            addCap(\"EndCap2\", endAngle, 0, 180).startAngle = int.path2Angles[1] + 360;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return OvalArc;\r\n        }());\r\n        models.OvalArc = OvalArc;\r\n        OvalArc.metaParameters = [\r\n            { title: \"start angle\", type: \"range\", min: -360, max: 360, step: 1, value: 180 },\r\n            { title: \"end angle\", type: \"range\", min: -360, max: 360, step: 1, value: 0 },\r\n            { title: \"sweep\", type: \"range\", min: 0, max: 100, step: 1, value: 50 },\r\n            { title: \"radius\", type: \"range\", min: 0, max: 100, step: 1, value: 15 },\r\n            { title: \"self intersect\", type: \"bool\", value: false }\r\n        ];\r\n    })(models = MakerJs.models || (MakerJs.models = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var models;\r\n    (function (models) {\r\n        var Rectangle = (function () {\r\n            function Rectangle() {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                this.paths = {};\r\n                var width;\r\n                var height;\r\n                if (args.length === 2 && !MakerJs.isObject(args[0])) {\r\n                    width = args[0];\r\n                    height = args[1];\r\n                }\r\n                else {\r\n                    var margin = 0;\r\n                    var m;\r\n                    if (MakerJs.isModel(args[0])) {\r\n                        m = MakerJs.measure.modelExtents(args[0]);\r\n                        if (args.length === 2) {\r\n                            margin = args[1];\r\n                        }\r\n                    }\r\n                    else {\r\n                        //use measurement\r\n                        m = args[0];\r\n                    }\r\n                    this.origin = MakerJs.point.subtract(m.low, [margin, margin]);\r\n                    width = m.high[0] - m.low[0] + 2 * margin;\r\n                    height = m.high[1] - m.low[1] + 2 * margin;\r\n                }\r\n                this.paths = new models.ConnectTheDots(true, [[0, 0], [width, 0], [width, height], [0, height]]).paths;\r\n            }\r\n            return Rectangle;\r\n        }());\r\n        models.Rectangle = Rectangle;\r\n        Rectangle.metaParameters = [\r\n            { title: \"width\", type: \"range\", min: 1, max: 100, value: 50 },\r\n            { title: \"height\", type: \"range\", min: 1, max: 100, value: 100 }\r\n        ];\r\n    })(models = MakerJs.models || (MakerJs.models = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var models;\r\n    (function (models) {\r\n        var Ring = (function () {\r\n            function Ring(outerRadius, innerRadius) {\r\n                this.paths = {};\r\n                var radii = {\r\n                    \"Ring_outer\": outerRadius,\r\n                    \"Ring_inner\": innerRadius\r\n                };\r\n                for (var id in radii) {\r\n                    this.paths[id] = new MakerJs.paths.Circle(MakerJs.point.zero(), radii[id]);\r\n                }\r\n            }\r\n            return Ring;\r\n        }());\r\n        models.Ring = Ring;\r\n        Ring.metaParameters = [\r\n            { title: \"outer radius\", type: \"range\", min: 0, max: 100, step: 1, value: 50 },\r\n            { title: \"inner radius\", type: \"range\", min: 0, max: 100, step: 1, value: 20 }\r\n        ];\r\n    })(models = MakerJs.models || (MakerJs.models = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var models;\r\n    (function (models) {\r\n        var Belt = (function () {\r\n            function Belt(leftRadius, distance, rightRadius) {\r\n                this.paths = {};\r\n                var left = new MakerJs.paths.Arc([0, 0], leftRadius, 0, 360);\r\n                var right = new MakerJs.paths.Arc([distance, 0], rightRadius, 0, 360);\r\n                var angles = MakerJs.solvers.circleTangentAngles(left, right);\r\n                if (!angles) {\r\n                    this.paths[\"Belt\"] = new MakerJs.paths.Circle(Math.max(leftRadius, rightRadius));\r\n                }\r\n                else {\r\n                    angles = angles.sort(function (a, b) { return a - b; });\r\n                    left.startAngle = angles[0];\r\n                    left.endAngle = angles[1];\r\n                    right.startAngle = angles[1];\r\n                    right.endAngle = angles[0];\r\n                    this.paths[\"Left\"] = left;\r\n                    this.paths[\"Right\"] = right;\r\n                    this.paths[\"Top\"] = new MakerJs.paths.Line(MakerJs.point.fromAngleOnCircle(angles[0], left), MakerJs.point.fromAngleOnCircle(angles[0], right));\r\n                    this.paths[\"Bottom\"] = new MakerJs.paths.Line(MakerJs.point.fromAngleOnCircle(angles[1], left), MakerJs.point.fromAngleOnCircle(angles[1], right));\r\n                }\r\n            }\r\n            return Belt;\r\n        }());\r\n        models.Belt = Belt;\r\n        Belt.metaParameters = [\r\n            { title: \"left radius\", type: \"range\", min: 0, max: 100, value: 30 },\r\n            { title: \"distance between centers\", type: \"range\", min: 0, max: 100, value: 50 },\r\n            { title: \"right radius\", type: \"range\", min: 0, max: 100, value: 15 }\r\n        ];\r\n    })(models = MakerJs.models || (MakerJs.models = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var models;\r\n    (function (models) {\r\n        var SCurve = (function () {\r\n            function SCurve(width, height) {\r\n                this.paths = {};\r\n                function findRadius(x, y) {\r\n                    return x + (y * y - x * x) / (2 * x);\r\n                }\r\n                var h2 = height / 2;\r\n                var w2 = width / 2;\r\n                var radius;\r\n                var startAngle;\r\n                var endAngle;\r\n                var arcOrigin;\r\n                if (width > height) {\r\n                    radius = findRadius(h2, w2);\r\n                    startAngle = 270;\r\n                    endAngle = 360 - MakerJs.angle.toDegrees(Math.acos(w2 / radius));\r\n                    arcOrigin = [0, radius];\r\n                }\r\n                else {\r\n                    radius = findRadius(w2, h2);\r\n                    startAngle = 180 - MakerJs.angle.toDegrees(Math.asin(h2 / radius));\r\n                    endAngle = 180;\r\n                    arcOrigin = [radius, 0];\r\n                }\r\n                var curve = new MakerJs.paths.Arc(arcOrigin, radius, startAngle, endAngle);\r\n                this.paths['curve_start'] = curve;\r\n                this.paths['curve_end'] = MakerJs.path.moveRelative(MakerJs.path.mirror(curve, true, true), [width, height]);\r\n            }\r\n            return SCurve;\r\n        }());\r\n        models.SCurve = SCurve;\r\n        SCurve.metaParameters = [\r\n            { title: \"width\", type: \"range\", min: 1, max: 100, value: 50 },\r\n            { title: \"height\", type: \"range\", min: 1, max: 100, value: 100 }\r\n        ];\r\n    })(models = MakerJs.models || (MakerJs.models = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var models;\r\n    (function (models) {\r\n        var Slot = (function () {\r\n            function Slot(origin, endPoint, radius, isolateCaps) {\r\n                if (isolateCaps === void 0) { isolateCaps = false; }\r\n                var _this = this;\r\n                this.paths = {};\r\n                var capRoot;\r\n                if (isolateCaps) {\r\n                    capRoot = { models: {} };\r\n                    this.models = { 'Caps': capRoot };\r\n                }\r\n                var addCap = function (id, capPath) {\r\n                    var capModel;\r\n                    if (isolateCaps) {\r\n                        capModel = { paths: {} };\r\n                        capRoot.models[id] = capModel;\r\n                    }\r\n                    else {\r\n                        capModel = _this;\r\n                    }\r\n                    capModel.paths[id] = capPath;\r\n                };\r\n                var a = MakerJs.angle.ofPointInDegrees(origin, endPoint);\r\n                var len = MakerJs.measure.pointDistance(origin, endPoint);\r\n                this.paths['Top'] = new MakerJs.paths.Line([0, radius], [len, radius]);\r\n                this.paths['Bottom'] = new MakerJs.paths.Line([0, -radius], [len, -radius]);\r\n                addCap('StartCap', new MakerJs.paths.Arc([0, 0], radius, 90, 270));\r\n                addCap('EndCap', new MakerJs.paths.Arc([len, 0], radius, 270, 90));\r\n                MakerJs.model.rotate(this, a, [0, 0]);\r\n                this.origin = origin;\r\n            }\r\n            return Slot;\r\n        }());\r\n        models.Slot = Slot;\r\n        Slot.metaParameters = [\r\n            {\r\n                title: \"origin\", type: \"select\", value: [\r\n                    [0, 0],\r\n                    [10, 0],\r\n                    [10, 10]\r\n                ]\r\n            },\r\n            {\r\n                title: \"end\", type: \"select\", value: [\r\n                    [80, 0],\r\n                    [0, 30],\r\n                    [10, 30]\r\n                ]\r\n            },\r\n            { title: \"radius\", type: \"range\", min: 1, max: 50, value: 10 }\r\n        ];\r\n    })(models = MakerJs.models || (MakerJs.models = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var models;\r\n    (function (models) {\r\n        var Square = (function () {\r\n            function Square(side) {\r\n                this.paths = {};\r\n                this.paths = new models.Rectangle(side, side).paths;\r\n            }\r\n            return Square;\r\n        }());\r\n        models.Square = Square;\r\n        Square.metaParameters = [\r\n            { title: \"side\", type: \"range\", min: 1, max: 100, value: 100 }\r\n        ];\r\n    })(models = MakerJs.models || (MakerJs.models = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var models;\r\n    (function (models) {\r\n        var Star = (function () {\r\n            function Star(numberOfPoints, outerRadius, innerRadius, skipPoints) {\r\n                if (skipPoints === void 0) { skipPoints = 2; }\r\n                this.paths = {};\r\n                if (!innerRadius) {\r\n                    innerRadius = outerRadius * Star.InnerRadiusRatio(numberOfPoints, skipPoints);\r\n                }\r\n                var outerPoints = models.Polygon.getPoints(numberOfPoints, outerRadius);\r\n                var innerPoints = models.Polygon.getPoints(numberOfPoints, innerRadius, 180 / numberOfPoints);\r\n                var allPoints = [];\r\n                for (var i = 0; i < numberOfPoints; i++) {\r\n                    allPoints.push(outerPoints[i]);\r\n                    allPoints.push(innerPoints[i]);\r\n                }\r\n                var model = new models.ConnectTheDots(true, allPoints);\r\n                this.paths = model.paths;\r\n                delete model.paths;\r\n            }\r\n            Star.InnerRadiusRatio = function (numberOfPoints, skipPoints) {\r\n                //formula from http://www.jdawiseman.com/papers/easymath/surds_star_inner_radius.html\r\n                //Cos(Pi()*m/n) / Cos(Pi()*(m-1)/n)\r\n                if (numberOfPoints > 0 && skipPoints > 1 && skipPoints < numberOfPoints / 2) {\r\n                    return Math.cos(Math.PI * skipPoints / numberOfPoints) / Math.cos(Math.PI * (skipPoints - 1) / numberOfPoints);\r\n                }\r\n                return 0;\r\n            };\r\n            return Star;\r\n        }());\r\n        models.Star = Star;\r\n        Star.metaParameters = [\r\n            { title: \"number of sides\", type: \"range\", min: 3, max: 24, value: 8 },\r\n            { title: \"outer radius\", type: \"range\", min: 1, max: 100, value: 50 },\r\n            { title: \"inner radius\", type: \"range\", min: 0, max: 100, value: 15 },\r\n            { title: \"skip points (when inner radius is zero)\", type: \"range\", min: 0, max: 12, value: 2 }\r\n        ];\r\n    })(models = MakerJs.models || (MakerJs.models = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nvar MakerJs;\r\n(function (MakerJs) {\r\n    var models;\r\n    (function (models) {\r\n        var Text = (function () {\r\n            function Text(font, text, fontSize, combine, centerCharacterOrigin, bezierAccuracy, opentypeOptions) {\r\n                if (combine === void 0) { combine = false; }\r\n                if (centerCharacterOrigin === void 0) { centerCharacterOrigin = false; }\r\n                var _this = this;\r\n                this.models = {};\r\n                var charIndex = 0;\r\n                var prevDeleted;\r\n                var prevChar;\r\n                var cb = function (glyph, x, y, _fontSize, options) {\r\n                    var charModel = {};\r\n                    var firstPoint;\r\n                    var currPoint;\r\n                    var pathCount = 0;\r\n                    function addPath(p) {\r\n                        if (!charModel.paths) {\r\n                            charModel.paths = {};\r\n                        }\r\n                        charModel.paths['p_' + ++pathCount] = p;\r\n                    }\r\n                    function addModel(m) {\r\n                        if (!charModel.models) {\r\n                            charModel.models = {};\r\n                        }\r\n                        charModel.models['p_' + ++pathCount] = m;\r\n                    }\r\n                    var p = glyph.getPath(0, 0, _fontSize);\r\n                    p.commands.map(function (command, i) {\r\n                        var points = [[command.x, command.y], [command.x1, command.y1], [command.x2, command.y2]].map(function (p) {\r\n                            if (p[0] !== void 0) {\r\n                                return MakerJs.point.mirror(p, false, true);\r\n                            }\r\n                        });\r\n                        switch (command.type) {\r\n                            case 'M':\r\n                                firstPoint = points[0];\r\n                                break;\r\n                            case 'Z':\r\n                                points[0] = firstPoint;\r\n                            //fall through to line\r\n                            case 'L':\r\n                                if (!MakerJs.measure.isPointEqual(currPoint, points[0])) {\r\n                                    addPath(new MakerJs.paths.Line(currPoint, points[0]));\r\n                                }\r\n                                break;\r\n                            case 'C':\r\n                                addModel(new models.BezierCurve(currPoint, points[1], points[2], points[0], bezierAccuracy));\r\n                                break;\r\n                            case 'Q':\r\n                                addModel(new models.BezierCurve(currPoint, points[1], points[0], bezierAccuracy));\r\n                                break;\r\n                        }\r\n                        currPoint = points[0];\r\n                    });\r\n                    charModel.origin = [x, 0];\r\n                    if (centerCharacterOrigin && (charModel.paths || charModel.models)) {\r\n                        var m = MakerJs.measure.modelExtents(charModel);\r\n                        if (m) {\r\n                            var w = m.high[0] - m.low[0];\r\n                            MakerJs.model.originate(charModel, [m.low[0] + w / 2, 0]);\r\n                        }\r\n                    }\r\n                    if (combine && charIndex > 0) {\r\n                        var combineOptions = {};\r\n                        var prev;\r\n                        if (prevDeleted) {\r\n                            //form a temporary complete geometry of the previous character using the previously deleted segments\r\n                            prev = {\r\n                                models: {\r\n                                    deleted: prevDeleted,\r\n                                    char: prevChar\r\n                                }\r\n                            };\r\n                        }\r\n                        else {\r\n                            prev = prevChar;\r\n                        }\r\n                        MakerJs.model.combine(prev, charModel, false, true, false, true, combineOptions);\r\n                        //save the deleted segments from this character for the next iteration\r\n                        prevDeleted = combineOptions.out_deleted[1];\r\n                    }\r\n                    _this.models[charIndex] = charModel;\r\n                    charIndex++;\r\n                    prevChar = charModel;\r\n                };\r\n                font.forEachGlyph(text, 0, 0, fontSize, opentypeOptions, cb);\r\n            }\r\n            return Text;\r\n        }());\r\n        models.Text = Text;\r\n        Text.metaParameters = [\r\n            { title: \"font\", type: \"font\", value: '*' },\r\n            { title: \"text\", type: \"text\", value: 'Hello' },\r\n            { title: \"font size\", type: \"range\", min: 10, max: 200, value: 72 },\r\n            { title: \"combine\", type: \"bool\", value: false },\r\n            { title: \"center character origin\", type: \"bool\", value: false }\r\n        ];\r\n    })(models = MakerJs.models || (MakerJs.models = {}));\r\n})(MakerJs || (MakerJs = {}));\r\nMakerJs.version = \"0.9.49\";\r\n﻿var Bezier = require('bezier-js');\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/makerjs/index.js\n// module id = 109\n// module chunks = 0","var clone = (function() {\n'use strict';\n\n/**\n * Clones (copies) an Object using deep copying.\n *\n * This function supports circular references by default, but if you are certain\n * there are no circular references in your object, you can save some CPU time\n * by calling clone(obj, false).\n *\n * Caution: if `circular` is false and `parent` contains circular references,\n * your program may enter an infinite loop and crash.\n *\n * @param `parent` - the object to be cloned\n * @param `circular` - set to true if the object to be cloned may contain\n *    circular references. (optional - true by default)\n * @param `depth` - set to a number if the object is only to be cloned to\n *    a particular depth. (optional - defaults to Infinity)\n * @param `prototype` - sets the prototype to be used when cloning an object.\n *    (optional - defaults to parent prototype).\n*/\nfunction clone(parent, circular, depth, prototype) {\n  var filter;\n  if (typeof circular === 'object') {\n    depth = circular.depth;\n    prototype = circular.prototype;\n    filter = circular.filter;\n    circular = circular.circular\n  }\n  // maintain two arrays for circular references, where corresponding parents\n  // and children have the same index\n  var allParents = [];\n  var allChildren = [];\n\n  var useBuffer = typeof Buffer != 'undefined';\n\n  if (typeof circular == 'undefined')\n    circular = true;\n\n  if (typeof depth == 'undefined')\n    depth = Infinity;\n\n  // recurse this function so we don't reset allParents and allChildren\n  function _clone(parent, depth) {\n    // cloning null always returns null\n    if (parent === null)\n      return null;\n\n    if (depth == 0)\n      return parent;\n\n    var child;\n    var proto;\n    if (typeof parent != 'object') {\n      return parent;\n    }\n\n    if (clone.__isArray(parent)) {\n      child = [];\n    } else if (clone.__isRegExp(parent)) {\n      child = new RegExp(parent.source, __getRegExpFlags(parent));\n      if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n    } else if (clone.__isDate(parent)) {\n      child = new Date(parent.getTime());\n    } else if (useBuffer && Buffer.isBuffer(parent)) {\n      child = new Buffer(parent.length);\n      parent.copy(child);\n      return child;\n    } else {\n      if (typeof prototype == 'undefined') {\n        proto = Object.getPrototypeOf(parent);\n        child = Object.create(proto);\n      }\n      else {\n        child = Object.create(prototype);\n        proto = prototype;\n      }\n    }\n\n    if (circular) {\n      var index = allParents.indexOf(parent);\n\n      if (index != -1) {\n        return allChildren[index];\n      }\n      allParents.push(parent);\n      allChildren.push(child);\n    }\n\n    for (var i in parent) {\n      var attrs;\n      if (proto) {\n        attrs = Object.getOwnPropertyDescriptor(proto, i);\n      }\n\n      if (attrs && attrs.set == null) {\n        continue;\n      }\n      child[i] = _clone(parent[i], depth - 1);\n    }\n\n    return child;\n  }\n\n  return _clone(parent, depth);\n}\n\n/**\n * Simple flat clone using prototype, accepts only objects, usefull for property\n * override on FLAT configuration object (no nested props).\n *\n * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n * works.\n */\nclone.clonePrototype = function clonePrototype(parent) {\n  if (parent === null)\n    return null;\n\n  var c = function () {};\n  c.prototype = parent;\n  return new c();\n};\n\n// private utility functions\n\nfunction __objToStr(o) {\n  return Object.prototype.toString.call(o);\n};\nclone.__objToStr = __objToStr;\n\nfunction __isDate(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Date]';\n};\nclone.__isDate = __isDate;\n\nfunction __isArray(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Array]';\n};\nclone.__isArray = __isArray;\n\nfunction __isRegExp(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\n};\nclone.__isRegExp = __isRegExp;\n\nfunction __getRegExpFlags(re) {\n  var flags = '';\n  if (re.global) flags += 'g';\n  if (re.ignoreCase) flags += 'i';\n  if (re.multiline) flags += 'm';\n  return flags;\n};\nclone.__getRegExpFlags = __getRegExpFlags;\n\nreturn clone;\n})();\n\nif (typeof module === 'object' && module.exports) {\n  module.exports = clone;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/makerjs/~/clone/clone.js\n// module id = 110\n// module chunks = 0","var csg = require('./src/csg.js');\r\nrequire('./src/formats.js');\r\n\r\nmodule.exports = csg;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/openjscad-csg/index.js\n// module id = 111\n// module chunks = 0","/*\r\n## License\r\n\r\nCopyright (c) 2014 bebbi (elghatta@gmail.com)\r\nCopyright (c) 2013 Eduard Bespalov (edwbes@gmail.com)\r\nCopyright (c) 2012 Joost Nieuwenhuijse (joost@newhouse.nl)\r\nCopyright (c) 2011 Evan Wallace (http://evanw.github.com/csg.js/)\r\nCopyright (c) 2012 Alexandre Girard (https://github.com/alx)\r\n\r\nAll code released under MIT license\r\n\r\n*/\r\n\r\nvar csgjs = require('./csg.js');\r\nvar CSG = csgjs.CSG;\r\nvar CAG = csgjs.CAG;\r\n\r\n////////////////////////////////////////////\r\n// X3D Export\r\n////////////////////////////////////////////\r\n\r\nCSG.prototype.toX3D = function() {\r\n    // materialPolygonLists\r\n    // key: a color string (e.g. \"0 1 1\" for yellow)\r\n    // value: an array of strings specifying polygons of this color\r\n    //        (as space-separated indices into vertexCoords)\r\n    var materialPolygonLists = {},\r\n        // list of coordinates (as \"x y z\" strings)\r\n        vertexCoords = [],\r\n        // map to look up the index in vertexCoords of a given vertex\r\n        vertexTagToCoordIndexMap = {};\r\n\r\n    this.polygons.map(function(p) {\r\n        var red = 0,\r\n            green = 0,\r\n            blue = 1; // default color is blue\r\n        if (p.shared && p.shared.color) {\r\n            red = p.shared.color[0];\r\n            green = p.shared.color[1];\r\n            blue = p.shared.color[2];\r\n        }\r\n\r\n        var polygonVertexIndices = [],\r\n            numvertices = p.vertices.length,\r\n            vertex;\r\n        for (var i = 0; i < numvertices; i++) {\r\n            vertex = p.vertices[i];\r\n            if (!(vertex.getTag() in vertexTagToCoordIndexMap)) {\r\n                vertexCoords.push(vertex.pos._x.toString() + \" \" +\r\n                    vertex.pos._y.toString() + \" \" +\r\n                    vertex.pos._z.toString()\r\n                );\r\n                vertexTagToCoordIndexMap[vertex.getTag()] = vertexCoords.length - 1;\r\n            }\r\n            polygonVertexIndices.push(vertexTagToCoordIndexMap[vertex.getTag()]);\r\n        }\r\n\r\n        var polygonString = polygonVertexIndices.join(\" \");\r\n\r\n        var colorString = red.toString() + \" \" + green.toString() + \" \" + blue.toString();\r\n        if (!(colorString in materialPolygonLists)) {\r\n            materialPolygonLists[colorString] = [];\r\n        }\r\n        // add this polygonString to the list of colorString-colored polygons\r\n        materialPolygonLists[colorString].push(polygonString);\r\n    });\r\n\r\n\r\n    // create output document\r\n    var docType = document.implementation.createDocumentType(\"X3D\",\r\n        'ISO//Web3D//DTD X3D 3.1//EN\" \"http://www.web3d.org/specifications/x3d-3.1.dtd', null);\r\n    var exportDoc = document.implementation.createDocument(null, \"X3D\", docType);\r\n    exportDoc.insertBefore(\r\n        exportDoc.createProcessingInstruction('xml', 'version=\"1.0\" encoding=\"UTF-8\"'),\r\n        exportDoc.doctype);\r\n\r\n    var exportRoot = exportDoc.getElementsByTagName(\"X3D\")[0];\r\n    exportRoot.setAttribute(\"profile\", \"Interchange\");\r\n    exportRoot.setAttribute(\"version\", \"3.1\");\r\n    exportRoot.setAttribute(\"xsd:noNamespaceSchemaLocation\", \"http://www.web3d.org/specifications/x3d-3.1.xsd\");\r\n    exportRoot.setAttribute(\"xmlns:xsd\", \"http://www.w3.org/2001/XMLSchema-instance\");\r\n\r\n    var exportScene = exportDoc.createElement(\"Scene\");\r\n    exportRoot.appendChild(exportScene);\r\n\r\n    /*\r\n        For each color, create a shape made of an appropriately colored\r\n        material which contains all polygons that are this color.\r\n\r\n        The first shape will contain the definition of all vertices,\r\n        (<Coordinate DEF=\"coords_mesh\"/>), which will be referenced by\r\n        subsequent shapes.\r\n      */\r\n    var coordsMeshDefined = false;\r\n    for (var colorString in materialPolygonLists) {\r\n        var polygonList = materialPolygonLists[colorString];\r\n        var shape = exportDoc.createElement(\"Shape\");\r\n        exportScene.appendChild(shape);\r\n\r\n        var appearance = exportDoc.createElement(\"Appearance\");\r\n        shape.appendChild(appearance);\r\n\r\n        var material = exportDoc.createElement(\"Material\");\r\n        appearance.appendChild(material);\r\n        material.setAttribute(\"diffuseColor\", colorString);\r\n        material.setAttribute(\"ambientIntensity\", \"1.0\");\r\n\r\n        var ifs = exportDoc.createElement(\"IndexedFaceSet\");\r\n        shape.appendChild(ifs);\r\n        ifs.setAttribute(\"solid\", \"true\");\r\n        ifs.setAttribute(\"coordIndex\", polygonList.join(\" -1 \") + \" -1\");\r\n\r\n        var coordinate = exportDoc.createElement(\"Coordinate\");\r\n        ifs.appendChild(coordinate);\r\n        if (coordsMeshDefined) {\r\n            coordinate.setAttribute(\"USE\", \"coords_mesh\");\r\n        } else {\r\n            coordinate.setAttribute(\"DEF\", \"coords_mesh\");\r\n            coordinate.setAttribute(\"point\", vertexCoords.join(\" \"));\r\n            coordsMeshDefined = true;\r\n        }\r\n    }\r\n\r\n    var x3dstring = (new XMLSerializer()).serializeToString(exportDoc);\r\n    return new Blob([x3dstring], {\r\n        type: \"model/x3d+xml\"\r\n    });\r\n};\r\n\r\n////////////////////////////////////////////\r\n// STL Binary Export\r\n////////////////////////////////////////////\r\n\r\n// see http://en.wikipedia.org/wiki/STL_%28file_format%29#Binary_STL\r\nCSG.prototype.toStlBinary = function() {\r\n    // first check if the host is little-endian:\r\n    var buffer = new ArrayBuffer(4);\r\n    var int32buffer = new Int32Array(buffer, 0, 1);\r\n    var int8buffer = new Int8Array(buffer, 0, 4);\r\n    int32buffer[0] = 0x11223344;\r\n    if (int8buffer[0] != 0x44) {\r\n        throw new Error(\"Binary STL output is currently only supported on little-endian (Intel) processors\");\r\n    }\r\n\r\n    var numtriangles = 0;\r\n    this.polygons.map(function(p) {\r\n        var numvertices = p.vertices.length;\r\n        var thisnumtriangles = (numvertices >= 3) ? numvertices - 2 : 0;\r\n        numtriangles += thisnumtriangles;\r\n    });\r\n    var headerarray = new Uint8Array(80);\r\n    for (var i = 0; i < 80; i++) {\r\n        headerarray[i] = 65;\r\n    }\r\n    var ar1 = new Uint32Array(1);\r\n    ar1[0] = numtriangles;\r\n    // write the triangles to allTrianglesBuffer:\r\n    var allTrianglesBuffer = new ArrayBuffer(50 * numtriangles);\r\n    var allTrianglesBufferAsInt8 = new Int8Array(allTrianglesBuffer);\r\n    // a tricky problem is that a Float32Array must be aligned at 4-byte boundaries (at least in certain browsers)\r\n    // while each triangle takes 50 bytes. Therefore we write each triangle to a temporary buffer, and copy that\r\n    // into allTrianglesBuffer:\r\n    var triangleBuffer = new ArrayBuffer(50);\r\n    var triangleBufferAsInt8 = new Int8Array(triangleBuffer);\r\n    // each triangle consists of 12 floats:\r\n    var triangleFloat32array = new Float32Array(triangleBuffer, 0, 12);\r\n    // and one uint16:\r\n    var triangleUint16array = new Uint16Array(triangleBuffer, 48, 1);\r\n    var byteoffset = 0;\r\n    this.polygons.map(function(p) {\r\n        var numvertices = p.vertices.length;\r\n        for (var i = 0; i < numvertices - 2; i++) {\r\n            var normal = p.plane.normal;\r\n            triangleFloat32array[0] = normal._x;\r\n            triangleFloat32array[1] = normal._y;\r\n            triangleFloat32array[2] = normal._z;\r\n            var arindex = 3;\r\n            for (var v = 0; v < 3; v++) {\r\n                var vv = v + ((v > 0) ? i : 0);\r\n                var vertexpos = p.vertices[vv].pos;\r\n                triangleFloat32array[arindex++] = vertexpos._x;\r\n                triangleFloat32array[arindex++] = vertexpos._y;\r\n                triangleFloat32array[arindex++] = vertexpos._z;\r\n            }\r\n            triangleUint16array[0] = 0;\r\n            // copy the triangle into allTrianglesBuffer:\r\n            allTrianglesBufferAsInt8.set(triangleBufferAsInt8, byteoffset);\r\n            byteoffset += 50;\r\n        }\r\n    });\r\n    return new Blob([headerarray.buffer, ar1.buffer, allTrianglesBuffer], {\r\n        type: \"application/sla\"\r\n    });\r\n};\r\n\r\n////////////////////////////////////////////\r\n// STL String Export\r\n////////////////////////////////////////////\r\n\r\nCSG.prototype.toStlString = function() {\r\n    var result = \"solid csg.js\\n\";\r\n    this.polygons.map(function(p) {\r\n        result += p.toStlString();\r\n    });\r\n    result += \"endsolid csg.js\\n\";\r\n    return result;\r\n};\r\n\r\nCSG.Vector3D.prototype.toStlString = function() {\r\n    return this._x + \" \" + this._y + \" \" + this._z;\r\n};\r\n\r\nCSG.Vertex.prototype.toStlString = function() {\r\n    return \"vertex \" + this.pos.toStlString() + \"\\n\";\r\n};\r\n\r\nCSG.Polygon.prototype.toStlString = function() {\r\n    var result = \"\";\r\n    if (this.vertices.length >= 3) // should be!\r\n    {\r\n        // STL requires triangular polygons. If our polygon has more vertices, create\r\n        // multiple triangles:\r\n        var firstVertexStl = this.vertices[0].toStlString();\r\n        for (var i = 0; i < this.vertices.length - 2; i++) {\r\n            result += \"facet normal \" + this.plane.normal.toStlString() + \"\\nouter loop\\n\";\r\n            result += firstVertexStl;\r\n            result += this.vertices[i + 1].toStlString();\r\n            result += this.vertices[i + 2].toStlString();\r\n            result += \"endloop\\nendfacet\\n\";\r\n        }\r\n    }\r\n    return result;\r\n};\r\n\r\n////////////////////////////////////////////\r\n// DXF Export\r\n////////////////////////////////////////////\r\n\r\nCAG.PathsToDxf = function(paths) {\r\n    var str = \"999\\nDXF generated by OpenJsCad\\n\";\r\n    str += \"  0\\nSECTION\\n  2\\nHEADER\\n\";\r\n    str += \"  0\\nENDSEC\\n\";\r\n    str += \"  0\\nSECTION\\n  2\\nTABLES\\n\";\r\n    str += \"  0\\nTABLE\\n  2\\nLTYPE\\n  70\\n1\\n\";\r\n    str += \"  0\\nLTYPE\\n  2\\nCONTINUOUS\\n  3\\nSolid Line\\n  72\\n65\\n  73\\n0\\n  40\\n0.0\\n\";\r\n    str += \"  0\\nENDTAB\\n\";\r\n    str += \"  0\\nTABLE\\n  2\\nLAYER\\n  70\\n1\\n\";\r\n    str += \"  0\\nLAYER\\n  2\\nOpenJsCad\\n  62\\n7\\n  6\\ncontinuous\\n\";\r\n    str += \"  0\\nENDTAB\\n\";\r\n    str += \"  0\\nTABLE\\n  2\\nSTYLE\\n  70\\n0\\n  0\\nENDTAB\\n\";\r\n    str += \"  0\\nTABLE\\n  2\\nVIEW\\n  70\\n0\\n  0\\nENDTAB\\n\";\r\n    str += \"  0\\nENDSEC\\n\";\r\n    str += \"  0\\nSECTION\\n  2\\nBLOCKS\\n\";\r\n    str += \"  0\\nENDSEC\\n\";\r\n    str += \"  0\\nSECTION\\n  2\\nENTITIES\\n\";\r\n    paths.map(function(path) {\r\n        var numpoints_closed = path.points.length + (path.closed ? 1 : 0);\r\n        str += \"  0\\nLWPOLYLINE\\n  8\\nOpenJsCad\\n  90\\n\" + numpoints_closed + \"\\n  70\\n\" + (path.closed ? 1 : 0) + \"\\n\";\r\n        for (var pointindex = 0; pointindex < numpoints_closed; pointindex++) {\r\n            var pointindexwrapped = pointindex;\r\n            if (pointindexwrapped >= path.points.length) pointindexwrapped -= path.points.length;\r\n            var point = path.points[pointindexwrapped];\r\n            str += \" 10\\n\" + point.x + \"\\n 20\\n\" + point.y + \"\\n 30\\n0.0\\n\";\r\n        }\r\n    });\r\n    str += \"  0\\nENDSEC\\n  0\\nEOF\\n\";\r\n    return new Blob([str], {\r\n        type: \"application/dxf\"\r\n    });\r\n};\r\n\r\nCAG.prototype.toDxf = function() {\r\n    var paths = this.getOutlinePaths();\r\n    return CAG.PathsToDxf(paths);\r\n};\r\n\r\n////////////////////////////////////////////\r\n// AMF Export\r\n////////////////////////////////////////////\r\n\r\nCSG.prototype.toAMFString = function(m) {\r\n    var result = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<amf\"+(m&&m.unit?\" unit=\\\"+m.unit\\\"\":\"\")+\">\\n\";\r\n    for(var k in m) {\r\n        result += \"<metadata type=\\\"\"+k+\"\\\">\"+m[k]+\"</metadata>\\n\";\r\n    }\r\n    result += \"<object id=\\\"0\\\">\\n<mesh>\\n<vertices>\\n\";\r\n\r\n    this.polygons.map(function(p) {                  // first we dump all vertices of all polygons\r\n        for(var i=0; i<p.vertices.length; i++) {\r\n            result += p.vertices[i].toAMFString();\r\n        }\r\n    });\r\n    result += \"</vertices>\\n\";\r\n\r\n    var n = 0;\r\n    this.polygons.map(function(p) {                  // then we dump all polygons\r\n        result += \"<volume>\\n\";\r\n        if(p.vertices.length<3)\r\n            return;\r\n        var r = 1, g = 0.4, b = 1, a = 1, colorSet = false;\r\n        if(p.shared && p.shared.color) {\r\n            r = p.shared.color[0];\r\n            g = p.shared.color[1];\r\n            b = p.shared.color[2];\r\n            a = p.shared.color[3];\r\n            colorSet = true;\r\n        } else if(p.color) {\r\n            r = p.color[0];\r\n            g = p.color[1];\r\n            b = p.color[2];\r\n            if(p.color.length()>3) a = p.color[3];\r\n                colorSet = true;\r\n        }\r\n        result += \"<color><r>\"+r+\"</r><g>\"+g+\"</g><b>\"+b+\"</b>\"+(a!==undefined?\"<a>\"+a+\"</a>\":\"\")+\"</color>\";\r\n\r\n        for(var i=0; i<p.vertices.length-2; i++) {      // making sure they are all triangles (triangular polygons)\r\n            result += \"<triangle>\";\r\n            result += \"<v1>\" + (n) + \"</v1>\";\r\n            result += \"<v2>\" + (n+i+1) + \"</v2>\";\r\n            result += \"<v3>\" + (n+i+2) + \"</v3>\";\r\n            result += \"</triangle>\\n\";\r\n        }\r\n        n += p.vertices.length;\r\n        result += \"</volume>\\n\";\r\n    });\r\n    result += \"</mesh>\\n</object>\\n\";\r\n    result += \"</amf>\\n\";\r\n    return result;\r\n};\r\n\r\nCSG.Vector3D.prototype.toAMFString = function() {\r\n    return \"<x>\" + this._x + \"</x><y>\" + this._y + \"</y><z>\" + this._z + \"</z>\";\r\n};\r\n\r\nCSG.Vertex.prototype.toAMFString = function() {\r\n   return \"<vertex><coordinates>\" + this.pos.toAMFString() + \"</coordinates></vertex>\\n\";\r\n};\r\n\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/openjscad-csg/src/formats.js\n// module id = 112\n// module chunks = 0","'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._61);\n  p._81 = 1;\n  p._65 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._81 === 3) {\n            val = val._65;\n          }\n          if (val._81 === 1) return res(i, val._65);\n          if (val._81 === 2) reject(val._65);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise/lib/es6-extensions.js\n// module id = 113\n// module chunks = 0","'use strict';\n\nvar Promise = require('./core');\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._10 = null;\n  Promise._97 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._10 = function (promise) {\n    if (\n      promise._81 === 2 && // IS REJECTED\n      rejections[promise._72]\n    ) {\n      if (rejections[promise._72].logged) {\n        onHandled(promise._72);\n      } else {\n        clearTimeout(rejections[promise._72].timeout);\n      }\n      delete rejections[promise._72];\n    }\n  };\n  Promise._97 = function (promise, err) {\n    if (promise._45 === 0) { // not yet handled\n      promise._72 = id++;\n      rejections[promise._72] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._72),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise/lib/rejection-tracking.js\n// module id = 114\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== 'production') {\n  var invariant = require('fbjs/lib/invariant');\n  var warning = require('fbjs/lib/warning');\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (typeSpecs.hasOwnProperty(typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', location, typeSpecName);\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = checkPropTypes;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/checkPropTypes.js\n// module id = 115\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\nvar checkPropTypes = require('./checkPropTypes');\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message) {\n    this.message = message;\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (process.env.NODE_ENV !== 'production') {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          invariant(\n            false,\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            warning(\n              false,\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `%s` prop on `%s`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.',\n              propFullName,\n              componentName\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunction.thatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;\n      return emptyFunction.thatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues);\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (propValue.hasOwnProperty(key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n      return emptyFunction.thatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n          return null;\n        }\n      }\n\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          continue;\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/factoryWithTypeCheckers.js\n// module id = 116\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/lib/ReactPropTypesSecret.js\n// module id = 117\n// module chunks = 0","'use strict';\n\nmodule.exports = require('./lib/ReactDOM');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/index.js\n// module id = 118\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ARIADOMPropertyConfig = {\n  Properties: {\n    // Global States and Properties\n    'aria-current': 0, // state\n    'aria-details': 0,\n    'aria-disabled': 0, // state\n    'aria-hidden': 0, // state\n    'aria-invalid': 0, // state\n    'aria-keyshortcuts': 0,\n    'aria-label': 0,\n    'aria-roledescription': 0,\n    // Widget Attributes\n    'aria-autocomplete': 0,\n    'aria-checked': 0,\n    'aria-expanded': 0,\n    'aria-haspopup': 0,\n    'aria-level': 0,\n    'aria-modal': 0,\n    'aria-multiline': 0,\n    'aria-multiselectable': 0,\n    'aria-orientation': 0,\n    'aria-placeholder': 0,\n    'aria-pressed': 0,\n    'aria-readonly': 0,\n    'aria-required': 0,\n    'aria-selected': 0,\n    'aria-sort': 0,\n    'aria-valuemax': 0,\n    'aria-valuemin': 0,\n    'aria-valuenow': 0,\n    'aria-valuetext': 0,\n    // Live Region Attributes\n    'aria-atomic': 0,\n    'aria-busy': 0,\n    'aria-live': 0,\n    'aria-relevant': 0,\n    // Drag-and-Drop Attributes\n    'aria-dropeffect': 0,\n    'aria-grabbed': 0,\n    // Relationship Attributes\n    'aria-activedescendant': 0,\n    'aria-colcount': 0,\n    'aria-colindex': 0,\n    'aria-colspan': 0,\n    'aria-controls': 0,\n    'aria-describedby': 0,\n    'aria-errormessage': 0,\n    'aria-flowto': 0,\n    'aria-labelledby': 0,\n    'aria-owns': 0,\n    'aria-posinset': 0,\n    'aria-rowcount': 0,\n    'aria-rowindex': 0,\n    'aria-rowspan': 0,\n    'aria-setsize': 0\n  },\n  DOMAttributeNames: {},\n  DOMPropertyNames: {}\n};\n\nmodule.exports = ARIADOMPropertyConfig;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ARIADOMPropertyConfig.js\n// module id = 119\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\n\nvar focusNode = require('fbjs/lib/focusNode');\n\nvar AutoFocusUtils = {\n  focusDOMComponent: function () {\n    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));\n  }\n};\n\nmodule.exports = AutoFocusUtils;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/AutoFocusUtils.js\n// module id = 120\n// module chunks = 0","/**\n * Copyright 2013-present Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar EventPropagators = require('./EventPropagators');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar FallbackCompositionState = require('./FallbackCompositionState');\nvar SyntheticCompositionEvent = require('./SyntheticCompositionEvent');\nvar SyntheticInputEvent = require('./SyntheticInputEvent');\n\nvar END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space\nvar START_KEYCODE = 229;\n\nvar canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;\n\nvar documentMode = null;\nif (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {\n  documentMode = document.documentMode;\n}\n\n// Webkit offers a very useful `textInput` event that can be used to\n// directly represent `beforeInput`. The IE `textinput` event is not as\n// useful, so we don't use it.\nvar canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();\n\n// In IE9+, we have access to composition events, but the data supplied\n// by the native compositionend event may be incorrect. Japanese ideographic\n// spaces, for instance (\\u3000) are not recorded correctly.\nvar useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);\n\n/**\n * Opera <= 12 includes TextEvent in window, but does not fire\n * text input events. Rely on keypress instead.\n */\nfunction isPresto() {\n  var opera = window.opera;\n  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;\n}\n\nvar SPACEBAR_CODE = 32;\nvar SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);\n\n// Events and their corresponding property names.\nvar eventTypes = {\n  beforeInput: {\n    phasedRegistrationNames: {\n      bubbled: 'onBeforeInput',\n      captured: 'onBeforeInputCapture'\n    },\n    dependencies: ['topCompositionEnd', 'topKeyPress', 'topTextInput', 'topPaste']\n  },\n  compositionEnd: {\n    phasedRegistrationNames: {\n      bubbled: 'onCompositionEnd',\n      captured: 'onCompositionEndCapture'\n    },\n    dependencies: ['topBlur', 'topCompositionEnd', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']\n  },\n  compositionStart: {\n    phasedRegistrationNames: {\n      bubbled: 'onCompositionStart',\n      captured: 'onCompositionStartCapture'\n    },\n    dependencies: ['topBlur', 'topCompositionStart', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']\n  },\n  compositionUpdate: {\n    phasedRegistrationNames: {\n      bubbled: 'onCompositionUpdate',\n      captured: 'onCompositionUpdateCapture'\n    },\n    dependencies: ['topBlur', 'topCompositionUpdate', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']\n  }\n};\n\n// Track whether we've ever handled a keypress on the space key.\nvar hasSpaceKeypress = false;\n\n/**\n * Return whether a native keypress event is assumed to be a command.\n * This is required because Firefox fires `keypress` events for key commands\n * (cut, copy, select-all, etc.) even though no character is inserted.\n */\nfunction isKeypressCommand(nativeEvent) {\n  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&\n  // ctrlKey && altKey is equivalent to AltGr, and is not a command.\n  !(nativeEvent.ctrlKey && nativeEvent.altKey);\n}\n\n/**\n * Translate native top level events into event types.\n *\n * @param {string} topLevelType\n * @return {object}\n */\nfunction getCompositionEventType(topLevelType) {\n  switch (topLevelType) {\n    case 'topCompositionStart':\n      return eventTypes.compositionStart;\n    case 'topCompositionEnd':\n      return eventTypes.compositionEnd;\n    case 'topCompositionUpdate':\n      return eventTypes.compositionUpdate;\n  }\n}\n\n/**\n * Does our fallback best-guess model think this event signifies that\n * composition has begun?\n *\n * @param {string} topLevelType\n * @param {object} nativeEvent\n * @return {boolean}\n */\nfunction isFallbackCompositionStart(topLevelType, nativeEvent) {\n  return topLevelType === 'topKeyDown' && nativeEvent.keyCode === START_KEYCODE;\n}\n\n/**\n * Does our fallback mode think that this event is the end of composition?\n *\n * @param {string} topLevelType\n * @param {object} nativeEvent\n * @return {boolean}\n */\nfunction isFallbackCompositionEnd(topLevelType, nativeEvent) {\n  switch (topLevelType) {\n    case 'topKeyUp':\n      // Command keys insert or clear IME input.\n      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;\n    case 'topKeyDown':\n      // Expect IME keyCode on each keydown. If we get any other\n      // code we must have exited earlier.\n      return nativeEvent.keyCode !== START_KEYCODE;\n    case 'topKeyPress':\n    case 'topMouseDown':\n    case 'topBlur':\n      // Events are not possible without cancelling IME.\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Google Input Tools provides composition data via a CustomEvent,\n * with the `data` property populated in the `detail` object. If this\n * is available on the event object, use it. If not, this is a plain\n * composition event and we have nothing special to extract.\n *\n * @param {object} nativeEvent\n * @return {?string}\n */\nfunction getDataFromCustomEvent(nativeEvent) {\n  var detail = nativeEvent.detail;\n  if (typeof detail === 'object' && 'data' in detail) {\n    return detail.data;\n  }\n  return null;\n}\n\n// Track the current IME composition fallback object, if any.\nvar currentComposition = null;\n\n/**\n * @return {?object} A SyntheticCompositionEvent.\n */\nfunction extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n  var eventType;\n  var fallbackData;\n\n  if (canUseCompositionEvent) {\n    eventType = getCompositionEventType(topLevelType);\n  } else if (!currentComposition) {\n    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {\n      eventType = eventTypes.compositionStart;\n    }\n  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {\n    eventType = eventTypes.compositionEnd;\n  }\n\n  if (!eventType) {\n    return null;\n  }\n\n  if (useFallbackCompositionData) {\n    // The current composition is stored statically and must not be\n    // overwritten while composition continues.\n    if (!currentComposition && eventType === eventTypes.compositionStart) {\n      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);\n    } else if (eventType === eventTypes.compositionEnd) {\n      if (currentComposition) {\n        fallbackData = currentComposition.getData();\n      }\n    }\n  }\n\n  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);\n\n  if (fallbackData) {\n    // Inject data generated from fallback path into the synthetic event.\n    // This matches the property of native CompositionEventInterface.\n    event.data = fallbackData;\n  } else {\n    var customData = getDataFromCustomEvent(nativeEvent);\n    if (customData !== null) {\n      event.data = customData;\n    }\n  }\n\n  EventPropagators.accumulateTwoPhaseDispatches(event);\n  return event;\n}\n\n/**\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {object} nativeEvent Native browser event.\n * @return {?string} The string corresponding to this `beforeInput` event.\n */\nfunction getNativeBeforeInputChars(topLevelType, nativeEvent) {\n  switch (topLevelType) {\n    case 'topCompositionEnd':\n      return getDataFromCustomEvent(nativeEvent);\n    case 'topKeyPress':\n      /**\n       * If native `textInput` events are available, our goal is to make\n       * use of them. However, there is a special case: the spacebar key.\n       * In Webkit, preventing default on a spacebar `textInput` event\n       * cancels character insertion, but it *also* causes the browser\n       * to fall back to its default spacebar behavior of scrolling the\n       * page.\n       *\n       * Tracking at:\n       * https://code.google.com/p/chromium/issues/detail?id=355103\n       *\n       * To avoid this issue, use the keypress event as if no `textInput`\n       * event is available.\n       */\n      var which = nativeEvent.which;\n      if (which !== SPACEBAR_CODE) {\n        return null;\n      }\n\n      hasSpaceKeypress = true;\n      return SPACEBAR_CHAR;\n\n    case 'topTextInput':\n      // Record the characters to be added to the DOM.\n      var chars = nativeEvent.data;\n\n      // If it's a spacebar character, assume that we have already handled\n      // it at the keypress level and bail immediately. Android Chrome\n      // doesn't give us keycodes, so we need to blacklist it.\n      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {\n        return null;\n      }\n\n      return chars;\n\n    default:\n      // For other native event types, do nothing.\n      return null;\n  }\n}\n\n/**\n * For browsers that do not provide the `textInput` event, extract the\n * appropriate string to use for SyntheticInputEvent.\n *\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {object} nativeEvent Native browser event.\n * @return {?string} The fallback string for this `beforeInput` event.\n */\nfunction getFallbackBeforeInputChars(topLevelType, nativeEvent) {\n  // If we are currently composing (IME) and using a fallback to do so,\n  // try to extract the composed characters from the fallback object.\n  // If composition event is available, we extract a string only at\n  // compositionevent, otherwise extract it at fallback events.\n  if (currentComposition) {\n    if (topLevelType === 'topCompositionEnd' || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {\n      var chars = currentComposition.getData();\n      FallbackCompositionState.release(currentComposition);\n      currentComposition = null;\n      return chars;\n    }\n    return null;\n  }\n\n  switch (topLevelType) {\n    case 'topPaste':\n      // If a paste event occurs after a keypress, throw out the input\n      // chars. Paste events should not lead to BeforeInput events.\n      return null;\n    case 'topKeyPress':\n      /**\n       * As of v27, Firefox may fire keypress events even when no character\n       * will be inserted. A few possibilities:\n       *\n       * - `which` is `0`. Arrow keys, Esc key, etc.\n       *\n       * - `which` is the pressed key code, but no char is available.\n       *   Ex: 'AltGr + d` in Polish. There is no modified character for\n       *   this key combination and no character is inserted into the\n       *   document, but FF fires the keypress for char code `100` anyway.\n       *   No `input` event will occur.\n       *\n       * - `which` is the pressed key code, but a command combination is\n       *   being used. Ex: `Cmd+C`. No character is inserted, and no\n       *   `input` event will occur.\n       */\n      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {\n        return String.fromCharCode(nativeEvent.which);\n      }\n      return null;\n    case 'topCompositionEnd':\n      return useFallbackCompositionData ? null : nativeEvent.data;\n    default:\n      return null;\n  }\n}\n\n/**\n * Extract a SyntheticInputEvent for `beforeInput`, based on either native\n * `textInput` or fallback behavior.\n *\n * @return {?object} A SyntheticInputEvent.\n */\nfunction extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n  var chars;\n\n  if (canUseTextInputEvent) {\n    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);\n  } else {\n    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);\n  }\n\n  // If no characters are being inserted, no BeforeInput event should\n  // be fired.\n  if (!chars) {\n    return null;\n  }\n\n  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);\n\n  event.data = chars;\n  EventPropagators.accumulateTwoPhaseDispatches(event);\n  return event;\n}\n\n/**\n * Create an `onBeforeInput` event to match\n * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.\n *\n * This event plugin is based on the native `textInput` event\n * available in Chrome, Safari, Opera, and IE. This event fires after\n * `onKeyPress` and `onCompositionEnd`, but before `onInput`.\n *\n * `beforeInput` is spec'd but not implemented in any browsers, and\n * the `input` event does not provide any useful information about what has\n * actually been added, contrary to the spec. Thus, `textInput` is the best\n * available event to identify the characters that have actually been inserted\n * into the target node.\n *\n * This plugin is also responsible for emitting `composition` events, thus\n * allowing us to share composition fallback code for both `beforeInput` and\n * `composition` event types.\n */\nvar BeforeInputEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];\n  }\n};\n\nmodule.exports = BeforeInputEventPlugin;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/BeforeInputEventPlugin.js\n// module id = 121\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar CSSProperty = require('./CSSProperty');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar ReactInstrumentation = require('./ReactInstrumentation');\n\nvar camelizeStyleName = require('fbjs/lib/camelizeStyleName');\nvar dangerousStyleValue = require('./dangerousStyleValue');\nvar hyphenateStyleName = require('fbjs/lib/hyphenateStyleName');\nvar memoizeStringOnly = require('fbjs/lib/memoizeStringOnly');\nvar warning = require('fbjs/lib/warning');\n\nvar processStyleName = memoizeStringOnly(function (styleName) {\n  return hyphenateStyleName(styleName);\n});\n\nvar hasShorthandPropertyBug = false;\nvar styleFloatAccessor = 'cssFloat';\nif (ExecutionEnvironment.canUseDOM) {\n  var tempStyle = document.createElement('div').style;\n  try {\n    // IE8 throws \"Invalid argument.\" if resetting shorthand style properties.\n    tempStyle.font = '';\n  } catch (e) {\n    hasShorthandPropertyBug = true;\n  }\n  // IE8 only supports accessing cssFloat (standard) as styleFloat\n  if (document.documentElement.style.cssFloat === undefined) {\n    styleFloatAccessor = 'styleFloat';\n  }\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  // 'msTransform' is correct, but the other prefixes should be capitalized\n  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;\n\n  // style values shouldn't contain a semicolon\n  var badStyleValueWithSemicolonPattern = /;\\s*$/;\n\n  var warnedStyleNames = {};\n  var warnedStyleValues = {};\n  var warnedForNaNValue = false;\n\n  var warnHyphenatedStyleName = function (name, owner) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;\n  };\n\n  var warnBadVendoredStyleName = function (name, owner) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;\n  };\n\n  var warnStyleValueWithSemicolon = function (name, value, owner) {\n    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {\n      return;\n    }\n\n    warnedStyleValues[value] = true;\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\\'t contain a semicolon.%s ' + 'Try \"%s: %s\" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;\n  };\n\n  var warnStyleValueIsNaN = function (name, value, owner) {\n    if (warnedForNaNValue) {\n      return;\n    }\n\n    warnedForNaNValue = true;\n    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;\n  };\n\n  var checkRenderMessage = function (owner) {\n    if (owner) {\n      var name = owner.getName();\n      if (name) {\n        return ' Check the render method of `' + name + '`.';\n      }\n    }\n    return '';\n  };\n\n  /**\n   * @param {string} name\n   * @param {*} value\n   * @param {ReactDOMComponent} component\n   */\n  var warnValidStyle = function (name, value, component) {\n    var owner;\n    if (component) {\n      owner = component._currentElement._owner;\n    }\n    if (name.indexOf('-') > -1) {\n      warnHyphenatedStyleName(name, owner);\n    } else if (badVendoredStyleNamePattern.test(name)) {\n      warnBadVendoredStyleName(name, owner);\n    } else if (badStyleValueWithSemicolonPattern.test(value)) {\n      warnStyleValueWithSemicolon(name, value, owner);\n    }\n\n    if (typeof value === 'number' && isNaN(value)) {\n      warnStyleValueIsNaN(name, value, owner);\n    }\n  };\n}\n\n/**\n * Operations for dealing with CSS properties.\n */\nvar CSSPropertyOperations = {\n\n  /**\n   * Serializes a mapping of style properties for use as inline styles:\n   *\n   *   > createMarkupForStyles({width: '200px', height: 0})\n   *   \"width:200px;height:0;\"\n   *\n   * Undefined values are ignored so that declarative programming is easier.\n   * The result should be HTML-escaped before insertion into the DOM.\n   *\n   * @param {object} styles\n   * @param {ReactDOMComponent} component\n   * @return {?string}\n   */\n  createMarkupForStyles: function (styles, component) {\n    var serialized = '';\n    for (var styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) {\n        continue;\n      }\n      var styleValue = styles[styleName];\n      if (process.env.NODE_ENV !== 'production') {\n        warnValidStyle(styleName, styleValue, component);\n      }\n      if (styleValue != null) {\n        serialized += processStyleName(styleName) + ':';\n        serialized += dangerousStyleValue(styleName, styleValue, component) + ';';\n      }\n    }\n    return serialized || null;\n  },\n\n  /**\n   * Sets the value for multiple styles on a node.  If a value is specified as\n   * '' (empty string), the corresponding style property will be unset.\n   *\n   * @param {DOMElement} node\n   * @param {object} styles\n   * @param {ReactDOMComponent} component\n   */\n  setValueForStyles: function (node, styles, component) {\n    if (process.env.NODE_ENV !== 'production') {\n      ReactInstrumentation.debugTool.onHostOperation({\n        instanceID: component._debugID,\n        type: 'update styles',\n        payload: styles\n      });\n    }\n\n    var style = node.style;\n    for (var styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) {\n        continue;\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        warnValidStyle(styleName, styles[styleName], component);\n      }\n      var styleValue = dangerousStyleValue(styleName, styles[styleName], component);\n      if (styleName === 'float' || styleName === 'cssFloat') {\n        styleName = styleFloatAccessor;\n      }\n      if (styleValue) {\n        style[styleName] = styleValue;\n      } else {\n        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];\n        if (expansion) {\n          // Shorthand property that IE8 won't like unsetting, so unset each\n          // component to placate it\n          for (var individualStyleName in expansion) {\n            style[individualStyleName] = '';\n          }\n        } else {\n          style[styleName] = '';\n        }\n      }\n    }\n  }\n\n};\n\nmodule.exports = CSSPropertyOperations;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/CSSPropertyOperations.js\n// module id = 122\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar EventPluginHub = require('./EventPluginHub');\nvar EventPropagators = require('./EventPropagators');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactUpdates = require('./ReactUpdates');\nvar SyntheticEvent = require('./SyntheticEvent');\n\nvar getEventTarget = require('./getEventTarget');\nvar isEventSupported = require('./isEventSupported');\nvar isTextInputElement = require('./isTextInputElement');\n\nvar eventTypes = {\n  change: {\n    phasedRegistrationNames: {\n      bubbled: 'onChange',\n      captured: 'onChangeCapture'\n    },\n    dependencies: ['topBlur', 'topChange', 'topClick', 'topFocus', 'topInput', 'topKeyDown', 'topKeyUp', 'topSelectionChange']\n  }\n};\n\n/**\n * For IE shims\n */\nvar activeElement = null;\nvar activeElementInst = null;\nvar activeElementValue = null;\nvar activeElementValueProp = null;\n\n/**\n * SECTION: handle `change` event\n */\nfunction shouldUseChangeEvent(elem) {\n  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();\n  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';\n}\n\nvar doesChangeEventBubble = false;\nif (ExecutionEnvironment.canUseDOM) {\n  // See `handleChange` comment below\n  doesChangeEventBubble = isEventSupported('change') && (!document.documentMode || document.documentMode > 8);\n}\n\nfunction manualDispatchChangeEvent(nativeEvent) {\n  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementInst, nativeEvent, getEventTarget(nativeEvent));\n  EventPropagators.accumulateTwoPhaseDispatches(event);\n\n  // If change and propertychange bubbled, we'd just bind to it like all the\n  // other events and have it go through ReactBrowserEventEmitter. Since it\n  // doesn't, we manually listen for the events and so we have to enqueue and\n  // process the abstract event manually.\n  //\n  // Batching is necessary here in order to ensure that all event handlers run\n  // before the next rerender (including event handlers attached to ancestor\n  // elements instead of directly on the input). Without this, controlled\n  // components don't work properly in conjunction with event bubbling because\n  // the component is rerendered and the value reverted before all the event\n  // handlers can run. See https://github.com/facebook/react/issues/708.\n  ReactUpdates.batchedUpdates(runEventInBatch, event);\n}\n\nfunction runEventInBatch(event) {\n  EventPluginHub.enqueueEvents(event);\n  EventPluginHub.processEventQueue(false);\n}\n\nfunction startWatchingForChangeEventIE8(target, targetInst) {\n  activeElement = target;\n  activeElementInst = targetInst;\n  activeElement.attachEvent('onchange', manualDispatchChangeEvent);\n}\n\nfunction stopWatchingForChangeEventIE8() {\n  if (!activeElement) {\n    return;\n  }\n  activeElement.detachEvent('onchange', manualDispatchChangeEvent);\n  activeElement = null;\n  activeElementInst = null;\n}\n\nfunction getTargetInstForChangeEvent(topLevelType, targetInst) {\n  if (topLevelType === 'topChange') {\n    return targetInst;\n  }\n}\nfunction handleEventsForChangeEventIE8(topLevelType, target, targetInst) {\n  if (topLevelType === 'topFocus') {\n    // stopWatching() should be a noop here but we call it just in case we\n    // missed a blur event somehow.\n    stopWatchingForChangeEventIE8();\n    startWatchingForChangeEventIE8(target, targetInst);\n  } else if (topLevelType === 'topBlur') {\n    stopWatchingForChangeEventIE8();\n  }\n}\n\n/**\n * SECTION: handle `input` event\n */\nvar isInputEventSupported = false;\nif (ExecutionEnvironment.canUseDOM) {\n  // IE9 claims to support the input event but fails to trigger it when\n  // deleting text, so we ignore its input events.\n  // IE10+ fire input events to often, such when a placeholder\n  // changes or when an input with a placeholder is focused.\n  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 11);\n}\n\n/**\n * (For IE <=11) Replacement getter/setter for the `value` property that gets\n * set on the active element.\n */\nvar newValueProp = {\n  get: function () {\n    return activeElementValueProp.get.call(this);\n  },\n  set: function (val) {\n    // Cast to a string so we can do equality checks.\n    activeElementValue = '' + val;\n    activeElementValueProp.set.call(this, val);\n  }\n};\n\n/**\n * (For IE <=11) Starts tracking propertychange events on the passed-in element\n * and override the value property so that we can distinguish user events from\n * value changes in JS.\n */\nfunction startWatchingForValueChange(target, targetInst) {\n  activeElement = target;\n  activeElementInst = targetInst;\n  activeElementValue = target.value;\n  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');\n\n  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only\n  // on DOM elements\n  Object.defineProperty(activeElement, 'value', newValueProp);\n  if (activeElement.attachEvent) {\n    activeElement.attachEvent('onpropertychange', handlePropertyChange);\n  } else {\n    activeElement.addEventListener('propertychange', handlePropertyChange, false);\n  }\n}\n\n/**\n * (For IE <=11) Removes the event listeners from the currently-tracked element,\n * if any exists.\n */\nfunction stopWatchingForValueChange() {\n  if (!activeElement) {\n    return;\n  }\n\n  // delete restores the original property definition\n  delete activeElement.value;\n\n  if (activeElement.detachEvent) {\n    activeElement.detachEvent('onpropertychange', handlePropertyChange);\n  } else {\n    activeElement.removeEventListener('propertychange', handlePropertyChange, false);\n  }\n\n  activeElement = null;\n  activeElementInst = null;\n  activeElementValue = null;\n  activeElementValueProp = null;\n}\n\n/**\n * (For IE <=11) Handles a propertychange event, sending a `change` event if\n * the value of the active element has changed.\n */\nfunction handlePropertyChange(nativeEvent) {\n  if (nativeEvent.propertyName !== 'value') {\n    return;\n  }\n  var value = nativeEvent.srcElement.value;\n  if (value === activeElementValue) {\n    return;\n  }\n  activeElementValue = value;\n\n  manualDispatchChangeEvent(nativeEvent);\n}\n\n/**\n * If a `change` event should be fired, returns the target's ID.\n */\nfunction getTargetInstForInputEvent(topLevelType, targetInst) {\n  if (topLevelType === 'topInput') {\n    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly\n    // what we want so fall through here and trigger an abstract event\n    return targetInst;\n  }\n}\n\nfunction handleEventsForInputEventIE(topLevelType, target, targetInst) {\n  if (topLevelType === 'topFocus') {\n    // In IE8, we can capture almost all .value changes by adding a\n    // propertychange handler and looking for events with propertyName\n    // equal to 'value'\n    // In IE9-11, propertychange fires for most input events but is buggy and\n    // doesn't fire when text is deleted, but conveniently, selectionchange\n    // appears to fire in all of the remaining cases so we catch those and\n    // forward the event if the value has changed\n    // In either case, we don't want to call the event handler if the value\n    // is changed from JS so we redefine a setter for `.value` that updates\n    // our activeElementValue variable, allowing us to ignore those changes\n    //\n    // stopWatching() should be a noop here but we call it just in case we\n    // missed a blur event somehow.\n    stopWatchingForValueChange();\n    startWatchingForValueChange(target, targetInst);\n  } else if (topLevelType === 'topBlur') {\n    stopWatchingForValueChange();\n  }\n}\n\n// For IE8 and IE9.\nfunction getTargetInstForInputEventIE(topLevelType, targetInst) {\n  if (topLevelType === 'topSelectionChange' || topLevelType === 'topKeyUp' || topLevelType === 'topKeyDown') {\n    // On the selectionchange event, the target is just document which isn't\n    // helpful for us so just check activeElement instead.\n    //\n    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire\n    // propertychange on the first input event after setting `value` from a\n    // script and fires only keydown, keypress, keyup. Catching keyup usually\n    // gets it and catching keydown lets us fire an event for the first\n    // keystroke if user does a key repeat (it'll be a little delayed: right\n    // before the second keystroke). Other input methods (e.g., paste) seem to\n    // fire selectionchange normally.\n    if (activeElement && activeElement.value !== activeElementValue) {\n      activeElementValue = activeElement.value;\n      return activeElementInst;\n    }\n  }\n}\n\n/**\n * SECTION: handle `click` event\n */\nfunction shouldUseClickEvent(elem) {\n  // Use the `click` event to detect changes to checkbox and radio inputs.\n  // This approach works across all browsers, whereas `change` does not fire\n  // until `blur` in IE8.\n  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');\n}\n\nfunction getTargetInstForClickEvent(topLevelType, targetInst) {\n  if (topLevelType === 'topClick') {\n    return targetInst;\n  }\n}\n\nfunction handleControlledInputBlur(inst, node) {\n  // TODO: In IE, inst is occasionally null. Why?\n  if (inst == null) {\n    return;\n  }\n\n  // Fiber and ReactDOM keep wrapper state in separate places\n  var state = inst._wrapperState || node._wrapperState;\n\n  if (!state || !state.controlled || node.type !== 'number') {\n    return;\n  }\n\n  // If controlled, assign the value attribute to the current value on blur\n  var value = '' + node.value;\n  if (node.getAttribute('value') !== value) {\n    node.setAttribute('value', value);\n  }\n}\n\n/**\n * This plugin creates an `onChange` event that normalizes change events\n * across form elements. This event fires at a time when it's possible to\n * change the element's value without seeing a flicker.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - select\n */\nvar ChangeEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;\n\n    var getTargetInstFunc, handleEventFunc;\n    if (shouldUseChangeEvent(targetNode)) {\n      if (doesChangeEventBubble) {\n        getTargetInstFunc = getTargetInstForChangeEvent;\n      } else {\n        handleEventFunc = handleEventsForChangeEventIE8;\n      }\n    } else if (isTextInputElement(targetNode)) {\n      if (isInputEventSupported) {\n        getTargetInstFunc = getTargetInstForInputEvent;\n      } else {\n        getTargetInstFunc = getTargetInstForInputEventIE;\n        handleEventFunc = handleEventsForInputEventIE;\n      }\n    } else if (shouldUseClickEvent(targetNode)) {\n      getTargetInstFunc = getTargetInstForClickEvent;\n    }\n\n    if (getTargetInstFunc) {\n      var inst = getTargetInstFunc(topLevelType, targetInst);\n      if (inst) {\n        var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, nativeEventTarget);\n        event.type = 'change';\n        EventPropagators.accumulateTwoPhaseDispatches(event);\n        return event;\n      }\n    }\n\n    if (handleEventFunc) {\n      handleEventFunc(topLevelType, targetNode, targetInst);\n    }\n\n    // When blurring, set the value attribute for number inputs\n    if (topLevelType === 'topBlur') {\n      handleControlledInputBlur(targetInst, targetNode);\n    }\n  }\n\n};\n\nmodule.exports = ChangeEventPlugin;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ChangeEventPlugin.js\n// module id = 123\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar DOMLazyTree = require('./DOMLazyTree');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar createNodesFromMarkup = require('fbjs/lib/createNodesFromMarkup');\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\n\nvar Danger = {\n\n  /**\n   * Replaces a node with a string of markup at its current position within its\n   * parent. The markup must render into a single root node.\n   *\n   * @param {DOMElement} oldChild Child node to replace.\n   * @param {string} markup Markup to render in place of the child node.\n   * @internal\n   */\n  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {\n    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;\n    !markup ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;\n    !(oldChild.nodeName !== 'HTML') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;\n\n    if (typeof markup === 'string') {\n      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];\n      oldChild.parentNode.replaceChild(newChild, oldChild);\n    } else {\n      DOMLazyTree.replaceChildWithTree(oldChild, markup);\n    }\n  }\n\n};\n\nmodule.exports = Danger;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/Danger.js\n// module id = 124\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Module that is injectable into `EventPluginHub`, that specifies a\n * deterministic ordering of `EventPlugin`s. A convenient way to reason about\n * plugins, without having to package every one of them. This is better than\n * having plugins be ordered in the same order that they are injected because\n * that ordering would be influenced by the packaging order.\n * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that\n * preventing default on events is convenient in `SimpleEventPlugin` handlers.\n */\n\nvar DefaultEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'TapEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];\n\nmodule.exports = DefaultEventPluginOrder;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/DefaultEventPluginOrder.js\n// module id = 125\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar EventPropagators = require('./EventPropagators');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\n\nvar eventTypes = {\n  mouseEnter: {\n    registrationName: 'onMouseEnter',\n    dependencies: ['topMouseOut', 'topMouseOver']\n  },\n  mouseLeave: {\n    registrationName: 'onMouseLeave',\n    dependencies: ['topMouseOut', 'topMouseOver']\n  }\n};\n\nvar EnterLeaveEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * For almost every interaction we care about, there will be both a top-level\n   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that\n   * we do not extract duplicate events. However, moving the mouse into the\n   * browser from outside will not fire a `mouseout` event. In this case, we use\n   * the `mouseover` top-level event.\n   */\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    if (topLevelType === 'topMouseOver' && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {\n      return null;\n    }\n    if (topLevelType !== 'topMouseOut' && topLevelType !== 'topMouseOver') {\n      // Must not be a mouse in or mouse out - ignoring.\n      return null;\n    }\n\n    var win;\n    if (nativeEventTarget.window === nativeEventTarget) {\n      // `nativeEventTarget` is probably a window object.\n      win = nativeEventTarget;\n    } else {\n      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n      var doc = nativeEventTarget.ownerDocument;\n      if (doc) {\n        win = doc.defaultView || doc.parentWindow;\n      } else {\n        win = window;\n      }\n    }\n\n    var from;\n    var to;\n    if (topLevelType === 'topMouseOut') {\n      from = targetInst;\n      var related = nativeEvent.relatedTarget || nativeEvent.toElement;\n      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;\n    } else {\n      // Moving to a node from outside the window.\n      from = null;\n      to = targetInst;\n    }\n\n    if (from === to) {\n      // Nothing pertains to our managed components.\n      return null;\n    }\n\n    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);\n    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);\n\n    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);\n    leave.type = 'mouseleave';\n    leave.target = fromNode;\n    leave.relatedTarget = toNode;\n\n    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);\n    enter.type = 'mouseenter';\n    enter.target = toNode;\n    enter.relatedTarget = fromNode;\n\n    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);\n\n    return [leave, enter];\n  }\n\n};\n\nmodule.exports = EnterLeaveEventPlugin;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/EnterLeaveEventPlugin.js\n// module id = 126\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar PooledClass = require('./PooledClass');\n\nvar getTextContentAccessor = require('./getTextContentAccessor');\n\n/**\n * This helper class stores information about text content of a target node,\n * allowing comparison of content before and after a given event.\n *\n * Identify the node where selection currently begins, then observe\n * both its text content and its current position in the DOM. Since the\n * browser may natively replace the target node during composition, we can\n * use its position to find its replacement.\n *\n * @param {DOMEventTarget} root\n */\nfunction FallbackCompositionState(root) {\n  this._root = root;\n  this._startText = this.getText();\n  this._fallbackText = null;\n}\n\n_assign(FallbackCompositionState.prototype, {\n  destructor: function () {\n    this._root = null;\n    this._startText = null;\n    this._fallbackText = null;\n  },\n\n  /**\n   * Get current text of input.\n   *\n   * @return {string}\n   */\n  getText: function () {\n    if ('value' in this._root) {\n      return this._root.value;\n    }\n    return this._root[getTextContentAccessor()];\n  },\n\n  /**\n   * Determine the differing substring between the initially stored\n   * text content and the current content.\n   *\n   * @return {string}\n   */\n  getData: function () {\n    if (this._fallbackText) {\n      return this._fallbackText;\n    }\n\n    var start;\n    var startValue = this._startText;\n    var startLength = startValue.length;\n    var end;\n    var endValue = this.getText();\n    var endLength = endValue.length;\n\n    for (start = 0; start < startLength; start++) {\n      if (startValue[start] !== endValue[start]) {\n        break;\n      }\n    }\n\n    var minEnd = startLength - start;\n    for (end = 1; end <= minEnd; end++) {\n      if (startValue[startLength - end] !== endValue[endLength - end]) {\n        break;\n      }\n    }\n\n    var sliceTail = end > 1 ? 1 - end : undefined;\n    this._fallbackText = endValue.slice(start, sliceTail);\n    return this._fallbackText;\n  }\n});\n\nPooledClass.addPoolingTo(FallbackCompositionState);\n\nmodule.exports = FallbackCompositionState;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/FallbackCompositionState.js\n// module id = 127\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar DOMProperty = require('./DOMProperty');\n\nvar MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;\nvar HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;\nvar HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;\nvar HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;\nvar HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;\n\nvar HTMLDOMPropertyConfig = {\n  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),\n  Properties: {\n    /**\n     * Standard Properties\n     */\n    accept: 0,\n    acceptCharset: 0,\n    accessKey: 0,\n    action: 0,\n    allowFullScreen: HAS_BOOLEAN_VALUE,\n    allowTransparency: 0,\n    alt: 0,\n    // specifies target context for links with `preload` type\n    as: 0,\n    async: HAS_BOOLEAN_VALUE,\n    autoComplete: 0,\n    // autoFocus is polyfilled/normalized by AutoFocusUtils\n    // autoFocus: HAS_BOOLEAN_VALUE,\n    autoPlay: HAS_BOOLEAN_VALUE,\n    capture: HAS_BOOLEAN_VALUE,\n    cellPadding: 0,\n    cellSpacing: 0,\n    charSet: 0,\n    challenge: 0,\n    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    cite: 0,\n    classID: 0,\n    className: 0,\n    cols: HAS_POSITIVE_NUMERIC_VALUE,\n    colSpan: 0,\n    content: 0,\n    contentEditable: 0,\n    contextMenu: 0,\n    controls: HAS_BOOLEAN_VALUE,\n    coords: 0,\n    crossOrigin: 0,\n    data: 0, // For `<object />` acts as `src`.\n    dateTime: 0,\n    'default': HAS_BOOLEAN_VALUE,\n    defer: HAS_BOOLEAN_VALUE,\n    dir: 0,\n    disabled: HAS_BOOLEAN_VALUE,\n    download: HAS_OVERLOADED_BOOLEAN_VALUE,\n    draggable: 0,\n    encType: 0,\n    form: 0,\n    formAction: 0,\n    formEncType: 0,\n    formMethod: 0,\n    formNoValidate: HAS_BOOLEAN_VALUE,\n    formTarget: 0,\n    frameBorder: 0,\n    headers: 0,\n    height: 0,\n    hidden: HAS_BOOLEAN_VALUE,\n    high: 0,\n    href: 0,\n    hrefLang: 0,\n    htmlFor: 0,\n    httpEquiv: 0,\n    icon: 0,\n    id: 0,\n    inputMode: 0,\n    integrity: 0,\n    is: 0,\n    keyParams: 0,\n    keyType: 0,\n    kind: 0,\n    label: 0,\n    lang: 0,\n    list: 0,\n    loop: HAS_BOOLEAN_VALUE,\n    low: 0,\n    manifest: 0,\n    marginHeight: 0,\n    marginWidth: 0,\n    max: 0,\n    maxLength: 0,\n    media: 0,\n    mediaGroup: 0,\n    method: 0,\n    min: 0,\n    minLength: 0,\n    // Caution; `option.selected` is not updated if `select.multiple` is\n    // disabled with `removeAttribute`.\n    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    name: 0,\n    nonce: 0,\n    noValidate: HAS_BOOLEAN_VALUE,\n    open: HAS_BOOLEAN_VALUE,\n    optimum: 0,\n    pattern: 0,\n    placeholder: 0,\n    playsInline: HAS_BOOLEAN_VALUE,\n    poster: 0,\n    preload: 0,\n    profile: 0,\n    radioGroup: 0,\n    readOnly: HAS_BOOLEAN_VALUE,\n    referrerPolicy: 0,\n    rel: 0,\n    required: HAS_BOOLEAN_VALUE,\n    reversed: HAS_BOOLEAN_VALUE,\n    role: 0,\n    rows: HAS_POSITIVE_NUMERIC_VALUE,\n    rowSpan: HAS_NUMERIC_VALUE,\n    sandbox: 0,\n    scope: 0,\n    scoped: HAS_BOOLEAN_VALUE,\n    scrolling: 0,\n    seamless: HAS_BOOLEAN_VALUE,\n    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    shape: 0,\n    size: HAS_POSITIVE_NUMERIC_VALUE,\n    sizes: 0,\n    span: HAS_POSITIVE_NUMERIC_VALUE,\n    spellCheck: 0,\n    src: 0,\n    srcDoc: 0,\n    srcLang: 0,\n    srcSet: 0,\n    start: HAS_NUMERIC_VALUE,\n    step: 0,\n    style: 0,\n    summary: 0,\n    tabIndex: 0,\n    target: 0,\n    title: 0,\n    // Setting .type throws on non-<input> tags\n    type: 0,\n    useMap: 0,\n    value: 0,\n    width: 0,\n    wmode: 0,\n    wrap: 0,\n\n    /**\n     * RDFa Properties\n     */\n    about: 0,\n    datatype: 0,\n    inlist: 0,\n    prefix: 0,\n    // property is also supported for OpenGraph in meta tags.\n    property: 0,\n    resource: 0,\n    'typeof': 0,\n    vocab: 0,\n\n    /**\n     * Non-standard Properties\n     */\n    // autoCapitalize and autoCorrect are supported in Mobile Safari for\n    // keyboard hints.\n    autoCapitalize: 0,\n    autoCorrect: 0,\n    // autoSave allows WebKit/Blink to persist values of input fields on page reloads\n    autoSave: 0,\n    // color is for Safari mask-icon link\n    color: 0,\n    // itemProp, itemScope, itemType are for\n    // Microdata support. See http://schema.org/docs/gs.html\n    itemProp: 0,\n    itemScope: HAS_BOOLEAN_VALUE,\n    itemType: 0,\n    // itemID and itemRef are for Microdata support as well but\n    // only specified in the WHATWG spec document. See\n    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api\n    itemID: 0,\n    itemRef: 0,\n    // results show looking glass icon and recent searches on input\n    // search fields in WebKit/Blink\n    results: 0,\n    // IE-only attribute that specifies security restrictions on an iframe\n    // as an alternative to the sandbox attribute on IE<10\n    security: 0,\n    // IE-only attribute that controls focus behavior\n    unselectable: 0\n  },\n  DOMAttributeNames: {\n    acceptCharset: 'accept-charset',\n    className: 'class',\n    htmlFor: 'for',\n    httpEquiv: 'http-equiv'\n  },\n  DOMPropertyNames: {},\n  DOMMutationMethods: {\n    value: function (node, value) {\n      if (value == null) {\n        return node.removeAttribute('value');\n      }\n\n      // Number inputs get special treatment due to some edge cases in\n      // Chrome. Let everything else assign the value attribute as normal.\n      // https://github.com/facebook/react/issues/7253#issuecomment-236074326\n      if (node.type !== 'number' || node.hasAttribute('value') === false) {\n        node.setAttribute('value', '' + value);\n      } else if (node.validity && !node.validity.badInput && node.ownerDocument.activeElement !== node) {\n        // Don't assign an attribute if validation reports bad\n        // input. Chrome will clear the value. Additionally, don't\n        // operate on inputs that have focus, otherwise Chrome might\n        // strip off trailing decimal places and cause the user's\n        // cursor position to jump to the beginning of the input.\n        //\n        // In ReactDOMInput, we have an onBlur event that will trigger\n        // this function again when focus is lost.\n        node.setAttribute('value', '' + value);\n      }\n    }\n  }\n};\n\nmodule.exports = HTMLDOMPropertyConfig;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/HTMLDOMPropertyConfig.js\n// module id = 128\n// module chunks = 0","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactReconciler = require('./ReactReconciler');\n\nvar instantiateReactComponent = require('./instantiateReactComponent');\nvar KeyEscapeUtils = require('./KeyEscapeUtils');\nvar shouldUpdateReactComponent = require('./shouldUpdateReactComponent');\nvar traverseAllChildren = require('./traverseAllChildren');\nvar warning = require('fbjs/lib/warning');\n\nvar ReactComponentTreeHook;\n\nif (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {\n  // Temporary hack.\n  // Inline requires don't work well with Jest:\n  // https://github.com/facebook/react/issues/7240\n  // Remove the inline requires when we don't need them anymore:\n  // https://github.com/facebook/react/pull/7178\n  ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\n}\n\nfunction instantiateChild(childInstances, child, name, selfDebugID) {\n  // We found a component instance.\n  var keyUnique = childInstances[name] === undefined;\n  if (process.env.NODE_ENV !== 'production') {\n    if (!ReactComponentTreeHook) {\n      ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\n    }\n    if (!keyUnique) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;\n    }\n  }\n  if (child != null && keyUnique) {\n    childInstances[name] = instantiateReactComponent(child, true);\n  }\n}\n\n/**\n * ReactChildReconciler provides helpers for initializing or updating a set of\n * children. Its output is suitable for passing it onto ReactMultiChild which\n * does diffed reordering and insertion.\n */\nvar ReactChildReconciler = {\n  /**\n   * Generates a \"mount image\" for each of the supplied children. In the case\n   * of `ReactDOMComponent`, a mount image is a string of markup.\n   *\n   * @param {?object} nestedChildNodes Nested child maps.\n   * @return {?object} A set of child instances.\n   * @internal\n   */\n  instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID // 0 in production and for roots\n  ) {\n    if (nestedChildNodes == null) {\n      return null;\n    }\n    var childInstances = {};\n\n    if (process.env.NODE_ENV !== 'production') {\n      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {\n        return instantiateChild(childInsts, child, name, selfDebugID);\n      }, childInstances);\n    } else {\n      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);\n    }\n    return childInstances;\n  },\n\n  /**\n   * Updates the rendered children and returns a new set of children.\n   *\n   * @param {?object} prevChildren Previously initialized set of children.\n   * @param {?object} nextChildren Flat child element maps.\n   * @param {ReactReconcileTransaction} transaction\n   * @param {object} context\n   * @return {?object} A new set of child instances.\n   * @internal\n   */\n  updateChildren: function (prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID // 0 in production and for roots\n  ) {\n    // We currently don't have a way to track moves here but if we use iterators\n    // instead of for..in we can zip the iterators and check if an item has\n    // moved.\n    // TODO: If nothing has changed, return the prevChildren object so that we\n    // can quickly bailout if nothing has changed.\n    if (!nextChildren && !prevChildren) {\n      return;\n    }\n    var name;\n    var prevChild;\n    for (name in nextChildren) {\n      if (!nextChildren.hasOwnProperty(name)) {\n        continue;\n      }\n      prevChild = prevChildren && prevChildren[name];\n      var prevElement = prevChild && prevChild._currentElement;\n      var nextElement = nextChildren[name];\n      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {\n        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);\n        nextChildren[name] = prevChild;\n      } else {\n        if (prevChild) {\n          removedNodes[name] = ReactReconciler.getHostNode(prevChild);\n          ReactReconciler.unmountComponent(prevChild, false);\n        }\n        // The child must be instantiated before it's mounted.\n        var nextChildInstance = instantiateReactComponent(nextElement, true);\n        nextChildren[name] = nextChildInstance;\n        // Creating mount image now ensures refs are resolved in right order\n        // (see https://github.com/facebook/react/pull/7101 for explanation).\n        var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);\n        mountImages.push(nextChildMountImage);\n      }\n    }\n    // Unmount children that are no longer present.\n    for (name in prevChildren) {\n      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {\n        prevChild = prevChildren[name];\n        removedNodes[name] = ReactReconciler.getHostNode(prevChild);\n        ReactReconciler.unmountComponent(prevChild, false);\n      }\n    }\n  },\n\n  /**\n   * Unmounts all rendered children. This should be used to clean up children\n   * when this component is unmounted.\n   *\n   * @param {?object} renderedChildren Previously initialized set of children.\n   * @internal\n   */\n  unmountChildren: function (renderedChildren, safely) {\n    for (var name in renderedChildren) {\n      if (renderedChildren.hasOwnProperty(name)) {\n        var renderedChild = renderedChildren[name];\n        ReactReconciler.unmountComponent(renderedChild, safely);\n      }\n    }\n  }\n\n};\n\nmodule.exports = ReactChildReconciler;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactChildReconciler.js\n// module id = 129\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar DOMChildrenOperations = require('./DOMChildrenOperations');\nvar ReactDOMIDOperations = require('./ReactDOMIDOperations');\n\n/**\n * Abstracts away all functionality of the reconciler that requires knowledge of\n * the browser context. TODO: These callers should be refactored to avoid the\n * need for this injection.\n */\nvar ReactComponentBrowserEnvironment = {\n\n  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,\n\n  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup\n\n};\n\nmodule.exports = ReactComponentBrowserEnvironment;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactComponentBrowserEnvironment.js\n// module id = 130\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar React = require('react/lib/React');\nvar ReactComponentEnvironment = require('./ReactComponentEnvironment');\nvar ReactCurrentOwner = require('react/lib/ReactCurrentOwner');\nvar ReactErrorUtils = require('./ReactErrorUtils');\nvar ReactInstanceMap = require('./ReactInstanceMap');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar ReactNodeTypes = require('./ReactNodeTypes');\nvar ReactReconciler = require('./ReactReconciler');\n\nif (process.env.NODE_ENV !== 'production') {\n  var checkReactTypeSpec = require('./checkReactTypeSpec');\n}\n\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar invariant = require('fbjs/lib/invariant');\nvar shallowEqual = require('fbjs/lib/shallowEqual');\nvar shouldUpdateReactComponent = require('./shouldUpdateReactComponent');\nvar warning = require('fbjs/lib/warning');\n\nvar CompositeTypes = {\n  ImpureClass: 0,\n  PureClass: 1,\n  StatelessFunctional: 2\n};\n\nfunction StatelessComponent(Component) {}\nStatelessComponent.prototype.render = function () {\n  var Component = ReactInstanceMap.get(this)._currentElement.type;\n  var element = Component(this.props, this.context, this.updater);\n  warnIfInvalidElement(Component, element);\n  return element;\n};\n\nfunction warnIfInvalidElement(Component, element) {\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || React.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;\n    process.env.NODE_ENV !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;\n  }\n}\n\nfunction shouldConstruct(Component) {\n  return !!(Component.prototype && Component.prototype.isReactComponent);\n}\n\nfunction isPureComponent(Component) {\n  return !!(Component.prototype && Component.prototype.isPureReactComponent);\n}\n\n// Separated into a function to contain deoptimizations caused by try/finally.\nfunction measureLifeCyclePerf(fn, debugID, timerType) {\n  if (debugID === 0) {\n    // Top-level wrappers (see ReactMount) and empty components (see\n    // ReactDOMEmptyComponent) are invisible to hooks and devtools.\n    // Both are implementation details that should go away in the future.\n    return fn();\n  }\n\n  ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);\n  try {\n    return fn();\n  } finally {\n    ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType);\n  }\n}\n\n/**\n * ------------------ The Life-Cycle of a Composite Component ------------------\n *\n * - constructor: Initialization of state. The instance is now retained.\n *   - componentWillMount\n *   - render\n *   - [children's constructors]\n *     - [children's componentWillMount and render]\n *     - [children's componentDidMount]\n *     - componentDidMount\n *\n *       Update Phases:\n *       - componentWillReceiveProps (only called if parent updated)\n *       - shouldComponentUpdate\n *         - componentWillUpdate\n *           - render\n *           - [children's constructors or receive props phases]\n *         - componentDidUpdate\n *\n *     - componentWillUnmount\n *     - [children's componentWillUnmount]\n *   - [children destroyed]\n * - (destroyed): The instance is now blank, released by React and ready for GC.\n *\n * -----------------------------------------------------------------------------\n */\n\n/**\n * An incrementing ID assigned to each component when it is mounted. This is\n * used to enforce the order in which `ReactUpdates` updates dirty components.\n *\n * @private\n */\nvar nextMountID = 1;\n\n/**\n * @lends {ReactCompositeComponent.prototype}\n */\nvar ReactCompositeComponent = {\n\n  /**\n   * Base constructor for all composite component.\n   *\n   * @param {ReactElement} element\n   * @final\n   * @internal\n   */\n  construct: function (element) {\n    this._currentElement = element;\n    this._rootNodeID = 0;\n    this._compositeType = null;\n    this._instance = null;\n    this._hostParent = null;\n    this._hostContainerInfo = null;\n\n    // See ReactUpdateQueue\n    this._updateBatchNumber = null;\n    this._pendingElement = null;\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n\n    this._renderedNodeType = null;\n    this._renderedComponent = null;\n    this._context = null;\n    this._mountOrder = 0;\n    this._topLevelWrapper = null;\n\n    // See ReactUpdates and ReactUpdateQueue.\n    this._pendingCallbacks = null;\n\n    // ComponentWillUnmount shall only be called once\n    this._calledComponentWillUnmount = false;\n\n    if (process.env.NODE_ENV !== 'production') {\n      this._warnedAboutRefsInRender = false;\n    }\n  },\n\n  /**\n   * Initializes the component, renders markup, and registers event listeners.\n   *\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {?object} hostParent\n   * @param {?object} hostContainerInfo\n   * @param {?object} context\n   * @return {?string} Rendered markup to be inserted into the DOM.\n   * @final\n   * @internal\n   */\n  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n    var _this = this;\n\n    this._context = context;\n    this._mountOrder = nextMountID++;\n    this._hostParent = hostParent;\n    this._hostContainerInfo = hostContainerInfo;\n\n    var publicProps = this._currentElement.props;\n    var publicContext = this._processContext(context);\n\n    var Component = this._currentElement.type;\n\n    var updateQueue = transaction.getUpdateQueue();\n\n    // Initialize the public class\n    var doConstruct = shouldConstruct(Component);\n    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);\n    var renderedElement;\n\n    // Support functional components\n    if (!doConstruct && (inst == null || inst.render == null)) {\n      renderedElement = inst;\n      warnIfInvalidElement(Component, renderedElement);\n      !(inst === null || inst === false || React.isValidElement(inst)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;\n      inst = new StatelessComponent(Component);\n      this._compositeType = CompositeTypes.StatelessFunctional;\n    } else {\n      if (isPureComponent(Component)) {\n        this._compositeType = CompositeTypes.PureClass;\n      } else {\n        this._compositeType = CompositeTypes.ImpureClass;\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // This will throw later in _renderValidatedComponent, but add an early\n      // warning now to help debugging\n      if (inst.render == null) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;\n      }\n\n      var propsMutated = inst.props !== publicProps;\n      var componentName = Component.displayName || Component.name || 'Component';\n\n      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + 'up the same props that your component\\'s constructor was passed.', componentName, componentName) : void 0;\n    }\n\n    // These should be set up in the constructor, but as a convenience for\n    // simpler class abstractions, we set them up after the fact.\n    inst.props = publicProps;\n    inst.context = publicContext;\n    inst.refs = emptyObject;\n    inst.updater = updateQueue;\n\n    this._instance = inst;\n\n    // Store a reference from the instance back to the internal representation\n    ReactInstanceMap.set(inst, this);\n\n    if (process.env.NODE_ENV !== 'production') {\n      // Since plain JS classes are defined without any special initialization\n      // logic, we can not catch common errors early. Therefore, we have to\n      // catch them here, at initialization time, instead.\n      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved || inst.state, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;\n    }\n\n    var initialState = inst.state;\n    if (initialState === undefined) {\n      inst.state = initialState = null;\n    }\n    !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;\n\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n\n    var markup;\n    if (inst.unstable_handleError) {\n      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);\n    } else {\n      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);\n    }\n\n    if (inst.componentDidMount) {\n      if (process.env.NODE_ENV !== 'production') {\n        transaction.getReactMountReady().enqueue(function () {\n          measureLifeCyclePerf(function () {\n            return inst.componentDidMount();\n          }, _this._debugID, 'componentDidMount');\n        });\n      } else {\n        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);\n      }\n    }\n\n    return markup;\n  },\n\n  _constructComponent: function (doConstruct, publicProps, publicContext, updateQueue) {\n    if (process.env.NODE_ENV !== 'production') {\n      ReactCurrentOwner.current = this;\n      try {\n        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);\n      } finally {\n        ReactCurrentOwner.current = null;\n      }\n    } else {\n      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);\n    }\n  },\n\n  _constructComponentWithoutOwner: function (doConstruct, publicProps, publicContext, updateQueue) {\n    var Component = this._currentElement.type;\n\n    if (doConstruct) {\n      if (process.env.NODE_ENV !== 'production') {\n        return measureLifeCyclePerf(function () {\n          return new Component(publicProps, publicContext, updateQueue);\n        }, this._debugID, 'ctor');\n      } else {\n        return new Component(publicProps, publicContext, updateQueue);\n      }\n    }\n\n    // This can still be an instance in case of factory components\n    // but we'll count this as time spent rendering as the more common case.\n    if (process.env.NODE_ENV !== 'production') {\n      return measureLifeCyclePerf(function () {\n        return Component(publicProps, publicContext, updateQueue);\n      }, this._debugID, 'render');\n    } else {\n      return Component(publicProps, publicContext, updateQueue);\n    }\n  },\n\n  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {\n    var markup;\n    var checkpoint = transaction.checkpoint();\n    try {\n      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);\n    } catch (e) {\n      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint\n      transaction.rollback(checkpoint);\n      this._instance.unstable_handleError(e);\n      if (this._pendingStateQueue) {\n        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);\n      }\n      checkpoint = transaction.checkpoint();\n\n      this._renderedComponent.unmountComponent(true);\n      transaction.rollback(checkpoint);\n\n      // Try again - we've informed the component about the error, so they can render an error message this time.\n      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).\n      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);\n    }\n    return markup;\n  },\n\n  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {\n    var inst = this._instance;\n\n    var debugID = 0;\n    if (process.env.NODE_ENV !== 'production') {\n      debugID = this._debugID;\n    }\n\n    if (inst.componentWillMount) {\n      if (process.env.NODE_ENV !== 'production') {\n        measureLifeCyclePerf(function () {\n          return inst.componentWillMount();\n        }, debugID, 'componentWillMount');\n      } else {\n        inst.componentWillMount();\n      }\n      // When mounting, calls to `setState` by `componentWillMount` will set\n      // `this._pendingStateQueue` without triggering a re-render.\n      if (this._pendingStateQueue) {\n        inst.state = this._processPendingState(inst.props, inst.context);\n      }\n    }\n\n    // If not a stateless component, we now render\n    if (renderedElement === undefined) {\n      renderedElement = this._renderValidatedComponent();\n    }\n\n    var nodeType = ReactNodeTypes.getType(renderedElement);\n    this._renderedNodeType = nodeType;\n    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */\n    );\n    this._renderedComponent = child;\n\n    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), debugID);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (debugID !== 0) {\n        var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];\n        ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);\n      }\n    }\n\n    return markup;\n  },\n\n  getHostNode: function () {\n    return ReactReconciler.getHostNode(this._renderedComponent);\n  },\n\n  /**\n   * Releases any resources allocated by `mountComponent`.\n   *\n   * @final\n   * @internal\n   */\n  unmountComponent: function (safely) {\n    if (!this._renderedComponent) {\n      return;\n    }\n\n    var inst = this._instance;\n\n    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {\n      inst._calledComponentWillUnmount = true;\n\n      if (safely) {\n        var name = this.getName() + '.componentWillUnmount()';\n        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          measureLifeCyclePerf(function () {\n            return inst.componentWillUnmount();\n          }, this._debugID, 'componentWillUnmount');\n        } else {\n          inst.componentWillUnmount();\n        }\n      }\n    }\n\n    if (this._renderedComponent) {\n      ReactReconciler.unmountComponent(this._renderedComponent, safely);\n      this._renderedNodeType = null;\n      this._renderedComponent = null;\n      this._instance = null;\n    }\n\n    // Reset pending fields\n    // Even if this component is scheduled for another update in ReactUpdates,\n    // it would still be ignored because these fields are reset.\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n    this._pendingCallbacks = null;\n    this._pendingElement = null;\n\n    // These fields do not really need to be reset since this object is no\n    // longer accessible.\n    this._context = null;\n    this._rootNodeID = 0;\n    this._topLevelWrapper = null;\n\n    // Delete the reference from the instance to this internal representation\n    // which allow the internals to be properly cleaned up even if the user\n    // leaks a reference to the public instance.\n    ReactInstanceMap.remove(inst);\n\n    // Some existing components rely on inst.props even after they've been\n    // destroyed (in event handlers).\n    // TODO: inst.props = null;\n    // TODO: inst.state = null;\n    // TODO: inst.context = null;\n  },\n\n  /**\n   * Filters the context object to only contain keys specified in\n   * `contextTypes`\n   *\n   * @param {object} context\n   * @return {?object}\n   * @private\n   */\n  _maskContext: function (context) {\n    var Component = this._currentElement.type;\n    var contextTypes = Component.contextTypes;\n    if (!contextTypes) {\n      return emptyObject;\n    }\n    var maskedContext = {};\n    for (var contextName in contextTypes) {\n      maskedContext[contextName] = context[contextName];\n    }\n    return maskedContext;\n  },\n\n  /**\n   * Filters the context object to only contain keys specified in\n   * `contextTypes`, and asserts that they are valid.\n   *\n   * @param {object} context\n   * @return {?object}\n   * @private\n   */\n  _processContext: function (context) {\n    var maskedContext = this._maskContext(context);\n    if (process.env.NODE_ENV !== 'production') {\n      var Component = this._currentElement.type;\n      if (Component.contextTypes) {\n        this._checkContextTypes(Component.contextTypes, maskedContext, 'context');\n      }\n    }\n    return maskedContext;\n  },\n\n  /**\n   * @param {object} currentContext\n   * @return {object}\n   * @private\n   */\n  _processChildContext: function (currentContext) {\n    var Component = this._currentElement.type;\n    var inst = this._instance;\n    var childContext;\n\n    if (inst.getChildContext) {\n      if (process.env.NODE_ENV !== 'production') {\n        ReactInstrumentation.debugTool.onBeginProcessingChildContext();\n        try {\n          childContext = inst.getChildContext();\n        } finally {\n          ReactInstrumentation.debugTool.onEndProcessingChildContext();\n        }\n      } else {\n        childContext = inst.getChildContext();\n      }\n    }\n\n    if (childContext) {\n      !(typeof Component.childContextTypes === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;\n      if (process.env.NODE_ENV !== 'production') {\n        this._checkContextTypes(Component.childContextTypes, childContext, 'child context');\n      }\n      for (var name in childContext) {\n        !(name in Component.childContextTypes) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): key \"%s\" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;\n      }\n      return _assign({}, currentContext, childContext);\n    }\n    return currentContext;\n  },\n\n  /**\n   * Assert that the context types are valid\n   *\n   * @param {object} typeSpecs Map of context field to a ReactPropType\n   * @param {object} values Runtime values that need to be type-checked\n   * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n   * @private\n   */\n  _checkContextTypes: function (typeSpecs, values, location) {\n    if (process.env.NODE_ENV !== 'production') {\n      checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);\n    }\n  },\n\n  receiveComponent: function (nextElement, transaction, nextContext) {\n    var prevElement = this._currentElement;\n    var prevContext = this._context;\n\n    this._pendingElement = null;\n\n    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);\n  },\n\n  /**\n   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`\n   * is set, update the component.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  performUpdateIfNecessary: function (transaction) {\n    if (this._pendingElement != null) {\n      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);\n    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {\n      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);\n    } else {\n      this._updateBatchNumber = null;\n    }\n  },\n\n  /**\n   * Perform an update to a mounted component. The componentWillReceiveProps and\n   * shouldComponentUpdate methods are called, then (assuming the update isn't\n   * skipped) the remaining update lifecycle methods are called and the DOM\n   * representation is updated.\n   *\n   * By default, this implements React's rendering and reconciliation algorithm.\n   * Sophisticated clients may wish to override this.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @param {ReactElement} prevParentElement\n   * @param {ReactElement} nextParentElement\n   * @internal\n   * @overridable\n   */\n  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {\n    var inst = this._instance;\n    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;\n\n    var willReceive = false;\n    var nextContext;\n\n    // Determine if the context has changed or not\n    if (this._context === nextUnmaskedContext) {\n      nextContext = inst.context;\n    } else {\n      nextContext = this._processContext(nextUnmaskedContext);\n      willReceive = true;\n    }\n\n    var prevProps = prevParentElement.props;\n    var nextProps = nextParentElement.props;\n\n    // Not a simple state update but a props update\n    if (prevParentElement !== nextParentElement) {\n      willReceive = true;\n    }\n\n    // An update here will schedule an update but immediately set\n    // _pendingStateQueue which will ensure that any state updates gets\n    // immediately reconciled instead of waiting for the next batch.\n    if (willReceive && inst.componentWillReceiveProps) {\n      if (process.env.NODE_ENV !== 'production') {\n        measureLifeCyclePerf(function () {\n          return inst.componentWillReceiveProps(nextProps, nextContext);\n        }, this._debugID, 'componentWillReceiveProps');\n      } else {\n        inst.componentWillReceiveProps(nextProps, nextContext);\n      }\n    }\n\n    var nextState = this._processPendingState(nextProps, nextContext);\n    var shouldUpdate = true;\n\n    if (!this._pendingForceUpdate) {\n      if (inst.shouldComponentUpdate) {\n        if (process.env.NODE_ENV !== 'production') {\n          shouldUpdate = measureLifeCyclePerf(function () {\n            return inst.shouldComponentUpdate(nextProps, nextState, nextContext);\n          }, this._debugID, 'shouldComponentUpdate');\n        } else {\n          shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);\n        }\n      } else {\n        if (this._compositeType === CompositeTypes.PureClass) {\n          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);\n        }\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;\n    }\n\n    this._updateBatchNumber = null;\n    if (shouldUpdate) {\n      this._pendingForceUpdate = false;\n      // Will set `this.props`, `this.state` and `this.context`.\n      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);\n    } else {\n      // If it's determined that a component should not update, we still want\n      // to set props and state but we shortcut the rest of the update.\n      this._currentElement = nextParentElement;\n      this._context = nextUnmaskedContext;\n      inst.props = nextProps;\n      inst.state = nextState;\n      inst.context = nextContext;\n    }\n  },\n\n  _processPendingState: function (props, context) {\n    var inst = this._instance;\n    var queue = this._pendingStateQueue;\n    var replace = this._pendingReplaceState;\n    this._pendingReplaceState = false;\n    this._pendingStateQueue = null;\n\n    if (!queue) {\n      return inst.state;\n    }\n\n    if (replace && queue.length === 1) {\n      return queue[0];\n    }\n\n    var nextState = _assign({}, replace ? queue[0] : inst.state);\n    for (var i = replace ? 1 : 0; i < queue.length; i++) {\n      var partial = queue[i];\n      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);\n    }\n\n    return nextState;\n  },\n\n  /**\n   * Merges new props and state, notifies delegate methods of update and\n   * performs update.\n   *\n   * @param {ReactElement} nextElement Next element\n   * @param {object} nextProps Next public object to set as properties.\n   * @param {?object} nextState Next object to set as state.\n   * @param {?object} nextContext Next public object to set as context.\n   * @param {ReactReconcileTransaction} transaction\n   * @param {?object} unmaskedContext\n   * @private\n   */\n  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {\n    var _this2 = this;\n\n    var inst = this._instance;\n\n    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);\n    var prevProps;\n    var prevState;\n    var prevContext;\n    if (hasComponentDidUpdate) {\n      prevProps = inst.props;\n      prevState = inst.state;\n      prevContext = inst.context;\n    }\n\n    if (inst.componentWillUpdate) {\n      if (process.env.NODE_ENV !== 'production') {\n        measureLifeCyclePerf(function () {\n          return inst.componentWillUpdate(nextProps, nextState, nextContext);\n        }, this._debugID, 'componentWillUpdate');\n      } else {\n        inst.componentWillUpdate(nextProps, nextState, nextContext);\n      }\n    }\n\n    this._currentElement = nextElement;\n    this._context = unmaskedContext;\n    inst.props = nextProps;\n    inst.state = nextState;\n    inst.context = nextContext;\n\n    this._updateRenderedComponent(transaction, unmaskedContext);\n\n    if (hasComponentDidUpdate) {\n      if (process.env.NODE_ENV !== 'production') {\n        transaction.getReactMountReady().enqueue(function () {\n          measureLifeCyclePerf(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), _this2._debugID, 'componentDidUpdate');\n        });\n      } else {\n        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);\n      }\n    }\n  },\n\n  /**\n   * Call the component's `render` method and update the DOM accordingly.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  _updateRenderedComponent: function (transaction, context) {\n    var prevComponentInstance = this._renderedComponent;\n    var prevRenderedElement = prevComponentInstance._currentElement;\n    var nextRenderedElement = this._renderValidatedComponent();\n\n    var debugID = 0;\n    if (process.env.NODE_ENV !== 'production') {\n      debugID = this._debugID;\n    }\n\n    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {\n      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));\n    } else {\n      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);\n      ReactReconciler.unmountComponent(prevComponentInstance, false);\n\n      var nodeType = ReactNodeTypes.getType(nextRenderedElement);\n      this._renderedNodeType = nodeType;\n      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */\n      );\n      this._renderedComponent = child;\n\n      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), debugID);\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (debugID !== 0) {\n          var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];\n          ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);\n        }\n      }\n\n      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);\n    }\n  },\n\n  /**\n   * Overridden in shallow rendering.\n   *\n   * @protected\n   */\n  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {\n    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);\n  },\n\n  /**\n   * @protected\n   */\n  _renderValidatedComponentWithoutOwnerOrContext: function () {\n    var inst = this._instance;\n    var renderedElement;\n\n    if (process.env.NODE_ENV !== 'production') {\n      renderedElement = measureLifeCyclePerf(function () {\n        return inst.render();\n      }, this._debugID, 'render');\n    } else {\n      renderedElement = inst.render();\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // We allow auto-mocks to proceed as if they're returning null.\n      if (renderedElement === undefined && inst.render._isMockFunction) {\n        // This is probably bad practice. Consider warning here and\n        // deprecating this convenience.\n        renderedElement = null;\n      }\n    }\n\n    return renderedElement;\n  },\n\n  /**\n   * @private\n   */\n  _renderValidatedComponent: function () {\n    var renderedElement;\n    if (process.env.NODE_ENV !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {\n      ReactCurrentOwner.current = this;\n      try {\n        renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();\n      } finally {\n        ReactCurrentOwner.current = null;\n      }\n    } else {\n      renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();\n    }\n    !(\n    // TODO: An `isValidNode` function would probably be more appropriate\n    renderedElement === null || renderedElement === false || React.isValidElement(renderedElement)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;\n\n    return renderedElement;\n  },\n\n  /**\n   * Lazily allocates the refs object and stores `component` as `ref`.\n   *\n   * @param {string} ref Reference name.\n   * @param {component} component Component to store as `ref`.\n   * @final\n   * @private\n   */\n  attachRef: function (ref, component) {\n    var inst = this.getPublicInstance();\n    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;\n    var publicComponentInstance = component.getPublicInstance();\n    if (process.env.NODE_ENV !== 'production') {\n      var componentName = component && component.getName ? component.getName() : 'a component';\n      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null || component._compositeType !== CompositeTypes.StatelessFunctional, 'Stateless function components cannot be given refs ' + '(See ref \"%s\" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;\n    }\n    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;\n    refs[ref] = publicComponentInstance;\n  },\n\n  /**\n   * Detaches a reference name.\n   *\n   * @param {string} ref Name to dereference.\n   * @final\n   * @private\n   */\n  detachRef: function (ref) {\n    var refs = this.getPublicInstance().refs;\n    delete refs[ref];\n  },\n\n  /**\n   * Get a text description of the component that can be used to identify it\n   * in error messages.\n   * @return {string} The name or null.\n   * @internal\n   */\n  getName: function () {\n    var type = this._currentElement.type;\n    var constructor = this._instance && this._instance.constructor;\n    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;\n  },\n\n  /**\n   * Get the publicly accessible representation of this component - i.e. what\n   * is exposed by refs and returned by render. Can be null for stateless\n   * components.\n   *\n   * @return {ReactComponent} the public component instance.\n   * @internal\n   */\n  getPublicInstance: function () {\n    var inst = this._instance;\n    if (this._compositeType === CompositeTypes.StatelessFunctional) {\n      return null;\n    }\n    return inst;\n  },\n\n  // Stub\n  _instantiateReactComponent: null\n\n};\n\nmodule.exports = ReactCompositeComponent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactCompositeComponent.js\n// module id = 131\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/\n\n'use strict';\n\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactDefaultInjection = require('./ReactDefaultInjection');\nvar ReactMount = require('./ReactMount');\nvar ReactReconciler = require('./ReactReconciler');\nvar ReactUpdates = require('./ReactUpdates');\nvar ReactVersion = require('./ReactVersion');\n\nvar findDOMNode = require('./findDOMNode');\nvar getHostComponentFromComposite = require('./getHostComponentFromComposite');\nvar renderSubtreeIntoContainer = require('./renderSubtreeIntoContainer');\nvar warning = require('fbjs/lib/warning');\n\nReactDefaultInjection.inject();\n\nvar ReactDOM = {\n  findDOMNode: findDOMNode,\n  render: ReactMount.render,\n  unmountComponentAtNode: ReactMount.unmountComponentAtNode,\n  version: ReactVersion,\n\n  /* eslint-disable camelcase */\n  unstable_batchedUpdates: ReactUpdates.batchedUpdates,\n  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer\n};\n\n// Inject the runtime into a devtools global hook regardless of browser.\n// Allows for debugging when the hook is injected on the page.\nif (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({\n    ComponentTree: {\n      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,\n      getNodeFromInstance: function (inst) {\n        // inst is an internal instance (but could be a composite)\n        if (inst._renderedComponent) {\n          inst = getHostComponentFromComposite(inst);\n        }\n        if (inst) {\n          return ReactDOMComponentTree.getNodeFromInstance(inst);\n        } else {\n          return null;\n        }\n      }\n    },\n    Mount: ReactMount,\n    Reconciler: ReactReconciler\n  });\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {\n\n    // First check if devtools is not installed\n    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n      // If we're in Chrome or Firefox, provide a download link if not installed.\n      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {\n        // Firefox does not have the issue with devtools loaded over file://\n        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;\n        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');\n      }\n    }\n\n    var testFunc = function testFn() {};\n    process.env.NODE_ENV !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, 'It looks like you\\'re using a minified copy of the development build ' + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;\n\n    // If we're in IE8, check to see if we are in compatibility mode and provide\n    // information on preventing compatibility mode\n    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;\n\n    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />') : void 0;\n\n    var expectedFeatures = [\n    // shims\n    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.trim];\n\n    for (var i = 0; i < expectedFeatures.length; i++) {\n      if (!expectedFeatures[i]) {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;\n        break;\n      }\n    }\n  }\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactInstrumentation = require('./ReactInstrumentation');\n  var ReactDOMUnknownPropertyHook = require('./ReactDOMUnknownPropertyHook');\n  var ReactDOMNullInputValuePropHook = require('./ReactDOMNullInputValuePropHook');\n  var ReactDOMInvalidARIAHook = require('./ReactDOMInvalidARIAHook');\n\n  ReactInstrumentation.debugTool.addHook(ReactDOMUnknownPropertyHook);\n  ReactInstrumentation.debugTool.addHook(ReactDOMNullInputValuePropHook);\n  ReactInstrumentation.debugTool.addHook(ReactDOMInvalidARIAHook);\n}\n\nmodule.exports = ReactDOM;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOM.js\n// module id = 132\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n/* global hasOwnProperty:true */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar AutoFocusUtils = require('./AutoFocusUtils');\nvar CSSPropertyOperations = require('./CSSPropertyOperations');\nvar DOMLazyTree = require('./DOMLazyTree');\nvar DOMNamespaces = require('./DOMNamespaces');\nvar DOMProperty = require('./DOMProperty');\nvar DOMPropertyOperations = require('./DOMPropertyOperations');\nvar EventPluginHub = require('./EventPluginHub');\nvar EventPluginRegistry = require('./EventPluginRegistry');\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\nvar ReactDOMComponentFlags = require('./ReactDOMComponentFlags');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactDOMInput = require('./ReactDOMInput');\nvar ReactDOMOption = require('./ReactDOMOption');\nvar ReactDOMSelect = require('./ReactDOMSelect');\nvar ReactDOMTextarea = require('./ReactDOMTextarea');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar ReactMultiChild = require('./ReactMultiChild');\nvar ReactServerRenderingTransaction = require('./ReactServerRenderingTransaction');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar escapeTextContentForBrowser = require('./escapeTextContentForBrowser');\nvar invariant = require('fbjs/lib/invariant');\nvar isEventSupported = require('./isEventSupported');\nvar shallowEqual = require('fbjs/lib/shallowEqual');\nvar validateDOMNesting = require('./validateDOMNesting');\nvar warning = require('fbjs/lib/warning');\n\nvar Flags = ReactDOMComponentFlags;\nvar deleteListener = EventPluginHub.deleteListener;\nvar getNode = ReactDOMComponentTree.getNodeFromInstance;\nvar listenTo = ReactBrowserEventEmitter.listenTo;\nvar registrationNameModules = EventPluginRegistry.registrationNameModules;\n\n// For quickly matching children type, to test if can be treated as content.\nvar CONTENT_TYPES = { 'string': true, 'number': true };\n\nvar STYLE = 'style';\nvar HTML = '__html';\nvar RESERVED_PROPS = {\n  children: null,\n  dangerouslySetInnerHTML: null,\n  suppressContentEditableWarning: null\n};\n\n// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).\nvar DOC_FRAGMENT_TYPE = 11;\n\nfunction getDeclarationErrorAddendum(internalInstance) {\n  if (internalInstance) {\n    var owner = internalInstance._currentElement._owner || null;\n    if (owner) {\n      var name = owner.getName();\n      if (name) {\n        return ' This DOM node was rendered by `' + name + '`.';\n      }\n    }\n  }\n  return '';\n}\n\nfunction friendlyStringify(obj) {\n  if (typeof obj === 'object') {\n    if (Array.isArray(obj)) {\n      return '[' + obj.map(friendlyStringify).join(', ') + ']';\n    } else {\n      var pairs = [];\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var keyEscaped = /^[a-z$_][\\w$_]*$/i.test(key) ? key : JSON.stringify(key);\n          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));\n        }\n      }\n      return '{' + pairs.join(', ') + '}';\n    }\n  } else if (typeof obj === 'string') {\n    return JSON.stringify(obj);\n  } else if (typeof obj === 'function') {\n    return '[function object]';\n  }\n  // Differs from JSON.stringify in that undefined because undefined and that\n  // inf and nan don't become null\n  return String(obj);\n}\n\nvar styleMutationWarning = {};\n\nfunction checkAndWarnForMutatedStyle(style1, style2, component) {\n  if (style1 == null || style2 == null) {\n    return;\n  }\n  if (shallowEqual(style1, style2)) {\n    return;\n  }\n\n  var componentName = component._tag;\n  var owner = component._currentElement._owner;\n  var ownerName;\n  if (owner) {\n    ownerName = owner.getName();\n  }\n\n  var hash = ownerName + '|' + componentName;\n\n  if (styleMutationWarning.hasOwnProperty(hash)) {\n    return;\n  }\n\n  styleMutationWarning[hash] = true;\n\n  process.env.NODE_ENV !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;\n}\n\n/**\n * @param {object} component\n * @param {?object} props\n */\nfunction assertValidProps(component, props) {\n  if (!props) {\n    return;\n  }\n  // Note the use of `==` which checks for null or undefined.\n  if (voidElementTags[component._tag]) {\n    !(props.children == null && props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;\n  }\n  if (props.dangerouslySetInnerHTML != null) {\n    !(props.children == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;\n    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;\n    process.env.NODE_ENV !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;\n    process.env.NODE_ENV !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;\n  }\n  !(props.style == null || typeof props.style === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \\'em\\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;\n}\n\nfunction enqueuePutListener(inst, registrationName, listener, transaction) {\n  if (transaction instanceof ReactServerRenderingTransaction) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // IE8 has no API for event capturing and the `onScroll` event doesn't\n    // bubble.\n    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\\'t support the `onScroll` event') : void 0;\n  }\n  var containerInfo = inst._hostContainerInfo;\n  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;\n  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;\n  listenTo(registrationName, doc);\n  transaction.getReactMountReady().enqueue(putListener, {\n    inst: inst,\n    registrationName: registrationName,\n    listener: listener\n  });\n}\n\nfunction putListener() {\n  var listenerToPut = this;\n  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);\n}\n\nfunction inputPostMount() {\n  var inst = this;\n  ReactDOMInput.postMountWrapper(inst);\n}\n\nfunction textareaPostMount() {\n  var inst = this;\n  ReactDOMTextarea.postMountWrapper(inst);\n}\n\nfunction optionPostMount() {\n  var inst = this;\n  ReactDOMOption.postMountWrapper(inst);\n}\n\nvar setAndValidateContentChildDev = emptyFunction;\nif (process.env.NODE_ENV !== 'production') {\n  setAndValidateContentChildDev = function (content) {\n    var hasExistingContent = this._contentDebugID != null;\n    var debugID = this._debugID;\n    // This ID represents the inlined child that has no backing instance:\n    var contentDebugID = -debugID;\n\n    if (content == null) {\n      if (hasExistingContent) {\n        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);\n      }\n      this._contentDebugID = null;\n      return;\n    }\n\n    validateDOMNesting(null, String(content), this, this._ancestorInfo);\n    this._contentDebugID = contentDebugID;\n    if (hasExistingContent) {\n      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);\n      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);\n    } else {\n      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content, debugID);\n      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);\n      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);\n    }\n  };\n}\n\n// There are so many media events, it makes sense to just\n// maintain a list rather than create a `trapBubbledEvent` for each\nvar mediaEvents = {\n  topAbort: 'abort',\n  topCanPlay: 'canplay',\n  topCanPlayThrough: 'canplaythrough',\n  topDurationChange: 'durationchange',\n  topEmptied: 'emptied',\n  topEncrypted: 'encrypted',\n  topEnded: 'ended',\n  topError: 'error',\n  topLoadedData: 'loadeddata',\n  topLoadedMetadata: 'loadedmetadata',\n  topLoadStart: 'loadstart',\n  topPause: 'pause',\n  topPlay: 'play',\n  topPlaying: 'playing',\n  topProgress: 'progress',\n  topRateChange: 'ratechange',\n  topSeeked: 'seeked',\n  topSeeking: 'seeking',\n  topStalled: 'stalled',\n  topSuspend: 'suspend',\n  topTimeUpdate: 'timeupdate',\n  topVolumeChange: 'volumechange',\n  topWaiting: 'waiting'\n};\n\nfunction trapBubbledEventsLocal() {\n  var inst = this;\n  // If a component renders to null or if another component fatals and causes\n  // the state of the tree to be corrupted, `node` here can be null.\n  !inst._rootNodeID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;\n  var node = getNode(inst);\n  !node ? process.env.NODE_ENV !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;\n\n  switch (inst._tag) {\n    case 'iframe':\n    case 'object':\n      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];\n      break;\n    case 'video':\n    case 'audio':\n\n      inst._wrapperState.listeners = [];\n      // Create listener for each media event\n      for (var event in mediaEvents) {\n        if (mediaEvents.hasOwnProperty(event)) {\n          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(event, mediaEvents[event], node));\n        }\n      }\n      break;\n    case 'source':\n      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node)];\n      break;\n    case 'img':\n      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node), ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];\n      break;\n    case 'form':\n      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topReset', 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent('topSubmit', 'submit', node)];\n      break;\n    case 'input':\n    case 'select':\n    case 'textarea':\n      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topInvalid', 'invalid', node)];\n      break;\n  }\n}\n\nfunction postUpdateSelectWrapper() {\n  ReactDOMSelect.postUpdateWrapper(this);\n}\n\n// For HTML, certain tags should omit their close tag. We keep a whitelist for\n// those special-case tags.\n\nvar omittedCloseTags = {\n  'area': true,\n  'base': true,\n  'br': true,\n  'col': true,\n  'embed': true,\n  'hr': true,\n  'img': true,\n  'input': true,\n  'keygen': true,\n  'link': true,\n  'meta': true,\n  'param': true,\n  'source': true,\n  'track': true,\n  'wbr': true\n};\n\nvar newlineEatingTags = {\n  'listing': true,\n  'pre': true,\n  'textarea': true\n};\n\n// For HTML, certain tags cannot have children. This has the same purpose as\n// `omittedCloseTags` except that `menuitem` should still have its closing tag.\n\nvar voidElementTags = _assign({\n  'menuitem': true\n}, omittedCloseTags);\n\n// We accept any tag to be rendered but since this gets injected into arbitrary\n// HTML, we want to make sure that it's a safe tag.\n// http://www.w3.org/TR/REC-xml/#NT-Name\n\nvar VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\\.\\-\\d]*$/; // Simplified subset\nvar validatedTagCache = {};\nvar hasOwnProperty = {}.hasOwnProperty;\n\nfunction validateDangerousTag(tag) {\n  if (!hasOwnProperty.call(validatedTagCache, tag)) {\n    !VALID_TAG_REGEX.test(tag) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;\n    validatedTagCache[tag] = true;\n  }\n}\n\nfunction isCustomComponent(tagName, props) {\n  return tagName.indexOf('-') >= 0 || props.is != null;\n}\n\nvar globalIdCounter = 1;\n\n/**\n * Creates a new React class that is idempotent and capable of containing other\n * React components. It accepts event listeners and DOM properties that are\n * valid according to `DOMProperty`.\n *\n *  - Event listeners: `onClick`, `onMouseDown`, etc.\n *  - DOM properties: `className`, `name`, `title`, etc.\n *\n * The `style` property functions differently from the DOM API. It accepts an\n * object mapping of style properties to values.\n *\n * @constructor ReactDOMComponent\n * @extends ReactMultiChild\n */\nfunction ReactDOMComponent(element) {\n  var tag = element.type;\n  validateDangerousTag(tag);\n  this._currentElement = element;\n  this._tag = tag.toLowerCase();\n  this._namespaceURI = null;\n  this._renderedChildren = null;\n  this._previousStyle = null;\n  this._previousStyleCopy = null;\n  this._hostNode = null;\n  this._hostParent = null;\n  this._rootNodeID = 0;\n  this._domID = 0;\n  this._hostContainerInfo = null;\n  this._wrapperState = null;\n  this._topLevelWrapper = null;\n  this._flags = 0;\n  if (process.env.NODE_ENV !== 'production') {\n    this._ancestorInfo = null;\n    setAndValidateContentChildDev.call(this, null);\n  }\n}\n\nReactDOMComponent.displayName = 'ReactDOMComponent';\n\nReactDOMComponent.Mixin = {\n\n  /**\n   * Generates root tag markup then recurses. This method has side effects and\n   * is not idempotent.\n   *\n   * @internal\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {?ReactDOMComponent} the parent component instance\n   * @param {?object} info about the host container\n   * @param {object} context\n   * @return {string} The computed markup.\n   */\n  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n    this._rootNodeID = globalIdCounter++;\n    this._domID = hostContainerInfo._idCounter++;\n    this._hostParent = hostParent;\n    this._hostContainerInfo = hostContainerInfo;\n\n    var props = this._currentElement.props;\n\n    switch (this._tag) {\n      case 'audio':\n      case 'form':\n      case 'iframe':\n      case 'img':\n      case 'link':\n      case 'object':\n      case 'source':\n      case 'video':\n        this._wrapperState = {\n          listeners: null\n        };\n        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n        break;\n      case 'input':\n        ReactDOMInput.mountWrapper(this, props, hostParent);\n        props = ReactDOMInput.getHostProps(this, props);\n        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n        break;\n      case 'option':\n        ReactDOMOption.mountWrapper(this, props, hostParent);\n        props = ReactDOMOption.getHostProps(this, props);\n        break;\n      case 'select':\n        ReactDOMSelect.mountWrapper(this, props, hostParent);\n        props = ReactDOMSelect.getHostProps(this, props);\n        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n        break;\n      case 'textarea':\n        ReactDOMTextarea.mountWrapper(this, props, hostParent);\n        props = ReactDOMTextarea.getHostProps(this, props);\n        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n        break;\n    }\n\n    assertValidProps(this, props);\n\n    // We create tags in the namespace of their parent container, except HTML\n    // tags get no namespace.\n    var namespaceURI;\n    var parentTag;\n    if (hostParent != null) {\n      namespaceURI = hostParent._namespaceURI;\n      parentTag = hostParent._tag;\n    } else if (hostContainerInfo._tag) {\n      namespaceURI = hostContainerInfo._namespaceURI;\n      parentTag = hostContainerInfo._tag;\n    }\n    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {\n      namespaceURI = DOMNamespaces.html;\n    }\n    if (namespaceURI === DOMNamespaces.html) {\n      if (this._tag === 'svg') {\n        namespaceURI = DOMNamespaces.svg;\n      } else if (this._tag === 'math') {\n        namespaceURI = DOMNamespaces.mathml;\n      }\n    }\n    this._namespaceURI = namespaceURI;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var parentInfo;\n      if (hostParent != null) {\n        parentInfo = hostParent._ancestorInfo;\n      } else if (hostContainerInfo._tag) {\n        parentInfo = hostContainerInfo._ancestorInfo;\n      }\n      if (parentInfo) {\n        // parentInfo should always be present except for the top-level\n        // component when server rendering\n        validateDOMNesting(this._tag, null, this, parentInfo);\n      }\n      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);\n    }\n\n    var mountImage;\n    if (transaction.useCreateElement) {\n      var ownerDocument = hostContainerInfo._ownerDocument;\n      var el;\n      if (namespaceURI === DOMNamespaces.html) {\n        if (this._tag === 'script') {\n          // Create the script via .innerHTML so its \"parser-inserted\" flag is\n          // set to true and it does not execute\n          var div = ownerDocument.createElement('div');\n          var type = this._currentElement.type;\n          div.innerHTML = '<' + type + '></' + type + '>';\n          el = div.removeChild(div.firstChild);\n        } else if (props.is) {\n          el = ownerDocument.createElement(this._currentElement.type, props.is);\n        } else {\n          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.\n          // See discussion in https://github.com/facebook/react/pull/6896\n          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240\n          el = ownerDocument.createElement(this._currentElement.type);\n        }\n      } else {\n        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);\n      }\n      ReactDOMComponentTree.precacheNode(this, el);\n      this._flags |= Flags.hasCachedChildNodes;\n      if (!this._hostParent) {\n        DOMPropertyOperations.setAttributeForRoot(el);\n      }\n      this._updateDOMProperties(null, props, transaction);\n      var lazyTree = DOMLazyTree(el);\n      this._createInitialChildren(transaction, props, context, lazyTree);\n      mountImage = lazyTree;\n    } else {\n      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);\n      var tagContent = this._createContentMarkup(transaction, props, context);\n      if (!tagContent && omittedCloseTags[this._tag]) {\n        mountImage = tagOpen + '/>';\n      } else {\n        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';\n      }\n    }\n\n    switch (this._tag) {\n      case 'input':\n        transaction.getReactMountReady().enqueue(inputPostMount, this);\n        if (props.autoFocus) {\n          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n        }\n        break;\n      case 'textarea':\n        transaction.getReactMountReady().enqueue(textareaPostMount, this);\n        if (props.autoFocus) {\n          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n        }\n        break;\n      case 'select':\n        if (props.autoFocus) {\n          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n        }\n        break;\n      case 'button':\n        if (props.autoFocus) {\n          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n        }\n        break;\n      case 'option':\n        transaction.getReactMountReady().enqueue(optionPostMount, this);\n        break;\n    }\n\n    return mountImage;\n  },\n\n  /**\n   * Creates markup for the open tag and all attributes.\n   *\n   * This method has side effects because events get registered.\n   *\n   * Iterating over object properties is faster than iterating over arrays.\n   * @see http://jsperf.com/obj-vs-arr-iteration\n   *\n   * @private\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {object} props\n   * @return {string} Markup of opening tag.\n   */\n  _createOpenTagMarkupAndPutListeners: function (transaction, props) {\n    var ret = '<' + this._currentElement.type;\n\n    for (var propKey in props) {\n      if (!props.hasOwnProperty(propKey)) {\n        continue;\n      }\n      var propValue = props[propKey];\n      if (propValue == null) {\n        continue;\n      }\n      if (registrationNameModules.hasOwnProperty(propKey)) {\n        if (propValue) {\n          enqueuePutListener(this, propKey, propValue, transaction);\n        }\n      } else {\n        if (propKey === STYLE) {\n          if (propValue) {\n            if (process.env.NODE_ENV !== 'production') {\n              // See `_updateDOMProperties`. style block\n              this._previousStyle = propValue;\n            }\n            propValue = this._previousStyleCopy = _assign({}, props.style);\n          }\n          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);\n        }\n        var markup = null;\n        if (this._tag != null && isCustomComponent(this._tag, props)) {\n          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {\n            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);\n          }\n        } else {\n          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);\n        }\n        if (markup) {\n          ret += ' ' + markup;\n        }\n      }\n    }\n\n    // For static pages, no need to put React ID and checksum. Saves lots of\n    // bytes.\n    if (transaction.renderToStaticMarkup) {\n      return ret;\n    }\n\n    if (!this._hostParent) {\n      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();\n    }\n    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);\n    return ret;\n  },\n\n  /**\n   * Creates markup for the content between the tags.\n   *\n   * @private\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {object} props\n   * @param {object} context\n   * @return {string} Content markup.\n   */\n  _createContentMarkup: function (transaction, props, context) {\n    var ret = '';\n\n    // Intentional use of != to avoid catching zero/false.\n    var innerHTML = props.dangerouslySetInnerHTML;\n    if (innerHTML != null) {\n      if (innerHTML.__html != null) {\n        ret = innerHTML.__html;\n      }\n    } else {\n      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;\n      var childrenToUse = contentToUse != null ? null : props.children;\n      if (contentToUse != null) {\n        // TODO: Validate that text is allowed as a child of this node\n        ret = escapeTextContentForBrowser(contentToUse);\n        if (process.env.NODE_ENV !== 'production') {\n          setAndValidateContentChildDev.call(this, contentToUse);\n        }\n      } else if (childrenToUse != null) {\n        var mountImages = this.mountChildren(childrenToUse, transaction, context);\n        ret = mountImages.join('');\n      }\n    }\n    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\\n') {\n      // text/html ignores the first character in these tags if it's a newline\n      // Prefer to break application/xml over text/html (for now) by adding\n      // a newline specifically to get eaten by the parser. (Alternately for\n      // textareas, replacing \"^\\n\" with \"\\r\\n\" doesn't get eaten, and the first\n      // \\r is normalized out by HTMLTextAreaElement#value.)\n      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>\n      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>\n      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>\n      // See: Parsing of \"textarea\" \"listing\" and \"pre\" elements\n      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>\n      return '\\n' + ret;\n    } else {\n      return ret;\n    }\n  },\n\n  _createInitialChildren: function (transaction, props, context, lazyTree) {\n    // Intentional use of != to avoid catching zero/false.\n    var innerHTML = props.dangerouslySetInnerHTML;\n    if (innerHTML != null) {\n      if (innerHTML.__html != null) {\n        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);\n      }\n    } else {\n      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;\n      var childrenToUse = contentToUse != null ? null : props.children;\n      // TODO: Validate that text is allowed as a child of this node\n      if (contentToUse != null) {\n        // Avoid setting textContent when the text is empty. In IE11 setting\n        // textContent on a text area will cause the placeholder to not\n        // show within the textarea until it has been focused and blurred again.\n        // https://github.com/facebook/react/issues/6731#issuecomment-254874553\n        if (contentToUse !== '') {\n          if (process.env.NODE_ENV !== 'production') {\n            setAndValidateContentChildDev.call(this, contentToUse);\n          }\n          DOMLazyTree.queueText(lazyTree, contentToUse);\n        }\n      } else if (childrenToUse != null) {\n        var mountImages = this.mountChildren(childrenToUse, transaction, context);\n        for (var i = 0; i < mountImages.length; i++) {\n          DOMLazyTree.queueChild(lazyTree, mountImages[i]);\n        }\n      }\n    }\n  },\n\n  /**\n   * Receives a next element and updates the component.\n   *\n   * @internal\n   * @param {ReactElement} nextElement\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {object} context\n   */\n  receiveComponent: function (nextElement, transaction, context) {\n    var prevElement = this._currentElement;\n    this._currentElement = nextElement;\n    this.updateComponent(transaction, prevElement, nextElement, context);\n  },\n\n  /**\n   * Updates a DOM component after it has already been allocated and\n   * attached to the DOM. Reconciles the root DOM node, then recurses.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @param {ReactElement} prevElement\n   * @param {ReactElement} nextElement\n   * @internal\n   * @overridable\n   */\n  updateComponent: function (transaction, prevElement, nextElement, context) {\n    var lastProps = prevElement.props;\n    var nextProps = this._currentElement.props;\n\n    switch (this._tag) {\n      case 'input':\n        lastProps = ReactDOMInput.getHostProps(this, lastProps);\n        nextProps = ReactDOMInput.getHostProps(this, nextProps);\n        break;\n      case 'option':\n        lastProps = ReactDOMOption.getHostProps(this, lastProps);\n        nextProps = ReactDOMOption.getHostProps(this, nextProps);\n        break;\n      case 'select':\n        lastProps = ReactDOMSelect.getHostProps(this, lastProps);\n        nextProps = ReactDOMSelect.getHostProps(this, nextProps);\n        break;\n      case 'textarea':\n        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);\n        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);\n        break;\n    }\n\n    assertValidProps(this, nextProps);\n    this._updateDOMProperties(lastProps, nextProps, transaction);\n    this._updateDOMChildren(lastProps, nextProps, transaction, context);\n\n    switch (this._tag) {\n      case 'input':\n        // Update the wrapper around inputs *after* updating props. This has to\n        // happen after `_updateDOMProperties`. Otherwise HTML5 input validations\n        // raise warnings and prevent the new value from being assigned.\n        ReactDOMInput.updateWrapper(this);\n        break;\n      case 'textarea':\n        ReactDOMTextarea.updateWrapper(this);\n        break;\n      case 'select':\n        // <select> value update needs to occur after <option> children\n        // reconciliation\n        transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);\n        break;\n    }\n  },\n\n  /**\n   * Reconciles the properties by detecting differences in property values and\n   * updating the DOM as necessary. This function is probably the single most\n   * critical path for performance optimization.\n   *\n   * TODO: Benchmark whether checking for changed values in memory actually\n   *       improves performance (especially statically positioned elements).\n   * TODO: Benchmark the effects of putting this at the top since 99% of props\n   *       do not change for a given reconciliation.\n   * TODO: Benchmark areas that can be improved with caching.\n   *\n   * @private\n   * @param {object} lastProps\n   * @param {object} nextProps\n   * @param {?DOMElement} node\n   */\n  _updateDOMProperties: function (lastProps, nextProps, transaction) {\n    var propKey;\n    var styleName;\n    var styleUpdates;\n    for (propKey in lastProps) {\n      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {\n        continue;\n      }\n      if (propKey === STYLE) {\n        var lastStyle = this._previousStyleCopy;\n        for (styleName in lastStyle) {\n          if (lastStyle.hasOwnProperty(styleName)) {\n            styleUpdates = styleUpdates || {};\n            styleUpdates[styleName] = '';\n          }\n        }\n        this._previousStyleCopy = null;\n      } else if (registrationNameModules.hasOwnProperty(propKey)) {\n        if (lastProps[propKey]) {\n          // Only call deleteListener if there was a listener previously or\n          // else willDeleteListener gets called when there wasn't actually a\n          // listener (e.g., onClick={null})\n          deleteListener(this, propKey);\n        }\n      } else if (isCustomComponent(this._tag, lastProps)) {\n        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {\n          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);\n        }\n      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {\n        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);\n      }\n    }\n    for (propKey in nextProps) {\n      var nextProp = nextProps[propKey];\n      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;\n      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {\n        continue;\n      }\n      if (propKey === STYLE) {\n        if (nextProp) {\n          if (process.env.NODE_ENV !== 'production') {\n            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);\n            this._previousStyle = nextProp;\n          }\n          nextProp = this._previousStyleCopy = _assign({}, nextProp);\n        } else {\n          this._previousStyleCopy = null;\n        }\n        if (lastProp) {\n          // Unset styles on `lastProp` but not on `nextProp`.\n          for (styleName in lastProp) {\n            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {\n              styleUpdates = styleUpdates || {};\n              styleUpdates[styleName] = '';\n            }\n          }\n          // Update styles that changed since `lastProp`.\n          for (styleName in nextProp) {\n            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {\n              styleUpdates = styleUpdates || {};\n              styleUpdates[styleName] = nextProp[styleName];\n            }\n          }\n        } else {\n          // Relies on `updateStylesByID` not mutating `styleUpdates`.\n          styleUpdates = nextProp;\n        }\n      } else if (registrationNameModules.hasOwnProperty(propKey)) {\n        if (nextProp) {\n          enqueuePutListener(this, propKey, nextProp, transaction);\n        } else if (lastProp) {\n          deleteListener(this, propKey);\n        }\n      } else if (isCustomComponent(this._tag, nextProps)) {\n        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {\n          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);\n        }\n      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {\n        var node = getNode(this);\n        // If we're updating to null or undefined, we should remove the property\n        // from the DOM node instead of inadvertently setting to a string. This\n        // brings us in line with the same behavior we have on initial render.\n        if (nextProp != null) {\n          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);\n        } else {\n          DOMPropertyOperations.deleteValueForProperty(node, propKey);\n        }\n      }\n    }\n    if (styleUpdates) {\n      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);\n    }\n  },\n\n  /**\n   * Reconciles the children with the various properties that affect the\n   * children content.\n   *\n   * @param {object} lastProps\n   * @param {object} nextProps\n   * @param {ReactReconcileTransaction} transaction\n   * @param {object} context\n   */\n  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {\n    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;\n    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;\n\n    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;\n    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;\n\n    // Note the use of `!=` which checks for null or undefined.\n    var lastChildren = lastContent != null ? null : lastProps.children;\n    var nextChildren = nextContent != null ? null : nextProps.children;\n\n    // If we're switching from children to content/html or vice versa, remove\n    // the old content\n    var lastHasContentOrHtml = lastContent != null || lastHtml != null;\n    var nextHasContentOrHtml = nextContent != null || nextHtml != null;\n    if (lastChildren != null && nextChildren == null) {\n      this.updateChildren(null, transaction, context);\n    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {\n      this.updateTextContent('');\n      if (process.env.NODE_ENV !== 'production') {\n        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);\n      }\n    }\n\n    if (nextContent != null) {\n      if (lastContent !== nextContent) {\n        this.updateTextContent('' + nextContent);\n        if (process.env.NODE_ENV !== 'production') {\n          setAndValidateContentChildDev.call(this, nextContent);\n        }\n      }\n    } else if (nextHtml != null) {\n      if (lastHtml !== nextHtml) {\n        this.updateMarkup('' + nextHtml);\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);\n      }\n    } else if (nextChildren != null) {\n      if (process.env.NODE_ENV !== 'production') {\n        setAndValidateContentChildDev.call(this, null);\n      }\n\n      this.updateChildren(nextChildren, transaction, context);\n    }\n  },\n\n  getHostNode: function () {\n    return getNode(this);\n  },\n\n  /**\n   * Destroys all event registrations for this instance. Does not remove from\n   * the DOM. That must be done by the parent.\n   *\n   * @internal\n   */\n  unmountComponent: function (safely) {\n    switch (this._tag) {\n      case 'audio':\n      case 'form':\n      case 'iframe':\n      case 'img':\n      case 'link':\n      case 'object':\n      case 'source':\n      case 'video':\n        var listeners = this._wrapperState.listeners;\n        if (listeners) {\n          for (var i = 0; i < listeners.length; i++) {\n            listeners[i].remove();\n          }\n        }\n        break;\n      case 'html':\n      case 'head':\n      case 'body':\n        /**\n         * Components like <html> <head> and <body> can't be removed or added\n         * easily in a cross-browser way, however it's valuable to be able to\n         * take advantage of React's reconciliation for styling and <title>\n         * management. So we just document it and throw in dangerous cases.\n         */\n        !false ? process.env.NODE_ENV !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;\n        break;\n    }\n\n    this.unmountChildren(safely);\n    ReactDOMComponentTree.uncacheNode(this);\n    EventPluginHub.deleteAllListeners(this);\n    this._rootNodeID = 0;\n    this._domID = 0;\n    this._wrapperState = null;\n\n    if (process.env.NODE_ENV !== 'production') {\n      setAndValidateContentChildDev.call(this, null);\n    }\n  },\n\n  getPublicInstance: function () {\n    return getNode(this);\n  }\n\n};\n\n_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);\n\nmodule.exports = ReactDOMComponent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMComponent.js\n// module id = 133\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar validateDOMNesting = require('./validateDOMNesting');\n\nvar DOC_NODE_TYPE = 9;\n\nfunction ReactDOMContainerInfo(topLevelWrapper, node) {\n  var info = {\n    _topLevelWrapper: topLevelWrapper,\n    _idCounter: 1,\n    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,\n    _node: node,\n    _tag: node ? node.nodeName.toLowerCase() : null,\n    _namespaceURI: node ? node.namespaceURI : null\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;\n  }\n  return info;\n}\n\nmodule.exports = ReactDOMContainerInfo;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMContainerInfo.js\n// module id = 134\n// module chunks = 0","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar DOMLazyTree = require('./DOMLazyTree');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\n\nvar ReactDOMEmptyComponent = function (instantiate) {\n  // ReactCompositeComponent uses this:\n  this._currentElement = null;\n  // ReactDOMComponentTree uses these:\n  this._hostNode = null;\n  this._hostParent = null;\n  this._hostContainerInfo = null;\n  this._domID = 0;\n};\n_assign(ReactDOMEmptyComponent.prototype, {\n  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n    var domID = hostContainerInfo._idCounter++;\n    this._domID = domID;\n    this._hostParent = hostParent;\n    this._hostContainerInfo = hostContainerInfo;\n\n    var nodeValue = ' react-empty: ' + this._domID + ' ';\n    if (transaction.useCreateElement) {\n      var ownerDocument = hostContainerInfo._ownerDocument;\n      var node = ownerDocument.createComment(nodeValue);\n      ReactDOMComponentTree.precacheNode(this, node);\n      return DOMLazyTree(node);\n    } else {\n      if (transaction.renderToStaticMarkup) {\n        // Normally we'd insert a comment node, but since this is a situation\n        // where React won't take over (static pages), we can simply return\n        // nothing.\n        return '';\n      }\n      return '<!--' + nodeValue + '-->';\n    }\n  },\n  receiveComponent: function () {},\n  getHostNode: function () {\n    return ReactDOMComponentTree.getNodeFromInstance(this);\n  },\n  unmountComponent: function () {\n    ReactDOMComponentTree.uncacheNode(this);\n  }\n});\n\nmodule.exports = ReactDOMEmptyComponent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMEmptyComponent.js\n// module id = 135\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactDOMFeatureFlags = {\n  useCreateElement: true,\n  useFiber: false\n};\n\nmodule.exports = ReactDOMFeatureFlags;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMFeatureFlags.js\n// module id = 136\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar DOMChildrenOperations = require('./DOMChildrenOperations');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\n\n/**\n * Operations used to process updates to DOM nodes.\n */\nvar ReactDOMIDOperations = {\n\n  /**\n   * Updates a component's children by processing a series of updates.\n   *\n   * @param {array<object>} updates List of update configurations.\n   * @internal\n   */\n  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {\n    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);\n    DOMChildrenOperations.processUpdates(node, updates);\n  }\n};\n\nmodule.exports = ReactDOMIDOperations;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMIDOperations.js\n// module id = 137\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar DOMPropertyOperations = require('./DOMPropertyOperations');\nvar LinkedValueUtils = require('./LinkedValueUtils');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar didWarnValueLink = false;\nvar didWarnCheckedLink = false;\nvar didWarnValueDefaultValue = false;\nvar didWarnCheckedDefaultChecked = false;\nvar didWarnControlledToUncontrolled = false;\nvar didWarnUncontrolledToControlled = false;\n\nfunction forceUpdateIfMounted() {\n  if (this._rootNodeID) {\n    // DOM component is still mounted; update\n    ReactDOMInput.updateWrapper(this);\n  }\n}\n\nfunction isControlled(props) {\n  var usesChecked = props.type === 'checkbox' || props.type === 'radio';\n  return usesChecked ? props.checked != null : props.value != null;\n}\n\n/**\n * Implements an <input> host component that allows setting these optional\n * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.\n *\n * If `checked` or `value` are not supplied (or null/undefined), user actions\n * that affect the checked state or value will trigger updates to the element.\n *\n * If they are supplied (and not null/undefined), the rendered element will not\n * trigger updates to the element. Instead, the props must change in order for\n * the rendered element to be updated.\n *\n * The rendered element will be initialized as unchecked (or `defaultChecked`)\n * with an empty value (or `defaultValue`).\n *\n * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html\n */\nvar ReactDOMInput = {\n  getHostProps: function (inst, props) {\n    var value = LinkedValueUtils.getValue(props);\n    var checked = LinkedValueUtils.getChecked(props);\n\n    var hostProps = _assign({\n      // Make sure we set .type before any other properties (setting .value\n      // before .type means .value is lost in IE11 and below)\n      type: undefined,\n      // Make sure we set .step before .value (setting .value before .step\n      // means .value is rounded on mount, based upon step precision)\n      step: undefined,\n      // Make sure we set .min & .max before .value (to ensure proper order\n      // in corner cases such as min or max deriving from value, e.g. Issue #7170)\n      min: undefined,\n      max: undefined\n    }, props, {\n      defaultChecked: undefined,\n      defaultValue: undefined,\n      value: value != null ? value : inst._wrapperState.initialValue,\n      checked: checked != null ? checked : inst._wrapperState.initialChecked,\n      onChange: inst._wrapperState.onChange\n    });\n\n    return hostProps;\n  },\n\n  mountWrapper: function (inst, props) {\n    if (process.env.NODE_ENV !== 'production') {\n      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);\n\n      var owner = inst._currentElement._owner;\n\n      if (props.valueLink !== undefined && !didWarnValueLink) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;\n        didWarnValueLink = true;\n      }\n      if (props.checkedLink !== undefined && !didWarnCheckedLink) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;\n        didWarnCheckedLink = true;\n      }\n      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n        didWarnCheckedDefaultChecked = true;\n      }\n      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n        didWarnValueDefaultValue = true;\n      }\n    }\n\n    var defaultValue = props.defaultValue;\n    inst._wrapperState = {\n      initialChecked: props.checked != null ? props.checked : props.defaultChecked,\n      initialValue: props.value != null ? props.value : defaultValue,\n      listeners: null,\n      onChange: _handleChange.bind(inst),\n      controlled: isControlled(props)\n    };\n  },\n\n  updateWrapper: function (inst) {\n    var props = inst._currentElement.props;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var controlled = isControlled(props);\n      var owner = inst._currentElement._owner;\n\n      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n        didWarnUncontrolledToControlled = true;\n      }\n      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n        didWarnControlledToUncontrolled = true;\n      }\n    }\n\n    // TODO: Shouldn't this be getChecked(props)?\n    var checked = props.checked;\n    if (checked != null) {\n      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);\n    }\n\n    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n    var value = LinkedValueUtils.getValue(props);\n    if (value != null) {\n      if (value === 0 && node.value === '') {\n        node.value = '0';\n        // Note: IE9 reports a number inputs as 'text', so check props instead.\n      } else if (props.type === 'number') {\n        // Simulate `input.valueAsNumber`. IE9 does not support it\n        var valueAsNumber = parseFloat(node.value, 10) || 0;\n\n        // eslint-disable-next-line\n        if (value != valueAsNumber) {\n          // Cast `value` to a string to ensure the value is set correctly. While\n          // browsers typically do this as necessary, jsdom doesn't.\n          node.value = '' + value;\n        }\n        // eslint-disable-next-line\n      } else if (value != node.value) {\n        // Cast `value` to a string to ensure the value is set correctly. While\n        // browsers typically do this as necessary, jsdom doesn't.\n        node.value = '' + value;\n      }\n    } else {\n      if (props.value == null && props.defaultValue != null) {\n        // In Chrome, assigning defaultValue to certain input types triggers input validation.\n        // For number inputs, the display value loses trailing decimal points. For email inputs,\n        // Chrome raises \"The specified value <x> is not a valid email address\".\n        //\n        // Here we check to see if the defaultValue has actually changed, avoiding these problems\n        // when the user is inputting text\n        //\n        // https://github.com/facebook/react/issues/7253\n        if (node.defaultValue !== '' + props.defaultValue) {\n          node.defaultValue = '' + props.defaultValue;\n        }\n      }\n      if (props.checked == null && props.defaultChecked != null) {\n        node.defaultChecked = !!props.defaultChecked;\n      }\n    }\n  },\n\n  postMountWrapper: function (inst) {\n    var props = inst._currentElement.props;\n\n    // This is in postMount because we need access to the DOM node, which is not\n    // available until after the component has mounted.\n    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n\n    // Detach value from defaultValue. We won't do anything if we're working on\n    // submit or reset inputs as those values & defaultValues are linked. They\n    // are not resetable nodes so this operation doesn't matter and actually\n    // removes browser-default values (eg \"Submit Query\") when no value is\n    // provided.\n\n    switch (props.type) {\n      case 'submit':\n      case 'reset':\n        break;\n      case 'color':\n      case 'date':\n      case 'datetime':\n      case 'datetime-local':\n      case 'month':\n      case 'time':\n      case 'week':\n        // This fixes the no-show issue on iOS Safari and Android Chrome:\n        // https://github.com/facebook/react/issues/7233\n        node.value = '';\n        node.value = node.defaultValue;\n        break;\n      default:\n        node.value = node.value;\n        break;\n    }\n\n    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug\n    // this is needed to work around a chrome bug where setting defaultChecked\n    // will sometimes influence the value of checked (even after detachment).\n    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416\n    // We need to temporarily unset name to avoid disrupting radio button groups.\n    var name = node.name;\n    if (name !== '') {\n      node.name = '';\n    }\n    node.defaultChecked = !node.defaultChecked;\n    node.defaultChecked = !node.defaultChecked;\n    if (name !== '') {\n      node.name = name;\n    }\n  }\n};\n\nfunction _handleChange(event) {\n  var props = this._currentElement.props;\n\n  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n\n  // Here we use asap to wait until all updates have propagated, which\n  // is important when using controlled components within layers:\n  // https://github.com/facebook/react/issues/1698\n  ReactUpdates.asap(forceUpdateIfMounted, this);\n\n  var name = props.name;\n  if (props.type === 'radio' && name != null) {\n    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);\n    var queryRoot = rootNode;\n\n    while (queryRoot.parentNode) {\n      queryRoot = queryRoot.parentNode;\n    }\n\n    // If `rootNode.form` was non-null, then we could try `form.elements`,\n    // but that sometimes behaves strangely in IE8. We could also try using\n    // `form.getElementsByName`, but that will only return direct children\n    // and won't include inputs that use the HTML5 `form=` attribute. Since\n    // the input might not even be in a form, let's just use the global\n    // `querySelectorAll` to ensure we don't miss anything.\n    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type=\"radio\"]');\n\n    for (var i = 0; i < group.length; i++) {\n      var otherNode = group[i];\n      if (otherNode === rootNode || otherNode.form !== rootNode.form) {\n        continue;\n      }\n      // This will throw if radio buttons rendered by different copies of React\n      // and the same name are rendered into the same form (same as #1939).\n      // That's probably okay; we don't support it just as we don't support\n      // mixing React radio buttons with non-React ones.\n      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);\n      !otherInstance ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;\n      // If this is a controlled radio button group, forcing the input that\n      // was previously checked to update will cause it to be come re-checked\n      // as appropriate.\n      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);\n    }\n  }\n\n  return returnValue;\n}\n\nmodule.exports = ReactDOMInput;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMInput.js\n// module id = 138\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar React = require('react/lib/React');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactDOMSelect = require('./ReactDOMSelect');\n\nvar warning = require('fbjs/lib/warning');\nvar didWarnInvalidOptionChildren = false;\n\nfunction flattenChildren(children) {\n  var content = '';\n\n  // Flatten children and warn if they aren't strings or numbers;\n  // invalid types are ignored.\n  React.Children.forEach(children, function (child) {\n    if (child == null) {\n      return;\n    }\n    if (typeof child === 'string' || typeof child === 'number') {\n      content += child;\n    } else if (!didWarnInvalidOptionChildren) {\n      didWarnInvalidOptionChildren = true;\n      process.env.NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;\n    }\n  });\n\n  return content;\n}\n\n/**\n * Implements an <option> host component that warns when `selected` is set.\n */\nvar ReactDOMOption = {\n  mountWrapper: function (inst, props, hostParent) {\n    // TODO (yungsters): Remove support for `selected` in <option>.\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;\n    }\n\n    // Look up whether this option is 'selected'\n    var selectValue = null;\n    if (hostParent != null) {\n      var selectParent = hostParent;\n\n      if (selectParent._tag === 'optgroup') {\n        selectParent = selectParent._hostParent;\n      }\n\n      if (selectParent != null && selectParent._tag === 'select') {\n        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);\n      }\n    }\n\n    // If the value is null (e.g., no specified value or after initial mount)\n    // or missing (e.g., for <datalist>), we don't change props.selected\n    var selected = null;\n    if (selectValue != null) {\n      var value;\n      if (props.value != null) {\n        value = props.value + '';\n      } else {\n        value = flattenChildren(props.children);\n      }\n      selected = false;\n      if (Array.isArray(selectValue)) {\n        // multiple\n        for (var i = 0; i < selectValue.length; i++) {\n          if ('' + selectValue[i] === value) {\n            selected = true;\n            break;\n          }\n        }\n      } else {\n        selected = '' + selectValue === value;\n      }\n    }\n\n    inst._wrapperState = { selected: selected };\n  },\n\n  postMountWrapper: function (inst) {\n    // value=\"\" should make a value attribute (#6219)\n    var props = inst._currentElement.props;\n    if (props.value != null) {\n      var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n      node.setAttribute('value', props.value);\n    }\n  },\n\n  getHostProps: function (inst, props) {\n    var hostProps = _assign({ selected: undefined, children: undefined }, props);\n\n    // Read state only from initial mount because <select> updates value\n    // manually; we need the initial state only for server rendering\n    if (inst._wrapperState.selected != null) {\n      hostProps.selected = inst._wrapperState.selected;\n    }\n\n    var content = flattenChildren(props.children);\n\n    if (content) {\n      hostProps.children = content;\n    }\n\n    return hostProps;\n  }\n\n};\n\nmodule.exports = ReactDOMOption;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMOption.js\n// module id = 139\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar getNodeForCharacterOffset = require('./getNodeForCharacterOffset');\nvar getTextContentAccessor = require('./getTextContentAccessor');\n\n/**\n * While `isCollapsed` is available on the Selection object and `collapsed`\n * is available on the Range object, IE11 sometimes gets them wrong.\n * If the anchor/focus nodes and offsets are the same, the range is collapsed.\n */\nfunction isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {\n  return anchorNode === focusNode && anchorOffset === focusOffset;\n}\n\n/**\n * Get the appropriate anchor and focus node/offset pairs for IE.\n *\n * The catch here is that IE's selection API doesn't provide information\n * about whether the selection is forward or backward, so we have to\n * behave as though it's always forward.\n *\n * IE text differs from modern selection in that it behaves as though\n * block elements end with a new line. This means character offsets will\n * differ between the two APIs.\n *\n * @param {DOMElement} node\n * @return {object}\n */\nfunction getIEOffsets(node) {\n  var selection = document.selection;\n  var selectedRange = selection.createRange();\n  var selectedLength = selectedRange.text.length;\n\n  // Duplicate selection so we can move range without breaking user selection.\n  var fromStart = selectedRange.duplicate();\n  fromStart.moveToElementText(node);\n  fromStart.setEndPoint('EndToStart', selectedRange);\n\n  var startOffset = fromStart.text.length;\n  var endOffset = startOffset + selectedLength;\n\n  return {\n    start: startOffset,\n    end: endOffset\n  };\n}\n\n/**\n * @param {DOMElement} node\n * @return {?object}\n */\nfunction getModernOffsets(node) {\n  var selection = window.getSelection && window.getSelection();\n\n  if (!selection || selection.rangeCount === 0) {\n    return null;\n  }\n\n  var anchorNode = selection.anchorNode;\n  var anchorOffset = selection.anchorOffset;\n  var focusNode = selection.focusNode;\n  var focusOffset = selection.focusOffset;\n\n  var currentRange = selection.getRangeAt(0);\n\n  // In Firefox, range.startContainer and range.endContainer can be \"anonymous\n  // divs\", e.g. the up/down buttons on an <input type=\"number\">. Anonymous\n  // divs do not seem to expose properties, triggering a \"Permission denied\n  // error\" if any of its properties are accessed. The only seemingly possible\n  // way to avoid erroring is to access a property that typically works for\n  // non-anonymous divs and catch any error that may otherwise arise. See\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427\n  try {\n    /* eslint-disable no-unused-expressions */\n    currentRange.startContainer.nodeType;\n    currentRange.endContainer.nodeType;\n    /* eslint-enable no-unused-expressions */\n  } catch (e) {\n    return null;\n  }\n\n  // If the node and offset values are the same, the selection is collapsed.\n  // `Selection.isCollapsed` is available natively, but IE sometimes gets\n  // this value wrong.\n  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);\n\n  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;\n\n  var tempRange = currentRange.cloneRange();\n  tempRange.selectNodeContents(node);\n  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);\n\n  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);\n\n  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;\n  var end = start + rangeLength;\n\n  // Detect whether the selection is backward.\n  var detectionRange = document.createRange();\n  detectionRange.setStart(anchorNode, anchorOffset);\n  detectionRange.setEnd(focusNode, focusOffset);\n  var isBackward = detectionRange.collapsed;\n\n  return {\n    start: isBackward ? end : start,\n    end: isBackward ? start : end\n  };\n}\n\n/**\n * @param {DOMElement|DOMTextNode} node\n * @param {object} offsets\n */\nfunction setIEOffsets(node, offsets) {\n  var range = document.selection.createRange().duplicate();\n  var start, end;\n\n  if (offsets.end === undefined) {\n    start = offsets.start;\n    end = start;\n  } else if (offsets.start > offsets.end) {\n    start = offsets.end;\n    end = offsets.start;\n  } else {\n    start = offsets.start;\n    end = offsets.end;\n  }\n\n  range.moveToElementText(node);\n  range.moveStart('character', start);\n  range.setEndPoint('EndToStart', range);\n  range.moveEnd('character', end - start);\n  range.select();\n}\n\n/**\n * In modern non-IE browsers, we can support both forward and backward\n * selections.\n *\n * Note: IE10+ supports the Selection object, but it does not support\n * the `extend` method, which means that even in modern IE, it's not possible\n * to programmatically create a backward selection. Thus, for all IE\n * versions, we use the old IE API to create our selections.\n *\n * @param {DOMElement|DOMTextNode} node\n * @param {object} offsets\n */\nfunction setModernOffsets(node, offsets) {\n  if (!window.getSelection) {\n    return;\n  }\n\n  var selection = window.getSelection();\n  var length = node[getTextContentAccessor()].length;\n  var start = Math.min(offsets.start, length);\n  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);\n\n  // IE 11 uses modern selection, but doesn't support the extend method.\n  // Flip backward selections, so we can set with a single range.\n  if (!selection.extend && start > end) {\n    var temp = end;\n    end = start;\n    start = temp;\n  }\n\n  var startMarker = getNodeForCharacterOffset(node, start);\n  var endMarker = getNodeForCharacterOffset(node, end);\n\n  if (startMarker && endMarker) {\n    var range = document.createRange();\n    range.setStart(startMarker.node, startMarker.offset);\n    selection.removeAllRanges();\n\n    if (start > end) {\n      selection.addRange(range);\n      selection.extend(endMarker.node, endMarker.offset);\n    } else {\n      range.setEnd(endMarker.node, endMarker.offset);\n      selection.addRange(range);\n    }\n  }\n}\n\nvar useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);\n\nvar ReactDOMSelection = {\n  /**\n   * @param {DOMElement} node\n   */\n  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,\n\n  /**\n   * @param {DOMElement|DOMTextNode} node\n   * @param {object} offsets\n   */\n  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets\n};\n\nmodule.exports = ReactDOMSelection;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMSelection.js\n// module id = 140\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar DOMChildrenOperations = require('./DOMChildrenOperations');\nvar DOMLazyTree = require('./DOMLazyTree');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\n\nvar escapeTextContentForBrowser = require('./escapeTextContentForBrowser');\nvar invariant = require('fbjs/lib/invariant');\nvar validateDOMNesting = require('./validateDOMNesting');\n\n/**\n * Text nodes violate a couple assumptions that React makes about components:\n *\n *  - When mounting text into the DOM, adjacent text nodes are merged.\n *  - Text nodes cannot be assigned a React root ID.\n *\n * This component is used to wrap strings between comment nodes so that they\n * can undergo the same reconciliation that is applied to elements.\n *\n * TODO: Investigate representing React components in the DOM with text nodes.\n *\n * @class ReactDOMTextComponent\n * @extends ReactComponent\n * @internal\n */\nvar ReactDOMTextComponent = function (text) {\n  // TODO: This is really a ReactText (ReactNode), not a ReactElement\n  this._currentElement = text;\n  this._stringText = '' + text;\n  // ReactDOMComponentTree uses these:\n  this._hostNode = null;\n  this._hostParent = null;\n\n  // Properties\n  this._domID = 0;\n  this._mountIndex = 0;\n  this._closingComment = null;\n  this._commentNodes = null;\n};\n\n_assign(ReactDOMTextComponent.prototype, {\n\n  /**\n   * Creates the markup for this text node. This node is not intended to have\n   * any features besides containing text content.\n   *\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @return {string} Markup for this text node.\n   * @internal\n   */\n  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n    if (process.env.NODE_ENV !== 'production') {\n      var parentInfo;\n      if (hostParent != null) {\n        parentInfo = hostParent._ancestorInfo;\n      } else if (hostContainerInfo != null) {\n        parentInfo = hostContainerInfo._ancestorInfo;\n      }\n      if (parentInfo) {\n        // parentInfo should always be present except for the top-level\n        // component when server rendering\n        validateDOMNesting(null, this._stringText, this, parentInfo);\n      }\n    }\n\n    var domID = hostContainerInfo._idCounter++;\n    var openingValue = ' react-text: ' + domID + ' ';\n    var closingValue = ' /react-text ';\n    this._domID = domID;\n    this._hostParent = hostParent;\n    if (transaction.useCreateElement) {\n      var ownerDocument = hostContainerInfo._ownerDocument;\n      var openingComment = ownerDocument.createComment(openingValue);\n      var closingComment = ownerDocument.createComment(closingValue);\n      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());\n      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));\n      if (this._stringText) {\n        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));\n      }\n      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));\n      ReactDOMComponentTree.precacheNode(this, openingComment);\n      this._closingComment = closingComment;\n      return lazyTree;\n    } else {\n      var escapedText = escapeTextContentForBrowser(this._stringText);\n\n      if (transaction.renderToStaticMarkup) {\n        // Normally we'd wrap this between comment nodes for the reasons stated\n        // above, but since this is a situation where React won't take over\n        // (static pages), we can simply return the text as it is.\n        return escapedText;\n      }\n\n      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';\n    }\n  },\n\n  /**\n   * Updates this component by updating the text content.\n   *\n   * @param {ReactText} nextText The next text content\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  receiveComponent: function (nextText, transaction) {\n    if (nextText !== this._currentElement) {\n      this._currentElement = nextText;\n      var nextStringText = '' + nextText;\n      if (nextStringText !== this._stringText) {\n        // TODO: Save this as pending props and use performUpdateIfNecessary\n        // and/or updateComponent to do the actual update for consistency with\n        // other component types?\n        this._stringText = nextStringText;\n        var commentNodes = this.getHostNode();\n        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);\n      }\n    }\n  },\n\n  getHostNode: function () {\n    var hostNode = this._commentNodes;\n    if (hostNode) {\n      return hostNode;\n    }\n    if (!this._closingComment) {\n      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);\n      var node = openingComment.nextSibling;\n      while (true) {\n        !(node != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;\n        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {\n          this._closingComment = node;\n          break;\n        }\n        node = node.nextSibling;\n      }\n    }\n    hostNode = [this._hostNode, this._closingComment];\n    this._commentNodes = hostNode;\n    return hostNode;\n  },\n\n  unmountComponent: function () {\n    this._closingComment = null;\n    this._commentNodes = null;\n    ReactDOMComponentTree.uncacheNode(this);\n  }\n\n});\n\nmodule.exports = ReactDOMTextComponent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMTextComponent.js\n// module id = 141\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar LinkedValueUtils = require('./LinkedValueUtils');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar didWarnValueLink = false;\nvar didWarnValDefaultVal = false;\n\nfunction forceUpdateIfMounted() {\n  if (this._rootNodeID) {\n    // DOM component is still mounted; update\n    ReactDOMTextarea.updateWrapper(this);\n  }\n}\n\n/**\n * Implements a <textarea> host component that allows setting `value`, and\n * `defaultValue`. This differs from the traditional DOM API because value is\n * usually set as PCDATA children.\n *\n * If `value` is not supplied (or null/undefined), user actions that affect the\n * value will trigger updates to the element.\n *\n * If `value` is supplied (and not null/undefined), the rendered element will\n * not trigger updates to the element. Instead, the `value` prop must change in\n * order for the rendered element to be updated.\n *\n * The rendered element will be initialized with an empty value, the prop\n * `defaultValue` if specified, or the children content (deprecated).\n */\nvar ReactDOMTextarea = {\n  getHostProps: function (inst, props) {\n    !(props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;\n\n    // Always set children to the same thing. In IE9, the selection range will\n    // get reset if `textContent` is mutated.  We could add a check in setTextContent\n    // to only set the value if/when the value differs from the node value (which would\n    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.\n    // The value can be a boolean or object so that's why it's forced to be a string.\n    var hostProps = _assign({}, props, {\n      value: undefined,\n      defaultValue: undefined,\n      children: '' + inst._wrapperState.initialValue,\n      onChange: inst._wrapperState.onChange\n    });\n\n    return hostProps;\n  },\n\n  mountWrapper: function (inst, props) {\n    if (process.env.NODE_ENV !== 'production') {\n      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);\n      if (props.valueLink !== undefined && !didWarnValueLink) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;\n        didWarnValueLink = true;\n      }\n      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;\n        didWarnValDefaultVal = true;\n      }\n    }\n\n    var value = LinkedValueUtils.getValue(props);\n    var initialValue = value;\n\n    // Only bother fetching default value if we're going to use it\n    if (value == null) {\n      var defaultValue = props.defaultValue;\n      // TODO (yungsters): Remove support for children content in <textarea>.\n      var children = props.children;\n      if (children != null) {\n        if (process.env.NODE_ENV !== 'production') {\n          process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;\n        }\n        !(defaultValue == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;\n        if (Array.isArray(children)) {\n          !(children.length <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;\n          children = children[0];\n        }\n\n        defaultValue = '' + children;\n      }\n      if (defaultValue == null) {\n        defaultValue = '';\n      }\n      initialValue = defaultValue;\n    }\n\n    inst._wrapperState = {\n      initialValue: '' + initialValue,\n      listeners: null,\n      onChange: _handleChange.bind(inst)\n    };\n  },\n\n  updateWrapper: function (inst) {\n    var props = inst._currentElement.props;\n\n    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n    var value = LinkedValueUtils.getValue(props);\n    if (value != null) {\n      // Cast `value` to a string to ensure the value is set correctly. While\n      // browsers typically do this as necessary, jsdom doesn't.\n      var newValue = '' + value;\n\n      // To avoid side effects (such as losing text selection), only set value if changed\n      if (newValue !== node.value) {\n        node.value = newValue;\n      }\n      if (props.defaultValue == null) {\n        node.defaultValue = newValue;\n      }\n    }\n    if (props.defaultValue != null) {\n      node.defaultValue = props.defaultValue;\n    }\n  },\n\n  postMountWrapper: function (inst) {\n    // This is in postMount because we need access to the DOM node, which is not\n    // available until after the component has mounted.\n    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n    var textContent = node.textContent;\n\n    // Only set node.value if textContent is equal to the expected\n    // initial value. In IE10/IE11 there is a bug where the placeholder attribute\n    // will populate textContent as well.\n    // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/\n    if (textContent === inst._wrapperState.initialValue) {\n      node.value = textContent;\n    }\n  }\n};\n\nfunction _handleChange(event) {\n  var props = this._currentElement.props;\n  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n  ReactUpdates.asap(forceUpdateIfMounted, this);\n  return returnValue;\n}\n\nmodule.exports = ReactDOMTextarea;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMTextarea.js\n// module id = 142\n// module chunks = 0","/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Return the lowest common ancestor of A and B, or null if they are in\n * different trees.\n */\nfunction getLowestCommonAncestor(instA, instB) {\n  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;\n  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;\n\n  var depthA = 0;\n  for (var tempA = instA; tempA; tempA = tempA._hostParent) {\n    depthA++;\n  }\n  var depthB = 0;\n  for (var tempB = instB; tempB; tempB = tempB._hostParent) {\n    depthB++;\n  }\n\n  // If A is deeper, crawl up.\n  while (depthA - depthB > 0) {\n    instA = instA._hostParent;\n    depthA--;\n  }\n\n  // If B is deeper, crawl up.\n  while (depthB - depthA > 0) {\n    instB = instB._hostParent;\n    depthB--;\n  }\n\n  // Walk in lockstep until we find a match.\n  var depth = depthA;\n  while (depth--) {\n    if (instA === instB) {\n      return instA;\n    }\n    instA = instA._hostParent;\n    instB = instB._hostParent;\n  }\n  return null;\n}\n\n/**\n * Return if A is an ancestor of B.\n */\nfunction isAncestor(instA, instB) {\n  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;\n  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;\n\n  while (instB) {\n    if (instB === instA) {\n      return true;\n    }\n    instB = instB._hostParent;\n  }\n  return false;\n}\n\n/**\n * Return the parent instance of the passed-in instance.\n */\nfunction getParentInstance(inst) {\n  !('_hostNode' in inst) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;\n\n  return inst._hostParent;\n}\n\n/**\n * Simulates the traversal of a two-phase, capture/bubble event dispatch.\n */\nfunction traverseTwoPhase(inst, fn, arg) {\n  var path = [];\n  while (inst) {\n    path.push(inst);\n    inst = inst._hostParent;\n  }\n  var i;\n  for (i = path.length; i-- > 0;) {\n    fn(path[i], 'captured', arg);\n  }\n  for (i = 0; i < path.length; i++) {\n    fn(path[i], 'bubbled', arg);\n  }\n}\n\n/**\n * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that\n * should would receive a `mouseEnter` or `mouseLeave` event.\n *\n * Does not invoke the callback on the nearest common ancestor because nothing\n * \"entered\" or \"left\" that element.\n */\nfunction traverseEnterLeave(from, to, fn, argFrom, argTo) {\n  var common = from && to ? getLowestCommonAncestor(from, to) : null;\n  var pathFrom = [];\n  while (from && from !== common) {\n    pathFrom.push(from);\n    from = from._hostParent;\n  }\n  var pathTo = [];\n  while (to && to !== common) {\n    pathTo.push(to);\n    to = to._hostParent;\n  }\n  var i;\n  for (i = 0; i < pathFrom.length; i++) {\n    fn(pathFrom[i], 'bubbled', argFrom);\n  }\n  for (i = pathTo.length; i-- > 0;) {\n    fn(pathTo[i], 'captured', argTo);\n  }\n}\n\nmodule.exports = {\n  isAncestor: isAncestor,\n  getLowestCommonAncestor: getLowestCommonAncestor,\n  getParentInstance: getParentInstance,\n  traverseTwoPhase: traverseTwoPhase,\n  traverseEnterLeave: traverseEnterLeave\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMTreeTraversal.js\n// module id = 143\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar ReactUpdates = require('./ReactUpdates');\nvar Transaction = require('./Transaction');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\n\nvar RESET_BATCHED_UPDATES = {\n  initialize: emptyFunction,\n  close: function () {\n    ReactDefaultBatchingStrategy.isBatchingUpdates = false;\n  }\n};\n\nvar FLUSH_BATCHED_UPDATES = {\n  initialize: emptyFunction,\n  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)\n};\n\nvar TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];\n\nfunction ReactDefaultBatchingStrategyTransaction() {\n  this.reinitializeTransaction();\n}\n\n_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction, {\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  }\n});\n\nvar transaction = new ReactDefaultBatchingStrategyTransaction();\n\nvar ReactDefaultBatchingStrategy = {\n  isBatchingUpdates: false,\n\n  /**\n   * Call the provided function in a context within which calls to `setState`\n   * and friends are batched such that components aren't updated unnecessarily.\n   */\n  batchedUpdates: function (callback, a, b, c, d, e) {\n    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;\n\n    ReactDefaultBatchingStrategy.isBatchingUpdates = true;\n\n    // The code is written this way to avoid extra allocations\n    if (alreadyBatchingUpdates) {\n      return callback(a, b, c, d, e);\n    } else {\n      return transaction.perform(callback, null, a, b, c, d, e);\n    }\n  }\n};\n\nmodule.exports = ReactDefaultBatchingStrategy;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDefaultBatchingStrategy.js\n// module id = 144\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ARIADOMPropertyConfig = require('./ARIADOMPropertyConfig');\nvar BeforeInputEventPlugin = require('./BeforeInputEventPlugin');\nvar ChangeEventPlugin = require('./ChangeEventPlugin');\nvar DefaultEventPluginOrder = require('./DefaultEventPluginOrder');\nvar EnterLeaveEventPlugin = require('./EnterLeaveEventPlugin');\nvar HTMLDOMPropertyConfig = require('./HTMLDOMPropertyConfig');\nvar ReactComponentBrowserEnvironment = require('./ReactComponentBrowserEnvironment');\nvar ReactDOMComponent = require('./ReactDOMComponent');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactDOMEmptyComponent = require('./ReactDOMEmptyComponent');\nvar ReactDOMTreeTraversal = require('./ReactDOMTreeTraversal');\nvar ReactDOMTextComponent = require('./ReactDOMTextComponent');\nvar ReactDefaultBatchingStrategy = require('./ReactDefaultBatchingStrategy');\nvar ReactEventListener = require('./ReactEventListener');\nvar ReactInjection = require('./ReactInjection');\nvar ReactReconcileTransaction = require('./ReactReconcileTransaction');\nvar SVGDOMPropertyConfig = require('./SVGDOMPropertyConfig');\nvar SelectEventPlugin = require('./SelectEventPlugin');\nvar SimpleEventPlugin = require('./SimpleEventPlugin');\n\nvar alreadyInjected = false;\n\nfunction inject() {\n  if (alreadyInjected) {\n    // TODO: This is currently true because these injections are shared between\n    // the client and the server package. They should be built independently\n    // and not share any injection state. Then this problem will be solved.\n    return;\n  }\n  alreadyInjected = true;\n\n  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);\n\n  /**\n   * Inject modules for resolving DOM hierarchy and plugin ordering.\n   */\n  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);\n  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);\n  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);\n\n  /**\n   * Some important event plugins included by default (without having to require\n   * them).\n   */\n  ReactInjection.EventPluginHub.injectEventPluginsByName({\n    SimpleEventPlugin: SimpleEventPlugin,\n    EnterLeaveEventPlugin: EnterLeaveEventPlugin,\n    ChangeEventPlugin: ChangeEventPlugin,\n    SelectEventPlugin: SelectEventPlugin,\n    BeforeInputEventPlugin: BeforeInputEventPlugin\n  });\n\n  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);\n\n  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);\n\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(ARIADOMPropertyConfig);\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);\n\n  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {\n    return new ReactDOMEmptyComponent(instantiate);\n  });\n\n  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);\n  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);\n\n  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);\n}\n\nmodule.exports = {\n  inject: inject\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDefaultInjection.js\n// module id = 145\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar EventPluginHub = require('./EventPluginHub');\n\nfunction runEventQueueInBatch(events) {\n  EventPluginHub.enqueueEvents(events);\n  EventPluginHub.processEventQueue(false);\n}\n\nvar ReactEventEmitterMixin = {\n\n  /**\n   * Streams a fired top-level event to `EventPluginHub` where plugins have the\n   * opportunity to create `ReactEvent`s to be dispatched.\n   */\n  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);\n    runEventQueueInBatch(events);\n  }\n};\n\nmodule.exports = ReactEventEmitterMixin;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactEventEmitterMixin.js\n// module id = 147\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar EventListener = require('fbjs/lib/EventListener');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar PooledClass = require('./PooledClass');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar getEventTarget = require('./getEventTarget');\nvar getUnboundedScrollPosition = require('fbjs/lib/getUnboundedScrollPosition');\n\n/**\n * Find the deepest React component completely containing the root of the\n * passed-in instance (for use when entire React trees are nested within each\n * other). If React trees are not nested, returns null.\n */\nfunction findParent(inst) {\n  // TODO: It may be a good idea to cache this to prevent unnecessary DOM\n  // traversal, but caching is difficult to do correctly without using a\n  // mutation observer to listen for all DOM changes.\n  while (inst._hostParent) {\n    inst = inst._hostParent;\n  }\n  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);\n  var container = rootNode.parentNode;\n  return ReactDOMComponentTree.getClosestInstanceFromNode(container);\n}\n\n// Used to store ancestor hierarchy in top level callback\nfunction TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {\n  this.topLevelType = topLevelType;\n  this.nativeEvent = nativeEvent;\n  this.ancestors = [];\n}\n_assign(TopLevelCallbackBookKeeping.prototype, {\n  destructor: function () {\n    this.topLevelType = null;\n    this.nativeEvent = null;\n    this.ancestors.length = 0;\n  }\n});\nPooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);\n\nfunction handleTopLevelImpl(bookKeeping) {\n  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);\n  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);\n\n  // Loop through the hierarchy, in case there's any nested components.\n  // It's important that we build the array of ancestors before calling any\n  // event handlers, because event handlers can modify the DOM, leading to\n  // inconsistencies with ReactMount's node cache. See #1105.\n  var ancestor = targetInst;\n  do {\n    bookKeeping.ancestors.push(ancestor);\n    ancestor = ancestor && findParent(ancestor);\n  } while (ancestor);\n\n  for (var i = 0; i < bookKeeping.ancestors.length; i++) {\n    targetInst = bookKeeping.ancestors[i];\n    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));\n  }\n}\n\nfunction scrollValueMonitor(cb) {\n  var scrollPosition = getUnboundedScrollPosition(window);\n  cb(scrollPosition);\n}\n\nvar ReactEventListener = {\n  _enabled: true,\n  _handleTopLevel: null,\n\n  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,\n\n  setHandleTopLevel: function (handleTopLevel) {\n    ReactEventListener._handleTopLevel = handleTopLevel;\n  },\n\n  setEnabled: function (enabled) {\n    ReactEventListener._enabled = !!enabled;\n  },\n\n  isEnabled: function () {\n    return ReactEventListener._enabled;\n  },\n\n  /**\n   * Traps top-level events by using event bubbling.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\n   * @param {object} element Element on which to attach listener.\n   * @return {?object} An object with a remove function which will forcefully\n   *                  remove the listener.\n   * @internal\n   */\n  trapBubbledEvent: function (topLevelType, handlerBaseName, element) {\n    if (!element) {\n      return null;\n    }\n    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n  },\n\n  /**\n   * Traps a top-level event by using event capturing.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\n   * @param {object} element Element on which to attach listener.\n   * @return {?object} An object with a remove function which will forcefully\n   *                  remove the listener.\n   * @internal\n   */\n  trapCapturedEvent: function (topLevelType, handlerBaseName, element) {\n    if (!element) {\n      return null;\n    }\n    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n  },\n\n  monitorScrollValue: function (refresh) {\n    var callback = scrollValueMonitor.bind(null, refresh);\n    EventListener.listen(window, 'scroll', callback);\n  },\n\n  dispatchEvent: function (topLevelType, nativeEvent) {\n    if (!ReactEventListener._enabled) {\n      return;\n    }\n\n    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);\n    try {\n      // Event queue being processed in the same cycle allows\n      // `preventDefault`.\n      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);\n    } finally {\n      TopLevelCallbackBookKeeping.release(bookKeeping);\n    }\n  }\n};\n\nmodule.exports = ReactEventListener;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactEventListener.js\n// module id = 148\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar DOMProperty = require('./DOMProperty');\nvar EventPluginHub = require('./EventPluginHub');\nvar EventPluginUtils = require('./EventPluginUtils');\nvar ReactComponentEnvironment = require('./ReactComponentEnvironment');\nvar ReactEmptyComponent = require('./ReactEmptyComponent');\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\nvar ReactHostComponent = require('./ReactHostComponent');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar ReactInjection = {\n  Component: ReactComponentEnvironment.injection,\n  DOMProperty: DOMProperty.injection,\n  EmptyComponent: ReactEmptyComponent.injection,\n  EventPluginHub: EventPluginHub.injection,\n  EventPluginUtils: EventPluginUtils.injection,\n  EventEmitter: ReactBrowserEventEmitter.injection,\n  HostComponent: ReactHostComponent.injection,\n  Updates: ReactUpdates.injection\n};\n\nmodule.exports = ReactInjection;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactInjection.js\n// module id = 149\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar adler32 = require('./adler32');\n\nvar TAG_END = /\\/?>/;\nvar COMMENT_START = /^<\\!\\-\\-/;\n\nvar ReactMarkupChecksum = {\n  CHECKSUM_ATTR_NAME: 'data-react-checksum',\n\n  /**\n   * @param {string} markup Markup string\n   * @return {string} Markup string with checksum attribute attached\n   */\n  addChecksumToMarkup: function (markup) {\n    var checksum = adler32(markup);\n\n    // Add checksum (handle both parent tags, comments and self-closing tags)\n    if (COMMENT_START.test(markup)) {\n      return markup;\n    } else {\n      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '=\"' + checksum + '\"$&');\n    }\n  },\n\n  /**\n   * @param {string} markup to use\n   * @param {DOMElement} element root React element\n   * @returns {boolean} whether or not the markup is the same\n   */\n  canReuseMarkup: function (markup, element) {\n    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);\n    var markupChecksum = adler32(markup);\n    return markupChecksum === existingChecksum;\n  }\n};\n\nmodule.exports = ReactMarkupChecksum;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactMarkupChecksum.js\n// module id = 150\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactComponentEnvironment = require('./ReactComponentEnvironment');\nvar ReactInstanceMap = require('./ReactInstanceMap');\nvar ReactInstrumentation = require('./ReactInstrumentation');\n\nvar ReactCurrentOwner = require('react/lib/ReactCurrentOwner');\nvar ReactReconciler = require('./ReactReconciler');\nvar ReactChildReconciler = require('./ReactChildReconciler');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar flattenChildren = require('./flattenChildren');\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Make an update for markup to be rendered and inserted at a supplied index.\n *\n * @param {string} markup Markup that renders into an element.\n * @param {number} toIndex Destination index.\n * @private\n */\nfunction makeInsertMarkup(markup, afterNode, toIndex) {\n  // NOTE: Null values reduce hidden classes.\n  return {\n    type: 'INSERT_MARKUP',\n    content: markup,\n    fromIndex: null,\n    fromNode: null,\n    toIndex: toIndex,\n    afterNode: afterNode\n  };\n}\n\n/**\n * Make an update for moving an existing element to another index.\n *\n * @param {number} fromIndex Source index of the existing element.\n * @param {number} toIndex Destination index of the element.\n * @private\n */\nfunction makeMove(child, afterNode, toIndex) {\n  // NOTE: Null values reduce hidden classes.\n  return {\n    type: 'MOVE_EXISTING',\n    content: null,\n    fromIndex: child._mountIndex,\n    fromNode: ReactReconciler.getHostNode(child),\n    toIndex: toIndex,\n    afterNode: afterNode\n  };\n}\n\n/**\n * Make an update for removing an element at an index.\n *\n * @param {number} fromIndex Index of the element to remove.\n * @private\n */\nfunction makeRemove(child, node) {\n  // NOTE: Null values reduce hidden classes.\n  return {\n    type: 'REMOVE_NODE',\n    content: null,\n    fromIndex: child._mountIndex,\n    fromNode: node,\n    toIndex: null,\n    afterNode: null\n  };\n}\n\n/**\n * Make an update for setting the markup of a node.\n *\n * @param {string} markup Markup that renders into an element.\n * @private\n */\nfunction makeSetMarkup(markup) {\n  // NOTE: Null values reduce hidden classes.\n  return {\n    type: 'SET_MARKUP',\n    content: markup,\n    fromIndex: null,\n    fromNode: null,\n    toIndex: null,\n    afterNode: null\n  };\n}\n\n/**\n * Make an update for setting the text content.\n *\n * @param {string} textContent Text content to set.\n * @private\n */\nfunction makeTextContent(textContent) {\n  // NOTE: Null values reduce hidden classes.\n  return {\n    type: 'TEXT_CONTENT',\n    content: textContent,\n    fromIndex: null,\n    fromNode: null,\n    toIndex: null,\n    afterNode: null\n  };\n}\n\n/**\n * Push an update, if any, onto the queue. Creates a new queue if none is\n * passed and always returns the queue. Mutative.\n */\nfunction enqueue(queue, update) {\n  if (update) {\n    queue = queue || [];\n    queue.push(update);\n  }\n  return queue;\n}\n\n/**\n * Processes any enqueued updates.\n *\n * @private\n */\nfunction processQueue(inst, updateQueue) {\n  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);\n}\n\nvar setChildrenForInstrumentation = emptyFunction;\nif (process.env.NODE_ENV !== 'production') {\n  var getDebugID = function (inst) {\n    if (!inst._debugID) {\n      // Check for ART-like instances. TODO: This is silly/gross.\n      var internal;\n      if (internal = ReactInstanceMap.get(inst)) {\n        inst = internal;\n      }\n    }\n    return inst._debugID;\n  };\n  setChildrenForInstrumentation = function (children) {\n    var debugID = getDebugID(this);\n    // TODO: React Native empty components are also multichild.\n    // This means they still get into this method but don't have _debugID.\n    if (debugID !== 0) {\n      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {\n        return children[key]._debugID;\n      }) : []);\n    }\n  };\n}\n\n/**\n * ReactMultiChild are capable of reconciling multiple children.\n *\n * @class ReactMultiChild\n * @internal\n */\nvar ReactMultiChild = {\n\n  /**\n   * Provides common functionality for components that must reconcile multiple\n   * children. This is used by `ReactDOMComponent` to mount, update, and\n   * unmount child components.\n   *\n   * @lends {ReactMultiChild.prototype}\n   */\n  Mixin: {\n\n    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {\n      if (process.env.NODE_ENV !== 'production') {\n        var selfDebugID = getDebugID(this);\n        if (this._currentElement) {\n          try {\n            ReactCurrentOwner.current = this._currentElement._owner;\n            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, selfDebugID);\n          } finally {\n            ReactCurrentOwner.current = null;\n          }\n        }\n      }\n      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);\n    },\n\n    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {\n      var nextChildren;\n      var selfDebugID = 0;\n      if (process.env.NODE_ENV !== 'production') {\n        selfDebugID = getDebugID(this);\n        if (this._currentElement) {\n          try {\n            ReactCurrentOwner.current = this._currentElement._owner;\n            nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);\n          } finally {\n            ReactCurrentOwner.current = null;\n          }\n          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);\n          return nextChildren;\n        }\n      }\n      nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);\n      ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);\n      return nextChildren;\n    },\n\n    /**\n     * Generates a \"mount image\" for each of the supplied children. In the case\n     * of `ReactDOMComponent`, a mount image is a string of markup.\n     *\n     * @param {?object} nestedChildren Nested child maps.\n     * @return {array} An array of mounted representations.\n     * @internal\n     */\n    mountChildren: function (nestedChildren, transaction, context) {\n      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);\n      this._renderedChildren = children;\n\n      var mountImages = [];\n      var index = 0;\n      for (var name in children) {\n        if (children.hasOwnProperty(name)) {\n          var child = children[name];\n          var selfDebugID = 0;\n          if (process.env.NODE_ENV !== 'production') {\n            selfDebugID = getDebugID(this);\n          }\n          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);\n          child._mountIndex = index++;\n          mountImages.push(mountImage);\n        }\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        setChildrenForInstrumentation.call(this, children);\n      }\n\n      return mountImages;\n    },\n\n    /**\n     * Replaces any rendered children with a text content string.\n     *\n     * @param {string} nextContent String of content.\n     * @internal\n     */\n    updateTextContent: function (nextContent) {\n      var prevChildren = this._renderedChildren;\n      // Remove any rendered children.\n      ReactChildReconciler.unmountChildren(prevChildren, false);\n      for (var name in prevChildren) {\n        if (prevChildren.hasOwnProperty(name)) {\n          !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;\n        }\n      }\n      // Set new text content.\n      var updates = [makeTextContent(nextContent)];\n      processQueue(this, updates);\n    },\n\n    /**\n     * Replaces any rendered children with a markup string.\n     *\n     * @param {string} nextMarkup String of markup.\n     * @internal\n     */\n    updateMarkup: function (nextMarkup) {\n      var prevChildren = this._renderedChildren;\n      // Remove any rendered children.\n      ReactChildReconciler.unmountChildren(prevChildren, false);\n      for (var name in prevChildren) {\n        if (prevChildren.hasOwnProperty(name)) {\n          !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;\n        }\n      }\n      var updates = [makeSetMarkup(nextMarkup)];\n      processQueue(this, updates);\n    },\n\n    /**\n     * Updates the rendered children with new children.\n     *\n     * @param {?object} nextNestedChildrenElements Nested child element maps.\n     * @param {ReactReconcileTransaction} transaction\n     * @internal\n     */\n    updateChildren: function (nextNestedChildrenElements, transaction, context) {\n      // Hook used by React ART\n      this._updateChildren(nextNestedChildrenElements, transaction, context);\n    },\n\n    /**\n     * @param {?object} nextNestedChildrenElements Nested child element maps.\n     * @param {ReactReconcileTransaction} transaction\n     * @final\n     * @protected\n     */\n    _updateChildren: function (nextNestedChildrenElements, transaction, context) {\n      var prevChildren = this._renderedChildren;\n      var removedNodes = {};\n      var mountImages = [];\n      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);\n      if (!nextChildren && !prevChildren) {\n        return;\n      }\n      var updates = null;\n      var name;\n      // `nextIndex` will increment for each child in `nextChildren`, but\n      // `lastIndex` will be the last index visited in `prevChildren`.\n      var nextIndex = 0;\n      var lastIndex = 0;\n      // `nextMountIndex` will increment for each newly mounted child.\n      var nextMountIndex = 0;\n      var lastPlacedNode = null;\n      for (name in nextChildren) {\n        if (!nextChildren.hasOwnProperty(name)) {\n          continue;\n        }\n        var prevChild = prevChildren && prevChildren[name];\n        var nextChild = nextChildren[name];\n        if (prevChild === nextChild) {\n          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));\n          lastIndex = Math.max(prevChild._mountIndex, lastIndex);\n          prevChild._mountIndex = nextIndex;\n        } else {\n          if (prevChild) {\n            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.\n            lastIndex = Math.max(prevChild._mountIndex, lastIndex);\n            // The `removedNodes` loop below will actually remove the child.\n          }\n          // The child must be instantiated before it's mounted.\n          updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));\n          nextMountIndex++;\n        }\n        nextIndex++;\n        lastPlacedNode = ReactReconciler.getHostNode(nextChild);\n      }\n      // Remove children that are no longer present.\n      for (name in removedNodes) {\n        if (removedNodes.hasOwnProperty(name)) {\n          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));\n        }\n      }\n      if (updates) {\n        processQueue(this, updates);\n      }\n      this._renderedChildren = nextChildren;\n\n      if (process.env.NODE_ENV !== 'production') {\n        setChildrenForInstrumentation.call(this, nextChildren);\n      }\n    },\n\n    /**\n     * Unmounts all rendered children. This should be used to clean up children\n     * when this component is unmounted. It does not actually perform any\n     * backend operations.\n     *\n     * @internal\n     */\n    unmountChildren: function (safely) {\n      var renderedChildren = this._renderedChildren;\n      ReactChildReconciler.unmountChildren(renderedChildren, safely);\n      this._renderedChildren = null;\n    },\n\n    /**\n     * Moves a child component to the supplied index.\n     *\n     * @param {ReactComponent} child Component to move.\n     * @param {number} toIndex Destination index of the element.\n     * @param {number} lastIndex Last index visited of the siblings of `child`.\n     * @protected\n     */\n    moveChild: function (child, afterNode, toIndex, lastIndex) {\n      // If the index of `child` is less than `lastIndex`, then it needs to\n      // be moved. Otherwise, we do not need to move it because a child will be\n      // inserted or moved before `child`.\n      if (child._mountIndex < lastIndex) {\n        return makeMove(child, afterNode, toIndex);\n      }\n    },\n\n    /**\n     * Creates a child component.\n     *\n     * @param {ReactComponent} child Component to create.\n     * @param {string} mountImage Markup to insert.\n     * @protected\n     */\n    createChild: function (child, afterNode, mountImage) {\n      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);\n    },\n\n    /**\n     * Removes a child component.\n     *\n     * @param {ReactComponent} child Child to remove.\n     * @protected\n     */\n    removeChild: function (child, node) {\n      return makeRemove(child, node);\n    },\n\n    /**\n     * Mounts a child with the supplied name.\n     *\n     * NOTE: This is part of `updateChildren` and is here for readability.\n     *\n     * @param {ReactComponent} child Component to mount.\n     * @param {string} name Name of the child.\n     * @param {number} index Index at which to insert the child.\n     * @param {ReactReconcileTransaction} transaction\n     * @private\n     */\n    _mountChildAtIndex: function (child, mountImage, afterNode, index, transaction, context) {\n      child._mountIndex = index;\n      return this.createChild(child, afterNode, mountImage);\n    },\n\n    /**\n     * Unmounts a rendered child.\n     *\n     * NOTE: This is part of `updateChildren` and is here for readability.\n     *\n     * @param {ReactComponent} child Component to unmount.\n     * @private\n     */\n    _unmountChild: function (child, node) {\n      var update = this.removeChild(child, node);\n      child._mountIndex = null;\n      return update;\n    }\n\n  }\n\n};\n\nmodule.exports = ReactMultiChild;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactMultiChild.js\n// module id = 151\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * @param {?object} object\n * @return {boolean} True if `object` is a valid owner.\n * @final\n */\nfunction isValidOwner(object) {\n  return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');\n}\n\n/**\n * ReactOwners are capable of storing references to owned components.\n *\n * All components are capable of //being// referenced by owner components, but\n * only ReactOwner components are capable of //referencing// owned components.\n * The named reference is known as a \"ref\".\n *\n * Refs are available when mounted and updated during reconciliation.\n *\n *   var MyComponent = React.createClass({\n *     render: function() {\n *       return (\n *         <div onClick={this.handleClick}>\n *           <CustomComponent ref=\"custom\" />\n *         </div>\n *       );\n *     },\n *     handleClick: function() {\n *       this.refs.custom.handleClick();\n *     },\n *     componentDidMount: function() {\n *       this.refs.custom.initialize();\n *     }\n *   });\n *\n * Refs should rarely be used. When refs are used, they should only be done to\n * control data that is not handled by React's data flow.\n *\n * @class ReactOwner\n */\nvar ReactOwner = {\n  /**\n   * Adds a component by ref to an owner component.\n   *\n   * @param {ReactComponent} component Component to reference.\n   * @param {string} ref Name by which to refer to the component.\n   * @param {ReactOwner} owner Component on which to record the ref.\n   * @final\n   * @internal\n   */\n  addComponentAsRefTo: function (component, ref, owner) {\n    !isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;\n    owner.attachRef(ref, component);\n  },\n\n  /**\n   * Removes a component by ref from an owner component.\n   *\n   * @param {ReactComponent} component Component to dereference.\n   * @param {string} ref Name of the ref to remove.\n   * @param {ReactOwner} owner Component on which the ref is recorded.\n   * @final\n   * @internal\n   */\n  removeComponentAsRefFrom: function (component, ref, owner) {\n    !isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;\n    var ownerPublicInstance = owner.getPublicInstance();\n    // Check that `component`'s owner is still alive and that `component` is still the current ref\n    // because we do not want to detach the ref if another component stole it.\n    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {\n      owner.detachRef(ref);\n    }\n  }\n\n};\n\nmodule.exports = ReactOwner;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactOwner.js\n// module id = 152\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactPropTypesSecret.js\n// module id = 153\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar CallbackQueue = require('./CallbackQueue');\nvar PooledClass = require('./PooledClass');\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\nvar ReactInputSelection = require('./ReactInputSelection');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar Transaction = require('./Transaction');\nvar ReactUpdateQueue = require('./ReactUpdateQueue');\n\n/**\n * Ensures that, when possible, the selection range (currently selected text\n * input) is not disturbed by performing the transaction.\n */\nvar SELECTION_RESTORATION = {\n  /**\n   * @return {Selection} Selection information.\n   */\n  initialize: ReactInputSelection.getSelectionInformation,\n  /**\n   * @param {Selection} sel Selection information returned from `initialize`.\n   */\n  close: ReactInputSelection.restoreSelection\n};\n\n/**\n * Suppresses events (blur/focus) that could be inadvertently dispatched due to\n * high level DOM manipulations (like temporarily removing a text input from the\n * DOM).\n */\nvar EVENT_SUPPRESSION = {\n  /**\n   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before\n   * the reconciliation.\n   */\n  initialize: function () {\n    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();\n    ReactBrowserEventEmitter.setEnabled(false);\n    return currentlyEnabled;\n  },\n\n  /**\n   * @param {boolean} previouslyEnabled Enabled status of\n   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`\n   *   restores the previous value.\n   */\n  close: function (previouslyEnabled) {\n    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);\n  }\n};\n\n/**\n * Provides a queue for collecting `componentDidMount` and\n * `componentDidUpdate` callbacks during the transaction.\n */\nvar ON_DOM_READY_QUEUEING = {\n  /**\n   * Initializes the internal `onDOMReady` queue.\n   */\n  initialize: function () {\n    this.reactMountReady.reset();\n  },\n\n  /**\n   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.\n   */\n  close: function () {\n    this.reactMountReady.notifyAll();\n  }\n};\n\n/**\n * Executed within the scope of the `Transaction` instance. Consider these as\n * being member methods, but with an implied ordering while being isolated from\n * each other.\n */\nvar TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];\n\nif (process.env.NODE_ENV !== 'production') {\n  TRANSACTION_WRAPPERS.push({\n    initialize: ReactInstrumentation.debugTool.onBeginFlush,\n    close: ReactInstrumentation.debugTool.onEndFlush\n  });\n}\n\n/**\n * Currently:\n * - The order that these are listed in the transaction is critical:\n * - Suppresses events.\n * - Restores selection range.\n *\n * Future:\n * - Restore document/overflow scroll positions that were unintentionally\n *   modified via DOM insertions above the top viewport boundary.\n * - Implement/integrate with customized constraint based layout system and keep\n *   track of which dimensions must be remeasured.\n *\n * @class ReactReconcileTransaction\n */\nfunction ReactReconcileTransaction(useCreateElement) {\n  this.reinitializeTransaction();\n  // Only server-side rendering really needs this option (see\n  // `ReactServerRendering`), but server-side uses\n  // `ReactServerRenderingTransaction` instead. This option is here so that it's\n  // accessible and defaults to false when `ReactDOMComponent` and\n  // `ReactDOMTextComponent` checks it in `mountComponent`.`\n  this.renderToStaticMarkup = false;\n  this.reactMountReady = CallbackQueue.getPooled(null);\n  this.useCreateElement = useCreateElement;\n}\n\nvar Mixin = {\n  /**\n   * @see Transaction\n   * @abstract\n   * @final\n   * @return {array<object>} List of operation wrap procedures.\n   *   TODO: convert to array<TransactionWrapper>\n   */\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  /**\n   * @return {object} The queue to collect `onDOMReady` callbacks with.\n   */\n  getReactMountReady: function () {\n    return this.reactMountReady;\n  },\n\n  /**\n   * @return {object} The queue to collect React async events.\n   */\n  getUpdateQueue: function () {\n    return ReactUpdateQueue;\n  },\n\n  /**\n   * Save current transaction state -- if the return value from this method is\n   * passed to `rollback`, the transaction will be reset to that state.\n   */\n  checkpoint: function () {\n    // reactMountReady is the our only stateful wrapper\n    return this.reactMountReady.checkpoint();\n  },\n\n  rollback: function (checkpoint) {\n    this.reactMountReady.rollback(checkpoint);\n  },\n\n  /**\n   * `PooledClass` looks for this, and will invoke this before allowing this\n   * instance to be reused.\n   */\n  destructor: function () {\n    CallbackQueue.release(this.reactMountReady);\n    this.reactMountReady = null;\n  }\n};\n\n_assign(ReactReconcileTransaction.prototype, Transaction, Mixin);\n\nPooledClass.addPoolingTo(ReactReconcileTransaction);\n\nmodule.exports = ReactReconcileTransaction;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactReconcileTransaction.js\n// module id = 154\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar ReactOwner = require('./ReactOwner');\n\nvar ReactRef = {};\n\nfunction attachRef(ref, component, owner) {\n  if (typeof ref === 'function') {\n    ref(component.getPublicInstance());\n  } else {\n    // Legacy ref\n    ReactOwner.addComponentAsRefTo(component, ref, owner);\n  }\n}\n\nfunction detachRef(ref, component, owner) {\n  if (typeof ref === 'function') {\n    ref(null);\n  } else {\n    // Legacy ref\n    ReactOwner.removeComponentAsRefFrom(component, ref, owner);\n  }\n}\n\nReactRef.attachRefs = function (instance, element) {\n  if (element === null || typeof element !== 'object') {\n    return;\n  }\n  var ref = element.ref;\n  if (ref != null) {\n    attachRef(ref, instance, element._owner);\n  }\n};\n\nReactRef.shouldUpdateRefs = function (prevElement, nextElement) {\n  // If either the owner or a `ref` has changed, make sure the newest owner\n  // has stored a reference to `this`, and the previous owner (if different)\n  // has forgotten the reference to `this`. We use the element instead\n  // of the public this.props because the post processing cannot determine\n  // a ref. The ref conceptually lives on the element.\n\n  // TODO: Should this even be possible? The owner cannot change because\n  // it's forbidden by shouldUpdateReactComponent. The ref can change\n  // if you swap the keys of but not the refs. Reconsider where this check\n  // is made. It probably belongs where the key checking and\n  // instantiateReactComponent is done.\n\n  var prevRef = null;\n  var prevOwner = null;\n  if (prevElement !== null && typeof prevElement === 'object') {\n    prevRef = prevElement.ref;\n    prevOwner = prevElement._owner;\n  }\n\n  var nextRef = null;\n  var nextOwner = null;\n  if (nextElement !== null && typeof nextElement === 'object') {\n    nextRef = nextElement.ref;\n    nextOwner = nextElement._owner;\n  }\n\n  return prevRef !== nextRef ||\n  // If owner changes but we have an unchanged function ref, don't update refs\n  typeof nextRef === 'string' && nextOwner !== prevOwner;\n};\n\nReactRef.detachRefs = function (instance, element) {\n  if (element === null || typeof element !== 'object') {\n    return;\n  }\n  var ref = element.ref;\n  if (ref != null) {\n    detachRef(ref, instance, element._owner);\n  }\n};\n\nmodule.exports = ReactRef;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactRef.js\n// module id = 155\n// module chunks = 0","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar PooledClass = require('./PooledClass');\nvar Transaction = require('./Transaction');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar ReactServerUpdateQueue = require('./ReactServerUpdateQueue');\n\n/**\n * Executed within the scope of the `Transaction` instance. Consider these as\n * being member methods, but with an implied ordering while being isolated from\n * each other.\n */\nvar TRANSACTION_WRAPPERS = [];\n\nif (process.env.NODE_ENV !== 'production') {\n  TRANSACTION_WRAPPERS.push({\n    initialize: ReactInstrumentation.debugTool.onBeginFlush,\n    close: ReactInstrumentation.debugTool.onEndFlush\n  });\n}\n\nvar noopCallbackQueue = {\n  enqueue: function () {}\n};\n\n/**\n * @class ReactServerRenderingTransaction\n * @param {boolean} renderToStaticMarkup\n */\nfunction ReactServerRenderingTransaction(renderToStaticMarkup) {\n  this.reinitializeTransaction();\n  this.renderToStaticMarkup = renderToStaticMarkup;\n  this.useCreateElement = false;\n  this.updateQueue = new ReactServerUpdateQueue(this);\n}\n\nvar Mixin = {\n  /**\n   * @see Transaction\n   * @abstract\n   * @final\n   * @return {array} Empty list of operation wrap procedures.\n   */\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  /**\n   * @return {object} The queue to collect `onDOMReady` callbacks with.\n   */\n  getReactMountReady: function () {\n    return noopCallbackQueue;\n  },\n\n  /**\n   * @return {object} The queue to collect React async events.\n   */\n  getUpdateQueue: function () {\n    return this.updateQueue;\n  },\n\n  /**\n   * `PooledClass` looks for this, and will invoke this before allowing this\n   * instance to be reused.\n   */\n  destructor: function () {},\n\n  checkpoint: function () {},\n\n  rollback: function () {}\n};\n\n_assign(ReactServerRenderingTransaction.prototype, Transaction, Mixin);\n\nPooledClass.addPoolingTo(ReactServerRenderingTransaction);\n\nmodule.exports = ReactServerRenderingTransaction;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactServerRenderingTransaction.js\n// module id = 156\n// module chunks = 0","/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ReactUpdateQueue = require('./ReactUpdateQueue');\n\nvar warning = require('fbjs/lib/warning');\n\nfunction warnNoop(publicInstance, callerName) {\n  if (process.env.NODE_ENV !== 'production') {\n    var constructor = publicInstance.constructor;\n    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;\n  }\n}\n\n/**\n * This is the update queue used for server rendering.\n * It delegates to ReactUpdateQueue while server rendering is in progress and\n * switches to ReactNoopUpdateQueue after the transaction has completed.\n * @class ReactServerUpdateQueue\n * @param {Transaction} transaction\n */\n\nvar ReactServerUpdateQueue = function () {\n  function ReactServerUpdateQueue(transaction) {\n    _classCallCheck(this, ReactServerUpdateQueue);\n\n    this.transaction = transaction;\n  }\n\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n\n\n  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {\n    return false;\n  };\n\n  /**\n   * Enqueue a callback that will be executed after all the pending updates\n   * have processed.\n   *\n   * @param {ReactClass} publicInstance The instance to use as `this` context.\n   * @param {?function} callback Called after state is updated.\n   * @internal\n   */\n\n\n  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {\n    if (this.transaction.isInTransaction()) {\n      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);\n    }\n  };\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @internal\n   */\n\n\n  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {\n    if (this.transaction.isInTransaction()) {\n      ReactUpdateQueue.enqueueForceUpdate(publicInstance);\n    } else {\n      warnNoop(publicInstance, 'forceUpdate');\n    }\n  };\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object|function} completeState Next state.\n   * @internal\n   */\n\n\n  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {\n    if (this.transaction.isInTransaction()) {\n      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);\n    } else {\n      warnNoop(publicInstance, 'replaceState');\n    }\n  };\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object|function} partialState Next partial state to be merged with state.\n   * @internal\n   */\n\n\n  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {\n    if (this.transaction.isInTransaction()) {\n      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);\n    } else {\n      warnNoop(publicInstance, 'setState');\n    }\n  };\n\n  return ReactServerUpdateQueue;\n}();\n\nmodule.exports = ReactServerUpdateQueue;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactServerUpdateQueue.js\n// module id = 157\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nmodule.exports = '15.5.4';\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactVersion.js\n// module id = 158\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar NS = {\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace'\n};\n\n// We use attributes for everything SVG so let's avoid some duplication and run\n// code instead.\n// The following are all specified in the HTML config already so we exclude here.\n// - class (as className)\n// - color\n// - height\n// - id\n// - lang\n// - max\n// - media\n// - method\n// - min\n// - name\n// - style\n// - target\n// - type\n// - width\nvar ATTRS = {\n  accentHeight: 'accent-height',\n  accumulate: 0,\n  additive: 0,\n  alignmentBaseline: 'alignment-baseline',\n  allowReorder: 'allowReorder',\n  alphabetic: 0,\n  amplitude: 0,\n  arabicForm: 'arabic-form',\n  ascent: 0,\n  attributeName: 'attributeName',\n  attributeType: 'attributeType',\n  autoReverse: 'autoReverse',\n  azimuth: 0,\n  baseFrequency: 'baseFrequency',\n  baseProfile: 'baseProfile',\n  baselineShift: 'baseline-shift',\n  bbox: 0,\n  begin: 0,\n  bias: 0,\n  by: 0,\n  calcMode: 'calcMode',\n  capHeight: 'cap-height',\n  clip: 0,\n  clipPath: 'clip-path',\n  clipRule: 'clip-rule',\n  clipPathUnits: 'clipPathUnits',\n  colorInterpolation: 'color-interpolation',\n  colorInterpolationFilters: 'color-interpolation-filters',\n  colorProfile: 'color-profile',\n  colorRendering: 'color-rendering',\n  contentScriptType: 'contentScriptType',\n  contentStyleType: 'contentStyleType',\n  cursor: 0,\n  cx: 0,\n  cy: 0,\n  d: 0,\n  decelerate: 0,\n  descent: 0,\n  diffuseConstant: 'diffuseConstant',\n  direction: 0,\n  display: 0,\n  divisor: 0,\n  dominantBaseline: 'dominant-baseline',\n  dur: 0,\n  dx: 0,\n  dy: 0,\n  edgeMode: 'edgeMode',\n  elevation: 0,\n  enableBackground: 'enable-background',\n  end: 0,\n  exponent: 0,\n  externalResourcesRequired: 'externalResourcesRequired',\n  fill: 0,\n  fillOpacity: 'fill-opacity',\n  fillRule: 'fill-rule',\n  filter: 0,\n  filterRes: 'filterRes',\n  filterUnits: 'filterUnits',\n  floodColor: 'flood-color',\n  floodOpacity: 'flood-opacity',\n  focusable: 0,\n  fontFamily: 'font-family',\n  fontSize: 'font-size',\n  fontSizeAdjust: 'font-size-adjust',\n  fontStretch: 'font-stretch',\n  fontStyle: 'font-style',\n  fontVariant: 'font-variant',\n  fontWeight: 'font-weight',\n  format: 0,\n  from: 0,\n  fx: 0,\n  fy: 0,\n  g1: 0,\n  g2: 0,\n  glyphName: 'glyph-name',\n  glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n  glyphOrientationVertical: 'glyph-orientation-vertical',\n  glyphRef: 'glyphRef',\n  gradientTransform: 'gradientTransform',\n  gradientUnits: 'gradientUnits',\n  hanging: 0,\n  horizAdvX: 'horiz-adv-x',\n  horizOriginX: 'horiz-origin-x',\n  ideographic: 0,\n  imageRendering: 'image-rendering',\n  'in': 0,\n  in2: 0,\n  intercept: 0,\n  k: 0,\n  k1: 0,\n  k2: 0,\n  k3: 0,\n  k4: 0,\n  kernelMatrix: 'kernelMatrix',\n  kernelUnitLength: 'kernelUnitLength',\n  kerning: 0,\n  keyPoints: 'keyPoints',\n  keySplines: 'keySplines',\n  keyTimes: 'keyTimes',\n  lengthAdjust: 'lengthAdjust',\n  letterSpacing: 'letter-spacing',\n  lightingColor: 'lighting-color',\n  limitingConeAngle: 'limitingConeAngle',\n  local: 0,\n  markerEnd: 'marker-end',\n  markerMid: 'marker-mid',\n  markerStart: 'marker-start',\n  markerHeight: 'markerHeight',\n  markerUnits: 'markerUnits',\n  markerWidth: 'markerWidth',\n  mask: 0,\n  maskContentUnits: 'maskContentUnits',\n  maskUnits: 'maskUnits',\n  mathematical: 0,\n  mode: 0,\n  numOctaves: 'numOctaves',\n  offset: 0,\n  opacity: 0,\n  operator: 0,\n  order: 0,\n  orient: 0,\n  orientation: 0,\n  origin: 0,\n  overflow: 0,\n  overlinePosition: 'overline-position',\n  overlineThickness: 'overline-thickness',\n  paintOrder: 'paint-order',\n  panose1: 'panose-1',\n  pathLength: 'pathLength',\n  patternContentUnits: 'patternContentUnits',\n  patternTransform: 'patternTransform',\n  patternUnits: 'patternUnits',\n  pointerEvents: 'pointer-events',\n  points: 0,\n  pointsAtX: 'pointsAtX',\n  pointsAtY: 'pointsAtY',\n  pointsAtZ: 'pointsAtZ',\n  preserveAlpha: 'preserveAlpha',\n  preserveAspectRatio: 'preserveAspectRatio',\n  primitiveUnits: 'primitiveUnits',\n  r: 0,\n  radius: 0,\n  refX: 'refX',\n  refY: 'refY',\n  renderingIntent: 'rendering-intent',\n  repeatCount: 'repeatCount',\n  repeatDur: 'repeatDur',\n  requiredExtensions: 'requiredExtensions',\n  requiredFeatures: 'requiredFeatures',\n  restart: 0,\n  result: 0,\n  rotate: 0,\n  rx: 0,\n  ry: 0,\n  scale: 0,\n  seed: 0,\n  shapeRendering: 'shape-rendering',\n  slope: 0,\n  spacing: 0,\n  specularConstant: 'specularConstant',\n  specularExponent: 'specularExponent',\n  speed: 0,\n  spreadMethod: 'spreadMethod',\n  startOffset: 'startOffset',\n  stdDeviation: 'stdDeviation',\n  stemh: 0,\n  stemv: 0,\n  stitchTiles: 'stitchTiles',\n  stopColor: 'stop-color',\n  stopOpacity: 'stop-opacity',\n  strikethroughPosition: 'strikethrough-position',\n  strikethroughThickness: 'strikethrough-thickness',\n  string: 0,\n  stroke: 0,\n  strokeDasharray: 'stroke-dasharray',\n  strokeDashoffset: 'stroke-dashoffset',\n  strokeLinecap: 'stroke-linecap',\n  strokeLinejoin: 'stroke-linejoin',\n  strokeMiterlimit: 'stroke-miterlimit',\n  strokeOpacity: 'stroke-opacity',\n  strokeWidth: 'stroke-width',\n  surfaceScale: 'surfaceScale',\n  systemLanguage: 'systemLanguage',\n  tableValues: 'tableValues',\n  targetX: 'targetX',\n  targetY: 'targetY',\n  textAnchor: 'text-anchor',\n  textDecoration: 'text-decoration',\n  textRendering: 'text-rendering',\n  textLength: 'textLength',\n  to: 0,\n  transform: 0,\n  u1: 0,\n  u2: 0,\n  underlinePosition: 'underline-position',\n  underlineThickness: 'underline-thickness',\n  unicode: 0,\n  unicodeBidi: 'unicode-bidi',\n  unicodeRange: 'unicode-range',\n  unitsPerEm: 'units-per-em',\n  vAlphabetic: 'v-alphabetic',\n  vHanging: 'v-hanging',\n  vIdeographic: 'v-ideographic',\n  vMathematical: 'v-mathematical',\n  values: 0,\n  vectorEffect: 'vector-effect',\n  version: 0,\n  vertAdvY: 'vert-adv-y',\n  vertOriginX: 'vert-origin-x',\n  vertOriginY: 'vert-origin-y',\n  viewBox: 'viewBox',\n  viewTarget: 'viewTarget',\n  visibility: 0,\n  widths: 0,\n  wordSpacing: 'word-spacing',\n  writingMode: 'writing-mode',\n  x: 0,\n  xHeight: 'x-height',\n  x1: 0,\n  x2: 0,\n  xChannelSelector: 'xChannelSelector',\n  xlinkActuate: 'xlink:actuate',\n  xlinkArcrole: 'xlink:arcrole',\n  xlinkHref: 'xlink:href',\n  xlinkRole: 'xlink:role',\n  xlinkShow: 'xlink:show',\n  xlinkTitle: 'xlink:title',\n  xlinkType: 'xlink:type',\n  xmlBase: 'xml:base',\n  xmlns: 0,\n  xmlnsXlink: 'xmlns:xlink',\n  xmlLang: 'xml:lang',\n  xmlSpace: 'xml:space',\n  y: 0,\n  y1: 0,\n  y2: 0,\n  yChannelSelector: 'yChannelSelector',\n  z: 0,\n  zoomAndPan: 'zoomAndPan'\n};\n\nvar SVGDOMPropertyConfig = {\n  Properties: {},\n  DOMAttributeNamespaces: {\n    xlinkActuate: NS.xlink,\n    xlinkArcrole: NS.xlink,\n    xlinkHref: NS.xlink,\n    xlinkRole: NS.xlink,\n    xlinkShow: NS.xlink,\n    xlinkTitle: NS.xlink,\n    xlinkType: NS.xlink,\n    xmlBase: NS.xml,\n    xmlLang: NS.xml,\n    xmlSpace: NS.xml\n  },\n  DOMAttributeNames: {}\n};\n\nObject.keys(ATTRS).forEach(function (key) {\n  SVGDOMPropertyConfig.Properties[key] = 0;\n  if (ATTRS[key]) {\n    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];\n  }\n});\n\nmodule.exports = SVGDOMPropertyConfig;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SVGDOMPropertyConfig.js\n// module id = 159\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar EventPropagators = require('./EventPropagators');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactInputSelection = require('./ReactInputSelection');\nvar SyntheticEvent = require('./SyntheticEvent');\n\nvar getActiveElement = require('fbjs/lib/getActiveElement');\nvar isTextInputElement = require('./isTextInputElement');\nvar shallowEqual = require('fbjs/lib/shallowEqual');\n\nvar skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;\n\nvar eventTypes = {\n  select: {\n    phasedRegistrationNames: {\n      bubbled: 'onSelect',\n      captured: 'onSelectCapture'\n    },\n    dependencies: ['topBlur', 'topContextMenu', 'topFocus', 'topKeyDown', 'topKeyUp', 'topMouseDown', 'topMouseUp', 'topSelectionChange']\n  }\n};\n\nvar activeElement = null;\nvar activeElementInst = null;\nvar lastSelection = null;\nvar mouseDown = false;\n\n// Track whether a listener exists for this plugin. If none exist, we do\n// not extract events. See #3639.\nvar hasListener = false;\n\n/**\n * Get an object which is a unique representation of the current selection.\n *\n * The return value will not be consistent across nodes or browsers, but\n * two identical selections on the same node will return identical objects.\n *\n * @param {DOMElement} node\n * @return {object}\n */\nfunction getSelection(node) {\n  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {\n    return {\n      start: node.selectionStart,\n      end: node.selectionEnd\n    };\n  } else if (window.getSelection) {\n    var selection = window.getSelection();\n    return {\n      anchorNode: selection.anchorNode,\n      anchorOffset: selection.anchorOffset,\n      focusNode: selection.focusNode,\n      focusOffset: selection.focusOffset\n    };\n  } else if (document.selection) {\n    var range = document.selection.createRange();\n    return {\n      parentElement: range.parentElement(),\n      text: range.text,\n      top: range.boundingTop,\n      left: range.boundingLeft\n    };\n  }\n}\n\n/**\n * Poll selection to see whether it's changed.\n *\n * @param {object} nativeEvent\n * @return {?SyntheticEvent}\n */\nfunction constructSelectEvent(nativeEvent, nativeEventTarget) {\n  // Ensure we have the right element, and that the user is not dragging a\n  // selection (this matches native `select` event behavior). In HTML5, select\n  // fires only on input and textarea thus if there's no focused element we\n  // won't dispatch.\n  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {\n    return null;\n  }\n\n  // Only fire when selection has actually changed.\n  var currentSelection = getSelection(activeElement);\n  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {\n    lastSelection = currentSelection;\n\n    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);\n\n    syntheticEvent.type = 'select';\n    syntheticEvent.target = activeElement;\n\n    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);\n\n    return syntheticEvent;\n  }\n\n  return null;\n}\n\n/**\n * This plugin creates an `onSelect` event that normalizes select events\n * across form elements.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - contentEditable\n *\n * This differs from native browser implementations in the following ways:\n * - Fires on contentEditable fields as well as inputs.\n * - Fires for collapsed selection.\n * - Fires after user input.\n */\nvar SelectEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    if (!hasListener) {\n      return null;\n    }\n\n    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;\n\n    switch (topLevelType) {\n      // Track the input node that has focus.\n      case 'topFocus':\n        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {\n          activeElement = targetNode;\n          activeElementInst = targetInst;\n          lastSelection = null;\n        }\n        break;\n      case 'topBlur':\n        activeElement = null;\n        activeElementInst = null;\n        lastSelection = null;\n        break;\n\n      // Don't fire the event while the user is dragging. This matches the\n      // semantics of the native select event.\n      case 'topMouseDown':\n        mouseDown = true;\n        break;\n      case 'topContextMenu':\n      case 'topMouseUp':\n        mouseDown = false;\n        return constructSelectEvent(nativeEvent, nativeEventTarget);\n\n      // Chrome and IE fire non-standard event when selection is changed (and\n      // sometimes when it hasn't). IE's event fires out of order with respect\n      // to key and input events on deletion, so we discard it.\n      //\n      // Firefox doesn't support selectionchange, so check selection status\n      // after each key entry. The selection changes after keydown and before\n      // keyup, but we check on keydown as well in the case of holding down a\n      // key, when multiple keydown events are fired but only one keyup is.\n      // This is also our approach for IE handling, for the reason above.\n      case 'topSelectionChange':\n        if (skipSelectionChangeEvent) {\n          break;\n        }\n      // falls through\n      case 'topKeyDown':\n      case 'topKeyUp':\n        return constructSelectEvent(nativeEvent, nativeEventTarget);\n    }\n\n    return null;\n  },\n\n  didPutListener: function (inst, registrationName, listener) {\n    if (registrationName === 'onSelect') {\n      hasListener = true;\n    }\n  }\n};\n\nmodule.exports = SelectEventPlugin;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SelectEventPlugin.js\n// module id = 160\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar EventListener = require('fbjs/lib/EventListener');\nvar EventPropagators = require('./EventPropagators');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar SyntheticAnimationEvent = require('./SyntheticAnimationEvent');\nvar SyntheticClipboardEvent = require('./SyntheticClipboardEvent');\nvar SyntheticEvent = require('./SyntheticEvent');\nvar SyntheticFocusEvent = require('./SyntheticFocusEvent');\nvar SyntheticKeyboardEvent = require('./SyntheticKeyboardEvent');\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\nvar SyntheticDragEvent = require('./SyntheticDragEvent');\nvar SyntheticTouchEvent = require('./SyntheticTouchEvent');\nvar SyntheticTransitionEvent = require('./SyntheticTransitionEvent');\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\nvar SyntheticWheelEvent = require('./SyntheticWheelEvent');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar getEventCharCode = require('./getEventCharCode');\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Turns\n * ['abort', ...]\n * into\n * eventTypes = {\n *   'abort': {\n *     phasedRegistrationNames: {\n *       bubbled: 'onAbort',\n *       captured: 'onAbortCapture',\n *     },\n *     dependencies: ['topAbort'],\n *   },\n *   ...\n * };\n * topLevelEventsToDispatchConfig = {\n *   'topAbort': { sameConfig }\n * };\n */\nvar eventTypes = {};\nvar topLevelEventsToDispatchConfig = {};\n['abort', 'animationEnd', 'animationIteration', 'animationStart', 'blur', 'canPlay', 'canPlayThrough', 'click', 'contextMenu', 'copy', 'cut', 'doubleClick', 'drag', 'dragEnd', 'dragEnter', 'dragExit', 'dragLeave', 'dragOver', 'dragStart', 'drop', 'durationChange', 'emptied', 'encrypted', 'ended', 'error', 'focus', 'input', 'invalid', 'keyDown', 'keyPress', 'keyUp', 'load', 'loadedData', 'loadedMetadata', 'loadStart', 'mouseDown', 'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'paste', 'pause', 'play', 'playing', 'progress', 'rateChange', 'reset', 'scroll', 'seeked', 'seeking', 'stalled', 'submit', 'suspend', 'timeUpdate', 'touchCancel', 'touchEnd', 'touchMove', 'touchStart', 'transitionEnd', 'volumeChange', 'waiting', 'wheel'].forEach(function (event) {\n  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);\n  var onEvent = 'on' + capitalizedEvent;\n  var topEvent = 'top' + capitalizedEvent;\n\n  var type = {\n    phasedRegistrationNames: {\n      bubbled: onEvent,\n      captured: onEvent + 'Capture'\n    },\n    dependencies: [topEvent]\n  };\n  eventTypes[event] = type;\n  topLevelEventsToDispatchConfig[topEvent] = type;\n});\n\nvar onClickListeners = {};\n\nfunction getDictionaryKey(inst) {\n  // Prevents V8 performance issue:\n  // https://github.com/facebook/react/pull/7232\n  return '.' + inst._rootNodeID;\n}\n\nfunction isInteractive(tag) {\n  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';\n}\n\nvar SimpleEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];\n    if (!dispatchConfig) {\n      return null;\n    }\n    var EventConstructor;\n    switch (topLevelType) {\n      case 'topAbort':\n      case 'topCanPlay':\n      case 'topCanPlayThrough':\n      case 'topDurationChange':\n      case 'topEmptied':\n      case 'topEncrypted':\n      case 'topEnded':\n      case 'topError':\n      case 'topInput':\n      case 'topInvalid':\n      case 'topLoad':\n      case 'topLoadedData':\n      case 'topLoadedMetadata':\n      case 'topLoadStart':\n      case 'topPause':\n      case 'topPlay':\n      case 'topPlaying':\n      case 'topProgress':\n      case 'topRateChange':\n      case 'topReset':\n      case 'topSeeked':\n      case 'topSeeking':\n      case 'topStalled':\n      case 'topSubmit':\n      case 'topSuspend':\n      case 'topTimeUpdate':\n      case 'topVolumeChange':\n      case 'topWaiting':\n        // HTML Events\n        // @see http://www.w3.org/TR/html5/index.html#events-0\n        EventConstructor = SyntheticEvent;\n        break;\n      case 'topKeyPress':\n        // Firefox creates a keypress event for function keys too. This removes\n        // the unwanted keypress events. Enter is however both printable and\n        // non-printable. One would expect Tab to be as well (but it isn't).\n        if (getEventCharCode(nativeEvent) === 0) {\n          return null;\n        }\n      /* falls through */\n      case 'topKeyDown':\n      case 'topKeyUp':\n        EventConstructor = SyntheticKeyboardEvent;\n        break;\n      case 'topBlur':\n      case 'topFocus':\n        EventConstructor = SyntheticFocusEvent;\n        break;\n      case 'topClick':\n        // Firefox creates a click event on right mouse clicks. This removes the\n        // unwanted click events.\n        if (nativeEvent.button === 2) {\n          return null;\n        }\n      /* falls through */\n      case 'topDoubleClick':\n      case 'topMouseDown':\n      case 'topMouseMove':\n      case 'topMouseUp':\n      // TODO: Disabled elements should not respond to mouse events\n      /* falls through */\n      case 'topMouseOut':\n      case 'topMouseOver':\n      case 'topContextMenu':\n        EventConstructor = SyntheticMouseEvent;\n        break;\n      case 'topDrag':\n      case 'topDragEnd':\n      case 'topDragEnter':\n      case 'topDragExit':\n      case 'topDragLeave':\n      case 'topDragOver':\n      case 'topDragStart':\n      case 'topDrop':\n        EventConstructor = SyntheticDragEvent;\n        break;\n      case 'topTouchCancel':\n      case 'topTouchEnd':\n      case 'topTouchMove':\n      case 'topTouchStart':\n        EventConstructor = SyntheticTouchEvent;\n        break;\n      case 'topAnimationEnd':\n      case 'topAnimationIteration':\n      case 'topAnimationStart':\n        EventConstructor = SyntheticAnimationEvent;\n        break;\n      case 'topTransitionEnd':\n        EventConstructor = SyntheticTransitionEvent;\n        break;\n      case 'topScroll':\n        EventConstructor = SyntheticUIEvent;\n        break;\n      case 'topWheel':\n        EventConstructor = SyntheticWheelEvent;\n        break;\n      case 'topCopy':\n      case 'topCut':\n      case 'topPaste':\n        EventConstructor = SyntheticClipboardEvent;\n        break;\n    }\n    !EventConstructor ? process.env.NODE_ENV !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;\n    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);\n    EventPropagators.accumulateTwoPhaseDispatches(event);\n    return event;\n  },\n\n  didPutListener: function (inst, registrationName, listener) {\n    // Mobile Safari does not fire properly bubble click events on\n    // non-interactive elements, which means delegated click listeners do not\n    // fire. The workaround for this bug involves attaching an empty click\n    // listener on the target node.\n    // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {\n      var key = getDictionaryKey(inst);\n      var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n      if (!onClickListeners[key]) {\n        onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);\n      }\n    }\n  },\n\n  willDeleteListener: function (inst, registrationName) {\n    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {\n      var key = getDictionaryKey(inst);\n      onClickListeners[key].remove();\n      delete onClickListeners[key];\n    }\n  }\n\n};\n\nmodule.exports = SimpleEventPlugin;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SimpleEventPlugin.js\n// module id = 161\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface\n * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent\n */\nvar AnimationEventInterface = {\n  animationName: null,\n  elapsedTime: null,\n  pseudoElement: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticEvent}\n */\nfunction SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);\n\nmodule.exports = SyntheticAnimationEvent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticAnimationEvent.js\n// module id = 162\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/clipboard-apis/\n */\nvar ClipboardEventInterface = {\n  clipboardData: function (event) {\n    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);\n\nmodule.exports = SyntheticClipboardEvent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticClipboardEvent.js\n// module id = 163\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents\n */\nvar CompositionEventInterface = {\n  data: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);\n\nmodule.exports = SyntheticCompositionEvent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticCompositionEvent.js\n// module id = 164\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\n\n/**\n * @interface DragEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar DragEventInterface = {\n  dataTransfer: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);\n\nmodule.exports = SyntheticDragEvent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticDragEvent.js\n// module id = 165\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\n\n/**\n * @interface FocusEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar FocusEventInterface = {\n  relatedTarget: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);\n\nmodule.exports = SyntheticFocusEvent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticFocusEvent.js\n// module id = 166\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105\n *      /#events-inputevents\n */\nvar InputEventInterface = {\n  data: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);\n\nmodule.exports = SyntheticInputEvent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticInputEvent.js\n// module id = 167\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\n\nvar getEventCharCode = require('./getEventCharCode');\nvar getEventKey = require('./getEventKey');\nvar getEventModifierState = require('./getEventModifierState');\n\n/**\n * @interface KeyboardEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar KeyboardEventInterface = {\n  key: getEventKey,\n  location: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  repeat: null,\n  locale: null,\n  getModifierState: getEventModifierState,\n  // Legacy Interface\n  charCode: function (event) {\n    // `charCode` is the result of a KeyPress event and represents the value of\n    // the actual printable character.\n\n    // KeyPress is deprecated, but its replacement is not yet final and not\n    // implemented in any major browser. Only KeyPress has charCode.\n    if (event.type === 'keypress') {\n      return getEventCharCode(event);\n    }\n    return 0;\n  },\n  keyCode: function (event) {\n    // `keyCode` is the result of a KeyDown/Up event and represents the value of\n    // physical keyboard key.\n\n    // The actual meaning of the value depends on the users' keyboard layout\n    // which cannot be detected. Assuming that it is a US keyboard layout\n    // provides a surprisingly accurate mapping for US and European users.\n    // Due to this, it is left to the user to implement at this time.\n    if (event.type === 'keydown' || event.type === 'keyup') {\n      return event.keyCode;\n    }\n    return 0;\n  },\n  which: function (event) {\n    // `which` is an alias for either `keyCode` or `charCode` depending on the\n    // type of the event.\n    if (event.type === 'keypress') {\n      return getEventCharCode(event);\n    }\n    if (event.type === 'keydown' || event.type === 'keyup') {\n      return event.keyCode;\n    }\n    return 0;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);\n\nmodule.exports = SyntheticKeyboardEvent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticKeyboardEvent.js\n// module id = 168\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\n\nvar getEventModifierState = require('./getEventModifierState');\n\n/**\n * @interface TouchEvent\n * @see http://www.w3.org/TR/touch-events/\n */\nvar TouchEventInterface = {\n  touches: null,\n  targetTouches: null,\n  changedTouches: null,\n  altKey: null,\n  metaKey: null,\n  ctrlKey: null,\n  shiftKey: null,\n  getModifierState: getEventModifierState\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);\n\nmodule.exports = SyntheticTouchEvent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticTouchEvent.js\n// module id = 169\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent\n */\nvar TransitionEventInterface = {\n  propertyName: null,\n  elapsedTime: null,\n  pseudoElement: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticEvent}\n */\nfunction SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);\n\nmodule.exports = SyntheticTransitionEvent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticTransitionEvent.js\n// module id = 170\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\n\n/**\n * @interface WheelEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar WheelEventInterface = {\n  deltaX: function (event) {\n    return 'deltaX' in event ? event.deltaX :\n    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).\n    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;\n  },\n  deltaY: function (event) {\n    return 'deltaY' in event ? event.deltaY :\n    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).\n    'wheelDeltaY' in event ? -event.wheelDeltaY :\n    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).\n    'wheelDelta' in event ? -event.wheelDelta : 0;\n  },\n  deltaZ: null,\n\n  // Browsers without \"deltaMode\" is reporting in raw wheel delta where one\n  // notch on the scroll is always +/- 120, roughly equivalent to pixels.\n  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or\n  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.\n  deltaMode: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticMouseEvent}\n */\nfunction SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);\n\nmodule.exports = SyntheticWheelEvent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticWheelEvent.js\n// module id = 171\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar MOD = 65521;\n\n// adler32 is not cryptographically strong, and is only used to sanity check that\n// markup generated on the server matches the markup generated on the client.\n// This implementation (a modified version of the SheetJS version) has been optimized\n// for our use case, at the expense of conforming to the adler32 specification\n// for non-ascii inputs.\nfunction adler32(data) {\n  var a = 1;\n  var b = 0;\n  var i = 0;\n  var l = data.length;\n  var m = l & ~0x3;\n  while (i < m) {\n    var n = Math.min(i + 4096, m);\n    for (; i < n; i += 4) {\n      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));\n    }\n    a %= MOD;\n    b %= MOD;\n  }\n  for (; i < l; i++) {\n    b += a += data.charCodeAt(i);\n  }\n  a %= MOD;\n  b %= MOD;\n  return a | b << 16;\n}\n\nmodule.exports = adler32;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/adler32.js\n// module id = 172\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar CSSProperty = require('./CSSProperty');\nvar warning = require('fbjs/lib/warning');\n\nvar isUnitlessNumber = CSSProperty.isUnitlessNumber;\nvar styleWarnings = {};\n\n/**\n * Convert a value into the proper css writable value. The style name `name`\n * should be logical (no hyphens), as specified\n * in `CSSProperty.isUnitlessNumber`.\n *\n * @param {string} name CSS property name such as `topMargin`.\n * @param {*} value CSS property value such as `10px`.\n * @param {ReactDOMComponent} component\n * @return {string} Normalized style value with dimensions applied.\n */\nfunction dangerousStyleValue(name, value, component) {\n  // Note that we've removed escapeTextForBrowser() calls here since the\n  // whole string will be escaped when the attribute is injected into\n  // the markup. If you provide unsafe user data here they can inject\n  // arbitrary CSS which may be problematic (I couldn't repro this):\n  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\n  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/\n  // This is not an XSS hole but instead a potential CSS injection issue\n  // which has lead to a greater discussion about how we're going to\n  // trust URLs moving forward. See #2115901\n\n  var isEmpty = value == null || typeof value === 'boolean' || value === '';\n  if (isEmpty) {\n    return '';\n  }\n\n  var isNonNumeric = isNaN(value);\n  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {\n    return '' + value; // cast to string\n  }\n\n  if (typeof value === 'string') {\n    if (process.env.NODE_ENV !== 'production') {\n      // Allow '0' to pass through without warning. 0 is already special and\n      // doesn't require units, so we don't need to warn about it.\n      if (component && value !== '0') {\n        var owner = component._currentElement._owner;\n        var ownerName = owner ? owner.getName() : null;\n        if (ownerName && !styleWarnings[ownerName]) {\n          styleWarnings[ownerName] = {};\n        }\n        var warned = false;\n        if (ownerName) {\n          var warnings = styleWarnings[ownerName];\n          warned = warnings[name];\n          if (!warned) {\n            warnings[name] = true;\n          }\n        }\n        if (!warned) {\n          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;\n        }\n      }\n    }\n    value = value.trim();\n  }\n  return value + 'px';\n}\n\nmodule.exports = dangerousStyleValue;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/dangerousStyleValue.js\n// module id = 173\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactCurrentOwner = require('react/lib/ReactCurrentOwner');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactInstanceMap = require('./ReactInstanceMap');\n\nvar getHostComponentFromComposite = require('./getHostComponentFromComposite');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\n/**\n * Returns the DOM node rendered by this element.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode\n *\n * @param {ReactComponent|DOMElement} componentOrElement\n * @return {?DOMElement} The root node of this element.\n */\nfunction findDOMNode(componentOrElement) {\n  if (process.env.NODE_ENV !== 'production') {\n    var owner = ReactCurrentOwner.current;\n    if (owner !== null) {\n      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;\n      owner._warnedAboutRefsInRender = true;\n    }\n  }\n  if (componentOrElement == null) {\n    return null;\n  }\n  if (componentOrElement.nodeType === 1) {\n    return componentOrElement;\n  }\n\n  var inst = ReactInstanceMap.get(componentOrElement);\n  if (inst) {\n    inst = getHostComponentFromComposite(inst);\n    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;\n  }\n\n  if (typeof componentOrElement.render === 'function') {\n    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;\n  } else {\n    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;\n  }\n}\n\nmodule.exports = findDOMNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/findDOMNode.js\n// module id = 174\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar KeyEscapeUtils = require('./KeyEscapeUtils');\nvar traverseAllChildren = require('./traverseAllChildren');\nvar warning = require('fbjs/lib/warning');\n\nvar ReactComponentTreeHook;\n\nif (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {\n  // Temporary hack.\n  // Inline requires don't work well with Jest:\n  // https://github.com/facebook/react/issues/7240\n  // Remove the inline requires when we don't need them anymore:\n  // https://github.com/facebook/react/pull/7178\n  ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\n}\n\n/**\n * @param {function} traverseContext Context passed through traversal.\n * @param {?ReactComponent} child React child component.\n * @param {!string} name String name of key path to child.\n * @param {number=} selfDebugID Optional debugID of the current internal instance.\n */\nfunction flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {\n  // We found a component instance.\n  if (traverseContext && typeof traverseContext === 'object') {\n    var result = traverseContext;\n    var keyUnique = result[name] === undefined;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!ReactComponentTreeHook) {\n        ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\n      }\n      if (!keyUnique) {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;\n      }\n    }\n    if (keyUnique && child != null) {\n      result[name] = child;\n    }\n  }\n}\n\n/**\n * Flattens children that are typically specified as `props.children`. Any null\n * children will not be included in the resulting object.\n * @return {!object} flattened children keyed by name.\n */\nfunction flattenChildren(children, selfDebugID) {\n  if (children == null) {\n    return children;\n  }\n  var result = {};\n\n  if (process.env.NODE_ENV !== 'production') {\n    traverseAllChildren(children, function (traverseContext, child, name) {\n      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);\n    }, result);\n  } else {\n    traverseAllChildren(children, flattenSingleChildIntoContext, result);\n  }\n  return result;\n}\n\nmodule.exports = flattenChildren;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/flattenChildren.js\n// module id = 175\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar getEventCharCode = require('./getEventCharCode');\n\n/**\n * Normalization of deprecated HTML5 `key` values\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n */\nvar normalizeKey = {\n  'Esc': 'Escape',\n  'Spacebar': ' ',\n  'Left': 'ArrowLeft',\n  'Up': 'ArrowUp',\n  'Right': 'ArrowRight',\n  'Down': 'ArrowDown',\n  'Del': 'Delete',\n  'Win': 'OS',\n  'Menu': 'ContextMenu',\n  'Apps': 'ContextMenu',\n  'Scroll': 'ScrollLock',\n  'MozPrintableKey': 'Unidentified'\n};\n\n/**\n * Translation from legacy `keyCode` to HTML5 `key`\n * Only special keys supported, all others depend on keyboard layout or browser\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n */\nvar translateToKey = {\n  8: 'Backspace',\n  9: 'Tab',\n  12: 'Clear',\n  13: 'Enter',\n  16: 'Shift',\n  17: 'Control',\n  18: 'Alt',\n  19: 'Pause',\n  20: 'CapsLock',\n  27: 'Escape',\n  32: ' ',\n  33: 'PageUp',\n  34: 'PageDown',\n  35: 'End',\n  36: 'Home',\n  37: 'ArrowLeft',\n  38: 'ArrowUp',\n  39: 'ArrowRight',\n  40: 'ArrowDown',\n  45: 'Insert',\n  46: 'Delete',\n  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',\n  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',\n  144: 'NumLock',\n  145: 'ScrollLock',\n  224: 'Meta'\n};\n\n/**\n * @param {object} nativeEvent Native browser event.\n * @return {string} Normalized `key` property.\n */\nfunction getEventKey(nativeEvent) {\n  if (nativeEvent.key) {\n    // Normalize inconsistent values reported by browsers due to\n    // implementations of a working draft specification.\n\n    // FireFox implements `key` but returns `MozPrintableKey` for all\n    // printable characters (normalized to `Unidentified`), ignore it.\n    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;\n    if (key !== 'Unidentified') {\n      return key;\n    }\n  }\n\n  // Browser does not implement `key`, polyfill as much of it as we can.\n  if (nativeEvent.type === 'keypress') {\n    var charCode = getEventCharCode(nativeEvent);\n\n    // The enter-key is technically both printable and non-printable and can\n    // thus be captured by `keypress`, no other non-printable key should.\n    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);\n  }\n  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {\n    // While user keyboard layout determines the actual meaning of each\n    // `keyCode` value, almost all function keys have a universal value.\n    return translateToKey[nativeEvent.keyCode] || 'Unidentified';\n  }\n  return '';\n}\n\nmodule.exports = getEventKey;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/getEventKey.js\n// module id = 176\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n/* global Symbol */\n\nvar ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n/**\n * Returns the iterator method function contained on the iterable object.\n *\n * Be sure to invoke the function with the iterable as context:\n *\n *     var iteratorFn = getIteratorFn(myIterable);\n *     if (iteratorFn) {\n *       var iterator = iteratorFn.call(myIterable);\n *       ...\n *     }\n *\n * @param {?object} maybeIterable\n * @return {?function}\n */\nfunction getIteratorFn(maybeIterable) {\n  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n  if (typeof iteratorFn === 'function') {\n    return iteratorFn;\n  }\n}\n\nmodule.exports = getIteratorFn;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/getIteratorFn.js\n// module id = 177\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Given any node return the first leaf node without children.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {DOMElement|DOMTextNode}\n */\n\nfunction getLeafNode(node) {\n  while (node && node.firstChild) {\n    node = node.firstChild;\n  }\n  return node;\n}\n\n/**\n * Get the next sibling within a container. This will walk up the\n * DOM if a node's siblings have been exhausted.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {?DOMElement|DOMTextNode}\n */\nfunction getSiblingNode(node) {\n  while (node) {\n    if (node.nextSibling) {\n      return node.nextSibling;\n    }\n    node = node.parentNode;\n  }\n}\n\n/**\n * Get object describing the nodes which contain characters at offset.\n *\n * @param {DOMElement|DOMTextNode} root\n * @param {number} offset\n * @return {?object}\n */\nfunction getNodeForCharacterOffset(root, offset) {\n  var node = getLeafNode(root);\n  var nodeStart = 0;\n  var nodeEnd = 0;\n\n  while (node) {\n    if (node.nodeType === 3) {\n      nodeEnd = nodeStart + node.textContent.length;\n\n      if (nodeStart <= offset && nodeEnd >= offset) {\n        return {\n          node: node,\n          offset: offset - nodeStart\n        };\n      }\n\n      nodeStart = nodeEnd;\n    }\n\n    node = getLeafNode(getSiblingNode(node));\n  }\n}\n\nmodule.exports = getNodeForCharacterOffset;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/getNodeForCharacterOffset.js\n// module id = 178\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\n/**\n * Generate a mapping of standard vendor prefixes using the defined style property and event name.\n *\n * @param {string} styleProp\n * @param {string} eventName\n * @returns {object}\n */\nfunction makePrefixMap(styleProp, eventName) {\n  var prefixes = {};\n\n  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();\n  prefixes['Webkit' + styleProp] = 'webkit' + eventName;\n  prefixes['Moz' + styleProp] = 'moz' + eventName;\n  prefixes['ms' + styleProp] = 'MS' + eventName;\n  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();\n\n  return prefixes;\n}\n\n/**\n * A list of event names to a configurable list of vendor prefixes.\n */\nvar vendorPrefixes = {\n  animationend: makePrefixMap('Animation', 'AnimationEnd'),\n  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),\n  animationstart: makePrefixMap('Animation', 'AnimationStart'),\n  transitionend: makePrefixMap('Transition', 'TransitionEnd')\n};\n\n/**\n * Event names that have already been detected and prefixed (if applicable).\n */\nvar prefixedEventNames = {};\n\n/**\n * Element to check for prefixes on.\n */\nvar style = {};\n\n/**\n * Bootstrap if a DOM exists.\n */\nif (ExecutionEnvironment.canUseDOM) {\n  style = document.createElement('div').style;\n\n  // On some platforms, in particular some releases of Android 4.x,\n  // the un-prefixed \"animation\" and \"transition\" properties are defined on the\n  // style object but the events that fire will still be prefixed, so we need\n  // to check if the un-prefixed events are usable, and if not remove them from the map.\n  if (!('AnimationEvent' in window)) {\n    delete vendorPrefixes.animationend.animation;\n    delete vendorPrefixes.animationiteration.animation;\n    delete vendorPrefixes.animationstart.animation;\n  }\n\n  // Same as above\n  if (!('TransitionEvent' in window)) {\n    delete vendorPrefixes.transitionend.transition;\n  }\n}\n\n/**\n * Attempts to determine the correct vendor prefixed event name.\n *\n * @param {string} eventName\n * @returns {string}\n */\nfunction getVendorPrefixedEventName(eventName) {\n  if (prefixedEventNames[eventName]) {\n    return prefixedEventNames[eventName];\n  } else if (!vendorPrefixes[eventName]) {\n    return eventName;\n  }\n\n  var prefixMap = vendorPrefixes[eventName];\n\n  for (var styleProp in prefixMap) {\n    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {\n      return prefixedEventNames[eventName] = prefixMap[styleProp];\n    }\n  }\n\n  return '';\n}\n\nmodule.exports = getVendorPrefixedEventName;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/getVendorPrefixedEventName.js\n// module id = 179\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar escapeTextContentForBrowser = require('./escapeTextContentForBrowser');\n\n/**\n * Escapes attribute value to prevent scripting attacks.\n *\n * @param {*} value Value to escape.\n * @return {string} An escaped string.\n */\nfunction quoteAttributeValueForBrowser(value) {\n  return '\"' + escapeTextContentForBrowser(value) + '\"';\n}\n\nmodule.exports = quoteAttributeValueForBrowser;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/quoteAttributeValueForBrowser.js\n// module id = 180\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactMount = require('./ReactMount');\n\nmodule.exports = ReactMount.renderSubtreeIntoContainer;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/renderSubtreeIntoContainer.js\n// module id = 181\n// module chunks = 0","// @remove-on-eject-begin\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n// @remove-on-eject-end\n'use strict';\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  require('promise/lib/rejection-tracking').enable();\n  window.Promise = require('promise/lib/es6-extensions.js');\n}\n\n// fetch() polyfill for making API calls.\nrequire('whatwg-fetch');\n\n// Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = require('object-assign');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-scripts/config/polyfills.js\n// module id = 182\n// module chunks = 0","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-scripts/~/whatwg-fetch/fetch.js\n// module id = 183\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar PooledClass = require('./PooledClass');\nvar ReactElement = require('./ReactElement');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar traverseAllChildren = require('./traverseAllChildren');\n\nvar twoArgumentPooler = PooledClass.twoArgumentPooler;\nvar fourArgumentPooler = PooledClass.fourArgumentPooler;\n\nvar userProvidedKeyEscapeRegex = /\\/+/g;\nfunction escapeUserProvidedKey(text) {\n  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');\n}\n\n/**\n * PooledClass representing the bookkeeping associated with performing a child\n * traversal. Allows avoiding binding callbacks.\n *\n * @constructor ForEachBookKeeping\n * @param {!function} forEachFunction Function to perform traversal with.\n * @param {?*} forEachContext Context to perform context with.\n */\nfunction ForEachBookKeeping(forEachFunction, forEachContext) {\n  this.func = forEachFunction;\n  this.context = forEachContext;\n  this.count = 0;\n}\nForEachBookKeeping.prototype.destructor = function () {\n  this.func = null;\n  this.context = null;\n  this.count = 0;\n};\nPooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);\n\nfunction forEachSingleChild(bookKeeping, child, name) {\n  var func = bookKeeping.func,\n      context = bookKeeping.context;\n\n  func.call(context, child, bookKeeping.count++);\n}\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  if (children == null) {\n    return children;\n  }\n  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);\n  traverseAllChildren(children, forEachSingleChild, traverseContext);\n  ForEachBookKeeping.release(traverseContext);\n}\n\n/**\n * PooledClass representing the bookkeeping associated with performing a child\n * mapping. Allows avoiding binding callbacks.\n *\n * @constructor MapBookKeeping\n * @param {!*} mapResult Object containing the ordered map of results.\n * @param {!function} mapFunction Function to perform mapping with.\n * @param {?*} mapContext Context to perform mapping with.\n */\nfunction MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {\n  this.result = mapResult;\n  this.keyPrefix = keyPrefix;\n  this.func = mapFunction;\n  this.context = mapContext;\n  this.count = 0;\n}\nMapBookKeeping.prototype.destructor = function () {\n  this.result = null;\n  this.keyPrefix = null;\n  this.func = null;\n  this.context = null;\n  this.count = 0;\n};\nPooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);\n\nfunction mapSingleChildIntoContext(bookKeeping, child, childKey) {\n  var result = bookKeeping.result,\n      keyPrefix = bookKeeping.keyPrefix,\n      func = bookKeeping.func,\n      context = bookKeeping.context;\n\n\n  var mappedChild = func.call(context, child, bookKeeping.count++);\n  if (Array.isArray(mappedChild)) {\n    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);\n  } else if (mappedChild != null) {\n    if (ReactElement.isValidElement(mappedChild)) {\n      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,\n      // Keep both the (mapped) and old keys if they differ, just as\n      // traverseAllChildren used to do for objects as children\n      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);\n    }\n    result.push(mappedChild);\n  }\n}\n\nfunction mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {\n  var escapedPrefix = '';\n  if (prefix != null) {\n    escapedPrefix = escapeUserProvidedKey(prefix) + '/';\n  }\n  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);\n  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n  MapBookKeeping.release(traverseContext);\n}\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map\n *\n * The provided mapFunction(child, key, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, func, context);\n  return result;\n}\n\nfunction forEachSingleChildDummy(traverseContext, child, name) {\n  return null;\n}\n\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\nfunction countChildren(children, context) {\n  return traverseAllChildren(children, forEachSingleChildDummy, null);\n}\n\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray\n */\nfunction toArray(children) {\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);\n  return result;\n}\n\nvar ReactChildren = {\n  forEach: forEachChildren,\n  map: mapChildren,\n  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,\n  count: countChildren,\n  toArray: toArray\n};\n\nmodule.exports = ReactChildren;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactChildren.js\n// module id = 186\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar ReactComponent = require('./ReactComponent');\nvar ReactElement = require('./ReactElement');\nvar ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');\nvar ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');\n\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar MIXINS_KEY = 'mixins';\n\n// Helper function to allow the creation of anonymous functions which do not\n// have .name set to the name of the variable being assigned to.\nfunction identity(fn) {\n  return fn;\n}\n\n/**\n * Policies that describe methods in `ReactClassInterface`.\n */\n\n\nvar injectedMixins = [];\n\n/**\n * Composite components are higher-level components that compose other composite\n * or host components.\n *\n * To create a new type of `ReactClass`, pass a specification of\n * your new class to `React.createClass`. The only requirement of your class\n * specification is that you implement a `render` method.\n *\n *   var MyComponent = React.createClass({\n *     render: function() {\n *       return <div>Hello World</div>;\n *     }\n *   });\n *\n * The class specification supports a specific protocol of methods that have\n * special meaning (e.g. `render`). See `ReactClassInterface` for\n * more the comprehensive protocol. Any other properties and methods in the\n * class specification will be available on the prototype.\n *\n * @interface ReactClassInterface\n * @internal\n */\nvar ReactClassInterface = {\n\n  /**\n   * An array of Mixin objects to include when defining your component.\n   *\n   * @type {array}\n   * @optional\n   */\n  mixins: 'DEFINE_MANY',\n\n  /**\n   * An object containing properties and methods that should be defined on\n   * the component's constructor instead of its prototype (static methods).\n   *\n   * @type {object}\n   * @optional\n   */\n  statics: 'DEFINE_MANY',\n\n  /**\n   * Definition of prop types for this component.\n   *\n   * @type {object}\n   * @optional\n   */\n  propTypes: 'DEFINE_MANY',\n\n  /**\n   * Definition of context types for this component.\n   *\n   * @type {object}\n   * @optional\n   */\n  contextTypes: 'DEFINE_MANY',\n\n  /**\n   * Definition of context types this component sets for its children.\n   *\n   * @type {object}\n   * @optional\n   */\n  childContextTypes: 'DEFINE_MANY',\n\n  // ==== Definition methods ====\n\n  /**\n   * Invoked when the component is mounted. Values in the mapping will be set on\n   * `this.props` if that prop is not specified (i.e. using an `in` check).\n   *\n   * This method is invoked before `getInitialState` and therefore cannot rely\n   * on `this.state` or use `this.setState`.\n   *\n   * @return {object}\n   * @optional\n   */\n  getDefaultProps: 'DEFINE_MANY_MERGED',\n\n  /**\n   * Invoked once before the component is mounted. The return value will be used\n   * as the initial value of `this.state`.\n   *\n   *   getInitialState: function() {\n   *     return {\n   *       isOn: false,\n   *       fooBaz: new BazFoo()\n   *     }\n   *   }\n   *\n   * @return {object}\n   * @optional\n   */\n  getInitialState: 'DEFINE_MANY_MERGED',\n\n  /**\n   * @return {object}\n   * @optional\n   */\n  getChildContext: 'DEFINE_MANY_MERGED',\n\n  /**\n   * Uses props from `this.props` and state from `this.state` to render the\n   * structure of the component.\n   *\n   * No guarantees are made about when or how often this method is invoked, so\n   * it must not have side effects.\n   *\n   *   render: function() {\n   *     var name = this.props.name;\n   *     return <div>Hello, {name}!</div>;\n   *   }\n   *\n   * @return {ReactComponent}\n   * @required\n   */\n  render: 'DEFINE_ONCE',\n\n  // ==== Delegate methods ====\n\n  /**\n   * Invoked when the component is initially created and about to be mounted.\n   * This may have side effects, but any external subscriptions or data created\n   * by this method must be cleaned up in `componentWillUnmount`.\n   *\n   * @optional\n   */\n  componentWillMount: 'DEFINE_MANY',\n\n  /**\n   * Invoked when the component has been mounted and has a DOM representation.\n   * However, there is no guarantee that the DOM node is in the document.\n   *\n   * Use this as an opportunity to operate on the DOM when the component has\n   * been mounted (initialized and rendered) for the first time.\n   *\n   * @param {DOMElement} rootNode DOM element representing the component.\n   * @optional\n   */\n  componentDidMount: 'DEFINE_MANY',\n\n  /**\n   * Invoked before the component receives new props.\n   *\n   * Use this as an opportunity to react to a prop transition by updating the\n   * state using `this.setState`. Current props are accessed via `this.props`.\n   *\n   *   componentWillReceiveProps: function(nextProps, nextContext) {\n   *     this.setState({\n   *       likesIncreasing: nextProps.likeCount > this.props.likeCount\n   *     });\n   *   }\n   *\n   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop\n   * transition may cause a state change, but the opposite is not true. If you\n   * need it, you are probably looking for `componentWillUpdate`.\n   *\n   * @param {object} nextProps\n   * @optional\n   */\n  componentWillReceiveProps: 'DEFINE_MANY',\n\n  /**\n   * Invoked while deciding if the component should be updated as a result of\n   * receiving new props, state and/or context.\n   *\n   * Use this as an opportunity to `return false` when you're certain that the\n   * transition to the new props/state/context will not require a component\n   * update.\n   *\n   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {\n   *     return !equal(nextProps, this.props) ||\n   *       !equal(nextState, this.state) ||\n   *       !equal(nextContext, this.context);\n   *   }\n   *\n   * @param {object} nextProps\n   * @param {?object} nextState\n   * @param {?object} nextContext\n   * @return {boolean} True if the component should update.\n   * @optional\n   */\n  shouldComponentUpdate: 'DEFINE_ONCE',\n\n  /**\n   * Invoked when the component is about to update due to a transition from\n   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`\n   * and `nextContext`.\n   *\n   * Use this as an opportunity to perform preparation before an update occurs.\n   *\n   * NOTE: You **cannot** use `this.setState()` in this method.\n   *\n   * @param {object} nextProps\n   * @param {?object} nextState\n   * @param {?object} nextContext\n   * @param {ReactReconcileTransaction} transaction\n   * @optional\n   */\n  componentWillUpdate: 'DEFINE_MANY',\n\n  /**\n   * Invoked when the component's DOM representation has been updated.\n   *\n   * Use this as an opportunity to operate on the DOM when the component has\n   * been updated.\n   *\n   * @param {object} prevProps\n   * @param {?object} prevState\n   * @param {?object} prevContext\n   * @param {DOMElement} rootNode DOM element representing the component.\n   * @optional\n   */\n  componentDidUpdate: 'DEFINE_MANY',\n\n  /**\n   * Invoked when the component is about to be removed from its parent and have\n   * its DOM representation destroyed.\n   *\n   * Use this as an opportunity to deallocate any external resources.\n   *\n   * NOTE: There is no `componentDidUnmount` since your component will have been\n   * destroyed by that point.\n   *\n   * @optional\n   */\n  componentWillUnmount: 'DEFINE_MANY',\n\n  // ==== Advanced methods ====\n\n  /**\n   * Updates the component's currently mounted DOM representation.\n   *\n   * By default, this implements React's rendering and reconciliation algorithm.\n   * Sophisticated clients may wish to override this.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   * @overridable\n   */\n  updateComponent: 'OVERRIDE_BASE'\n\n};\n\n/**\n * Mapping from class specification keys to special processing functions.\n *\n * Although these are declared like instance properties in the specification\n * when defining classes using `React.createClass`, they are actually static\n * and are accessible on the constructor instead of the prototype. Despite\n * being static, they must be defined outside of the \"statics\" key under\n * which all other static methods are defined.\n */\nvar RESERVED_SPEC_KEYS = {\n  displayName: function (Constructor, displayName) {\n    Constructor.displayName = displayName;\n  },\n  mixins: function (Constructor, mixins) {\n    if (mixins) {\n      for (var i = 0; i < mixins.length; i++) {\n        mixSpecIntoComponent(Constructor, mixins[i]);\n      }\n    }\n  },\n  childContextTypes: function (Constructor, childContextTypes) {\n    if (process.env.NODE_ENV !== 'production') {\n      validateTypeDef(Constructor, childContextTypes, 'childContext');\n    }\n    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);\n  },\n  contextTypes: function (Constructor, contextTypes) {\n    if (process.env.NODE_ENV !== 'production') {\n      validateTypeDef(Constructor, contextTypes, 'context');\n    }\n    Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);\n  },\n  /**\n   * Special case getDefaultProps which should move into statics but requires\n   * automatic merging.\n   */\n  getDefaultProps: function (Constructor, getDefaultProps) {\n    if (Constructor.getDefaultProps) {\n      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);\n    } else {\n      Constructor.getDefaultProps = getDefaultProps;\n    }\n  },\n  propTypes: function (Constructor, propTypes) {\n    if (process.env.NODE_ENV !== 'production') {\n      validateTypeDef(Constructor, propTypes, 'prop');\n    }\n    Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);\n  },\n  statics: function (Constructor, statics) {\n    mixStaticSpecIntoComponent(Constructor, statics);\n  },\n  autobind: function () {} };\n\nfunction validateTypeDef(Constructor, typeDef, location) {\n  for (var propName in typeDef) {\n    if (typeDef.hasOwnProperty(propName)) {\n      // use a warning instead of an invariant so components\n      // don't show up in prod but only in __DEV__\n      process.env.NODE_ENV !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;\n    }\n  }\n}\n\nfunction validateMethodOverride(isAlreadyDefined, name) {\n  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;\n\n  // Disallow overriding of base class methods unless explicitly allowed.\n  if (ReactClassMixin.hasOwnProperty(name)) {\n    !(specPolicy === 'OVERRIDE_BASE') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;\n  }\n\n  // Disallow defining methods more than once unless explicitly allowed.\n  if (isAlreadyDefined) {\n    !(specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;\n  }\n}\n\n/**\n * Mixin helper which handles policy validation and reserved\n * specification keys when building React classes.\n */\nfunction mixSpecIntoComponent(Constructor, spec) {\n  if (!spec) {\n    if (process.env.NODE_ENV !== 'production') {\n      var typeofSpec = typeof spec;\n      var isMixinValid = typeofSpec === 'object' && spec !== null;\n\n      process.env.NODE_ENV !== 'production' ? warning(isMixinValid, '%s: You\\'re attempting to include a mixin that is either null ' + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec) : void 0;\n    }\n\n    return;\n  }\n\n  !(typeof spec !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;\n  !!ReactElement.isValidElement(spec) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;\n\n  var proto = Constructor.prototype;\n  var autoBindPairs = proto.__reactAutoBindPairs;\n\n  // By handling mixins before any other properties, we ensure the same\n  // chaining order is applied to methods with DEFINE_MANY policy, whether\n  // mixins are listed before or after these methods in the spec.\n  if (spec.hasOwnProperty(MIXINS_KEY)) {\n    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);\n  }\n\n  for (var name in spec) {\n    if (!spec.hasOwnProperty(name)) {\n      continue;\n    }\n\n    if (name === MIXINS_KEY) {\n      // We have already handled mixins in a special case above.\n      continue;\n    }\n\n    var property = spec[name];\n    var isAlreadyDefined = proto.hasOwnProperty(name);\n    validateMethodOverride(isAlreadyDefined, name);\n\n    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {\n      RESERVED_SPEC_KEYS[name](Constructor, property);\n    } else {\n      // Setup methods on prototype:\n      // The following member methods should not be automatically bound:\n      // 1. Expected ReactClass methods (in the \"interface\").\n      // 2. Overridden methods (that were mixed in).\n      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);\n      var isFunction = typeof property === 'function';\n      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;\n\n      if (shouldAutoBind) {\n        autoBindPairs.push(name, property);\n        proto[name] = property;\n      } else {\n        if (isAlreadyDefined) {\n          var specPolicy = ReactClassInterface[name];\n\n          // These cases should already be caught by validateMethodOverride.\n          !(isReactClassMethod && (specPolicy === 'DEFINE_MANY_MERGED' || specPolicy === 'DEFINE_MANY')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;\n\n          // For methods which are defined more than once, call the existing\n          // methods before calling the new property, merging if appropriate.\n          if (specPolicy === 'DEFINE_MANY_MERGED') {\n            proto[name] = createMergedResultFunction(proto[name], property);\n          } else if (specPolicy === 'DEFINE_MANY') {\n            proto[name] = createChainedFunction(proto[name], property);\n          }\n        } else {\n          proto[name] = property;\n          if (process.env.NODE_ENV !== 'production') {\n            // Add verbose displayName to the function, which helps when looking\n            // at profiling tools.\n            if (typeof property === 'function' && spec.displayName) {\n              proto[name].displayName = spec.displayName + '_' + name;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction mixStaticSpecIntoComponent(Constructor, statics) {\n  if (!statics) {\n    return;\n  }\n  for (var name in statics) {\n    var property = statics[name];\n    if (!statics.hasOwnProperty(name)) {\n      continue;\n    }\n\n    var isReserved = name in RESERVED_SPEC_KEYS;\n    !!isReserved ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\\'t be on the \"statics\" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;\n\n    var isInherited = name in Constructor;\n    !!isInherited ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;\n    Constructor[name] = property;\n  }\n}\n\n/**\n * Merge two objects, but throw if both contain the same key.\n *\n * @param {object} one The first object, which is mutated.\n * @param {object} two The second object\n * @return {object} one after it has been mutated to contain everything in two.\n */\nfunction mergeIntoWithNoDuplicateKeys(one, two) {\n  !(one && two && typeof one === 'object' && typeof two === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;\n\n  for (var key in two) {\n    if (two.hasOwnProperty(key)) {\n      !(one[key] === undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;\n      one[key] = two[key];\n    }\n  }\n  return one;\n}\n\n/**\n * Creates a function that invokes two functions and merges their return values.\n *\n * @param {function} one Function to invoke first.\n * @param {function} two Function to invoke second.\n * @return {function} Function that invokes the two argument functions.\n * @private\n */\nfunction createMergedResultFunction(one, two) {\n  return function mergedResult() {\n    var a = one.apply(this, arguments);\n    var b = two.apply(this, arguments);\n    if (a == null) {\n      return b;\n    } else if (b == null) {\n      return a;\n    }\n    var c = {};\n    mergeIntoWithNoDuplicateKeys(c, a);\n    mergeIntoWithNoDuplicateKeys(c, b);\n    return c;\n  };\n}\n\n/**\n * Creates a function that invokes two functions and ignores their return vales.\n *\n * @param {function} one Function to invoke first.\n * @param {function} two Function to invoke second.\n * @return {function} Function that invokes the two argument functions.\n * @private\n */\nfunction createChainedFunction(one, two) {\n  return function chainedFunction() {\n    one.apply(this, arguments);\n    two.apply(this, arguments);\n  };\n}\n\n/**\n * Binds a method to the component.\n *\n * @param {object} component Component whose method is going to be bound.\n * @param {function} method Method to be bound.\n * @return {function} The bound method.\n */\nfunction bindAutoBindMethod(component, method) {\n  var boundMethod = method.bind(component);\n  if (process.env.NODE_ENV !== 'production') {\n    boundMethod.__reactBoundContext = component;\n    boundMethod.__reactBoundMethod = method;\n    boundMethod.__reactBoundArguments = null;\n    var componentName = component.constructor.displayName;\n    var _bind = boundMethod.bind;\n    boundMethod.bind = function (newThis) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      // User is trying to bind() an autobound method; we effectively will\n      // ignore the value of \"this\" that the user is trying to use, so\n      // let's warn.\n      if (newThis !== component && newThis !== null) {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;\n      } else if (!args.length) {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;\n        return boundMethod;\n      }\n      var reboundMethod = _bind.apply(boundMethod, arguments);\n      reboundMethod.__reactBoundContext = component;\n      reboundMethod.__reactBoundMethod = method;\n      reboundMethod.__reactBoundArguments = args;\n      return reboundMethod;\n    };\n  }\n  return boundMethod;\n}\n\n/**\n * Binds all auto-bound methods in a component.\n *\n * @param {object} component Component whose method is going to be bound.\n */\nfunction bindAutoBindMethods(component) {\n  var pairs = component.__reactAutoBindPairs;\n  for (var i = 0; i < pairs.length; i += 2) {\n    var autoBindKey = pairs[i];\n    var method = pairs[i + 1];\n    component[autoBindKey] = bindAutoBindMethod(component, method);\n  }\n}\n\n/**\n * Add more to the ReactClass base class. These are all legacy features and\n * therefore not already part of the modern ReactComponent.\n */\nvar ReactClassMixin = {\n\n  /**\n   * TODO: This will be deprecated because state should always keep a consistent\n   * type signature and the only use case for this, is to avoid that.\n   */\n  replaceState: function (newState, callback) {\n    this.updater.enqueueReplaceState(this, newState);\n    if (callback) {\n      this.updater.enqueueCallback(this, callback, 'replaceState');\n    }\n  },\n\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function () {\n    return this.updater.isMounted(this);\n  }\n};\n\nvar ReactClassComponent = function () {};\n_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);\n\nvar didWarnDeprecated = false;\n\n/**\n * Module for creating composite components.\n *\n * @class ReactClass\n */\nvar ReactClass = {\n\n  /**\n   * Creates a composite component class given a class specification.\n   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass\n   *\n   * @param {object} spec Class specification (which must define `render`).\n   * @return {function} Component constructor function.\n   * @public\n   */\n  createClass: function (spec) {\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(didWarnDeprecated, '%s: React.createClass is deprecated and will be removed in version 16. ' + 'Use plain JavaScript classes instead. If you\\'re not yet ready to ' + 'migrate, create-react-class is available on npm as a ' + 'drop-in replacement.', spec && spec.displayName || 'A Component') : void 0;\n      didWarnDeprecated = true;\n    }\n\n    // To keep our warnings more understandable, we'll use a little hack here to\n    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't\n    // unnecessarily identify a class without displayName as 'Constructor'.\n    var Constructor = identity(function (props, context, updater) {\n      // This constructor gets overridden by mocks. The argument is used\n      // by mocks to assert on what gets mounted.\n\n      if (process.env.NODE_ENV !== 'production') {\n        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;\n      }\n\n      // Wire up auto-binding\n      if (this.__reactAutoBindPairs.length) {\n        bindAutoBindMethods(this);\n      }\n\n      this.props = props;\n      this.context = context;\n      this.refs = emptyObject;\n      this.updater = updater || ReactNoopUpdateQueue;\n\n      this.state = null;\n\n      // ReactClasses doesn't have constructors. Instead, they use the\n      // getInitialState and componentWillMount methods for initialization.\n\n      var initialState = this.getInitialState ? this.getInitialState() : null;\n      if (process.env.NODE_ENV !== 'production') {\n        // We allow auto-mocks to proceed as if they're returning null.\n        if (initialState === undefined && this.getInitialState._isMockFunction) {\n          // This is probably bad practice. Consider warning here and\n          // deprecating this convenience.\n          initialState = null;\n        }\n      }\n      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;\n\n      this.state = initialState;\n    });\n    Constructor.prototype = new ReactClassComponent();\n    Constructor.prototype.constructor = Constructor;\n    Constructor.prototype.__reactAutoBindPairs = [];\n\n    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));\n\n    mixSpecIntoComponent(Constructor, spec);\n\n    // Initialize the defaultProps property after all mixins have been merged.\n    if (Constructor.getDefaultProps) {\n      Constructor.defaultProps = Constructor.getDefaultProps();\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // This is a tag to indicate that the use of these method names is ok,\n      // since it's used with createClass. If it's not, then it's likely a\n      // mistake so we'll warn you to use the static property, property\n      // initializer or constructor respectively.\n      if (Constructor.getDefaultProps) {\n        Constructor.getDefaultProps.isReactClassApproved = {};\n      }\n      if (Constructor.prototype.getInitialState) {\n        Constructor.prototype.getInitialState.isReactClassApproved = {};\n      }\n    }\n\n    !Constructor.prototype.render ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;\n\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;\n    }\n\n    // Reduce time spent doing lookups by setting these on the prototype.\n    for (var methodName in ReactClassInterface) {\n      if (!Constructor.prototype[methodName]) {\n        Constructor.prototype[methodName] = null;\n      }\n    }\n\n    return Constructor;\n  },\n\n  injection: {\n    injectMixin: function (mixin) {\n      injectedMixins.push(mixin);\n    }\n  }\n\n};\n\nmodule.exports = ReactClass;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactClass.js\n// module id = 187\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactElement = require('./ReactElement');\n\n/**\n * Create a factory that creates HTML tag elements.\n *\n * @private\n */\nvar createDOMFactory = ReactElement.createFactory;\nif (process.env.NODE_ENV !== 'production') {\n  var ReactElementValidator = require('./ReactElementValidator');\n  createDOMFactory = ReactElementValidator.createFactory;\n}\n\n/**\n * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.\n * This is also accessible via `React.DOM`.\n *\n * @public\n */\nvar ReactDOMFactories = {\n  a: createDOMFactory('a'),\n  abbr: createDOMFactory('abbr'),\n  address: createDOMFactory('address'),\n  area: createDOMFactory('area'),\n  article: createDOMFactory('article'),\n  aside: createDOMFactory('aside'),\n  audio: createDOMFactory('audio'),\n  b: createDOMFactory('b'),\n  base: createDOMFactory('base'),\n  bdi: createDOMFactory('bdi'),\n  bdo: createDOMFactory('bdo'),\n  big: createDOMFactory('big'),\n  blockquote: createDOMFactory('blockquote'),\n  body: createDOMFactory('body'),\n  br: createDOMFactory('br'),\n  button: createDOMFactory('button'),\n  canvas: createDOMFactory('canvas'),\n  caption: createDOMFactory('caption'),\n  cite: createDOMFactory('cite'),\n  code: createDOMFactory('code'),\n  col: createDOMFactory('col'),\n  colgroup: createDOMFactory('colgroup'),\n  data: createDOMFactory('data'),\n  datalist: createDOMFactory('datalist'),\n  dd: createDOMFactory('dd'),\n  del: createDOMFactory('del'),\n  details: createDOMFactory('details'),\n  dfn: createDOMFactory('dfn'),\n  dialog: createDOMFactory('dialog'),\n  div: createDOMFactory('div'),\n  dl: createDOMFactory('dl'),\n  dt: createDOMFactory('dt'),\n  em: createDOMFactory('em'),\n  embed: createDOMFactory('embed'),\n  fieldset: createDOMFactory('fieldset'),\n  figcaption: createDOMFactory('figcaption'),\n  figure: createDOMFactory('figure'),\n  footer: createDOMFactory('footer'),\n  form: createDOMFactory('form'),\n  h1: createDOMFactory('h1'),\n  h2: createDOMFactory('h2'),\n  h3: createDOMFactory('h3'),\n  h4: createDOMFactory('h4'),\n  h5: createDOMFactory('h5'),\n  h6: createDOMFactory('h6'),\n  head: createDOMFactory('head'),\n  header: createDOMFactory('header'),\n  hgroup: createDOMFactory('hgroup'),\n  hr: createDOMFactory('hr'),\n  html: createDOMFactory('html'),\n  i: createDOMFactory('i'),\n  iframe: createDOMFactory('iframe'),\n  img: createDOMFactory('img'),\n  input: createDOMFactory('input'),\n  ins: createDOMFactory('ins'),\n  kbd: createDOMFactory('kbd'),\n  keygen: createDOMFactory('keygen'),\n  label: createDOMFactory('label'),\n  legend: createDOMFactory('legend'),\n  li: createDOMFactory('li'),\n  link: createDOMFactory('link'),\n  main: createDOMFactory('main'),\n  map: createDOMFactory('map'),\n  mark: createDOMFactory('mark'),\n  menu: createDOMFactory('menu'),\n  menuitem: createDOMFactory('menuitem'),\n  meta: createDOMFactory('meta'),\n  meter: createDOMFactory('meter'),\n  nav: createDOMFactory('nav'),\n  noscript: createDOMFactory('noscript'),\n  object: createDOMFactory('object'),\n  ol: createDOMFactory('ol'),\n  optgroup: createDOMFactory('optgroup'),\n  option: createDOMFactory('option'),\n  output: createDOMFactory('output'),\n  p: createDOMFactory('p'),\n  param: createDOMFactory('param'),\n  picture: createDOMFactory('picture'),\n  pre: createDOMFactory('pre'),\n  progress: createDOMFactory('progress'),\n  q: createDOMFactory('q'),\n  rp: createDOMFactory('rp'),\n  rt: createDOMFactory('rt'),\n  ruby: createDOMFactory('ruby'),\n  s: createDOMFactory('s'),\n  samp: createDOMFactory('samp'),\n  script: createDOMFactory('script'),\n  section: createDOMFactory('section'),\n  select: createDOMFactory('select'),\n  small: createDOMFactory('small'),\n  source: createDOMFactory('source'),\n  span: createDOMFactory('span'),\n  strong: createDOMFactory('strong'),\n  style: createDOMFactory('style'),\n  sub: createDOMFactory('sub'),\n  summary: createDOMFactory('summary'),\n  sup: createDOMFactory('sup'),\n  table: createDOMFactory('table'),\n  tbody: createDOMFactory('tbody'),\n  td: createDOMFactory('td'),\n  textarea: createDOMFactory('textarea'),\n  tfoot: createDOMFactory('tfoot'),\n  th: createDOMFactory('th'),\n  thead: createDOMFactory('thead'),\n  time: createDOMFactory('time'),\n  title: createDOMFactory('title'),\n  tr: createDOMFactory('tr'),\n  track: createDOMFactory('track'),\n  u: createDOMFactory('u'),\n  ul: createDOMFactory('ul'),\n  'var': createDOMFactory('var'),\n  video: createDOMFactory('video'),\n  wbr: createDOMFactory('wbr'),\n\n  // SVG\n  circle: createDOMFactory('circle'),\n  clipPath: createDOMFactory('clipPath'),\n  defs: createDOMFactory('defs'),\n  ellipse: createDOMFactory('ellipse'),\n  g: createDOMFactory('g'),\n  image: createDOMFactory('image'),\n  line: createDOMFactory('line'),\n  linearGradient: createDOMFactory('linearGradient'),\n  mask: createDOMFactory('mask'),\n  path: createDOMFactory('path'),\n  pattern: createDOMFactory('pattern'),\n  polygon: createDOMFactory('polygon'),\n  polyline: createDOMFactory('polyline'),\n  radialGradient: createDOMFactory('radialGradient'),\n  rect: createDOMFactory('rect'),\n  stop: createDOMFactory('stop'),\n  svg: createDOMFactory('svg'),\n  text: createDOMFactory('text'),\n  tspan: createDOMFactory('tspan')\n};\n\nmodule.exports = ReactDOMFactories;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactDOMFactories.js\n// module id = 188\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar ReactPropTypeLocationNames = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  ReactPropTypeLocationNames = {\n    prop: 'prop',\n    context: 'context',\n    childContext: 'child context'\n  };\n}\n\nmodule.exports = ReactPropTypeLocationNames;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactPropTypeLocationNames.js\n// module id = 189\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _require = require('./ReactElement'),\n    isValidElement = _require.isValidElement;\n\nvar factory = require('prop-types/factory');\n\nmodule.exports = factory(isValidElement);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactPropTypes.js\n// module id = 190\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar ReactComponent = require('./ReactComponent');\nvar ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');\n\nvar emptyObject = require('fbjs/lib/emptyObject');\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction ReactPureComponent(props, context, updater) {\n  // Duplicated from ReactComponent.\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  // We initialize the default updater but the real one gets injected by the\n  // renderer.\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nfunction ComponentDummy() {}\nComponentDummy.prototype = ReactComponent.prototype;\nReactPureComponent.prototype = new ComponentDummy();\nReactPureComponent.prototype.constructor = ReactPureComponent;\n// Avoid an extra prototype jump for these methods.\n_assign(ReactPureComponent.prototype, ReactComponent.prototype);\nReactPureComponent.prototype.isPureReactComponent = true;\n\nmodule.exports = ReactPureComponent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactPureComponent.js\n// module id = 191\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar nextDebugID = 1;\n\nfunction getNextDebugID() {\n  return nextDebugID++;\n}\n\nmodule.exports = getNextDebugID;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/getNextDebugID.js\n// module id = 194\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactElement = require('./ReactElement');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\nfunction onlyChild(children) {\n  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;\n  return children;\n}\n\nmodule.exports = onlyChild;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/onlyChild.js\n// module id = 195\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar REACT_ELEMENT_TYPE = require('./ReactElementSymbol');\n\nvar getIteratorFn = require('./getIteratorFn');\nvar invariant = require('fbjs/lib/invariant');\nvar KeyEscapeUtils = require('./KeyEscapeUtils');\nvar warning = require('fbjs/lib/warning');\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n\n/**\n * This is inlined from ReactElement since this file is shared between\n * isomorphic and renderers. We could extract this to a\n *\n */\n\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\nvar didWarnAboutMaps = false;\n\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\nfunction getComponentKey(component, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (component && typeof component === 'object' && component.key != null) {\n    // Explicit key\n    return KeyEscapeUtils.escape(component.key);\n  }\n  // Implicit key determined by the index in the set\n  return index.toString(36);\n}\n\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  if (children === null || type === 'string' || type === 'number' ||\n  // The following is inlined from ReactElement. This means we can optimize\n  // some checks. React Fiber also inlines this logic for similar purposes.\n  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {\n    callback(traverseContext, children,\n    // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows.\n    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getComponentKey(child, i);\n      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n    if (iteratorFn) {\n      var iterator = iteratorFn.call(children);\n      var step;\n      if (iteratorFn !== children.entries) {\n        var ii = 0;\n        while (!(step = iterator.next()).done) {\n          child = step.value;\n          nextName = nextNamePrefix + getComponentKey(child, ii++);\n          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n        }\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          var mapsAsChildrenAddendum = '';\n          if (ReactCurrentOwner.current) {\n            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();\n            if (mapsAsChildrenOwnerName) {\n              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';\n            }\n          }\n          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;\n          didWarnAboutMaps = true;\n        }\n        // Iterator will provide entry [k,v] tuples rather than values.\n        while (!(step = iterator.next()).done) {\n          var entry = step.value;\n          if (entry) {\n            child = entry[1];\n            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);\n            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n          }\n        }\n      }\n    } else if (type === 'object') {\n      var addendum = '';\n      if (process.env.NODE_ENV !== 'production') {\n        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';\n        if (children._isReactElement) {\n          addendum = ' It looks like you\\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';\n        }\n        if (ReactCurrentOwner.current) {\n          var name = ReactCurrentOwner.current.getName();\n          if (name) {\n            addendum += ' Check the render method of `' + name + '`.';\n          }\n        }\n      }\n      var childrenString = String(children);\n      !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n}\n\nmodule.exports = traverseAllChildren;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/traverseAllChildren.js\n// module id = 196\n// module chunks = 0","// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\nvar alea = require('./lib/alea');\n\n// xor128, a pure xor-shift generator by George Marsaglia.\n// Period: 2^128-1.\n// Reported to fail: MatrixRank and LinearComp.\nvar xor128 = require('./lib/xor128');\n\n// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n// Period: 2^192-2^32\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\nvar xorwow = require('./lib/xorwow');\n\n// xorshift7, by François Panneton and Pierre L'ecuyer, takes\n// a different approach: it adds robustness by allowing more shifts\n// than Marsaglia's original three.  It is a 7-shift generator\n// with 256 bits, that passes BigCrush with no systmatic failures.\n// Period 2^256-1.\n// No systematic BigCrush failures reported.\nvar xorshift7 = require('./lib/xorshift7');\n\n// xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n// very long period that also adds a Weyl generator. It also passes\n// BigCrush with no systematic failures.  Its long period may\n// be useful if you have many generators and need to avoid\n// collisions.\n// Period: 2^4128-2^32.\n// No systematic BigCrush failures reported.\nvar xor4096 = require('./lib/xor4096');\n\n// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n// number generator derived from ChaCha, a modern stream cipher.\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n// Period: ~2^127\n// No systematic BigCrush failures reported.\nvar tychei = require('./lib/tychei');\n\n// The original ARC4-based prng included in this library.\n// Period: ~2^1600\nvar sr = require('./seedrandom');\n\nsr.alea = alea;\nsr.xor128 = xor128;\nsr.xorwow = xorwow;\nsr.xorshift7 = xorshift7;\nsr.xor4096 = xor4096;\nsr.tychei = tychei;\n\nmodule.exports = sr;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/seedrandom/index.js\n// module id = 197\n// module chunks = 0","// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// \n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n(function(global, module, define) {\n\nfunction Alea(seed) {\n  var me = this, mash = Mash();\n\n  me.next = function() {\n    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n    me.s0 = me.s1;\n    me.s1 = me.s2;\n    return me.s2 = t - (me.c = t | 0);\n  };\n\n  // Apply the seeding algorithm from Baagoe.\n  me.c = 1;\n  me.s0 = mash(' ');\n  me.s1 = mash(' ');\n  me.s2 = mash(' ');\n  me.s0 -= mash(seed);\n  if (me.s0 < 0) { me.s0 += 1; }\n  me.s1 -= mash(seed);\n  if (me.s1 < 0) { me.s1 += 1; }\n  me.s2 -= mash(seed);\n  if (me.s2 < 0) { me.s2 += 1; }\n  mash = null;\n}\n\nfunction copy(f, t) {\n  t.c = f.c;\n  t.s0 = f.s0;\n  t.s1 = f.s1;\n  t.s2 = f.s2;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new Alea(seed),\n      state = opts && opts.state,\n      prng = xg.next;\n  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }\n  prng.double = function() {\n    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n  };\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nfunction Mash() {\n  var n = 0xefc8249d;\n\n  var mash = function(data) {\n    data = data.toString();\n    for (var i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  return mash;\n}\n\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.alea = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/seedrandom/lib/alea.js\n// module id = 198\n// module chunks = 0","// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var b = me.b, c = me.c, d = me.d, a = me.a;\n    b = (b << 25) ^ (b >>> 7) ^ c;\n    c = (c - d) | 0;\n    d = (d << 24) ^ (d >>> 8) ^ a;\n    a = (a - b) | 0;\n    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\n    me.c = c = (c - d) | 0;\n    me.d = (d << 16) ^ (c >>> 16) ^ a;\n    return me.a = (a - b) | 0;\n  };\n\n  /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */\n\n  me.a = 0;\n  me.b = 0;\n  me.c = 2654435769 | 0;\n  me.d = 1367130551;\n\n  if (seed === Math.floor(seed)) {\n    // Integer seed.\n    me.a = (seed / 0x100000000) | 0;\n    me.b = seed | 0;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 20; k++) {\n    me.b ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.a = f.a;\n  t.b = f.b;\n  t.c = f.c;\n  t.d = f.d;\n  return t;\n};\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.tychei = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/seedrandom/lib/tychei.js\n// module id = 199\n// module chunks = 0","// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n\n  // Set up generator function.\n  me.next = function() {\n    var t = me.x ^ (me.x << 11);\n    me.x = me.y;\n    me.y = me.z;\n    me.z = me.w;\n    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);\n  };\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor128 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/seedrandom/lib/xor128.js\n// module id = 200\n// module chunks = 0","// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    var w = me.w,\n        X = me.X, i = me.i, t, v;\n    // Update Weyl generator.\n    me.w = w = (w + 0x61c88647) | 0;\n    // Update xor generator.\n    v = X[(i + 34) & 127];\n    t = X[i = ((i + 1) & 127)];\n    v ^= v << 13;\n    t ^= t << 17;\n    v ^= v >>> 15;\n    t ^= t >>> 12;\n    // Update Xor generator array state.\n    v = X[i] = v ^ t;\n    me.i = i;\n    // Result is the combination.\n    return (v + (w ^ (w >>> 16))) | 0;\n  };\n\n  function init(me, seed) {\n    var t, v, i, j, w, X = [], limit = 128;\n    if (seed === (seed | 0)) {\n      // Numeric seeds initialize v, which is used to generates X.\n      v = seed;\n      seed = null;\n    } else {\n      // String seeds are mixed into v and X one character at a time.\n      seed = seed + '\\0';\n      v = 0;\n      limit = Math.max(limit, seed.length);\n    }\n    // Initialize circular array and weyl value.\n    for (i = 0, j = -32; j < limit; ++j) {\n      // Put the unicode characters into the array, and shuffle them.\n      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n      // After 32 shuffles, take v as the starting w value.\n      if (j === 0) w = v;\n      v ^= v << 10;\n      v ^= v >>> 15;\n      v ^= v << 4;\n      v ^= v >>> 13;\n      if (j >= 0) {\n        w = (w + 0x61c88647) | 0;     // Weyl.\n        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.\n        i = (0 == t) ? i + 1 : 0;     // Count zeroes.\n      }\n    }\n    // We have detected all zeroes; make the key nonzero.\n    if (i >= 128) {\n      X[(seed && seed.length || 0) & 127] = -1;\n    }\n    // Run the generator 512 times to further mix the state before using it.\n    // Factoring this as a function slows the main generator, so it is just\n    // unrolled here.  The weyl generator is not advanced while warming up.\n    i = 127;\n    for (j = 4 * 128; j > 0; --j) {\n      v = X[(i + 34) & 127];\n      t = X[i = ((i + 1) & 127)];\n      v ^= v << 13;\n      t ^= t << 17;\n      v ^= v >>> 15;\n      t ^= t >>> 12;\n      X[i] = v ^ t;\n    }\n    // Storing state as object members is faster than using closure variables.\n    me.w = w;\n    me.X = X;\n    me.i = i;\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.i = f.i;\n  t.w = f.w;\n  t.X = f.X.slice();\n  return t;\n};\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.X) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor4096 = impl;\n}\n\n})(\n  this,                                     // window object or global\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/seedrandom/lib/xor4096.js\n// module id = 201\n// module chunks = 0","// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    // Update xor generator.\n    var X = me.x, i = me.i, t, v, w;\n    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\n    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\n    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\n    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\n    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\n    X[i] = v;\n    me.i = (i + 1) & 7;\n    return v;\n  };\n\n  function init(me, seed) {\n    var j, w, X = [];\n\n    if (seed === (seed | 0)) {\n      // Seed state array using a 32-bit integer.\n      w = X[0] = seed;\n    } else {\n      // Seed state using a string.\n      seed = '' + seed;\n      for (j = 0; j < seed.length; ++j) {\n        X[j & 7] = (X[j & 7] << 15) ^\n            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\n      }\n    }\n    // Enforce an array length of 8, not all zeroes.\n    while (X.length < 8) X.push(0);\n    for (j = 0; j < 8 && X[j] === 0; ++j);\n    if (j == 8) w = X[7] = -1; else w = X[j];\n\n    me.x = X;\n    me.i = 0;\n\n    // Discard an initial 256 values.\n    for (j = 256; j > 0; --j) {\n      me.next();\n    }\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.x = f.x.slice();\n  t.i = f.i;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.x) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorshift7 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/seedrandom/lib/xorshift7.js\n// module id = 202\n// module chunks = 0","// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var t = (me.x ^ (me.x >>> 2));\n    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\n    return (me.d = (me.d + 362437 | 0)) +\n       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\n  };\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n  me.v = 0;\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    if (k == strseed.length) {\n      me.d = me.x << 10 ^ me.x >>> 4;\n    }\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  t.v = f.v;\n  t.d = f.d;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorwow = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/seedrandom/lib/xorwow.js\n// module id = 203\n// module chunks = 0","/*\nCopyright 2014 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n(function (pool, math) {\n//\n// The following constants are related to IEEE 754 limits.\n//\nvar global = this,\n    width = 256,        // each RC4 output is 0 <= x < 256\n    chunks = 6,         // at least six RC4 outputs for each double\n    digits = 52,        // there are 52 significant digits in a double\n    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n    significance = math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1,\n    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nfunction seedrandom(seed, options, callback) {\n  var key = [];\n  options = (options == true) ? { entropy: true } : (options || {});\n\n  // Flatten the seed string or build one from local entropy if needed.\n  var shortseed = mixkey(flatten(\n    options.entropy ? [seed, tostring(pool)] :\n    (seed == null) ? autoseed() : seed, 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  var arc4 = new ARC4(key);\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n  var prng = function() {\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\n        x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  prng.int32 = function() { return arc4.g(4) | 0; }\n  prng.quick = function() { return arc4.g(4) / 0x100000000; }\n  prng.double = prng;\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(tostring(arc4.S), pool);\n\n  // Calling convention: what to return as a function of prng, seed, is_math.\n  return (options.pass || callback ||\n      function(prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) { copy(state, arc4); }\n          // Only provide the .state method if requested via options.state.\n          prng.state = function() { return copy(arc4, {}); }\n        }\n\n        // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n        if (is_math_call) { math[rngname] = prng; return seed; }\n\n        // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(\n  prng,\n  shortseed,\n  'global' in options ? options.global : (this == math),\n  options.state);\n}\nmath['seed' + rngname] = seedrandom;\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\nfunction ARC4(key) {\n  var t, keylen = key.length,\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) {\n    s[i] = i++;\n  }\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n    s[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  (me.g = function(count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t, r = 0,\n        i = me.i, j = me.j, s = me.S;\n    while (count--) {\n      t = s[i = mask & (i + 1)];\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n    }\n    me.i = i; me.j = j;\n    return r;\n    // For robust unpredictability, the function call below automatically\n    // discards an initial batch of values.  This is called RC4-drop[256].\n    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  })(width);\n}\n\n//\n// copy()\n// Copies internal state of ARC4 to or from a plain object.\n//\nfunction copy(f, t) {\n  t.i = f.i;\n  t.j = f.j;\n  t.S = f.S.slice();\n  return t;\n};\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\nfunction flatten(obj, depth) {\n  var result = [], typ = (typeof obj), prop;\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n    }\n  }\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\nfunction mixkey(seed, key) {\n  var stringseed = seed + '', smear, j = 0;\n  while (j < stringseed.length) {\n    key[mask & j] =\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  }\n  return tostring(key);\n}\n\n//\n// autoseed()\n// Returns an object for autoseeding, using window.crypto and Node crypto\n// module if available.\n//\nfunction autoseed() {\n  try {\n    var out;\n    if (nodecrypto && (out = nodecrypto.randomBytes)) {\n      // The use of 'out' to remember randomBytes makes tight minified code.\n      out = out(width);\n    } else {\n      out = new Uint8Array(width);\n      (global.crypto || global.msCrypto).getRandomValues(out);\n    }\n    return tostring(out);\n  } catch (e) {\n    var browser = global.navigator,\n        plugins = browser && browser.plugins;\n    return [+new Date, global, plugins, global.screen, tostring(pool)];\n  }\n}\n\n//\n// tostring()\n// Converts an array of charcodes to a string\n//\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n}\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to interfere with deterministic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n//\n// Nodejs and AMD support: export the implementation as a module using\n// either convention.\n//\nif ((typeof module) == 'object' && module.exports) {\n  module.exports = seedrandom;\n  // When in node.js, try using crypto package for autoseeding.\n  try {\n    nodecrypto = require('crypto');\n  } catch (ex) {}\n} else if ((typeof define) == 'function' && define.amd) {\n  define(function() { return seedrandom; });\n}\n\n// End anonymous scope, and pass initial values.\n})(\n  [],     // pool: entropy pool starts empty\n  Math    // math: package containing random, pow, and seedrandom\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/seedrandom/seedrandom.js\n// module id = 204\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Static poolers. Several custom versions for each potential number of\n * arguments. A completely generic pooler is easy to implement, but would\n * require accessing the `arguments` object. In each of these, `this` refers to\n * the Class itself, not an instance. If any others are needed, simply add them\n * here, or in their own files.\n */\nvar oneArgumentPooler = function (copyFieldsFrom) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, copyFieldsFrom);\n    return instance;\n  } else {\n    return new Klass(copyFieldsFrom);\n  }\n};\n\nvar twoArgumentPooler = function (a1, a2) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2);\n    return instance;\n  } else {\n    return new Klass(a1, a2);\n  }\n};\n\nvar threeArgumentPooler = function (a1, a2, a3) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3);\n  }\n};\n\nvar fourArgumentPooler = function (a1, a2, a3, a4) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3, a4);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3, a4);\n  }\n};\n\nvar standardReleaser = function (instance) {\n  var Klass = this;\n  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;\n  instance.destructor();\n  if (Klass.instancePool.length < Klass.poolSize) {\n    Klass.instancePool.push(instance);\n  }\n};\n\nvar DEFAULT_POOL_SIZE = 10;\nvar DEFAULT_POOLER = oneArgumentPooler;\n\n/**\n * Augments `CopyConstructor` to be a poolable class, augmenting only the class\n * itself (statically) not adding any prototypical fields. Any CopyConstructor\n * you give this may have a `poolSize` property, and will look for a\n * prototypical `destructor` on instances.\n *\n * @param {Function} CopyConstructor Constructor that can be used to reset.\n * @param {Function} pooler Customizable pooler.\n */\nvar addPoolingTo = function (CopyConstructor, pooler) {\n  // Casting as any so that flow ignores the actual implementation and trusts\n  // it to match the type we declared\n  var NewKlass = CopyConstructor;\n  NewKlass.instancePool = [];\n  NewKlass.getPooled = pooler || DEFAULT_POOLER;\n  if (!NewKlass.poolSize) {\n    NewKlass.poolSize = DEFAULT_POOL_SIZE;\n  }\n  NewKlass.release = standardReleaser;\n  return NewKlass;\n};\n\nvar PooledClass = {\n  addPoolingTo: addPoolingTo,\n  oneArgumentPooler: oneArgumentPooler,\n  twoArgumentPooler: twoArgumentPooler,\n  threeArgumentPooler: threeArgumentPooler,\n  fourArgumentPooler: fourArgumentPooler\n};\n\nmodule.exports = PooledClass;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/PooledClass.js\n// module id = 185\n// module chunks = 0"],"sourceRoot":""}